[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"todo ### false ### cs3230 hw","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### dashboard ### 2023-01-25","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"event ### false ### climbing camp ### 2023-01-26 ### 2023-01-28","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo ### true ### cs2103 Level-10","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### passport renewal ### 2023-01-27","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":5}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.ui.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.storage.FileManagement;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class Duke {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    private FileManagement fileManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    private UI ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public Duke() {","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        this.fileManager \u003d new FileManagement(); // to manage saved data","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d new TaskList(fileManager.retrieve()); // load existing list of tasks; creates empty if does not exist","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        this.ui \u003d new UI(this.tasks); // receives user input and run parser","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        this.ui.greetUser();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        while (!exit) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"                exit \u003d this.ui.processInput();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                System.out.println(Span.format(e.toString()));","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            if (exit) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                this.ui.byeUser();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"            this.fileManager.save(tasks); // save regardless","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        duke.run();","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":40}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"public enum Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    GETEVENTSON(\"geteventson\");","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    Command(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public static Command get(String name) throws UnknownCommandException {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        for (Command c : values()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            if (c.name.equals(name)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"                return c;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        throw new UnknownCommandException(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"4ndrelim":30}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.ui.Span;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    public boolean execute(Command command, String echo) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d null; // to be converted into the right (sub) task below","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        switch (command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"            case BYE: {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"                return true;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"            case LIST: { // list all the stored tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"                System.out.println(Span.format(\"Here are the tasks in your list:\\n\" + tasks.listTasks()));","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            case MARK: {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 6 || !echo.matches(\"mark\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cmark\u003e command should receive a task number!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                int taskNum \u003d Integer.parseInt(echo.substring(5).trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"                if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.size()) { // otherwise, invalid mark and ignore for now","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"                    String marked \u003d tasks.toggleMark(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"                    System.out.println(Span.format(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + marked));","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"                    throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            case UNMARK: {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 8 || !echo.matches(\"unmark\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cunmark\u003e command should receive a task number!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"                int taskNum \u003d Integer.parseInt(echo.substring(7).trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"                if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.size()) { // otherwise, invalid unmark and ignore for now","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"                    String unmarked \u003d tasks.toggleUnmark(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"                    System.out.println(Span.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + unmarked));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"                    throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"            case DELETE: {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 8 || !echo.matches(\"delete\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cdelete\u003e command should receive a task number!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"                int taskNum \u003d Integer.parseInt(echo.substring(7).trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"                if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.size()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"                    Task removed \u003d tasks.delete(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"                    System.out.println(Span.format(\"Noted. I\u0027ve removed this task:\\n\\t\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"                            removed.getStatusIcon() + \"\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"                            \"Now you have \" + tasks.size() +","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"                            \" task(s) in the list.\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"                    throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"            case TODO: {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 6 || !echo.matches(\"todo\\\\s.*\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"The description of a \u003ctodo\u003e cannot be empty!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"                String info \u003d echo.substring(5).trim(); // remove any trailing spaces at the front","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"                task \u003d new ToDo(info); // pass description of todo","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"            case DEADLINE: {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 10) {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"The description of a \u003cdeadline\u003e cannot be empty!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"                String info \u003d echo.substring(9);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"                if (!info.matches(\".+ /by .+\")) { // info.contains(\" /by \")","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cdeadline\u003e is to be used as such: $ deadline \u003cdes\u003e /by \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"                String[] sp \u003d info.split(\" /by \");","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"                if (sp[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cdeadline\u003e is missing \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"                task \u003d new Deadline(sp[0].trim(), sp[1].trim()); // remove any trailing white sp","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"            case EVENT: {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 7) {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"The description of a \u003cevent\u003e cannot be empty!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"                String info \u003d echo.substring(6);","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"                if (!info.matches(\".+ /from .+ /to .+\")) { // (!info.contains(\" /from \") || !info.contains(\" /to \"))","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cevent\u003e is to be used as such: $ event \u003cdes\u003e /from \u003cYYYY-MM-DD\u003e /to \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"                String[] sp \u003d info.split(\" /from \");","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"                if (sp[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cevent\u003e is missing start-time \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"                String[] time \u003d sp[1].split(\" /to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"                if (time[1].trim().equals(\"\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"\u003cevent\u003e is missing end-time \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"                task \u003d new Event(sp[0].trim(), time[0].trim(), time[1].trim()); // remove any trailing white sp","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"            case GETEVENTSON: {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"                if (echo.length() \u003c 12) {","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"                    throw new DukeException(\"Date input in the format of YYYY-MM-DD required!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"                LocalDate date \u003d LocalDate.parse(echo.substring(11).trim());","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"                System.out.println(","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"                        Span.format(\"Here are the deadlines/events on \"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"                                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"                                + \":\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"                                + tasks.listAllOnDate(date)));","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"            tasks.addTask(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(Span.format(\"Got it. I\u0027ve added this task:\\n\\t\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"                    task.getStatusIcon() +","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"                    \"\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"                    \"Now you have \" +","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"                    tasks.size() +","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"                    \" task(s) in the list.\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"        return false;","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":133}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"☹ OOPS!!! %s\", super.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":12}},{"path":"src/main/java/duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"        super(\"Invalid Date Format, please input it as YYYY-MM-DD;\\nFor events, make sure start date \u003c\u003d end date!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":7}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    public InvalidIndexException(int idx) {","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"        super(String.format(\"Index of %d is out of bounds!\", idx));","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"4ndrelim":7}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    private String command;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"        super(String.format(\"I\u0027m sorry, but I don\u0027t know what \u003c%s\u003e means :-(\", command));","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":10}},{"path":"src/main/java/duke/storage/FileManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"public class FileManagement {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    private File file;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    private String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    private String dataDirectory;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    public FileManagement() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        this.dataDirectory \u003d \"./data/\";","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        this.filePath \u003d this.dataDirectory + \"duke.txt\";","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        this.file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        File directory \u003d new File(this.dataDirectory);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"                writer.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"            writer.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    public List\u003cTask\u003e retrieve() {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"            scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"                String encoded \u003d scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"                taskList.add(this.decodeTask(encoded));","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"        } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"            scanner.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"        return taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    private Task decodeTask(String task) throws InvalidDateException {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"        String[] components \u003d task.split(\" ### \");","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        String command \u003d components[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        String toMark \u003d components[1];","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"        String des \u003d components[2];","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"        Task decoded \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"                decoded \u003d new ToDo(des);","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"                decoded \u003d new Deadline(des, components[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"            case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"                decoded \u003d new Event(des, components[3], components[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"                break;","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        if (toMark.equals(\"true\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"            decoded.markTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"        return decoded;","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":88}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public Deadline(String des, String deadline) throws InvalidDateException {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[D]%s | BY: %s\", super.getStatusIcon(), this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s ### %s\", \"deadline\", super.encode(), this.deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        return this.deadline.equals(date);","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":34}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    public Event(String des, String startTime, String endTime) throws InvalidDateException {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"            this.startDate \u003d LocalDate.parse(startTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            this.endDate \u003d LocalDate.parse(endTime);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"            if (this.startDate.compareTo(this.endDate) \u003e 0) { // invalid end date before start","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[E]%s | FROM: %s TO: %s\",","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s ### %s ### %s\", \"event\", super.encode(), this.startDate, this.endDate);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        return this.startDate.compareTo(date) * date.compareTo(this.endDate) \u003e\u003d 0;","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    public Task(String des) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"        this.description \u003d des;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        return this.isDone ? \"[X] \" + this.getDescription() : \"[] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s\", this.isDone, this.description);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":37}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public TaskList(List\u003cTask\u003e tasks) {this.tasks \u003d tasks; }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    public List\u003cTask\u003e getTasks() { return this.tasks; }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public int size() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        return this.tasks.remove(taskNum-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    public String toggleMark(int taskNum) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d tasks.get(taskNum-1);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        task.markTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        return task.getStatusIcon();","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    public String toggleUnmark(int taskNum) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d tasks.get(taskNum-1);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        return task.getStatusIcon();","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    public String listTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"            display.append((i+1) + \". \" + curr.getStatusIcon());","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"            if (i \u003c this.tasks.size()-1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"                display.append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"    public String listAllOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"            if (curr.fallsOnDate(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"                display.append((count) + \". \" + curr.getStatusIcon() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"                count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":66}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    public ToDo(String des) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[T]%s\", super.getStatusIcon());","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s\", \"todo\", super.encode());","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":17}},{"path":"src/main/java/duke/ui/Span.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"public class Span {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"    public static String format(String s) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"        String[] sp \u003d s.split(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"        s \u003d String.join(\"\\n\\t\", sp);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"\\t___________________________________________________________________________\\n\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"                \"\\t%s\\n\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"                \"\\t___________________________________________________________________________\", s);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"4ndrelim":11}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class UI {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    public UI(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"        this.parser \u003d new Parser(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    public void greetUser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        String greeting \u003d \"Hello i\u0027m\\n\" + logo + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        System.out.println(Span.format(greeting));","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    public void byeUser() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        System.out.println(Span.format(\"Bye. Hope to see you again soon!\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    public boolean processInput() throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        String echo \u003d scanner.nextLine().trim(); // get user input and trim trailing white sp","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        String firstWord \u003d echo.split(\" \")[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        Command command \u003d Command.get(firstWord);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        boolean exit \u003d this.parser.execute(command, echo);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        return exit;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":38}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### return book ### 2023-02-12","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"event ### false ### project meeting ### 2023-01-27 ### 2023-01-27","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"todo ### true ### join sports club","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo ### false ### borrow book","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"deadline ### true ### return book ### 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"event ### false ### climbing camp ### 2023-01-30 ### 2023-02-02","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### do homework ### 2023-01-30","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"deadline return book /by 2023-02-12","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"event project meeting /from 2023-01-27 /to 2023-01-27","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"deadline return book /by 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"event project meeting /from 2023-01-29 /to 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"event climbing camp /from 2023-01-30 /to 2023-02-02","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"deadline do homework /by 2023-01-30","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"xd","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"mark 7","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"nani","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"unmark 7","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"delete 6","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"geteventson 2023-01-30","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"# dun store data for test","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"if [ -e \"./data/duke.txt\" ]","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"then","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    rm data/duke.txt","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"fi","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"4ndrelim":8,"-":36}}]
