[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"4ndrelim":22,"-":30}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"todo ### false ### cs3230 hw","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### dashboard ### 2023-01-25","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"event ### true ### climbing camp ### 2023-01-26 ### 2023-01-28","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo ### true ### cs2103 Level-10","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"deadline ### true ### passport renewal ### 2023-01-27","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### proj1 ### 2023-02-15","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"deadline ### true ### proj2 ### 2023-02-17","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### proj3 ### 2023-02-18","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"event ### false ### event1 ### 2023-02-17 ### 2023-02-25","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"deadline ### true ### task ### 2023-02-15","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"4ndrelim":10}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"### Feature-Adding tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"Allows for the addition of three types of tasks:","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"* To-do","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"* Events","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"* Deadlines","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"### Feature-Deleting tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"Delete tasks that are no longer necessary.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"### Feature-Mark \u0026 Unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"Mark a task as done or unmark a task.","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"### Feature-List","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"Displays all tasks being tracked.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"### Feature-Get events on:","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"Displays all tasks that are due/occurring on a given date.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"### Feature-Find:","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"Displays all tasks matching a given search key.","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"### `todo` - Adds a todo task to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"Adds a todo task to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"`todo task`","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"A todo task will be saved and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"### `deadline` - Adds a deadline task to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"Adds a deadline task to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"`deadline task /by 2023-02-15`","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"A task with a deadline will be saved and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"    [D][] task | BY: Feb 15 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"### `event` - Adds an event to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"Adds am event with start and end date to the list","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"`event task /from 2023-02-15 /to 2023-02-20`","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"An event task will be saved and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added your task:","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"    [E][] task | FROM: Feb 15 2023 TO: Feb 20 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"Deletes the task at a given index.","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"todo task","lastModifiedDate":"2023-02-16"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"delete 1","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"The task will be deleted and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"Noted. I\u0027ve removed this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"Now you have 0 task(s) in the list.    ","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"Marks the task at a given index as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"todo task","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"mark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"The task will be marked as done and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"    [T][X] task","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"### `unmark` - Marks a task as not done","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"Marks the task at a given index as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"todo task","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"mark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"unmark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"The task will be marked as not done and the following output will be displayed:","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-16"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"Now you have 1 task(s) in the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"    [T][X] task","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"    ","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"    [T][] task","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"Displays all the tasks being tracked.","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"todo task1","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"deadline task2 /by 2023-02-20","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"4ndrelim"},"content":"event task3 /from 2023-02-15 /to 2023-02-21","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"4ndrelim"},"content":"The following output will be displayed. Note **only the output from the list command** is shown:","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":183,"author":{"gitId":"4ndrelim"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"4ndrelim"},"content":"1. [T][] task1","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"4ndrelim"},"content":"2. [D][] task2 | BY: Feb 20 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"4ndrelim"},"content":"3. [E][] task 3 | FROM: Feb 15 2023 TO: Feb 21 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"4ndrelim"},"content":"### `geteventson` - Lists all tasks on a given date","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"4ndrelim"},"content":"Displays all the tasks on or occurring/ongoing a given date.","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":193,"author":{"gitId":"4ndrelim"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":195,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":196,"author":{"gitId":"4ndrelim"},"content":"todo task1","lastModifiedDate":"2023-02-16"},{"lineNumber":197,"author":{"gitId":"4ndrelim"},"content":"deadline task2 /by 2023-02-20","lastModifiedDate":"2023-02-16"},{"lineNumber":198,"author":{"gitId":"4ndrelim"},"content":"event task3 /from 2023-02-15 /to 2023-02-21","lastModifiedDate":"2023-02-16"},{"lineNumber":199,"author":{"gitId":"4ndrelim"},"content":"geteventson 2023-02-20","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":202,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":203,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":204,"author":{"gitId":"4ndrelim"},"content":"The following output will be displayed. Note **only the output from the get events on command** is shown:","lastModifiedDate":"2023-02-16"},{"lineNumber":205,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":206,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"4ndrelim"},"content":"Here are the deadlines/events on Feb 20 2023:","lastModifiedDate":"2023-02-16"},{"lineNumber":208,"author":{"gitId":"4ndrelim"},"content":"1. [D][] task2 | BY: Feb 20 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":209,"author":{"gitId":"4ndrelim"},"content":"2. [E][] task3 | FROM: Feb 15 2023 TO: Feb 21 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"4ndrelim"},"content":"### `find` - Finds tasks by a search keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":213,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"4ndrelim"},"content":"Displays all the tasks matching a given keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":218,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"4ndrelim"},"content":"todo hello world","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"4ndrelim"},"content":"todo hello pi","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"4ndrelim"},"content":"todo hello kitty","lastModifiedDate":"2023-02-16"},{"lineNumber":222,"author":{"gitId":"4ndrelim"},"content":"todo hellonora","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"4ndrelim"},"content":"todo goodbyebean","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":225,"author":{"gitId":"4ndrelim"},"content":"find hello","lastModifiedDate":"2023-02-16"},{"lineNumber":226,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":230,"author":{"gitId":"4ndrelim"},"content":"The following output will be displayed. Note **only the output from the find command** is shown:","lastModifiedDate":"2023-02-16"},{"lineNumber":231,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":232,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":233,"author":{"gitId":"4ndrelim"},"content":"1. [T][] hello world","lastModifiedDate":"2023-02-16"},{"lineNumber":234,"author":{"gitId":"4ndrelim"},"content":"2. [T][] hello pi","lastModifiedDate":"2023-02-16"},{"lineNumber":235,"author":{"gitId":"4ndrelim"},"content":"3. [T][] hello kitty","lastModifiedDate":"2023-02-16"},{"lineNumber":236,"author":{"gitId":"4ndrelim"},"content":"4. [T][] hellonora","lastModifiedDate":"2023-02-16"},{"lineNumber":237,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":238,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":239,"author":{"gitId":"4ndrelim"},"content":"### `getreminders` - List all incomplete tasks that are over orwithin a specified days from the current date. ","lastModifiedDate":"2023-02-16"},{"lineNumber":240,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":241,"author":{"gitId":"4ndrelim"},"content":"Displays all incomplete tasks that are over its deadline / ","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"4ndrelim"},"content":"start date or within a specified days from the current date.","lastModifiedDate":"2023-02-16"},{"lineNumber":243,"author":{"gitId":"4ndrelim"},"content":"Optional argument which represents the number of days from the current date.","lastModifiedDate":"2023-02-16"},{"lineNumber":244,"author":{"gitId":"4ndrelim"},"content":"Default is 3 days from the current date if no argument was passed.","lastModifiedDate":"2023-02-16"},{"lineNumber":245,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":246,"author":{"gitId":"4ndrelim"},"content":"Example of usage (note current date is taken to be 15 Feb 2023):","lastModifiedDate":"2023-02-16"},{"lineNumber":247,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":248,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":249,"author":{"gitId":"4ndrelim"},"content":"deadline proj1 /by 2023-02-15","lastModifiedDate":"2023-02-16"},{"lineNumber":250,"author":{"gitId":"4ndrelim"},"content":"deadline proj2 /by 2023-02-17","lastModifiedDate":"2023-02-16"},{"lineNumber":251,"author":{"gitId":"4ndrelim"},"content":"deadline proj3 /by 2023-02-19","lastModifiedDate":"2023-02-16"},{"lineNumber":252,"author":{"gitId":"4ndrelim"},"content":"event event1 /from 2023-02-17 /to 2023-02-25","lastModifiedDate":"2023-02-16"},{"lineNumber":253,"author":{"gitId":"4ndrelim"},"content":"event event2 /from 2023-02-28 /to 2023-03-25","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"4ndrelim"},"content":"getreminders","lastModifiedDate":"2023-02-16"},{"lineNumber":256,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":257,"author":{"gitId":"4ndrelim"},"content":"getreminders 15","lastModifiedDate":"2023-02-16"},{"lineNumber":258,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":259,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":260,"author":{"gitId":"4ndrelim"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":261,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":262,"author":{"gitId":"4ndrelim"},"content":"The following output will be displayed for the first get reminders command. ","lastModifiedDate":"2023-02-16"},{"lineNumber":263,"author":{"gitId":"4ndrelim"},"content":"Note **only the output from the get reminders command** is shown:","lastModifiedDate":"2023-02-16"},{"lineNumber":264,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":265,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":266,"author":{"gitId":"4ndrelim"},"content":"Here are the incomplete deadlines/events before Feb 18 2023:","lastModifiedDate":"2023-02-16"},{"lineNumber":267,"author":{"gitId":"4ndrelim"},"content":"1. [D][] proj1 | BY: Feb 15 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":268,"author":{"gitId":"4ndrelim"},"content":"2. [D][] proj2 | BY: Feb 17 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"4ndrelim"},"content":"3. [E][] event1 | FROM: Feb 17 2023 TO: Feb 25 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":270,"author":{"gitId":"4ndrelim"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":271,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":272,"author":{"gitId":"4ndrelim"},"content":"The following output will be displayed after the second get reminders command.","lastModifiedDate":"2023-02-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":275,"author":{"gitId":"4ndrelim"},"content":"Here are the incomplete deadlines/events before Mar 2 2023:","lastModifiedDate":"2023-02-16"},{"lineNumber":276,"author":{"gitId":"4ndrelim"},"content":"1. [D][] proj1 | BY: Feb 15 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":277,"author":{"gitId":"4ndrelim"},"content":"2. [D][] proj2 | BY: Feb 17 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":278,"author":{"gitId":"4ndrelim"},"content":"3. [E][] event1 | FROM: Feb 17 2023 TO: Feb 25 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":279,"author":{"gitId":"4ndrelim"},"content":"4. [E][] event2 | FROM: Feb 28 2023 TO: Mar 25 2023","lastModifiedDate":"2023-02-16"},{"lineNumber":280,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"4ndrelim":254,"-":26}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.storage.FileManagement;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":" * Duke is a personal assistant bot that helps user to track tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"public class Duke {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    private FileManagement fileManager;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    private UI ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    public Duke() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        // to manage saved data","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        this.fileManager \u003d new FileManagement();","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        // load existing list of tasks; creates empty if does not exist","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d new TaskList(fileManager.retrieve());","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        // receives user input and run parser","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        this.ui \u003d new UI(this.tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"     * Gets greeting message to be displayed to the user.","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"     * @return the greeting message in string.","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        String logo \u003d \"DUKE\";","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        String greeting \u003d \"Hello i\u0027m\\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"                + logo","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"                + \". Today is \"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"                + today.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"                + \".\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        return greeting;","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"     * Gets the appropriate response according to the user\u0027s input.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"     * @param input the user\u0027s input.","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"     * @return information about the actions executed.","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"            response \u003d this.ui.processInput(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"            return e.toString();","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        this.fileManager.save(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":65}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            stage.show();","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":32}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * A command to halt further execution of duke bot.","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"public class ByeCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"    public static String executeBye() {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"        return \"GOOD_BYE\";","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":10}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * Commands that can be used.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public enum Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    GETEVENTSON(\"geteventson\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    GETREMINDERS(\"getreminders\");","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    private String name;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for defined enumeration.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"     * @param name Name of the constant.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    Command(String name) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"     * Gets the command that correspond with the given name.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"     * @param name Name of the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"     * @return The corresponding command if valid.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"     * @throws UnknownCommandException if the name provided is not associated with any command.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    public static Command get(String name) throws UnknownCommandException {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        for (Command c : values()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"            if (c.name.equals(name)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"                return c;","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        throw new UnknownCommandException(name);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"4ndrelim":48}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * A command to create activities with deadlines.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public class DeadlineCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * Creates a deadline object that is added to list of existing tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s description of the activity.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the deadline object being added.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if an invalid date or description were found.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public static String addDeadline(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 10) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"The description of a \u003cdeadline\u003e cannot be empty!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        String info \u003d input.substring(9);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        if (!info.matches(\".+ /by .+\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cdeadline\u003e is to be used as such: $ deadline \u003cdes\u003e /by \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        String[] sp \u003d info.split(\" /by \");","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        if (sp[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cdeadline\u003e is missing \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d new Deadline(sp[0].trim(), sp[1].trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"                + task.getStatusIcon()","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"                + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"                + tasks.getSize()","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":39}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * A command for deletion of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public class DeleteCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * Deletes a task from a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the task being successfully deleted.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if an invalid task number were found.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public static String executeDelete(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 8 || !input.matches(\"delete\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cdelete\u003e command should receive a task number!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        int taskNum \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.getSize()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            Task removed \u003d tasks.delete(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\\t\"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                    + removed.getStatusIcon()","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"                    + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"                    + tasks.getSize()","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                    + \" task(s) in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":35}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * A command to create events.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public class EventCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * Creates an event that is added to a list of existing tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input describing the event.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the event being successfully added.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if invalid description or dates were found.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public static String addEvent(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 7) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"The description of a \u003cevent\u003e cannot be empty!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        String info \u003d input.substring(6);","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        if (!info.matches(\".+ /from .+ /to .+\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cevent\u003e is to be used as such: \"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"                    + \"$ event \u003cdes\u003e /from \u003cYYYY-MM-DD\u003e /to \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        String[] sp \u003d info.split(\" /from \");","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        if (sp[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cevent\u003e is missing start-time \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        String[] time \u003d sp[1].split(\" /to \");","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        if (time[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cevent\u003e is missing end-time \u003cYYYY-MM-DD\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d new Event(sp[0].trim(), time[0].trim(), time[1].trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"                + task.getStatusIcon()","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"                + tasks.getSize()","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":44}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * A command to search for tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class FindCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"     * Finds all tasks associated with a given word from a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input containing the word to look for.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @return a string of tasks associated to the specified word.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if no word were supplied.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    public static String executeFind(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 6) {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"Please supply a word to find!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        String toFind \u003d input.substring(5);","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        return tasks.find(toFind);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":24}},{"path":"src/main/java/duke/command/GetEventsOnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":" * A command to list all events on a given date.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"public class GetEventsOnCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * Retrieves all events occurring on a given date from a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input containing the date to look out for.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"     * @return a string of events.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if the date were found to be invalid.","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public static String retrieveEvents(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 12) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"Date input in the format of YYYY-MM-DD required!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        LocalDate date \u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"            date \u003d LocalDate.parse(input.substring(11).trim());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        return \"Here are the deadlines/events on \"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"                + \":\\n\" + tasks.listAllOnDate(date);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":36}},{"path":"src/main/java/duke/command/GetRemindersCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * A command to list all events on a given date.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"public class GetRemindersCommand {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    private static final int defaultDays \u003d 3;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * Retrieves incomplete tasks that are over or within specified (default 3) days from the deadline.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input containing the date to look out for.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     * @return a string of incomplete tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if an invalid number of days were provided.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    public static String getReminders(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        int days \u003d defaultDays;","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 13) {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            LocalDate defaultDeadline \u003d currDate.plusDays(days);","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"            return \"Here are the incomplete deadlines/events before \"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                    + defaultDeadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"                    +\":\\n\" + tasks.getTasksBy(defaultDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        if (!input.matches(\"getreminders\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"                    \"\u003cgetreminders\u003e command takes in number of days from the current date.\"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"                    + \"If no argument is provided, default is 3 days from current date.\");","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        days \u003d Integer.parseInt(input.substring(13).trim());","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        LocalDate deadline \u003d currDate.plusDays(days);","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        return \"Here are the incomplete deadlines/events before \"","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"                + deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                +\":\\n\" + tasks.getTasksBy(deadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"4ndrelim":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * A command to list activities.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"public class ListCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"     * Retrieves all the activities currently being tracked.","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * @return A string of activities from the given list.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public static String executeList(TaskList tasks) {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        return \"Here are the tasks in your list:\\n\" + tasks.listTasks();","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":17}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * A command to mark tasks as completed.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"public class MarkCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * Marks a specified task from a list of tasks as complete.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input containing the task to be marked.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the successful marking of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if the task number were found to be invalid.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public static String executeMark(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 6 || !input.matches(\"mark\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cmark\u003e command should receive a task number!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        int taskNum \u003d Integer.parseInt(input.substring(5).trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.getSize()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            String marked \u003d tasks.toggleMark(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\\t\" + marked;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":30}},{"path":"src/main/java/duke/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * Parser to parse the command and process the necessary actions associated with the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for parser.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks TaskList of tasks for the Parser to retrieve the tasks and act on it accordingly.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     * Parses the user\u0027s input and execute the necessary actions associated with the command.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     * @param command","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"     * @param userInput The user input to be parsed to be used in the execution of its associated command.","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"     * @return a string that describes the action done.","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if there is missing required information in the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    public String execute(Command command, String userInput) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        switch (command) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        case BYE:","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"            return ByeCommand.executeBye();","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        case LIST:","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"            return ListCommand.executeList(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        case MARK:","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"            return MarkCommand.executeMark(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            return UnmarkCommand.executeUnmark(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        case DELETE:","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"            return DeleteCommand.executeDelete(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        case TODO:","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"            return TodoCommand.addTodo(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"            return DeadlineCommand.addDeadline(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        case EVENT:","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"            return EventCommand.addEvent(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        case GETEVENTSON:","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"            return GetEventsOnCommand.retrieveEvents(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        case FIND:","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"            return FindCommand.executeFind(tasks, userInput);","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"        case GETREMINDERS:","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"            return GetRemindersCommand.getReminders(tasks, userInput);","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"            assert false : \"Unknown commands should have been resolved and not parsed.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"            return \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":59}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * A command to create todo activities.","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public class TodoCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * Creates a todo object that is added to list of existing tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input describing the todo activity.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the task being successfully added.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if an invalid description were found.","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public static String addTodo(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 6 || !input.matches(\"todo\\\\s.*\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"The description of a \u003ctodo\u003e cannot be empty!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        String info \u003d input.substring(5).trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d new ToDo(info);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"        tasks.addTask(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        return \"Got it. I\u0027ve added this task:\\n\\t\"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"                + task.getStatusIcon()","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"                + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"                + tasks.getSize()","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"                + \" task(s) in the list.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":32}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidIndexException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * A command to unmark tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"public class UnmarkCommand {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * Unmarks a specified task from a list of tasks as incomplete.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param input user\u0027s input containing the task to be marked.","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     * @return acknowledgement of the successful unmarking of the task.","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException if the task number were found to be invalid.","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    public static String executeUnmark(TaskList tasks, String input) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"        if (input.length() \u003c 8 || !input.matches(\"unmark\\\\s+\\\\d+\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"            throw new DukeException(\"\u003cunmark\u003e command should receive a task number!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        int taskNum \u003d Integer.parseInt(input.substring(7).trim());","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        if (1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d tasks.getSize()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"            String unmarked \u003d tasks.toggleUnmark(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\\t\" + unmarked;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidIndexException(taskNum);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"4ndrelim":30}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * General exception thrown by the Duke chatbot.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for the exception class.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * @param msg Message to describe the exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"     * Displays string representation of the exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     * @return String representation of the exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"☹ OOPS!!! %s\", super.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":26}},{"path":"src/main/java/duke/exceptions/InvalidDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" *  An exception thrown by the Duke chatbot whenever an invalid date format is provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class InvalidDateException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for InvalidDateException.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    public InvalidDateException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"        super(\"Invalid Date Format, please input it as YYYY-MM-DD;\\nFor events, make sure start date \u003c\u003d end date!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":16}},{"path":"src/main/java/duke/exceptions/InvalidIndexException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * An exception thrown by the Duke chatbot whenever an invalid index is provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class InvalidIndexException extends DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    public InvalidIndexException(int idx) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"        super(String.format(\"Index of %d is out of bounds!\", idx));","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"4ndrelim":13}},{"path":"src/main/java/duke/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * An exception thrown by the Duke chatbot whenever an unknown command is provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    private String command;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for UnknownCommandException.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"     * @param command The invalid command that was provided.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    public UnknownCommandException(String command) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        super(String.format(\"I\u0027m sorry, but I don\u0027t know what \u003c%s\u003e means :-(\", command));","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":20}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.gui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    private Circle icon \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    private DialogBox(String text, Image img, String user) {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        dialog.setWrapText(true);","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        if (user \u003d\u003d \"duke\") {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"            dialog.setStyle(\"-fx-padding: 10; -fx-border-color:pink; -fx-background-color: white;\");","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"        } else if (user \u003d\u003d \"client\") {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"            dialog.setStyle(\"-fx-padding: 10; -fx-border-color:blue; -fx-background-color: white;\");","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        displayPicture.setClip(icon);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    private void flip() {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        return new DialogBox(text, img, \"client\");","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"        var db \u003d new DialogBox(text, img, \"duke\");","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"        db.flip();","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        return db;","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":71}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.gui;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"                DialogBox.getDukeDialog(duke.getGreeting(), dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        );","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-05"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    @FXML","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-05"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        if (response \u003d\u003d \"GOOD_BYE\") {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"            try {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"                Thread.sleep(750);","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"            } catch (InterruptedException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"                    DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"            );","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":67}},{"path":"src/main/java/duke/storage/FileManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import java.util.List;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":" * A file manager to manage the saving and retrieval of users\u0027 data.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"public class FileManagement {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    private File file;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    private String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    private String dataDirectory;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for FileManagement.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    public FileManagement() {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        this.dataDirectory \u003d \"./data/\";","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        this.filePath \u003d this.dataDirectory + \"duke.txt\";","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        this.file \u003d new File(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        File directory \u003d new File(this.dataDirectory);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"            if (!this.file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"     * Saves the list of tasks made by the user.","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"     * @param taskList TaskList of tasks provided by the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    public void save(TaskList taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"            FileWriter writer \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"            for (Task task : taskList.getTasks()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"                writer.write(task.encode() + \"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"            writer.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"     * Retrieves saved information about the user\u0027s tasks from the previous session.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"     * @return List of previously saved tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"    public List\u003cTask\u003e retrieve() {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        Scanner scanner \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"            scanner \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"                String encoded \u003d scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"                taskList.add(this.decodeTask(encoded));","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"        } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"            scanner.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"        return taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"     * Decode encrypted information regarding a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"     * @param task String encoding of task.","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"     * @return The task object constructed from its encoded string representation.","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"     * @throws InvalidDateException Throws an InvalidDateException if an invalid date format was saved for any task.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"    private Task decodeTask(String task) throws InvalidDateException {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"        String[] components \u003d task.split(\" ### \");","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"        String command \u003d components[0];","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"        String toMark \u003d components[1];","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"        String des \u003d components[2];","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"        Task decoded \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"            decoded \u003d new ToDo(des);","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"            decoded \u003d new Deadline(des, components[3]);","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"        case \"event\":","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"            decoded \u003d new Event(des, components[3], components[4]);","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"        default:","lastModifiedDate":"2023-02-03"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"            assert false : \"Saved file may be corrupted\";","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"            break;","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        if (toMark.equals(\"true\")) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"            decoded.markTask();","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"        return decoded;","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":119}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * Class for Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for a Deadline object.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     * @param des Description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"     * @param deadline String format of the deadline of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"     * @throws InvalidDateException if the string representation of deadline is not of the correct format.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    public Deadline(String des, String deadline) throws InvalidDateException {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"     * Displays formatted information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"     * @return String informing users details about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[D]%s | BY: %s\", super.getStatusIcon(),","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"                this.deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"     * Encodes information about the task to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"     * @return String representing encoded information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s ### %s\", \"deadline\", super.encode(), this.deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     * Checks if the task falls on a given date.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"     * @return A boolean value that checks if the task falls on the specified day.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"        return this.deadline.equals(date);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"     * Checks if the task is complete and if its deadline is before or on a specified date.","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"     * @param date the date to check against.","lastModifiedDate":"2023-02-14"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"     * @return a boolean value.","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"    public boolean isIncompleteBeforeDate(LocalDate date) {","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"        return !isComplete()","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"                \u0026\u0026 this.deadline.compareTo(date) \u003c\u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":72}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * Class for Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate startDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"    private LocalDate endDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for an Event object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"     * @param des Description of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"     * @param startDate The start date of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"     * @param endDate The end date of the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     * @throws InvalidDateException if the string representation of deadline is not of the correct format.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"    public Event(String des, String startDate, String endDate) throws InvalidDateException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"            this.startDate \u003d LocalDate.parse(startDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"            this.endDate \u003d LocalDate.parse(endDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"            // invalid end date before start","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"            if (this.startDate.compareTo(this.endDate) \u003e 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"                throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"            throw new InvalidDateException();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"     * Displays formatted information about the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"     * @return String informing users details about the event.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[E]%s | FROM: %s TO: %s\",","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"                super.getStatusIcon(),","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"                this.startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"                this.endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     * Encodes information about the event to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"     * @return String representing encoded information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s ### %s ### %s\", \"event\",","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"                super.encode(),","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"                this.startDate,","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"                this.endDate);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"     * Checks if the event falls on a given date.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"     * @return A boolean value that checks if the event falls on the specified day.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"        return this.startDate.compareTo(date)","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"                * date.compareTo(this.endDate) \u003e\u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"     * Checks if the event is incomplete and its start date is on or before a specified date.","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"     * @param date the date to check against.","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"     * @return a boolean value.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"    public boolean isIncompleteBeforeDate(LocalDate date) {","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"        return !isComplete() \u0026\u0026","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"                this.startDate.compareTo(date) \u003c\u003d 0;","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":85}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * Class for Task object to encapsulate commonalities in subclasses.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @param des Description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public Task(String des) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        this.description \u003d des;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     * Marks the task as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    public void markTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"     * Unmarks the task as incomplete.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"     * Checks if a task is marked as done.","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"     * @return boolean value.","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"    public boolean isComplete() { return this.isDone; }","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"     * Displays formatted information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"     * @return String containing common information about a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        return this.isDone ? \"[X] \" + this.getDescription() : \"[] \" + this.getDescription();","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"     * @return Description of the task in string.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"     * Encodes information about the task to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"     * @return String representation of the encoded information.","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s\", this.isDone, this.description);","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"     * Checks if a task falls on a given date.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"     * @param date Date to check against.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"     * @return boolean value that checks if the task falls on the specified date.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"    public boolean fallsOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"        return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"     * Checks if a task is marked as complete before a specified date.","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"     * @param date the date to check against.","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"     * @return a boolean value.","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"    public boolean isIncompleteBeforeDate(LocalDate date) {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"        return false;","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":85}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" * Class for TaskList to store a collections of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"public class TaskList {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    private List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * Overloaded constructor for the creation of a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for the creation of a TaskList object.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks List of tasks to be included in TaskList after creation.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    public TaskList(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"     * Gets the number of tasks in TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"     * @return Integer representing number of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"     * Adds a given task to TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"     * Deletes a specified task from TaskList.","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"     * @param taskNum The number corresponding to the task to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"4ndrelim"},"content":"     * @return The deleted task.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"4ndrelim"},"content":"    public Task delete(int taskNum) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"4ndrelim"},"content":"        assert 1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d getSize() :","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"4ndrelim"},"content":"                \"taskNum should be a positive integer at most the number of tasks\";","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"4ndrelim"},"content":"        return this.tasks.remove(taskNum - 1);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"4ndrelim"},"content":"     * Toggles a given task as complete.","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"4ndrelim"},"content":"     * @param taskNum The number corresponding to the task to be marked as completed.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"4ndrelim"},"content":"     * @return Information of the task in string representation.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"4ndrelim"},"content":"    public String toggleMark(int taskNum) {","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"4ndrelim"},"content":"        assert 1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d getSize() :","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"4ndrelim"},"content":"                \"taskNum should be a positive integer at most the number of tasks\";","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"4ndrelim"},"content":"        task.markTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"4ndrelim"},"content":"        return task.getStatusIcon();","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"4ndrelim"},"content":"     * Toggles a given task as incomplete.","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"4ndrelim"},"content":"     * @param taskNum The number corresponding to the task to be marked as incomplete.","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"4ndrelim"},"content":"     * @return Information of the task in string representation.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"4ndrelim"},"content":"    public String toggleUnmark(int taskNum) {","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"4ndrelim"},"content":"        assert 1 \u003c\u003d taskNum \u0026\u0026 taskNum \u003c\u003d getSize() :","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"4ndrelim"},"content":"                \"taskNum should be a positive integer at most the number of tasks\";","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"4ndrelim"},"content":"        Task task \u003d tasks.get(taskNum - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"4ndrelim"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"4ndrelim"},"content":"        return task.getStatusIcon();","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"4ndrelim"},"content":"     * Displays information about all the tasks that are currently being tracked.","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"4ndrelim"},"content":"     * @return String with information across all tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"4ndrelim"},"content":"    public String listTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"4ndrelim"},"content":"            display.append((i + 1) + \". \" + curr.getStatusIcon());","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"4ndrelim"},"content":"            if (i \u003c this.tasks.size() - 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"4ndrelim"},"content":"                display.append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"4ndrelim"},"content":"     * Displays information of all the tasks that occur on a given date.","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"4ndrelim"},"content":"     * @param date The date to check against.","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"4ndrelim"},"content":"     * @return String with information of all tasks on the specified date.","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"4ndrelim"},"content":"    public String listAllOnDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"4ndrelim"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"4ndrelim"},"content":"            if (curr.fallsOnDate(date)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"4ndrelim"},"content":"                if (count \u003e 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"4ndrelim"},"content":"                    display.append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"4ndrelim"},"content":"                display.append((count) + \". \" + curr.getStatusIcon());","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"4ndrelim"},"content":"                count++;","lastModifiedDate":"2023-01-23"},{"lineNumber":124,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":125,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"4ndrelim"},"content":"     * Finds all the tasks which contains or are associated with the given word.","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"4ndrelim"},"content":"     * @param word the specified word.","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"4ndrelim"},"content":"     * @return formatted string showing details of all tasks associated to the word.","lastModifiedDate":"2023-02-03"},{"lineNumber":133,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"4ndrelim"},"content":"    public String find(String word) {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"4ndrelim"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"4ndrelim"},"content":"            if (count \u003e 20) {","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"4ndrelim"},"content":"                display.insert(0, \"Note: Only up to 20 searches are displayed!\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"4ndrelim"},"content":"            // checks for word ignoring case sensitivity","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"4ndrelim"},"content":"            if (curr.getDescription().toLowerCase().contains(word.toLowerCase())) {","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"4ndrelim"},"content":"                if (count \u003e 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"4ndrelim"},"content":"                    display.append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"4ndrelim"},"content":"                display.append((count) + \". \" + curr.getStatusIcon());","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"4ndrelim"},"content":"                count++;","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"4ndrelim"},"content":"    };","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":154,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":155,"author":{"gitId":"4ndrelim"},"content":"     * Gets all tasks before or on a specified date.","lastModifiedDate":"2023-02-14"},{"lineNumber":156,"author":{"gitId":"4ndrelim"},"content":"     * @param date the date to check against.","lastModifiedDate":"2023-02-14"},{"lineNumber":157,"author":{"gitId":"4ndrelim"},"content":"     * @return a string of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":158,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":159,"author":{"gitId":"4ndrelim"},"content":"    public String getTasksBy(LocalDate date) {","lastModifiedDate":"2023-02-14"},{"lineNumber":160,"author":{"gitId":"4ndrelim"},"content":"        StringBuilder display \u003d new StringBuilder();","lastModifiedDate":"2023-02-14"},{"lineNumber":161,"author":{"gitId":"4ndrelim"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-02-14"},{"lineNumber":162,"author":{"gitId":"4ndrelim"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-14"},{"lineNumber":163,"author":{"gitId":"4ndrelim"},"content":"            Task curr \u003d this.tasks.get(i);","lastModifiedDate":"2023-02-14"},{"lineNumber":164,"author":{"gitId":"4ndrelim"},"content":"            if (curr.isIncompleteBeforeDate(date)) {","lastModifiedDate":"2023-02-14"},{"lineNumber":165,"author":{"gitId":"4ndrelim"},"content":"                if (count \u003e 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"4ndrelim"},"content":"                    display.append(\"\\n\");","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"4ndrelim"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"4ndrelim"},"content":"                display.append((count) + \". \" + curr.getStatusIcon());","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"4ndrelim"},"content":"                count++;","lastModifiedDate":"2023-02-14"},{"lineNumber":170,"author":{"gitId":"4ndrelim"},"content":"            }","lastModifiedDate":"2023-02-14"},{"lineNumber":171,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":172,"author":{"gitId":"4ndrelim"},"content":"        return display.toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":173,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":174,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":174}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":" * Class for ToDo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":" * @author Andre Lin HuiKai","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":" * @version CS2103T AY22/23 Semester 2","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for a ToDo object.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"     * @param des Description of the ToDo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    public ToDo(String des) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        super(des);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"     * Displays formatted information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"     * @return String containing information about ToDo.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"[T]%s\", super.getStatusIcon());","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"     * Encodes information about the event to be saved.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"     * @return String representing encoded information about the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"    public String encode() {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        return String.format(\"%s ### %s\", \"todo\", super.encode());","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":35}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"import duke.command.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":" * Class that handles the interface that user interacts with.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"public class UI {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"     * Constructor for UI object.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"     * @param tasks A list of possible saved tasks from the previous session.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    public UI(TaskList tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        this.parser \u003d new Parser(tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"     * Processes user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"     * @return a string that to be displayed to the user in response to the input.","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"     * @throws DukeException Throws DukeException if an invalid input is encountered.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"    public String processInput(String input) throws DukeException {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        // get user input and trim trailing white sp","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        String toProcess \u003d input.trim();","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        String firstWord \u003d toProcess.split(\" \")[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        Command command \u003d Command.get(firstWord);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        String response \u003d this.parser.execute(command, toProcess);","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"        return response;","lastModifiedDate":"2023-02-05"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"4ndrelim":36}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        \u003cLabel fx:id\u003d\"dialog\" focusTraversable\u003d\"false\" scaleShape\u003d\"false\" style\u003d\"-fx-border-color: pink; -fx-background-color: white; -fx-padding: 10;\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"            \u003cfont\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"                \u003cFont name\u003d\"Arial\" size\u003d\"12.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"            \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"        \u003cRectangle arcHeight\u003d\"6.0\" arcWidth\u003d\"6.0\" fill\u003d\"#0000FF\" height\u003d\"84.0\" opacity\u003d\"0.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" visible\u003d\"false\" width\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"103.0\" fitWidth\u003d\"107.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":22}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"700.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"724.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"590.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"110.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"700.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"688.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"4ndrelim":19}},{"path":"src/test/java/duke/command/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.UnknownCommandException;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class CommandTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public void testCommands() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"list\"), Command.LIST);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"bye\"), Command.BYE);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"mark\"), Command.MARK);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"unmark\"), Command.UNMARK);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"todo\"), Command.TODO);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"deadline\"), Command.DEADLINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"event\"), Command.EVENT);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"delete\"), Command.DELETE);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"            assertEquals(Command.get(\"geteventson\"), Command.GETEVENTSON);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"        } catch (UnknownCommandException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"4ndrelim":26}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public void addDeadline() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        Deadline homework \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"            homework \u003d new Deadline(\"CS3230 HW1\", \"2023-01-31\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[D][] CS3230 HW1 | BY: Jan 31 2023\", homework.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        Deadline homework \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            homework \u003d new Deadline(\"CS3230 HW1\", \"2023-01-31\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        homework.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[D][X] CS3230 HW1 | BY: Jan 31 2023\", homework.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        Deadline homework \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"            homework \u003d new Deadline(\"CS3230 HW1\", \"2023-01-31\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        homework.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        homework.unmarkTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[D][] CS3230 HW1 | BY: Jan 31 2023\", homework.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    public void encode() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        Deadline homework \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"            homework \u003d new Deadline(\"CS3230 HW1\", \"2023-01-31\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"deadline ### false ### CS3230 HW1 ### 2023-01-31\", homework.encode());","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"4ndrelim":56}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"import duke.exceptions.InvalidDateException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"    public void addEvent() {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"        Event event \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"            event \u003d new Event(\"Climbing Camp\", \"2023-01-31\", \"2023-02-02\");","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[E][] Climbing Camp | FROM: Jan 31 2023 TO: Feb 2 2023\", event.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        Event event \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"            event \u003d new Event(\"Climbing Camp\", \"2023-01-31\", \"2023-02-02\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"        event.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[E][X] Climbing Camp | FROM: Jan 31 2023 TO: Feb 2 2023\", event.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"        Event event \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"4ndrelim"},"content":"            event \u003d new Event(\"Climbing Camp\", \"2023-01-31\", \"2023-02-02\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"4ndrelim"},"content":"        event.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"4ndrelim"},"content":"        event.unmarkTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[E][] Climbing Camp | FROM: Jan 31 2023 TO: Feb 2 2023\", event.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"4ndrelim"},"content":"    public void encode() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"4ndrelim"},"content":"        Event event \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"4ndrelim"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"4ndrelim"},"content":"            event \u003d new Event(\"Climbing Camp\", \"2023-01-31\", \"2023-02-02\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"4ndrelim"},"content":"        } catch (InvalidDateException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"4ndrelim"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"4ndrelim"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"4ndrelim"},"content":"        event.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"event ### true ### Climbing Camp ### 2023-01-31 ### 2023-02-02\", event.encode());","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"4ndrelim":57}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"    public void addToDo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"        ToDo todo \u003d new ToDo(\"CS3230 HW1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[T][] CS3230 HW1\", todo.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"        ToDo todo \u003d new ToDo(\"CS3230 HW1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"        todo.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[T][X] CS3230 HW1\", todo.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"        ToDo todo \u003d new ToDo(\"CS3230 HW1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"        todo.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"4ndrelim"},"content":"        todo.unmarkTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"[T][] CS3230 HW1\", todo.getStatusIcon());","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"4ndrelim"},"content":"    public void encode() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"4ndrelim"},"content":"        ToDo todo \u003d new ToDo(\"CS3230 HW1\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"4ndrelim"},"content":"        todo.markTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"4ndrelim"},"content":"        assertEquals(\"todo ### true ### CS3230 HW1\", todo.encode());","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"4ndrelim"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"4ndrelim"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"4ndrelim":35}},{"path":"text-ui-test/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### return book ### 2023-02-12","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"event ### false ### project meeting ### 2023-01-27 ### 2023-01-27","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"todo ### true ### join sports club","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo ### false ### borrow book","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"deadline ### true ### return book ### 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"event ### false ### climbing camp ### 2023-01-30 ### 2023-02-02","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"deadline ### false ### do homework ### 2023-01-30","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"4ndrelim":7}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"4ndrelim"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"4ndrelim"},"content":"deadline return book /by 2023-02-12","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"4ndrelim"},"content":"event project meeting /from 2023-01-27 /to 2023-01-27","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"4ndrelim"},"content":"todo join sports club","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"4ndrelim"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"4ndrelim"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"4ndrelim"},"content":"delete 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"4ndrelim"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"4ndrelim"},"content":"deadline return book /by 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"4ndrelim"},"content":"event project meeting /from 2023-01-29 /to 2023-01-29","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"4ndrelim"},"content":"event climbing camp /from 2023-01-30 /to 2023-02-02","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"4ndrelim"},"content":"deadline do homework /by 2023-01-30","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"xd","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"mark 7","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"nani","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"unmark 7","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"4ndrelim"},"content":"delete 6","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"4ndrelim"},"content":"geteventson 2023-01-30","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"4ndrelim"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"4ndrelim":24}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"4ndrelim"},"content":"# dun store data for test","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"4ndrelim"},"content":"if [ -e \"./data/duke.txt\" ]","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"4ndrelim"},"content":"then","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"4ndrelim"},"content":"    rm data/duke.txt","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"4ndrelim"},"content":"fi","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"4ndrelim"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"4ndrelim"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"4ndrelim"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"4ndrelim":8,"-":36}}]
