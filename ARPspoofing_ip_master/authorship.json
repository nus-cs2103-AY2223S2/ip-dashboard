[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ARPspoofing":2,"-":40}},{"path":"dukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"[[ ] Hello, [ ] Todos, [ ] Hello, [ ] Todo, [ ] Hello, [T][ ]  Hello, [ ] borrow, [ ] book, [ ] lisg, [T][ ]  borrow book ]","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ARPspoofing":1}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"/** ","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * \u003ch1\u003eDeadline tasks with date\u003c/h1\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * The Deadline class is a specific subclass of the Task that allows user to","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" * add a stipulated end date for their keyed input. By default, it assumes","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * the Deadline task is undone, because it does not make sense for a user to","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * enter a new Deadline task if it is done. However, should the user want to","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * input a past done Deadline task, he is allowed to do so. The user can","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" * also toggle the status of the Deadline task as done or undone. Lastly,","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":" * the Deadline date can be both a day, and a local date.","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":" * ","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    protected String by;","lastModifiedDate":"2023-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2023-01-10"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    Deadline() {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"     * Allows the user to create a Deadline task that is marked as undone.","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"     * The Deadline task will have methods inherited from the Task class.","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"     * This means that other classes will be able to check the status of the","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"     * Deadline task. After all, a Deadline task is just a subclass of a","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"     * Task class.","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"     * @param description The name of the Deadline task, which cannot be","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"     * modified  ","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"     * @param by the duedate that the Deadline task has to be completed ","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    Deadline(String description, String by) {","lastModifiedDate":"2023-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"     * Allows the user to create a Deadline task that is marked as undone.","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"     * The Deadline task will have methods inherited from the Task class.","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"     * This means that other classes will be able to check the status of the","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"     * Deadline task. After all, a Deadline task is just a subclass of a","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"     * Task class.","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"     * @param description The name of the Deadline task, which cannot be","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"     * modified","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"     * @param by The duedate that the Deadline task has to be completed","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"     * @param isDone The status of the task, which will be set to done or","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"     * undone depending on the user input","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    Deadline(String description, String by, boolean isDone) {","lastModifiedDate":"2023-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"     * Based on the deadline that the user has keyed in, it will be","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"     * modified. If the user keyed in a day, it will be maintained as a day.","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * if a user keys in a date in MMM dd YYYY format, it will be cnverted","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     * into a String in the respective format","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"     * @return the String of a date that the user has keyed in","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DateTimeParseException if the date format is not in MMM dd","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"     * YYY, for example it is in DD/MM/YYYY, the exception will be caught","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"     * and returned as the original String keyed in.","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"     * @see LocalDate","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"    String localDateParser() {","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"            LocalDate date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"            return date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"            return by;","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"     *  The status of the Deadline task will be toggled to \"X\", which","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"     *  indicates it is marked as done. However, due to immutability, a new","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"     *  Deadline class is returned, with the exact same description and due","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"     *  date","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"     *  ","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"     *  @return the new toggled Deadline status, which is done ","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    Deadline markAsDone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"        return new Deadline(getDescription(), by, true);","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"     *  The status of the Deadline task will be toggled to \" \", which","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"     *  indicates it is marked as undone. However, due to immutability, a new","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"     *  Deadline class is returned, with the exact same description and due","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"     *  date","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"     *  ","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"ARPspoofing"},"content":"     *  @return the new toggled Deadline status, which is undone","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    Deadline markAsUndone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":120,"author":{"gitId":"ARPspoofing"},"content":"        return new Deadline(getDescription(), by, false);","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-10"},{"lineNumber":125,"author":{"gitId":"ARPspoofing"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + localDateParser() + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":97,"-":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":" * Duke is the main class that directly handles the user input, and abstract","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":" * / encapsulates various information that is needed to store and display","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * results to the user. This includes: ","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * \u003cul\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * \u003cli\u003e The list of Tasks that the user keys in ","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" * \u003cli\u003e Reading and writing information from / to the hardisk of the user\u0027s","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * machine","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * \u003cli\u003e Various responses by Duke bot customised according to a football","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * character","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":" * It has methods for different levels to satsify the iterative","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":" * implementation. Jar file executes the main class from here, as well as","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":" * Gradle","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":" * ","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":" * @see Scanner  ","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":" * @see TaskList ","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":" * @see Storage","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":" * @see Ui","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2023-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Tasks\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    private TaskList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"    private Storage storage; ","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"     * Default constructor that is made explicit. Tasks and TaskList have","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"     * essentially the same type of characteristics, but it is to satisfy","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"     * different levels in the iterative approach","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Duke() {","lastModifiedDate":"2023-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.tasks \u003d new Tasks\u003cTask\u003e();","lastModifiedDate":"2023-01-10"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"        this.taskList \u003d new TaskList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"     * Satisfies Level 1. The user is welcomed with a custom message when the user","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"     * runs Duke. The custom message is encapsulated in a Printable class.","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"     * Thereafter, a Scanner object is instantiated that reads from the","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"     * user machine\u0027s keyboard. As long as the user does not terminate the","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"     * program, it will be continuously running and scanning for the next","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"     * full line the user keys in. It will just display the exact same line","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"     * the user keys in. When the user keys in exit, the program terminates.","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    void greetEcho() {","lastModifiedDate":"2023-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-10"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"        //Scanner object to read from the user machine\u0027s keyboard","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                ","lastModifiedDate":"2023-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            String echoWord \u003d sc.next();    ","lastModifiedDate":"2023-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (!echoWord.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                System.out.println(echoWord);","lastModifiedDate":"2023-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * Satisfies Level 2. The user is welcomed with a custom message when the user","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     * runs Duke. The custom message is encapsulated in a Printable class.","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     * Thereafter, a Scanner object is instantiated that reads from the","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"     * user machine\u0027s keyboard. As long as the user does not terminate the","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"     * program, it will be continuously running and scanning for the next","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"     * full line the user keys in. Unlike level 1, the user input will be stored ","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"     * during the session, and the user can list all the lines keyed in. When ","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"     * the user keys in exit, the program terminates.","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    void addAndList() {","lastModifiedDate":"2023-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Task(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"ARPspoofing"},"content":"     * Satisfies Level 3. The user is welcomed with a custom message when the user","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"     * runs Duke. The custom message is encapsulated in a Printable class.","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"     * Thereafter, a Scanner object is instantiated that reads from the","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"     * user machine\u0027s keyboard. As long as the user does not terminate the","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"     * program, it will be continuously running and scanning for the next","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"     * full line the user keys in. On top of level 2 which the user input will be ","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"     * stored during the session, and the user can list all the lines keyed in ","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"     * ,this function contains additional features. The user will be able to","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"     * mark the Task as done or undone. When the user keys in exit, the program ","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"     * terminates.","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    void markAsDone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-10"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.MARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                int taskPosition \u003d sc.nextInt() - Printable.DECREMENT;","lastModifiedDate":"2023-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                this.tasks \u003d this.tasks.set(taskPosition, this.tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            }  else if (description.equals(Printable.UNMARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                int taskPosition \u003d sc.nextInt() - Printable.DECREMENT;","lastModifiedDate":"2023-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                this.tasks \u003d this.tasks.set(taskPosition, this.tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }  else {","lastModifiedDate":"2023-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Task(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":141,"author":{"gitId":"ARPspoofing"},"content":"    /* Satisfies Level 4. On top of the features implemented in level 3,","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"ARPspoofing"},"content":"     * which is mark as done or undone, the user will be able to create","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"ARPspoofing"},"content":"     * different type of Tasks. This include Todo, Deadline and Events. Todo","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"ARPspoofing"},"content":"     * will mark the type of Task with a [T]. As its name suggest, it is to","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"ARPspoofing"},"content":"     * remind the user that this Task needs to be done. Deadline will mark","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"ARPspoofing"},"content":"     * the type of Task with a [D]. This will allow the user to key in","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"ARPspoofing"},"content":"     * additonal data, which is the stipulated completion or due date for","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"ARPspoofing"},"content":"     * the Task. Lastly, Events will mark the Task with a [E]. This will","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"ARPspoofing"},"content":"     * allow the user to key in two addtional inputs. One of them is the","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"ARPspoofing"},"content":"     * beginning date, and the other is the end date. Naturally, this makes","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"ARPspoofing"},"content":"     * it a more specific type of Task as compared to Deadline","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    void trackingEvents() {","lastModifiedDate":"2023-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.MARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                int taskPosition \u003d sc.nextInt() - Printable.DECREMENT;","lastModifiedDate":"2023-01-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                this.tasks \u003d this.tasks.set(taskPosition, this.tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            }  else if (description.equals(Printable.UNMARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                int taskPosition \u003d sc.nextInt() - Printable.DECREMENT;","lastModifiedDate":"2023-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"                this.tasks \u003d this.tasks.set(taskPosition, this.tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TODO)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Todos(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.DEADLINE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Deadline(dateRange[0],dateRange[1].replaceFirst(\"by\",\"\"));","lastModifiedDate":"2023-01-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.EVENT)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"                description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Events(dateRange[0],dateRange[1].replaceFirst(\"from\",\"\"),dateRange[2].replaceFirst(\"to\",\"\"));","lastModifiedDate":"2023-01-10"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Task(description + sc.nextLine());","lastModifiedDate":"2023-01-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":192,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"ARPspoofing"},"content":"     * Satisfies Level 5. On top of the functionalities implemented in Level","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"ARPspoofing"},"content":"     * 4, error handling is done. Two custom classes: dukeExceptionWarning","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"ARPspoofing"},"content":"     * and dukeUnknownExceptionWarning are created. These two custom classes","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"ARPspoofing"},"content":"     * are more specific versions of the IllegalArgumentException. For","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"ARPspoofing"},"content":"     * example, if the user keys in \u0027blah\u0027, which is an unknown command, the","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"ARPspoofing"},"content":"     * exception will be thrown. ","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"ARPspoofing"},"content":"     * @exception dukeUnknownException if the command is not legal","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"ARPspoofing"},"content":"     * @see IllegalArgumentException","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    void errorHandling() {","lastModifiedDate":"2023-01-10"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2023-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        while (true) {","lastModifiedDate":"2023-01-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-10"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":213,"author":{"gitId":"-"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.MARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":215,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.mark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }  else if (description.equals(Printable.UNMARK)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":217,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.unmark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.TODO)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":219,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.toDo(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.DEADLINE)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":221,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.deadline(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            } else if (description.equals(Printable.EVENT)) {","lastModifiedDate":"2023-01-10"},{"lineNumber":223,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.events(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"ARPspoofing"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"ARPspoofing"},"content":"                dukeExceptionWarning(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":229,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":230,"author":{"gitId":"ARPspoofing"},"content":"    /** Checks the user input against a list of invalid commands","lastModifiedDate":"2023-01-20"},{"lineNumber":231,"author":{"gitId":"ARPspoofing"},"content":"     * (blacklist). If the input is blacklisted, a new DukeUnknownException","lastModifiedDate":"2023-01-20"},{"lineNumber":232,"author":{"gitId":"ARPspoofing"},"content":"     * is thrown. Otherwise, a new Task will be created and added to the lit","lastModifiedDate":"2023-01-20"},{"lineNumber":233,"author":{"gitId":"ARPspoofing"},"content":"     * of previously keyed in Task. ","lastModifiedDate":"2023-01-20"},{"lineNumber":234,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":235,"author":{"gitId":"ARPspoofing"},"content":"     * @param description The user\u0027s task title in String ","lastModifiedDate":"2023-01-20"},{"lineNumber":236,"author":{"gitId":"ARPspoofing"},"content":"     * @throws IllegalArgumentException","lastModifiedDate":"2023-01-20"},{"lineNumber":237,"author":{"gitId":"ARPspoofing"},"content":"     * @throws DukeUnknownException","lastModifiedDate":"2023-01-20"},{"lineNumber":238,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":239,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":240,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":241,"author":{"gitId":"ARPspoofing"},"content":"    void dukeExceptionWarning(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":242,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":243,"author":{"gitId":"ARPspoofing"},"content":"            if (Printable.INVALID_COMMANDS.contains(description)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"ARPspoofing"},"content":"                throw new DukeUnknownException(\"Illegal command\");","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2023-01-10"},{"lineNumber":246,"author":{"gitId":"-"},"content":"                Task newTask \u003d new Task(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":247,"author":{"gitId":"-"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-01-10"},{"lineNumber":249,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DukeUnknownException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":250,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(Printable.ILLEGAL_COMMAND);","lastModifiedDate":"2023-01-17"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":254,"author":{"gitId":"ARPspoofing"},"content":"    //Level 6","lastModifiedDate":"2023-01-17"},{"lineNumber":255,"author":{"gitId":"ARPspoofing"},"content":"    /** Satisfies Level 6. On top of satisfying Level 5, it allows the user","lastModifiedDate":"2023-01-20"},{"lineNumber":256,"author":{"gitId":"ARPspoofing"},"content":"     * to delete Task that was previosuly keyed in. Task are deleted by","lastModifiedDate":"2023-01-20"},{"lineNumber":257,"author":{"gitId":"ARPspoofing"},"content":"     * specifying the index of the list of Tasks (starting from 1). ","lastModifiedDate":"2023-01-20"},{"lineNumber":258,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":259,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException","lastModifiedDate":"2023-01-20"},{"lineNumber":260,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":261,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":262,"author":{"gitId":"ARPspoofing"},"content":"    void deleteHandling() {","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"ARPspoofing"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"ARPspoofing"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"ARPspoofing"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"ARPspoofing"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"ARPspoofing"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"ARPspoofing"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":272,"author":{"gitId":"ARPspoofing"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-17"},{"lineNumber":273,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.MARK)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":274,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.mark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":275,"author":{"gitId":"ARPspoofing"},"content":"            }  else if (description.equals(Printable.UNMARK)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":276,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.unmark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":277,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.TODO)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":278,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.toDo(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":279,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.DEADLINE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":280,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.deadline(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":281,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.EVENT)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":282,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.events(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":283,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.DELETE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":284,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.delete(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":285,"author":{"gitId":"ARPspoofing"},"content":"            }  else {","lastModifiedDate":"2023-01-17"},{"lineNumber":286,"author":{"gitId":"ARPspoofing"},"content":"                dukeExceptionWarning(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":287,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":288,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":289,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":290,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":291,"author":{"gitId":"ARPspoofing"},"content":"    /** Satisfies Level 7. On top of Level 6 which allows user to delete","lastModifiedDate":"2023-01-20"},{"lineNumber":292,"author":{"gitId":"ARPspoofing"},"content":"     * previously keyed in Task, whenever the user changes the list of","lastModifiedDate":"2023-01-20"},{"lineNumber":293,"author":{"gitId":"ARPspoofing"},"content":"     * tasks, the new list will be saved into a file in the hardisk.","lastModifiedDate":"2023-01-20"},{"lineNumber":294,"author":{"gitId":"ARPspoofing"},"content":"     * Firstly, if the file in the dynamic directory which is OS","lastModifiedDate":"2023-01-20"},{"lineNumber":295,"author":{"gitId":"ARPspoofing"},"content":"     * independent, it will create the file. Then, it will save the new list","lastModifiedDate":"2023-01-20"},{"lineNumber":296,"author":{"gitId":"ARPspoofing"},"content":"     * into the file. The latest list overwrites the old list to save space.","lastModifiedDate":"2023-01-20"},{"lineNumber":297,"author":{"gitId":"ARPspoofing"},"content":"     * Once the user exits gracefully, using the \u0027exit\u0027 command, the new","lastModifiedDate":"2023-01-20"},{"lineNumber":298,"author":{"gitId":"ARPspoofing"},"content":"     * list of tasks will be stored in the file.","lastModifiedDate":"2023-01-20"},{"lineNumber":299,"author":{"gitId":"ARPspoofing"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":300,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":301,"author":{"gitId":"ARPspoofing"},"content":"     * @exception IllegalArgumentException","lastModifiedDate":"2023-01-20"},{"lineNumber":302,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":303,"author":{"gitId":"ARPspoofing"},"content":"    void saveFiles() {","lastModifiedDate":"2023-01-17"},{"lineNumber":304,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":305,"author":{"gitId":"ARPspoofing"},"content":"        Printable.greet();","lastModifiedDate":"2023-01-17"},{"lineNumber":306,"author":{"gitId":"ARPspoofing"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":307,"author":{"gitId":"ARPspoofing"},"content":"        Save saver \u003d new Save();","lastModifiedDate":"2023-01-17"},{"lineNumber":308,"author":{"gitId":"ARPspoofing"},"content":"        saver.readFromFile();","lastModifiedDate":"2023-01-17"},{"lineNumber":309,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d saver.getTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":310,"author":{"gitId":"ARPspoofing"},"content":"        saver.createDirectory();        ","lastModifiedDate":"2023-01-17"},{"lineNumber":311,"author":{"gitId":"ARPspoofing"},"content":"            ","lastModifiedDate":"2023-01-17"},{"lineNumber":312,"author":{"gitId":"ARPspoofing"},"content":"        while (true) {","lastModifiedDate":"2023-01-17"},{"lineNumber":313,"author":{"gitId":"ARPspoofing"},"content":"            String description \u003d sc.next();","lastModifiedDate":"2023-01-17"},{"lineNumber":314,"author":{"gitId":"ARPspoofing"},"content":"            if (description.equals(Printable.SHOW_TASKS)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":315,"author":{"gitId":"ARPspoofing"},"content":"                this.tasks.listAllTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":316,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.TERMINATE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":317,"author":{"gitId":"ARPspoofing"},"content":"                Printable.exit();","lastModifiedDate":"2023-01-17"},{"lineNumber":318,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.MARK)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":319,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.mark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":320,"author":{"gitId":"ARPspoofing"},"content":"            }  else if (description.equals(Printable.UNMARK)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":321,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.unmark(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":322,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.TODO)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":323,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.toDo(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":324,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.DEADLINE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":325,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.deadline(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":326,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.EVENT)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":327,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.events(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":328,"author":{"gitId":"ARPspoofing"},"content":"            } else if (description.equals(Printable.DELETE)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":329,"author":{"gitId":"ARPspoofing"},"content":"                tasks \u003d Printable.delete(sc, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":330,"author":{"gitId":"ARPspoofing"},"content":"            }  else {","lastModifiedDate":"2023-01-17"},{"lineNumber":331,"author":{"gitId":"ARPspoofing"},"content":"                dukeExceptionWarning(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":332,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":333,"author":{"gitId":"ARPspoofing"},"content":"            saver.writeToFile(tasks.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":334,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":335,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":336,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":337,"author":{"gitId":"ARPspoofing"},"content":"    //Level 9","lastModifiedDate":"2023-01-19"},{"lineNumber":338,"author":{"gitId":"ARPspoofing"},"content":"    void moreOop() {","lastModifiedDate":"2023-01-19"},{"lineNumber":339,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":340,"author":{"gitId":"ARPspoofing"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-19"},{"lineNumber":341,"author":{"gitId":"ARPspoofing"},"content":"        storage.readFromFile();","lastModifiedDate":"2023-01-19"},{"lineNumber":342,"author":{"gitId":"ARPspoofing"},"content":"        this.taskList \u003d storage.getTasks();","lastModifiedDate":"2023-01-19"},{"lineNumber":343,"author":{"gitId":"ARPspoofing"},"content":"        storage.createDirectory();        ","lastModifiedDate":"2023-01-19"},{"lineNumber":344,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-19"},{"lineNumber":345,"author":{"gitId":"ARPspoofing"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-20"},{"lineNumber":346,"author":{"gitId":"ARPspoofing"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-19"},{"lineNumber":347,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-20"},{"lineNumber":348,"author":{"gitId":"ARPspoofing"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":349,"author":{"gitId":"ARPspoofing"},"content":"        ","lastModifiedDate":"2023-01-17"},{"lineNumber":350,"author":{"gitId":"ARPspoofing"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-19"},{"lineNumber":351,"author":{"gitId":"ARPspoofing"},"content":"            ui.readCommand();","lastModifiedDate":"2023-01-19"},{"lineNumber":352,"author":{"gitId":"ARPspoofing"},"content":"            taskList \u003d ui.execute(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":353,"author":{"gitId":"ARPspoofing"},"content":"            storage.writeToFile(taskList.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-10"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-10"},{"lineNumber":359,"author":{"gitId":"ARPspoofing"},"content":"        duke.moreOop();","lastModifiedDate":"2023-01-19"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":222,"-":139}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"/** DukeException is the custom error class that is thrown by other classes","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":" * if the user inputs an illegal argument present in the blacklist. It","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":" * extends IllegalArgumentException since an invalid blacklisted input is","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":" * indeed an argument that is not allowed. ","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G% ","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" * @see IllegalArgumentException","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    protected DukeException() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"     * Allows the DukeException to take in a custom error message and call","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"     * the parent\u0027s class constructor","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"     * @param message The error message to be displayed in String","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    DukeException(String message) {","lastModifiedDate":"2023-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super(message + \" Cannot be empty\");","lastModifiedDate":"2023-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return String.format(\"Illegal Argument. %s cannot be empty\", getMessage());","lastModifiedDate":"2023-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":27,"-":13}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * Events is a sub class of Task, because it allows the user to key in","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * additional data: the start date and the end date of the event task. By","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" * default, all events are initially marked as undone. The user can either","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * choose to key in dates in MMM dd YYYY format, or normal Strings that","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * represents time for them (e.g. Sunday.) Since immutability is employed,","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * when a user toggles the event task as done or undone, a new event task","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" * will be returned, but with the exact same description, from and to","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":" * timeframe. ","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":" *  ","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":" *  @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":" *  @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":" *  @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":" *  @see Task","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class Events extends Task {","lastModifiedDate":"2023-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    protected String from;","lastModifiedDate":"2023-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    protected String to;","lastModifiedDate":"2023-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    protected Events() {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"     * Allows the user\u0027s input to be processed as the task\u0027s title, the","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"     * start time of the event and the end time of the event ","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"     * @param description The title of the task in String ","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"     * @param from The start time of the event task ","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"     * @param to The end time of the event task ","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Events(String description, String from, String to) {","lastModifiedDate":"2023-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        super(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"     * Allows the user\u0027s input to be processed as the task\u0027s title, the","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"     * start time of the event and the end time of the event, and make the","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"     * event marked as done, which will be displayed as [X] in the user\u0027s","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"     * machine. ","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"     * @param description The title of the task in String ","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"     * @param from The start time of the event task ","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"     * @param to The end time of the event task","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"     * @param isDone The boolean state of whether the event task is marked","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"     * as completed or yet to be completed","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    Events(String description,String from, String to, boolean isDone) {","lastModifiedDate":"2023-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ","lastModifiedDate":"2023-01-10"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"     * Process the user\u0027s from and to date as a LocalDate into String if the","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"     * user keys in a valid format for LocalDate to process (MMM dd YYYY) in","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * this case. It also process the from and to date if the user keys in","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     * terms that represents time for him (e.g. Sunday.) However, if the","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     * user keys in an invalid date format (e.g. dd MM YY), the","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"     * DateTimeParseException will need to be caught ","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"     * @param date The date of from or to","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DateTimeParseException","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"     * @return date String format of a valid time representation","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"    String localDateParser(String date) {","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"            LocalDate localDate \u003d LocalDate.parse(date);","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"            return localDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"            return date;","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"     * Since the Event class is immutable, a new Event object will be","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"     * returned with the exact same description, from and to, except now,","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"     * the event task will be marked as done","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"     *  @return Events The new Event task object ","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    Events markAsDone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"        return new Events(getDescription(), from, to, true);","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"     * Since the Event class is immutable, a new Event object will be","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"     * returned with the exact same description, from and to, except now,","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"     * the event task will be marked as undone","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"     *  @return Events The new Event task object ","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    Events markAsUndone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":117,"author":{"gitId":"ARPspoofing"},"content":"        return new Events(getDescription(), from, to, false);","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-10"},{"lineNumber":122,"author":{"gitId":"ARPspoofing"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + localDateParser(from) + \")\" + \"(to: \" + localDateParser(to) + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":90,"-":34}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"import java.util.List;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * The Parser class stores all responses that Duke will display on the","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * user\u0027s machine. The Parser class also processes user commands such as","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * mark done, mark undone, add and delete tasks from the list of tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"class Parser {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    //Greetings ","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    static String INITIAL_GREETING \u003d \"Welcome to Manchester United. I am Alex Ferguson. How may I help you\";","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    static String FINAL_GREETING \u003d \"SUIII, Bye\";","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    //Command to display for various user input","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"    static String ILLEGAL_COMMAND \u003d \"Alex Ferguson does not recognise this command. Perhaps you could try valid command init?\";","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"    static String MARK_COMMAND \u003d \"SUI, I have marked this task from the training room: \";","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"    static String UNMARK_COMMAND \u003d \"SUI, I have unmarked this task from the training room: \";","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"    static String DELETE_COMMAND \u003d \"Tasks successfully deleted. SUI.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    //Whitelist commands","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    static String SHOW_TASKS \u003d \"list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    static String TERMINATE \u003d \"exit\";","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    static String MARK \u003d \"mark\";","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    static String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"    static String TODO \u003d \"todo\";","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    static String EVENT \u003d \"event\";","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    static String DELETE \u003d \"delete\";","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    //List starts numbering from 1 not from 0","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    static int DECREMENT \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"    //Symbols to display the state of the task to the user beside the type of Task ","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"    static String MARK_SYMBOL \u003d \"X\";","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"    static String TODO_SYMBOL \u003d \"T\";","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"    static String DEADLINE_SYMBOL \u003d \"D\";","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"    static String EVENT_SYMBOL \u003d \"E\";","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"    //Blacklist","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"    static List\u003cString\u003e INVALID_COMMANDS \u003d Arrays.asList(\"blah\",\"todo\",\"deadline\",\"event\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"    protected Parser() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"     * Displays the start up football character sentence introducing his","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"     * name, and where he is from ","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"    static void greet() {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(INITIAL_GREETING);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"     * Displays the last sentence Alex Furguson says when the user","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"     * gracefully exits the program","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"    static void exit() {","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(FINAL_GREETING);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"     * Process the saved user tasks that were mark as done. It will display","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"     * the command Alex Furguson (Duke) says and mark the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"     * as done ","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"     * @param taskPosition The index of the task in the list of tasks,","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"     * starting from 1. ","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks to be processed ","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e The new TaskList with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"     * marked as done","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e mark(int taskPosition, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(MARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":" ","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"     * Process the user\u0027s input tasks that is marked as done. It will display","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"     * the command Alex Furguson (Duke) says and mark the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"ARPspoofing"},"content":"     * as done ","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"ARPspoofing"},"content":"     * @param sc The Scanner object to register the user\u0027s input,","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"     * starting from 1. ","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks to be processed ","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e The new TaskList with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"     * marked as done","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e mark(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(MARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"ARPspoofing"},"content":"     * Process the saved tasks that were marked as undone. It will display","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"ARPspoofing"},"content":"     * the command Alex Furguson (Duke) says and mark the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"ARPspoofing"},"content":"     * as undone ","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"ARPspoofing"},"content":"     * @param taskPosition The index of the task in the list of tasks,","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"ARPspoofing"},"content":"     * starting from 1. ","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks to be processed ","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e The new TaskList with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"ARPspoofing"},"content":"     * marked as undone","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"ARPspoofing"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e unmark(int taskPosition, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(UNMARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"ARPspoofing"},"content":"     * Process the user\u0027s input tasks that is marked as undone. It will display","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"ARPspoofing"},"content":"     * the command Alex Furguson (Duke) says and mark the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"ARPspoofing"},"content":"     * as done ","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"ARPspoofing"},"content":"     * @param sc The Scanner object to register the user\u0027s input,","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks to be processed ","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e The new TaskList with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"ARPspoofing"},"content":"     * marked as done","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"ARPspoofing"},"content":"     * @see TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e unmark(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(UNMARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"ARPspoofing"},"content":"     * Process the saved deletion of a task. It will display the command that the","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"ARPspoofing"},"content":"     * task has been deleted, and show the current list of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"ARPspoofing"},"content":"     * @param taskPosition The index of the task to delete, starting from 1","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"ARPspoofing"},"content":"     * deleted","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e delete(int taskPosition, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(DELETE_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.removeTask(taskPosition);","lastModifiedDate":"2023-01-19"},{"lineNumber":179,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":182,"author":{"gitId":"ARPspoofing"},"content":"     * Process the user\u0027s input deletion of a task. It will display the command that the","lastModifiedDate":"2023-01-20"},{"lineNumber":183,"author":{"gitId":"ARPspoofing"},"content":"     * task has been deleted, and show the current list of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":184,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":185,"author":{"gitId":"ARPspoofing"},"content":"     * @param taskPosition The index of the task to delete, starting from 1","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks The list of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the corresponding task","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"ARPspoofing"},"content":"     * deleted","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e delete(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(DELETE_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.removeTask(taskPosition);","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":198,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":199,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Todo task into the list of tasks from the saved data.","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"ARPspoofing"},"content":"     * @param description Title of the task ","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e toDo(String description, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"ARPspoofing"},"content":"       if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":214,"author":{"gitId":"ARPspoofing"},"content":"           throw new DukeException(\"Todo must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":215,"author":{"gitId":"ARPspoofing"},"content":"       }","lastModifiedDate":"2023-01-19"},{"lineNumber":216,"author":{"gitId":"ARPspoofing"},"content":"       Task newTask \u003d new Todos(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":217,"author":{"gitId":"ARPspoofing"},"content":"       return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":218,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":219,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":220,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Todo task into the list of tasks from the user\u0027s input.","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"ARPspoofing"},"content":"     * @param sc Scanner object to register user\u0027s input ","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":229,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":230,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":231,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":232,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":233,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e toDo(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":234,"author":{"gitId":"ARPspoofing"},"content":"       String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"ARPspoofing"},"content":"       if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"ARPspoofing"},"content":"           throw new DukeException(\"Todo must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"ARPspoofing"},"content":"       }","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"ARPspoofing"},"content":"       Task newTask \u003d new Todos(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":239,"author":{"gitId":"ARPspoofing"},"content":"       return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":240,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":241,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":243,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Deadline task into the list of tasks from the saved data.","lastModifiedDate":"2023-01-20"},{"lineNumber":244,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":245,"author":{"gitId":"ARPspoofing"},"content":"     * @param description Title of the task ","lastModifiedDate":"2023-01-20"},{"lineNumber":246,"author":{"gitId":"ARPspoofing"},"content":"     * @param date End date of deadline task","lastModifiedDate":"2023-01-20"},{"lineNumber":247,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":248,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":249,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":250,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":251,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":252,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":253,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":254,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":255,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":256,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e deadline(String description, String date, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":257,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":258,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Deadline must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":260,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":261,"author":{"gitId":"ARPspoofing"},"content":"            //String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-19"},{"lineNumber":262,"author":{"gitId":"ARPspoofing"},"content":"            Task newTask \u003d new Deadline(description,date);","lastModifiedDate":"2023-01-19"},{"lineNumber":263,"author":{"gitId":"ARPspoofing"},"content":"            return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":264,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":265,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Todo must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":266,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":267,"author":{"gitId":"ARPspoofing"},"content":"        return tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":268,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":269,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":270,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":271,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Deadline task into the list of tasks from the user\u0027s input.","lastModifiedDate":"2023-01-20"},{"lineNumber":272,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":273,"author":{"gitId":"ARPspoofing"},"content":"     * @param sc Scanner object to register user\u0027s input ","lastModifiedDate":"2023-01-20"},{"lineNumber":274,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":275,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":276,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":277,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":278,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":279,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":280,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":281,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":282,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":283,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e deadline(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":284,"author":{"gitId":"ARPspoofing"},"content":"        String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":285,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":286,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Deadline must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":287,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":288,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":289,"author":{"gitId":"ARPspoofing"},"content":"            String[] dateRange \u003d description.split(\"/by\");","lastModifiedDate":"2023-01-19"},{"lineNumber":290,"author":{"gitId":"ARPspoofing"},"content":"            Task newTask \u003d new Deadline(dateRange[0],dateRange[1].replaceFirst(\"by\",\"\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":291,"author":{"gitId":"ARPspoofing"},"content":"            return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":292,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":293,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Todo must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":294,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":295,"author":{"gitId":"ARPspoofing"},"content":"        return tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":296,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":297,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":298,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":299,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Event task into the list of tasks from the saved data.","lastModifiedDate":"2023-01-20"},{"lineNumber":300,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":301,"author":{"gitId":"ARPspoofing"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":302,"author":{"gitId":"ARPspoofing"},"content":"     * @param from Start date of the event task","lastModifiedDate":"2023-01-20"},{"lineNumber":303,"author":{"gitId":"ARPspoofing"},"content":"     * @param end Stipulated last date of the event task","lastModifiedDate":"2023-01-20"},{"lineNumber":304,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":305,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":306,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":307,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":308,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":309,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":310,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":311,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":312,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":313,"author":{"gitId":"ARPspoofing"},"content":"   static TaskList\u003cTask\u003e events(String description, String from, String to, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":314,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":315,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Event must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":316,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":317,"author":{"gitId":"ARPspoofing"},"content":"        Task newTask \u003d new Events(description, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":318,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":319,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":320,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":321,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":322,"author":{"gitId":"ARPspoofing"},"content":"     * Add a new Event task into the list of tasks from the user\u0027s input.","lastModifiedDate":"2023-01-20"},{"lineNumber":323,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":324,"author":{"gitId":"ARPspoofing"},"content":"     * @param sc Scanner object to register user\u0027s input ","lastModifiedDate":"2023-01-20"},{"lineNumber":325,"author":{"gitId":"ARPspoofing"},"content":"     * @param tasks List of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":326,"author":{"gitId":"ARPspoofing"},"content":"     * @param \u003cTask\u003e Type of element stored in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":327,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":328,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e New list of tasks with the latest being the","lastModifiedDate":"2023-01-20"},{"lineNumber":329,"author":{"gitId":"ARPspoofing"},"content":"     * todo task added ","lastModifiedDate":"2023-01-20"},{"lineNumber":330,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":331,"author":{"gitId":"ARPspoofing"},"content":"     * @exception DukeException ","lastModifiedDate":"2023-01-20"},{"lineNumber":332,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":333,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":334,"author":{"gitId":"ARPspoofing"},"content":"    static TaskList\u003cTask\u003e events(Scanner sc, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":335,"author":{"gitId":"ARPspoofing"},"content":"        String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":336,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":337,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Event must not be empty\");","lastModifiedDate":"2023-01-19"},{"lineNumber":338,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":339,"author":{"gitId":"ARPspoofing"},"content":"        String[] dateRange \u003d description.split(\"/from\");","lastModifiedDate":"2023-01-19"},{"lineNumber":340,"author":{"gitId":"ARPspoofing"},"content":"        Task newTask \u003d new Events(dateRange[0],dateRange[1].split(\"/to\")[0],dateRange[1].split(\"/to\")[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":341,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":342,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":343,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":344,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ARPspoofing":344}},{"path":"src/main/java/duke/Printable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-10"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"import java.util.List;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"class Printable {","lastModifiedDate":"2023-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":"    static String INITIAL_GREETING \u003d \"Welcome to Manchester United. I am Alex Ferguson. How may I help you\";","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"    static String ILLEGAL_COMMAND \u003d \"Alex Ferguson does not recognise this command. Perhaps you could try valid command init?\";","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"    static String FINAL_GREETING \u003d \"SUIII, Bye\";","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"    static String MARK_COMMAND \u003d \"SUI, I have marked this task from the training room: \";","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":"    static String UNMARK_COMMAND \u003d \"SUI, I have unmarked this task from the training room: \";","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":"    static String DELETE_COMMAND \u003d \"Tasks successfully deleted. SUI.\";","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    static String SHOW_TASKS \u003d \"list\";","lastModifiedDate":"2023-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    static String TERMINATE \u003d \"exit\";","lastModifiedDate":"2023-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    static String MARK \u003d \"mark\";","lastModifiedDate":"2023-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    static String UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    static String TODO \u003d \"todo\";","lastModifiedDate":"2023-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    static String DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    static String EVENT \u003d \"event\";","lastModifiedDate":"2023-01-10"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    static String DELETE \u003d \"delete\";","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    static int DECREMENT \u003d 1;","lastModifiedDate":"2023-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"    static List\u003cString\u003e INVALID_COMMANDS \u003d Arrays.asList(\"blah\",\"todo\",\"deadline\",\"event\");","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    static void greet() {","lastModifiedDate":"2023-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        System.out.println(INITIAL_GREETING);","lastModifiedDate":"2023-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    static void exit() {","lastModifiedDate":"2023-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        System.out.println(FINAL_GREETING);","lastModifiedDate":"2023-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e mark(int taskPosition, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(MARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static Tasks\u003cTask\u003e mark(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(MARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsDone());","lastModifiedDate":"2023-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e unmark(int taskPosition, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(UNMARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    static Tasks\u003cTask\u003e unmark(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(UNMARK_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return tasks.set(taskPosition, tasks.get(taskPosition).markAsUndone());","lastModifiedDate":"2023-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e delete(int taskPosition, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(DELETE_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.removeTask(taskPosition);","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e delete(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"        int taskPosition \u003d sc.nextInt() - DECREMENT;","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(DELETE_COMMAND + tasks.get(taskPosition));","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.removeTask(taskPosition);","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e toDo(String description, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"       //Carl Smotricz","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"       if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"           throw new DukeException(\"Todo must not be empty\");","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"       }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"       Task newTask \u003d new Todos(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"       return tasks.add(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    static Tasks\u003cTask\u003e toDo(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"       String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":81,"author":{"gitId":"-"},"content":"       //Carl Smotricz","lastModifiedDate":"2023-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"       if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"           throw new DukeException(\"Todo must not be empty\");","lastModifiedDate":"2023-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2023-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"       Task newTask \u003d new Todos(description);","lastModifiedDate":"2023-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"       return tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e deadline(String description, String date, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"        //Carl Smotricz","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Deadline must not be empty\");","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"            //String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"            Task newTask \u003d new Deadline(description,date);","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"            return tasks.add(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Todo must not be empty\");","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"        return tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    static Tasks\u003cTask\u003e deadline(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        //Carl Smotricz","lastModifiedDate":"2023-01-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Deadline must not be empty\");","lastModifiedDate":"2023-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Task newTask \u003d new Deadline(dateRange[0],dateRange[1].replaceFirst(\"by\",\"\"));","lastModifiedDate":"2023-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            System.out.println(\"Todo must not be empty\");","lastModifiedDate":"2023-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return tasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":120,"author":{"gitId":"ARPspoofing"},"content":"    static Tasks\u003cTask\u003e events(String description, String from, String to, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":121,"author":{"gitId":"ARPspoofing"},"content":"        //Carl Smotricz","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"ARPspoofing"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"ARPspoofing"},"content":"            throw new DukeException(\"Event must not be empty\");","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"ARPspoofing"},"content":"        Task newTask \u003d new Events(description, from, to);","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"ARPspoofing"},"content":"        return tasks.add(newTask);","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    static Tasks\u003cTask\u003e events(Scanner sc, Tasks\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String description \u003d sc.nextLine();","lastModifiedDate":"2023-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        //Carl Smotricz","lastModifiedDate":"2023-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (description.trim().length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new DukeException(\"Event must not be empty\");","lastModifiedDate":"2023-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        String[] dateRange \u003d description.split(\"/\");","lastModifiedDate":"2023-01-10"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Task newTask \u003d new Events(dateRange[0],dateRange[1].replaceFirst(\"from\",\"\"),dateRange[2].replaceFirst(\"to\",\"\"));","lastModifiedDate":"2023-01-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":64,"-":76}},{"path":"src/main/java/duke/Save.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":"class Save {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"    private String directory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"    private java.io.File path \u003d new java.io.File(directory + \"/dukeList.txt\");","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":"    private Tasks\u003cTask\u003e tasks \u003d new Tasks\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"    boolean isDirectory() {","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"        return path.exists();","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    void createDirectory() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"            if (!isDirectory()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"                path.createNewFile();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Exception\");","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    void writeToFile(String listOfTasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"            FileWriter fileWriter \u003d new FileWriter(directory + \"/dukeList.txt\",false);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"            fileWriter.write(listOfTasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Exception\");","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    void readFromFile() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"          String path \u003d System.getProperty(\"user.dir\") + \"/dukeList.txt\";","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"          Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"          String inputFromFile \u003d scanner.useDelimiter(\"\\\\A\").next();","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"          System.out.println(\"String \" + inputFromFile);","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"          String[] inputArr \u003d inputFromFile.substring(1,inputFromFile.length()-1).split(\",\");","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"          for (String task : inputArr) {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"            ","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"            if ((\"\" + task.charAt(0)).equals(\" \")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"                task \u003d task.substring(1);","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"            if (isSymbol(task, \"X\") || isSymbol(task, \" \")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"                rephraseNoDate(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, \"T\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"                rephraseToDo(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, \"D\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"                rephraseDeadline(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, \"E\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"                rephraseEvents(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"          }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"            this.createDirectory();","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"    boolean isSymbol(String task, String symbol) {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"        if ((\"\" + task.charAt(1)).equals(symbol) || (\"\" + task.charAt(2)).equals(symbol)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"            return true;","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"            return false;","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"    void markTask(String task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"        boolean isMark \u003d (\"\" + task.charAt(1)).equals(\"X\") ? true : false;","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"        if (isMark) {","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Printable.mark(this.tasks.numberOfTasks() - 1, this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"        } ","lastModifiedDate":"2023-01-17"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseNoDate(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d this.tasks.add(new Task(input.substring(4)));","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseToDo(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Printable.toDo(input.substring(7),this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseDeadline(String input) {","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfBracket \u003d input.indexOf(\" (\");","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Printable.deadline(input.substring(7, indexOfBracket), input.substring(indexOfBracket + 6, input.length() - 1), this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseEvents(String input) { ","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfFrom \u003d input.indexOf(\"(from: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfTo \u003d input.indexOf(\"(to: \");","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Printable.events(input.substring(8, indexOfFrom), input.substring(indexOfFrom + 6, indexOfTo - 1), input.substring(indexOfTo + 4, input.length() - 1), this.tasks);","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"ARPspoofing"},"content":"    Tasks\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"ARPspoofing":109}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"import java.io.File;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * Storage class manages the reading and writing of the list of task into","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * the user machine\u0027s hardisk. In the main class, Duke, the Storage class is","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" * first used to check if there is the dukeList.txt file found in a dynamic","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":" * directory, which is OS independent. If the file is found, date from the","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":" * file is read and processed into TaskList\u003cTask\u003e. If the file is not found,","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":" * the text file is created, and everytime a user changes the list of tasks,","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":" * the new list of task is saved into the text file. The old list of task is","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":" * overwritten to save space. ","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G% ","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":" * @see TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"class Storage {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    //Dynamic directory","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    private String directory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    //Full directory with dukeList.txt","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    private java.io.File path \u003d new java.io.File(directory + \"/dukeList.txt\");","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"    //New TaskList\u003cTask\u003e to read / write from/into","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    private TaskList\u003cTask\u003e tasks \u003d new TaskList\u003c\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"    protected Storage() {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"     * Checks if the dukeList text file exist in the correct dynamic","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"     * directory, OS independent. ","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"     * @return pathPresent","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"    boolean isDirectory() {","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"        return path.exists();","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"     * Creates the file in the dyanamic directory located in","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"     * ip/src/main/java","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"     * @exception IOException ","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"    void createDirectory() {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"            if (!isDirectory()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"                path.createNewFile();","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Exception\");","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * Whenever the user list of task changes, the previous data in the","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     * dukeList is overwritten to a new list of tasks. ","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"     * @param listOfTasks New list of tasks in String","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"     * @exception IOException ","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"    void writeToFile(String listOfTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"            FileWriter fileWriter \u003d new FileWriter(directory + \"/dukeList.txt\",false);","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"            fileWriter.write(listOfTasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(\"Exception\");","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"     * The text from dukeList.txt is processed. Manipulation is needed","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"     * because the text is stored as an array, and not as commands from the","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"     * user, since it does not make sense to store as the latter. ","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"     * @exception IOException","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"    void readFromFile() {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"ARPspoofing"},"content":"          String path \u003d System.getProperty(\"user.dir\") + \"/dukeList.txt\";","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"          Scanner scanner \u003d new Scanner(new File(path));","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"ARPspoofing"},"content":"          String inputFromFile \u003d scanner.useDelimiter(\"\\\\A\").next();","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"          String[] inputArr \u003d inputFromFile.substring(1,inputFromFile.length()-1).split(\",\");","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"          for (String task : inputArr) {  ","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"            if ((\"\" + task.charAt(0)).equals(\" \")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"                task \u003d task.substring(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"            if (isSymbol(task, Parser.MARK_SYMBOL) || isSymbol(task, \" \")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"                rephraseNoDate(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, Parser.TODO_SYMBOL)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"                rephraseToDo(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, Parser.DEADLINE_SYMBOL)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ARPspoofing"},"content":"                rephraseDeadline(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"ARPspoofing"},"content":"            } else if (isSymbol(task, Parser.EVENT_SYMBOL)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"ARPspoofing"},"content":"                rephraseEvents(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"ARPspoofing"},"content":"          }","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"ARPspoofing"},"content":"        } catch(IOException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"ARPspoofing"},"content":"            this.createDirectory();","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"ARPspoofing"},"content":"     * Checks if the stored task is a todo, deadline or event.","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"ARPspoofing"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"ARPspoofing"},"content":"     * @param task Task in the array of tasks in the dukeList.txt file","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"ARPspoofing"},"content":"     * @param symbol How the task is demarcated ","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"ARPspoofing"},"content":"     * @return hasSymbol","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"ARPspoofing"},"content":"    boolean isSymbol(String task, String symbol) {","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"ARPspoofing"},"content":"        if ((\"\" + task.charAt(1)).equals(symbol) || (\"\" + task.charAt(2)).equals(symbol)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"ARPspoofing"},"content":"            return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"ARPspoofing"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"ARPspoofing"},"content":"            return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"ARPspoofing"},"content":"     * Process the saved task to check if it is marked as done or undone.","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"ARPspoofing"},"content":"    void markTask(String task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"ARPspoofing"},"content":"        boolean isMark \u003d (\"\" + task.charAt(1)).equals(Parser.MARK_SYMBOL) ? true : false;","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"ARPspoofing"},"content":"        if (isMark) {","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.mark(this.tasks.numberOfTasks() - 1, this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"ARPspoofing"},"content":"        } ","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"ARPspoofing"},"content":"     * Change the format of the saved task that is not todo, deadline or","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"ARPspoofing"},"content":"     * event so that the same method in TaskList can be invoked","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseNoDate(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d this.tasks.add(new Task(input.substring(4)));","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"ARPspoofing"},"content":"     * Change the format of the saved todo task so that the same method in","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"ARPspoofing"},"content":"     * TaskList can be invoked","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseToDo(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Parser.toDo(input.substring(7),this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"ARPspoofing"},"content":"     * Change the format of the saved deadline task so that the same method in","lastModifiedDate":"2023-01-20"},{"lineNumber":176,"author":{"gitId":"ARPspoofing"},"content":"     * TaskList can be invoked","lastModifiedDate":"2023-01-20"},{"lineNumber":177,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":178,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":179,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseDeadline(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfBracket \u003d input.indexOf(\" (\");","lastModifiedDate":"2023-01-19"},{"lineNumber":181,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Parser.deadline(input.substring(7, indexOfBracket), input.substring(indexOfBracket + 6, input.length() - 1), this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":183,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":186,"author":{"gitId":"ARPspoofing"},"content":"     * Change the format of the saved events task so that the same method in","lastModifiedDate":"2023-01-20"},{"lineNumber":187,"author":{"gitId":"ARPspoofing"},"content":"     * TaskList can be invoked","lastModifiedDate":"2023-01-20"},{"lineNumber":188,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"ARPspoofing"},"content":"    void rephraseEvents(String input) { ","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfFrom \u003d input.indexOf(\"(from: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"ARPspoofing"},"content":"        int indexOfTo \u003d input.indexOf(\"(to: \");","lastModifiedDate":"2023-01-19"},{"lineNumber":193,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d Parser.events(input.substring(8, indexOfFrom), input.substring(indexOfFrom + 6, indexOfTo - 1), input.substring(indexOfTo + 4, input.length() - 1), this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":194,"author":{"gitId":"ARPspoofing"},"content":"        markTask(input);","lastModifiedDate":"2023-01-19"},{"lineNumber":195,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":197,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"ARPspoofing"},"content":"     * Getter to get the current set of tasks ","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e ","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":205,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ARPspoofing":206}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":" * Task class is the basic type of task. It is not declared as abstract as a","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":" * user can still create a task that is not todo, not deadline and not events.","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":" * It has only the description and whether it is marked as done or undone","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"class Task {","lastModifiedDate":"2023-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean isDone; ","lastModifiedDate":"2023-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final String description;","lastModifiedDate":"2023-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    * Sole constructor. (For invocation by subclass","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    * constructors, typically implicit)","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    */","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    protected Task() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"        description \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"     * All tasks initally created by the user is marked as undone. So, the","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"     * entire line will just be treated as the task\u0027s title","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    Task(String description) {","lastModifiedDate":"2023-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"     * Tasks that are marked as done or undone will be required to return a","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"     * new task due to immutability of the Task","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"     * @param isDone Whether the task is marked as done ","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     ","lastModifiedDate":"2023-01-10"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"     * Due to immutability, a new Task is returned once the user marks the","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"     * task as done","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"     * @return Task ","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    Task markAsDone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"        return new Task(description, true);","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"     * Due to immutability, a new Task is returned once the user marks the","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"     * task as undone","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"     * @return Task ","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    Task markAsUndone() {","lastModifiedDate":"2023-01-10"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"        return new Task(description, false);","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * Check if the task is marked as done.","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     * @return isDone True if task is marked as done","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-10"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"        return (isDone ? Parser.MARK_SYMBOL : \" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"     * Retrieve the title of the task that has been keyed in by the user","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"     * previously","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"     * @return description","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    String getDescription() {","lastModifiedDate":"2023-01-10"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"        return description;","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override ","lastModifiedDate":"2023-01-10"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-10"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":66,"-":36}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":" * TaskList is the class to store all the tasks keyed in by the user during","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * the session. It has a generic type of Task, which means the type of data","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * stored in the list is Task. It is an immutable list and will always","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" * return a new list if modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"class TaskList\u003cTask\u003e {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    //List starts numbering from 1","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    private final static int INCREMENT \u003d 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"   ","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"     * Instantiate new list of tasks from an ArrayList","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"     * @param newTasks Type TaskList\u003cTask\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    TaskList(TaskList\u003cTask\u003e newTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(newTasks.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"     * Instantiate an empty ArrayList of tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    protected TaskList() {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"     * Only allow the TaskList class to instantiate the list of task from an","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"     * ArrayList of previous tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"    private TaskList(ArrayList\u003cTask\u003e oldTasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(oldTasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"     * Get the total number of tasks in the list.","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"     * ","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"     * @return sizeOfTasks","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"    int numberOfTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"     * Display to the user in a pretty format all the tasks in the list,","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"     * starting from 1.","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e listAllTasks() {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"        for (int i\u003d0; i \u003c this.numberOfTasks(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(i + INCREMENT + \".\" + this.get(i));    ","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"        return new TaskList\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"     * Get a task in a specific position ","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"     * @return positionOfTask","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"    Task get(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"     * Insert a new Task. However, due to the TaskList being immutable, a","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"     * new TaskList is returned with the added task.","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"     * @param newTask Task to add","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e add(Task newTask) {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"        TaskList\u003cTask\u003e newTasks \u003d new TaskList\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"        newTasks.tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(\"SUI I have added this task. Remember, rest is as important as working hard!: \" + newTask); ","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"ARPspoofing"},"content":"        return newTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"ARPspoofing"},"content":"     * Modify a task in the list, such as to mark it as done or undone. Due","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"ARPspoofing"},"content":"     * to the immutability nature of TaskList, a new TaskList will be","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"ARPspoofing"},"content":"     * returned with the modified marked / unmarked status of a particular","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"ARPspoofing"},"content":"     * task.","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e set(int index, Task task) {","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"ARPspoofing"},"content":"        TaskList\u003cTask\u003e newTasks \u003d new TaskList\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"ARPspoofing"},"content":"        newTasks.tasks.set(index, task);","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"ARPspoofing"},"content":"        return newTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"ARPspoofing"},"content":"     * Delete a particular task present in the list. However, due to the","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"ARPspoofing"},"content":"     * immutability nature of TaskList, a new TaskList will be returned with","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"ARPspoofing"},"content":"     * the corresponding task deleted.","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e ","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e removeTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"ARPspoofing"},"content":"        TaskList\u003cTask\u003e newTasks \u003d new TaskList\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"ARPspoofing"},"content":"        newTasks.tasks.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"ARPspoofing"},"content":"        return newTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"ARPspoofing"},"content":"    @Override ","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"ARPspoofing"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ARPspoofing":134}},{"path":"src/main/java/duke/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package duke;","lastModifiedDate":"2023-01-10"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"class Tasks\u003cTask\u003e {","lastModifiedDate":"2023-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final static int INCREMENT \u003d 1;","lastModifiedDate":"2023-01-10"},{"lineNumber":9,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2023-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Tasks(Tasks\u003cTask\u003e newTasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(newTasks.tasks);","lastModifiedDate":"2023-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Tasks() {","lastModifiedDate":"2023-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Tasks(ArrayList\u003cTask\u003e oldTasks) {","lastModifiedDate":"2023-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e(oldTasks);","lastModifiedDate":"2023-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2023-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    int numberOfTasks() {","lastModifiedDate":"2023-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void listAllTasks() {","lastModifiedDate":"2023-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        for (int i\u003d0; i \u003c this.numberOfTasks(); i++) {","lastModifiedDate":"2023-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            System.out.println(i + INCREMENT + \".\" + this.get(i));    ","lastModifiedDate":"2023-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Task get(int index) {","lastModifiedDate":"2023-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    Tasks\u003cTask\u003e add(Task newTask) {","lastModifiedDate":"2023-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Tasks\u003cTask\u003e newTasks \u003d new Tasks\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        newTasks.tasks.add(newTask);","lastModifiedDate":"2023-01-10"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"        System.out.println(\"SUI I have added this task. Remember, rest is as important as working hard!: \" + newTask); ","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return newTasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Tasks\u003cTask\u003e set(int index, Task task) {","lastModifiedDate":"2023-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Tasks\u003cTask\u003e newTasks \u003d new Tasks\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        newTasks.tasks.set(index, task);","lastModifiedDate":"2023-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return newTasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"    Tasks\u003cTask\u003e removeTask(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Tasks\u003cTask\u003e newTasks \u003d new Tasks\u003cTask\u003e(this.tasks);","lastModifiedDate":"2023-01-10"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"        newTasks.tasks.remove(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return newTasks;","lastModifiedDate":"2023-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override ","lastModifiedDate":"2023-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this.tasks.toString();","lastModifiedDate":"2023-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-10"}],"authorContributionMap":{"ARPspoofing":3,"-":58}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke; ","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":" * Ui is a class to handle the intial greetings, final greetings, and all","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":" * the deciphering of the user\u0027s input. Ui invokes the appropriate classes","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" * when required","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":" * @author Muhammad Reyaaz ","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":" * @version %I% %G%","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":" * @since 11","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"class Ui {","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"    private String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    private TaskList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"     * Default constructor instantiates the scanner to read from the user","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"     * machine\u0027s keyboard","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"    protected Ui() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"        this.scanner \u003d new Scanner(System.in);    ","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"     * Display the custom football Alex Furguson character message","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    void showWelcome() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"        Parser.greet();","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"     * Handle the user input from the user\u0027s machine keyboard","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"    void readCommand() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"       this.description \u003d scanner.next();","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"ARPspoofing"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"ARPspoofing"},"content":"     * Match the user\u0027s input to the relevant type of input that can be","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"ARPspoofing"},"content":"     * processed by Duke, and call the relevant classes in Parser. Due to","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"ARPspoofing"},"content":"     * immutability, set the list of task to the new list of tasks returned","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"ARPspoofing"},"content":"     * by Parser","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"ARPspoofing"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"ARPspoofing"},"content":"     * @return TaskList\u003cTask\u003e","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"ARPspoofing"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e execute(TaskList\u003cTask\u003e tasks) {        ","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"ARPspoofing"},"content":"        if (description.equals(Parser.SHOW_TASKS)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d tasks.listAllTasks();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Parser.TERMINATE)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"ARPspoofing"},"content":"            Parser.exit();","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Parser.MARK)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.mark(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"ARPspoofing"},"content":"        }  else if (description.equals(Parser.UNMARK)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.unmark(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Parser.TODO)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.toDo(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Parser.DEADLINE)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.deadline(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Printable.EVENT)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.events(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"ARPspoofing"},"content":"        } else if (description.equals(Printable.DELETE)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"ARPspoofing"},"content":"            this.tasks \u003d Parser.delete(scanner, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"ARPspoofing"},"content":"        }  else {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"ARPspoofing"},"content":"            dukeExceptionWarning(description, tasks);","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"ARPspoofing"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"ARPspoofing"},"content":"    TaskList\u003cTask\u003e dukeExceptionWarning(String description, TaskList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"ARPspoofing"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"ARPspoofing"},"content":"            if (Parser.INVALID_COMMANDS.contains(description)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"ARPspoofing"},"content":"                throw new DukeUnknownException(\"Illegal command\");","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"ARPspoofing"},"content":"            } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"ARPspoofing"},"content":"                Task newTask \u003d new Task(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"ARPspoofing"},"content":"                this.tasks \u003d tasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"ARPspoofing"},"content":"                return this.tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"ARPspoofing"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"ARPspoofing"},"content":"        } catch (DukeUnknownException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"ARPspoofing"},"content":"            System.out.println(Printable.ILLEGAL_COMMAND);","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"ARPspoofing"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"ARPspoofing"},"content":"        return tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"ARPspoofing":94}},{"path":"src/main/java/dukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"[[ ] hello, [ ] Hi, [D][ ]  return book  (by:  Sunday), [D][ ]  return book  (by:  01/01/1999)]","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ARPspoofing":1}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"class DeadlineTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"    public void datetimeFormat_noDate_success() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"Sunday\", new Deadline(\"return book\", \"Sunday\").localDateParser());","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"    public void testDatetimeConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"20/01/2023\", new Deadline(\"return book\", \"20/01/2023\").localDateParser());","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"X\", new Deadline(\"return book\", \"Sunday\").markAsDone().getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\" \", new Deadline(\"return book\", \"Sunday\").getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"[D][ ] return book (by: Sunday)\", new Deadline(\"return book\", \"Sunday\").toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ARPspoofing":35}},{"path":"src/test/java/duke/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"public class EventsTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":" ","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"    public void datetimeFormat_noStartDate_success() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"Monday\", new Events(\"return book\", \"Monday\", \"Tuesday\").localDateParser(\"Monday\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"    public void datetimeFormat_noEndDate_success() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"Tuesday\", new Events(\"return book\", \"Monday\", \"Tuesday\").localDateParser(\"Tuesday\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    public void testDatetimeStartConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"20/01/2023\", new Events(\"borrow book\", \"20/01/2023\", \"25/01/2023\").localDateParser(\"20/01/2023\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"ARPspoofing"},"content":"    public void testDatetimeEndConversion() {","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"25/01/2023\", new Events(\"borrow book\", \"20/01/2023\", \"25/01/2023\").localDateParser(\"25/01/2023\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"X\", new Events(\"return book\", \"Monday\", \"Tuesday\").markAsDone().getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\" \", new Events(\"return book\", \"Monday\", \"Tuesday\").markAsUndone().getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ARPspoofing"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"[E][ ] return book(from: Monday)(to: Tuesday)\", new Events(\"return book\", \"Monday\", \"Tuesday\").toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ARPspoofing":45}},{"path":"src/test/java/duke/TodosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ARPspoofing"},"content":"package duke;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"ARPspoofing"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"ARPspoofing"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ARPspoofing"},"content":"public class TodosTest {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"X\", new Todos(\"return book\").markAsDone().getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ARPspoofing"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ARPspoofing"},"content":"    public void testMarkUndone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\" \", new Todos(\"return book\").getStatusIcon());","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ARPspoofing"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ARPspoofing"},"content":"    @Test ","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ARPspoofing"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"ARPspoofing"},"content":"        assertEquals(\"[T][ ] return book\", new Todos(\"return book\").toString());","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ARPspoofing"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ARPspoofing"},"content":"  ","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"ARPspoofing"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ARPspoofing":25}}]
