{"authorDailyContributionsMap":{"ARPspoofing":[{"date":"2023-01-17","commitResults":[{"hash":"d46cc148ab7b63ea991d7ef47fc6a989cf2735eb","messageTitle":"Add error handle for unrecognised commands","messageBody":"Duke error terminates the whole program instead of displaying a message\n\nThis does not achieve the desired outcome (the program needs to\ncontinuously run until the user types exit)\n\nThe error is catched and a statement is being printed out instead\n\nLet\u0027s handle the error in a try-catch block in a function for\nencapsulation\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":10}}},{"hash":"ec95175b24584c8a59e9227e31267621b4327e2f","messageTitle":"Add delete functionality","messageBody":"","tags":["level-6"],"fileTypesAndContributionMap":{"java":{"insertions":41,"deletions":6}}},{"hash":"f2f722b54ba7cef841ac7b75ba0ab0f749db6d43","messageTitle":"Add custom character messages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":11,"deletions":4}}},{"hash":"8fb447f2fccc9f5b21a37d37f1eb59ab95891502","messageTitle":"Add save class to store list into hardisk","messageBody":"The user will have an empty startup everytime after terminating the\nprogram\n\nThe user\u0027s list can be stored into a text file\n\nLet\u0027s create a Save class and check if the user has the text file in a\nspecific directory on all OS. If not, create the file and read / write\ninto the file everytime the user startups and changes the list\n","fileTypesAndContributionMap":{"java":{"insertions":264,"deletions":4}}},{"hash":"66d1cf34d1a53ec528d8c7a83a6a00b193da6f1b","messageTitle":"Add reference text file for storage","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0}}},{"hash":"9197ef1fd9495a44ef7f2842751edf217d62753e","messageTitle":"Add localDate parser","messageBody":"","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":10}}}]},{"date":"2023-01-19","commitResults":[{"hash":"40f4e751fb6655e1a18dd3cc957344ebb45b1246","messageTitle":"Add abstracted classes","messageBody":"Functionalities of parsing user argument and dealing with user arguments\nis done by Duke class.\n\nFunctionalities can be abstracted to other classes to satsify SOLID\nprinciples\n\nLet\u0027s create Ui, Parser, Storage and TaskList classes\n","fileTypesAndContributionMap":{"java":{"insertions":405,"deletions":11}}},{"hash":"d4695fafaca2187a5dc5ce4e76369802a77588d5","messageTitle":"Modify dukeList textfile","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"1e4e9164d187c485f671dbd3268a37f96db6eac1","messageTitle":"Fixed storage error","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":12}}},{"hash":"ea9db6807c53bb5ddcdb0e305f0a0aa667eb23f6","messageTitle":"Modify dukeList text file","messageBody":"","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":1}}},{"hash":"82d77286128dc21cb82d9b21a4114aabaf3eaa01","messageTitle":"Add gradle support","messageBody":"","tags":["A-JUnit","A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":1,"deletions":0}}}]},{"date":"2023-01-20","commitResults":[{"hash":"bfd7c7112ebda17428cea0b8648df1dcffd5b980","messageTitle":"Add unit test cases","messageBody":"No unit test case leads to difficulty to deduce the correctness of the\nclasses\n\nUnit test cases ensure the return output are all intended\n\nLet\u0027s create JUnit test cases in test folder and build it with gradle to\ncheck if the unit test cases pass or fails\n","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":0},"txt":{"insertions":2,"deletions":2},"java":{"insertions":130,"deletions":59}}}]}]},"authorFileTypeContributionMap":{"ARPspoofing":{"java":815,"md":0,"fxml":0,"sh":0,"bat":0,"gradle":2,"txt":2}},"authorContributionVariance":{"ARPspoofing":33007.438},"authorDisplayNameMap":{"ARPspoofing":"MUHA..HEER"}}
