[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"checkstyle {","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"Acerizm":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * Creates main class and program for iP","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class Duke {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @throws Exception","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public Duke() throws Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"            taskList \u003d new TaskList(this.storage.loadTasks());","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        } catch (DukeException duke) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"            TypeOfTask errorTask \u003d duke.getErrorTask();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            if (errorTask \u003d\u003d TypeOfTask.storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"                System.out.println(duke.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"                throw new Exception(\"goodbye!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"                System.out.println(duke.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     * Runs the program in a loop while waiting for the user\u0027s inputs.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"     * @throws Exception when user inputs are not legal","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    public void run() throws Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"        ui.displayWelcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"                Command command \u003d this.parser.parse(fullCommand);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"                command.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"            } catch (DukeException duke) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"                System.out.println(duke.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"            } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"        ui.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"     * Creates main method for Duke class","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"     * @param args","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     * @throws Exception when unforseen error occurs.","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"    public static void main(String[] args) throws Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"        new Duke().run();","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"     * Gets the response from the user","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"     * @param input Inputs from the user","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"            String fullCommand \u003d input;","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"            Command command \u003d this.parser.parse(fullCommand);","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"            String result \u003d command.execute(this.taskList, this.ui, this.storage);","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"            return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":92}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Creates the entry point for iP","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class Launcher {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     * Creates the main method","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"     * @param args","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Acerizm":20}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.controller.MainWindow;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @throws Exception","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public Main() throws Exception {","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * Starts the creation of the UI using FXML","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"     *      the application scene can be set.","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     *      Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     *      primary stages.","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            ap.getStylesheets().add(\"/css/MainWindow.css\");","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Acerizm":51}},{"path":"src/main/java/duke/action/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.action;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * Represents deadlines that tracks the start and end time for a defined task","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private static final String desiredDateFormat \u003d \"MMM dd yyyy\";","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    private LocalDate date;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    private LocalTime time;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * Represents default constructor that takes in the description of the task, date of the task and the time","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @param date Date of task","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @param time Cut-off time of task for completion","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException if convertToLocalDate and convertToLocalTime fails to compute respectively","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    public Deadline(String description, String date, String time) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        super(description, TypeOfTask.deadline);","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        this.date \u003d super.parser.covertToLocalDate(date);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        this.time \u003d super.parser.convertToLocalTime(time);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * Returns the cut-off date for the task to be completed","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * @return cut-off date","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        return this.date;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     * Returns the cut-off local time of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     * @return cut-off time","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"    public LocalTime getTime() {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        return this.time;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"     * Prints the details of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"     * @return details of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"        String day \u003d this.getDate().format(DateTimeFormatter.ofPattern(desiredDateFormat));","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        return String.format(\"[D][%s] %s (by: %s %s)\", super.getStatusIcon(),","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"                super.getDescription(), day, this.getTime().toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Acerizm":62}},{"path":"src/main/java/duke/action/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.action;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * Represents event class that tracks the description, start time and end time of the task","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    private LocalTime startTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    private LocalTime endTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private String startDay;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    private String endDay;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * Represents default constructor that takes in description,start time and end time of the task","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @param startTime Start time of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @param endTime End time of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When convertToLocalTime cannot be computed due to unacceptable inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    public Event(String description, String startTime, String endTime) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        super(description, TypeOfTask.event);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        String[] startTimeArray \u003d startTime.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        String[] endTimeArray \u003d endTime.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        // Example: /by Monday /to Tuesday","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        if (startTimeArray.length \u003d\u003d 1 \u0026\u0026 endTimeArray.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"            this.startDay \u003d startTimeArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            this.startTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"            this.endDay \u003d endTimeArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"            this.endTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        } else if (startTimeArray.length \u003e 2 \u0026\u0026 endTimeArray.length \u003e 2) {","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"            // Example: /by Monday 2 pm /to Sunday 4 pm","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"            this.startDay \u003d startTimeArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            String slicedStartTime \u003d String.join(\" \", Arrays.copyOfRange(startTimeArray, 1, startTimeArray.length));","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"            String slicedEndTime \u003d String.join(\" \", Arrays.copyOfRange(endTimeArray, 1, endTimeArray.length));","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            this.startTime \u003d super.parser.convertToLocalTime(slicedStartTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            this.endDay \u003d endTimeArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            this.endTime \u003d super.parser.convertToLocalTime(slicedEndTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"        } else if (startTimeArray.length \u003e 2 \u0026\u0026 endTimeArray.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-05"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"            // Example: /by Mon 2 pm /to 4 pm","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"            this.startDay \u003d startTimeArray[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"            String slicedStartTime \u003d String.join(\" \", Arrays.copyOfRange(startTimeArray, 1, startTimeArray.length));","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            String slicedEndTime \u003d String.join(\" \", endTimeArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"            this.startTime \u003d super.parser.convertToLocalTime(slicedStartTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"            this.endDay \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"            this.endTime \u003d super.parser.convertToLocalTime(slicedEndTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.event, 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"     * Prints the details of the Event","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"     * @return details of the Event","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        if (startTime \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"[E][%s] %s (from: %s to: %s)\", super.getStatusIcon(),","lastModifiedDate":"2023-02-05"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"                    super.getDescription(), this.startDay, this.endDay);","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        } else if (endDay \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"            String startTime \u003d this.startTime.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"            String endTime \u003d this.endTime.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"[E][%s] %s (from: %s %s to: %s)\", super.getStatusIcon(), super.getDescription(),","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"                    this.startDay, startTime, endTime);","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"            String startTime \u003d this.startTime.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"            String endTime \u003d this.endTime.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"[E][%s] %s (from: %s %s to: %s %s)\", super.getStatusIcon(), super.getDescription(),","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"                    this.startDay, startTime, this.endDay, endTime);","lastModifiedDate":"2023-02-05"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Acerizm":80}},{"path":"src/main/java/duke/action/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.action;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * Task class that tracks the description, completion status and type of task.","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * This tasks has multiple subclasses: Deadline, Event and Todo","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"public class Task implements Serializable {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    protected String description;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    protected TypeOfTask type;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    protected Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     * Default constructor that takes in the description and type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @param description Description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @param type Type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public Task(String description, TypeOfTask type) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * Returns the status of task with either X or \" \".","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * @return status of task","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     * @return description of task","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        return this.description;","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"     * Returns the type of task in character format","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"     * @return character format of task","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    public String getTypeOfTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        switch(this.type) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"        case deadline:","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"            return \"D\";","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        case event:","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"            return \"E\";","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"        case todo:","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"            return \"T\";","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"            return null;","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"     * Returns the parser stored","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     * @return parser","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"    public Parser getParser() {","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"        return this.parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"     * Marks the task as done","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"     * Unmarks the task as done","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"    public void unmarkAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":92}},{"path":"src/main/java/duke/action/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.action;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":" * Todo class that tracks a simple description of a task","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor that takes in the description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"     * @param description","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"        super(description, TypeOfTask.todo);","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     * Returns the description of the task","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return description of task","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        return String.format(\"[T][%s] %s\", super.getStatusIcon(), super.getDescription());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Acerizm":29}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * Bye command class when user types \"bye\" or \"quit\"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        super(null, true);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        String result \u003d ui.getResult(TypeOfTask.bye, null, null);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        storage.saveTasks(taskList.getTasks());","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":35}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * Command class that is abstract with multiple subclasses. Every subclass must implement execute() function.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    // use protected modifier when subclasses need this info","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    // private modifier is to encapsulate data within the class itself","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    protected String[] contents;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    protected Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    protected boolean isExit;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @param contents Input from the user","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * @param exitStatus 1 for exiting programming, 0 for staying","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    public Command(String[] contents, boolean exitStatus) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        this.contents \u003d contents;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        this.isExit \u003d exitStatus;","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     * Returns the contents of the command","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     * @return contents of command","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    public String[] getContents() {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        return this.contents;","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"     * Returns the exit status","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     * @return exit status","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"        return this.isExit;","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"     * Processes the inputs from the user","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When execute() fails due to errors during run time","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":61}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * Deadline command when user types \"deadline\" at the start","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @param contents Input from the user","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    public DeadlineCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        String description \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.deadline, \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        String[] dateTime \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.deadline, \"/by\").split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        Task newTask \u003d new Deadline(description, dateTime[0], dateTime[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        String result \u003d ui.getResult(TypeOfTask.deadline, newTask, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":41}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * Delete command when user specifies \"delete\" to delete task","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * @param contents","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    public DeleteCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws NumberFormatException, DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        int taskIndexDelete \u003d Integer.parseInt(super.parser.convertToUserInput(contents, TypeOfTask.delete, \"\")) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        Task taskToBeDeleted \u003d taskList.getTaskByIndex(taskIndexDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        taskList.removeTask(taskIndexDelete);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        String result \u003d \"Noted! I\u0027ve removed this task: \\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"                + String.format(\"%d. %s\", taskIndexDelete + 1, taskToBeDeleted.toString())","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"                + \"\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"                + ui.getResult(TypeOfTask.delete, null, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":42}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * Event command when user specifies \"event\" at the start","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @param contents Inputs from user","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    public EventCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        String description \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.event, \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        String startTime \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.event, \"/from\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        String endTime \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.event, \"/to\");","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        Task newTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        String result \u003d ui.getResult(TypeOfTask.event, newTask, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":42}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * Find command when user specifies \"find\" in their input","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @param contents Contents of user input","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public FindCommand(String[] contents) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * Finds all similar tasks that matches the description given by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when there are no matches or user enters illegal inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        List\u003cTask\u003e temporaryTaskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        String taskDescription \u003d new Parser().convertToUserInput(super.getContents(), TypeOfTask.find, \" \");","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        for (Task currentTask : taskList.getTasks()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            if (currentTask.getDescription().contains(taskDescription)","lastModifiedDate":"2023-02-05"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"                    || currentTask.getDescription().equalsIgnoreCase(taskDescription)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"                temporaryTaskList.add(currentTask);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        if (temporaryTaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.find, 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"            String result \u003d ui.getResult(TypeOfTask.find, null, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"            for (Task tempTask: temporaryTaskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"                result +\u003d \"\\n\" + tempTask.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Acerizm":57}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * List command when user specifies \"List\" that list all tracked task currently","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @param contents Inputs of user","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    public ListCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        String result \u003d ui.getResult(TypeOfTask.list, null, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"            Task currentTask \u003d taskList.getTaskByIndex(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"\\n\" + String.format(\"%d. %s\", i + 1, currentTask.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":41}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * Mark command when user specifies \"Mark\" at the beginning of the task. This command marks the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * @param contents Inputs from user","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    public MarkCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            int userMarkIndex \u003d Integer.parseInt((super.contents)[0]) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"            Task currentTask \u003d taskList.getTasks().get(userMarkIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"            currentTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            String result \u003d ui.getResult(TypeOfTask.mark, currentTask, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"            return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.mark, 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":43}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.action.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * Todo command when the user specifies \"todo\" at the beginning of the task. The user creates the most basic task.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @param contents Inputs from the user","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    public TodoCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        String userInput \u003d super.parser.convertToUserInput(super.contents, TypeOfTask.todo, \"\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        Task newTask \u003d new Todo(userInput);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        String result \u003d ui.getResult(TypeOfTask.todo, newTask, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":40}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * Unmark command when the user specifies \"unmark\" at the beginning of the task. Unmarks the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * @param contents","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    public UnmarkCommand(String[] contents) {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        super(contents, false);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * Saves the task to the memory and displays the result","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * @param ui Ui object","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param storage Storage object","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException When saving of task is not possible due to unforseen errors","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            int userMarkIndex \u003d Integer.parseInt((super.contents)[0]) - 1;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"            Task currentTask \u003d taskList.getTasks().get(userMarkIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"            currentTask.unmarkAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            String result \u003d ui.getResult(TypeOfTask.unmark, currentTask, taskList);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"            return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.unmark, 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":43}},{"path":"src/main/java/duke/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.controller;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.Background;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.BackgroundFill;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    private Circle testPicture;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        //displayPicture.setImage(img);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        testPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        testPicture.setRadius(50);","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"     * Creates the user dialog box","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"     * @param text User inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"     * @param img Image of user","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     * @return FXML dialog box","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.HOTPINK, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"        return db;","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"     * Creates the Duke\u0027s dialog box","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"     * @param text Duke\u0027s response","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"     * @param img Image of Duke","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"     * @return FXML Dialog box","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"        db.setBackground(new Background(new BackgroundFill(Color.AQUAMARINE, CornerRadii.EMPTY, Insets.EMPTY)));","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Acerizm":92}},{"path":"src/main/java/duke/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.controller;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * Creates the scrollpane","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"     * Shuts down the application","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    private void closeProgram() {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        Platform.exit();","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Acerizm":68}},{"path":"src/main/java/duke/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.data;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * Task List class stores the list of tasks that the user has specified.","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * The class is also serializable for storing into memory.","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"public class TaskList implements Serializable {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * @param list List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * Returns the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @return list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        return this.list;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * Returns task by index specified by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     * @param index Index of task","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"     * @return index of task","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    public Task getTaskByIndex(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     * Adds task to the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"     * @param task Task object","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    public void addTask(Task task) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        // check if the task alr exists","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        for (Task storedTask : this.list) {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"            boolean isEqual \u003d storedTask.getDescription().equals(storedTask.getDescription());","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            if (isEqual) {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"                throw new DukeException(TypeOfTask.storage, 2);","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"        list.add(task);","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"     * Removes task from the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"     * @param taskIndex Index of the task specified by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    public void removeTask(int taskIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        list.remove(taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     * Marks the task","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     * @param taskIndex Index of task","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"    public void markTask(int taskIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"        Task currentTask \u003d this.list.get(taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        currentTask.markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"     * Unmarks the task","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"     * @param taskIndex Index of task","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"    public void unmarkTask(int taskIndex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"        Task currentTask \u003d this.list.get(taskIndex);","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"        currentTask.unmarkAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"     * Returns the size of the list of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"     * @return size of list","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":98}},{"path":"src/main/java/duke/data/TypeOfTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.data;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":" * Enum that stores constants that represents the type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"public enum TypeOfTask {","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"    mark,","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"    unmark,","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    list,","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    bye,","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    todo,","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    deadline,","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    event,","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    delete,","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    parser,","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    storage,","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    find","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Acerizm":20}},{"path":"src/main/java/duke/error/CustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Error class that will represent many types of errors encountered","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public abstract class CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public CustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Creates an abstract method to get the error message from Duke Exception.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method must be implemented by all subclasses that represents","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     * other types of errors.","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @param typeOfTask Type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Error code","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    public abstract String getErrorMessage(TypeOfTask typeOfTask, int errorCode);","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":28}},{"path":"src/main/java/duke/error/DeadlineCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Deadline commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class DeadlineCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public DeadlineCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":33}},{"path":"src/main/java/duke/error/DeleteCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Delete commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class DeleteCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public DeleteCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"You entered wrongly. Please try again!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":35}},{"path":"src/main/java/duke/error/EventCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Event commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class EventCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public EventCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"Please check your inputs again for the days and time given\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":35}},{"path":"src/main/java/duke/error/MarkCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Mark commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class MarkCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public MarkCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"Please check if your inputs are valid.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":35}},{"path":"src/main/java/duke/error/ParserCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Parser functions","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class ParserCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default cosntructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public ParserCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return \"format of date given is not recognized\";","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"format of time given is not recognized\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":35}},{"path":"src/main/java/duke/error/StorageCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Storage functions","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class StorageCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public StorageCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return \"Unable to retrieve data from file given. Please check if the file path is correct\";","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"Unable to save data to disk. Something went wrong\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        case 2:","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            return \"Cannot add duplicate task. Please enter a different task!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":37}},{"path":"src/main/java/duke/error/TodoCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Represents error that tracks and returns the error from Todo commands.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class TodoCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public TodoCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":33}},{"path":"src/main/java/duke/error/UnknownCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Represents error that tracks and returns the error from commands not recognized by Duke.","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class UnknownCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public UnknownCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        return \"Oops! I don\u0027t understand what it means!\";","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":28}},{"path":"src/main/java/duke/error/UnmarkCustomError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.error;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Tracks and returns the error from Unmark commands","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class UnmarkCustomError extends CustomError {","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public UnmarkCustomError() {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * Gets the corresponding error given by the error code.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * This method is implemented from Error class","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Code of the error","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"     * @return Error message","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    public String getErrorMessage(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        switch(errorCode) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        case 0:","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"            return String.format(\"Oops! The description of %s cannot be empty\", task.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        case 1:","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"            return \"Please check if your inputs are valid.\";","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"            return \"Something went wrong here\";","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Acerizm":34}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.exception;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import duke.error.CustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.error.DeadlineCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.error.DeleteCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.error.EventCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.error.MarkCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.error.ParserCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import duke.error.StorageCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import duke.error.TodoCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import duke.error.UnknownCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import duke.error.UnmarkCustomError;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * Duke Exception is a custom class that will handle common predictable errors made by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" * Error Codes ranges from 0 to n, where n will be specified further in the future.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    private String message;","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    private TypeOfTask errorTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    private int errorCode;","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * Default constructor that will determine which messages will the exception print when error occurs.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param task Type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param errorCode Error code","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public DukeException(TypeOfTask task, int errorCode) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        this.errorCode \u003d errorCode;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        this.errorTask \u003d task;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        CustomError error \u003d new UnknownCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        switch(task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        case todo: {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"            error \u003d new TodoCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        case deadline: {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            error \u003d new DeadlineCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        case event: {","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"            error \u003d new EventCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"        case list: {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        case mark: {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            error \u003d new MarkCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        case unmark: {","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"            error \u003d new UnmarkCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"        case delete: {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"            error \u003d new DeleteCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        case parser: {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"            error \u003d new ParserCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"        case storage: {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"            error \u003d new StorageCustomError();","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"        this.message \u003d error.getErrorMessage(task, errorCode);","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"     * Constructor for if a generic exception is thrown","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"        this.message \u003d \"Oops! I don\u0027t understand what it means!\";","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"     * Returns the error code for the specific error based on the type of task.","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"     * @return error code","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"    public int getErrorCode() {","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"        return this.errorCode;","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"     * Gets the type of task that the command belongs to when error occurs.","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"     * @return type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"    public TypeOfTask getErrorTask() {","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"        return this.errorTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"     * Returns the specific error message.","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"     * @return error message","lastModifiedDate":"2023-02-03"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"        return this.message;","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Acerizm":115}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":" * Parser class that handles all conversion and parsing of the user inputs.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"public class Parser implements Serializable {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public Parser() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     * Converts the user input into descriptions to store in the Task instance.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"     * @param action Type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"    public String convertToUserInput(String[] input, TypeOfTask action, String limiter) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        switch(action) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        case find: {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            return convertFindInput(input, limiter);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        case todo: {","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"            return convertTodoInput(input, limiter);","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"        case deadline: {","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"            return convertDeadlineInput(input, limiter);","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        case event: {","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"            return convertEventInput(input, limiter);","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        case delete: {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"            return convertDeleteInput(input, limiter);","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        default:","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException();","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"     * Converts user inputs when user uses the Find command","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    public String convertFindInput(String[] input, String limiter) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        String userInput \u003d String.join(\" \", Arrays.copyOfRange(input, 0, input.length));","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"        boolean isUserInputNull \u003d userInput.equals(\"\") || userInput \u003d\u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"        if (isUserInputNull) {","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.find, 0);","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"            return userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"     * Converts user inputs when user uses the Todo command","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"    public String convertTodoInput(String[] input, String limiter) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"        String userInput \u003d String.join(\" \", Arrays.copyOfRange(input, 0, input.length));","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"        boolean isUserInputNull \u003d userInput.equals(\"\") || userInput \u003d\u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"        if (isUserInputNull) {","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.todo, 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"            return userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"     * Converts user inputs when user uses the Deadline command","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"    public String convertDeadlineInput(String[] input, String limiter) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"        if (!limiter.equals(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"                if (input[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"                    userInput +\u003d input[i] + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"            // to get the date and time after \"/by\"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"                if (input[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"                    for (int j \u003d i + 1; j \u003c input.length; j++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"                        userInput +\u003d input[j] + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"        boolean isUserInputNull \u003d userInput.equals(\"\") || userInput \u003d\u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"        if (isUserInputNull) {","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.deadline, 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"            return userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"     * Converts user inputs when user uses the Event command","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"    public String convertEventInput(String[] input, String limiter) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"Acerizm"},"content":"        String userInput \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Acerizm"},"content":"        if (limiter.equals(\"/from\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Acerizm"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Acerizm"},"content":"                if (input[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Acerizm"},"content":"                    for (int j \u003d i + 1; j \u003c input.length; j++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"Acerizm"},"content":"                        if (input[j].equals(\"/to\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"Acerizm"},"content":"                            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"Acerizm"},"content":"                        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"Acerizm"},"content":"                            userInput +\u003d input[j] + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"Acerizm"},"content":"                        }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"Acerizm"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Acerizm"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Acerizm"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Acerizm"},"content":"        } else if (limiter.equals(\"/to\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"Acerizm"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"Acerizm"},"content":"                if (input[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"Acerizm"},"content":"                    for (int j \u003d i + 1; j \u003c input.length; j++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"Acerizm"},"content":"                        userInput +\u003d input[j] + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"Acerizm"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"Acerizm"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"Acerizm"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"Acerizm"},"content":"            // to get the user\u0027s input before the \"/from\" limiter","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"Acerizm"},"content":"            for (int i \u003d 0; i \u003c input.length; i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":176,"author":{"gitId":"Acerizm"},"content":"                if (input[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"Acerizm"},"content":"                    break;","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"Acerizm"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"Acerizm"},"content":"                    userInput +\u003d input[i] + \" \";","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"Acerizm"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"Acerizm"},"content":"        boolean isUserInputNull \u003d userInput.equals(\"\") || userInput \u003d\u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":184,"author":{"gitId":"Acerizm"},"content":"        if (isUserInputNull) {","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.event, 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":187,"author":{"gitId":"Acerizm"},"content":"            return userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":190,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":191,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-13"},{"lineNumber":192,"author":{"gitId":"Acerizm"},"content":"     * Converts user inputs when user uses the Delete command","lastModifiedDate":"2023-02-13"},{"lineNumber":193,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":194,"author":{"gitId":"Acerizm"},"content":"     * @param input Input from user as an array of Strings","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"Acerizm"},"content":"     * @param limiter Delimitter specified. Example: \" \", \"/by\", \"/from\", \"/to\"","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"Acerizm"},"content":"     * @return the contents of the user inputs","lastModifiedDate":"2023-02-13"},{"lineNumber":197,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when an error occurs during execution depending on the type of task","lastModifiedDate":"2023-02-13"},{"lineNumber":198,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-13"},{"lineNumber":199,"author":{"gitId":"Acerizm"},"content":"    public String convertDeleteInput(String[] input, String limiter) throws DukeException {","lastModifiedDate":"2023-02-13"},{"lineNumber":200,"author":{"gitId":"Acerizm"},"content":"        if (input.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":201,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.delete, 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"Acerizm"},"content":"        } else if (input.length \u003e 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":203,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.delete, 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":205,"author":{"gitId":"Acerizm"},"content":"            return input[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":206,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":208,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"Acerizm"},"content":"     * Returns the local date in another format","lastModifiedDate":"2023-02-03"},{"lineNumber":211,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":212,"author":{"gitId":"Acerizm"},"content":"     * @param date Date","lastModifiedDate":"2023-02-03"},{"lineNumber":213,"author":{"gitId":"Acerizm"},"content":"     * @return Date","lastModifiedDate":"2023-02-03"},{"lineNumber":214,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when error occurs during conversion","lastModifiedDate":"2023-02-03"},{"lineNumber":215,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":216,"author":{"gitId":"Acerizm"},"content":"    public LocalDate covertToLocalDate(String date) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":217,"author":{"gitId":"Acerizm"},"content":"        String[] dateFormats \u003d {\"dd/MM/yyyy\", \"yyyy-MM-dd\", \"MM-dd-yyyy\", \"d/MM/yyyy\", \"d/M/yyyy\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":218,"author":{"gitId":"Acerizm"},"content":"        LocalDate localDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":219,"author":{"gitId":"Acerizm"},"content":"        for (String dateFormat : dateFormats) {","lastModifiedDate":"2023-01-30"},{"lineNumber":220,"author":{"gitId":"Acerizm"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":221,"author":{"gitId":"Acerizm"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(dateFormat);","lastModifiedDate":"2023-01-30"},{"lineNumber":222,"author":{"gitId":"Acerizm"},"content":"                localDate \u003d LocalDate.parse(date, formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":223,"author":{"gitId":"Acerizm"},"content":"                return localDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":224,"author":{"gitId":"Acerizm"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":225,"author":{"gitId":"Acerizm"},"content":"                // continue trying other formats","lastModifiedDate":"2023-01-30"},{"lineNumber":226,"author":{"gitId":"Acerizm"},"content":"                continue;","lastModifiedDate":"2023-01-30"},{"lineNumber":227,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":228,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":229,"author":{"gitId":"Acerizm"},"content":"        throw new DukeException(TypeOfTask.parser, 0);","lastModifiedDate":"2023-01-30"},{"lineNumber":230,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":231,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":232,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":233,"author":{"gitId":"Acerizm"},"content":"     * Returns the local time","lastModifiedDate":"2023-02-03"},{"lineNumber":234,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":235,"author":{"gitId":"Acerizm"},"content":"     * @param time Time","lastModifiedDate":"2023-02-03"},{"lineNumber":236,"author":{"gitId":"Acerizm"},"content":"     * @return local time","lastModifiedDate":"2023-02-03"},{"lineNumber":237,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when error occurs during execution","lastModifiedDate":"2023-02-03"},{"lineNumber":238,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":239,"author":{"gitId":"Acerizm"},"content":"    public LocalTime convertToLocalTime(String time) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":240,"author":{"gitId":"Acerizm"},"content":"        String[] timeFormats \u003d {\"h:mm a\", \"HH:mm\", \"hh:mm a\", \"HH:mm:ss\", \"HHmm\", \"h:mma\", \"hh:mma\", \"h:a\"};","lastModifiedDate":"2023-01-30"},{"lineNumber":241,"author":{"gitId":"Acerizm"},"content":"        LocalTime localTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":242,"author":{"gitId":"Acerizm"},"content":"        for (String timeFormat : timeFormats) {","lastModifiedDate":"2023-01-30"},{"lineNumber":243,"author":{"gitId":"Acerizm"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":244,"author":{"gitId":"Acerizm"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(timeFormat);","lastModifiedDate":"2023-01-30"},{"lineNumber":245,"author":{"gitId":"Acerizm"},"content":"                localTime \u003d LocalTime.parse(time.toUpperCase(), formatter);","lastModifiedDate":"2023-01-30"},{"lineNumber":246,"author":{"gitId":"Acerizm"},"content":"                return localTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":247,"author":{"gitId":"Acerizm"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":248,"author":{"gitId":"Acerizm"},"content":"                // continue trying other formats","lastModifiedDate":"2023-01-30"},{"lineNumber":249,"author":{"gitId":"Acerizm"},"content":"                continue;","lastModifiedDate":"2023-01-30"},{"lineNumber":250,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":251,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":252,"author":{"gitId":"Acerizm"},"content":"        throw new DukeException(TypeOfTask.parser, 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":253,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":254,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":255,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":256,"author":{"gitId":"Acerizm"},"content":"     * Converts the beginning of the user\u0027s input into a TypeOfTask enum type","lastModifiedDate":"2023-02-13"},{"lineNumber":257,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":258,"author":{"gitId":"Acerizm"},"content":"     * @param command Command given by the user","lastModifiedDate":"2023-02-03"},{"lineNumber":259,"author":{"gitId":"Acerizm"},"content":"     * @return Command instance","lastModifiedDate":"2023-02-03"},{"lineNumber":260,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when error occurs when creating the Command instance","lastModifiedDate":"2023-02-03"},{"lineNumber":261,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":262,"author":{"gitId":"Acerizm"},"content":"    public Command parse(String command) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":263,"author":{"gitId":"Acerizm"},"content":"        String[] input \u003d command.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":264,"author":{"gitId":"Acerizm"},"content":"        String typeOfTask \u003d input[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":265,"author":{"gitId":"Acerizm"},"content":"        String[] contents \u003d Arrays.copyOfRange(input, 1, input.length);","lastModifiedDate":"2023-01-30"},{"lineNumber":266,"author":{"gitId":"Acerizm"},"content":"        switch(typeOfTask) {","lastModifiedDate":"2023-01-30"},{"lineNumber":267,"author":{"gitId":"Acerizm"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":268,"author":{"gitId":"Acerizm"},"content":"            return new MarkCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":269,"author":{"gitId":"Acerizm"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":270,"author":{"gitId":"Acerizm"},"content":"            return new UnmarkCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":271,"author":{"gitId":"Acerizm"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":272,"author":{"gitId":"Acerizm"},"content":"            return new ListCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":273,"author":{"gitId":"Acerizm"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-29"},{"lineNumber":274,"author":{"gitId":"Acerizm"},"content":"        case \"quit\":","lastModifiedDate":"2023-01-29"},{"lineNumber":275,"author":{"gitId":"Acerizm"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":276,"author":{"gitId":"Acerizm"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":277,"author":{"gitId":"Acerizm"},"content":"            return new TodoCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":278,"author":{"gitId":"Acerizm"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":279,"author":{"gitId":"Acerizm"},"content":"            return new DeadlineCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":280,"author":{"gitId":"Acerizm"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":281,"author":{"gitId":"Acerizm"},"content":"            return new EventCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":282,"author":{"gitId":"Acerizm"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-29"},{"lineNumber":283,"author":{"gitId":"Acerizm"},"content":"            return new DeleteCommand(contents);","lastModifiedDate":"2023-01-30"},{"lineNumber":284,"author":{"gitId":"Acerizm"},"content":"        case \"find\":","lastModifiedDate":"2023-02-03"},{"lineNumber":285,"author":{"gitId":"Acerizm"},"content":"            return new FindCommand(contents);","lastModifiedDate":"2023-02-03"},{"lineNumber":286,"author":{"gitId":"Acerizm"},"content":"        default: throw new DukeException();","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Acerizm":289}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.io.File;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" * Represents storage class that manages the loading and saving of the data before and after the program\u0027s execution.","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    private String filePath;","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * Creates default constructor. Constructor specifies hard codded file using relative path.","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    public Storage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        this.filePath \u003d \"src\" + File.separator + \"main\" + File.separator","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"                + \"java\" + File.separator + \"duke\" + File.separator","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"                + \"data\" + File.separator + \"duke.txt\";","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        assert Files.exists(Path.of(filePath)) : \"File does not exists\";","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * Creates another constructor that accepts a custom and different filepath","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     * @param filePath File path of the data","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"     * Returns deserialized list of tasks after loading stored data from the disk.","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"     * @return List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when file is not found or data is corrupted","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    public List\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        try (ObjectInputStream load \u003d new ObjectInputStream(new FileInputStream(this.filePath))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"            taskList \u003d (List\u003cTask\u003e) load.readObject();","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            //return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.storage, 0);","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        } finally {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"            return taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"     * saves data to disk from program as serialized objects","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"     *","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when error occurs during saving","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"    public void saveTasks(List\u003cTask\u003e taskList) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"        try (ObjectOutputStream save \u003d new ObjectOutputStream(new FileOutputStream(this.filePath))) {","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"            save.writeObject(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"            throw new DukeException(TypeOfTask.storage, 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":76}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke.ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * User Interface Class for handling user\u0027s interactions","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * Default constructor","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * Displays the welcome message with customized logo","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    public void displayWelcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        String personalLogo \u003d \"                      - \\n\"","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"                             + \"    /                (_) \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"                             + \"   /  \\\\   ___ ___ _ __ _ _____ __ ___ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"                             + \"  / /  \\\\ / __/ _ \\\\ \u0027__| |_  / \u0027_ ` _ \\\\ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"                             + \" / ____ \\\\ (_|  __/ |  | |/ /| | | | | | \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"                             + \"/_/    \\\\_\\\\___\\\\___|_|  |_/___|_| |_| |_| \\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        System.out.println(\"Hi there! I am \\n\" + personalLogo);","lastModifiedDate":"2023-02-05"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        this.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        this.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"     * Closes the scanner instance","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    public void close() {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"        this.scanner.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"     * Shows the long repeated lines for UI","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        System.out.println(\"*-\".repeat(100));","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"     * Gets the result of the commands given by the user","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"     * @param type Type of task","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"     * @param task Task instance","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"     * @param taskList List of tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    public String getResult(TypeOfTask type, Task task, TaskList taskList) {","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        if (type \u003d\u003d TypeOfTask.bye) {","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.list) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.mark) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"            // for marking tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Nice! I\u0027ve marked this task as done: \\n\" + task.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.unmark) {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"            // for unmarking tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"OK, I\u0027ve marked this task as not done yet: \\n\" + task.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.todo) {","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"            // for todo tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Got it. I\u0027ve added this task: \\n\" + task.toString()","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"                    + \"\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"                    + String.format(\"Now you have %d tasks in the list\", taskList.getSize());","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.deadline) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Got it. I\u0027ve added this task: \\n\" + task.toString()","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"                    + \"\\n\" + String.format(\"Now you have %d tasks in the list\", taskList.getSize());","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.event) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"            // for event","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Got it. I\u0027ve added this task:\" + task.toString()","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"                    + \"\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"                    + String.format(\"Now you have %d tasks in the list\", taskList.getSize());","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.delete) {","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"            result +\u003d String.format(\"Now you have %d tasks in the list\", taskList.getSize());","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"        } else if (type \u003d\u003d TypeOfTask.find) {","lastModifiedDate":"2023-02-05"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Here are the matching tasks in your list\";","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-02-05"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"            result +\u003d \"Oh no! You forgot to type in something useful :p\"","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"                    + \"\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"        return result;","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"     * Reads the command from the user\u0027s inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"     * @return the user\u0027s inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"     * @throws Exception when user does not type anything and immediately enters an empty response or command.","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    public String readCommand() throws Exception {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"        // this is what I want","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Acerizm":106}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@/css/DialogBox.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets left\u003d\"50.0\" right\u003d\"50.0\" top\u003d\"25.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"      \u003cCircle fx:id\u003d\"testPicture\" radius\u003d\"50.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"      \u003c/Circle\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"\u003c!--        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e--\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"\u003c!--            \u003cclip\u003e--\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"\u003c!--                \u003cRectangle width\u003d\"200\" height\u003d\"200\" arcWidth\u003d\"20\" arcHeight\u003d\"20\" stroke\u003d\"red\" /\u003e--\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"\u003c!--            \u003c/clip\u003e--\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"\u003c!--        \u003c/ImageView\u003e--\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Acerizm":28}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"\u003cAnchorPane fx:id\u003d\"mainContainer\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"800.0\" prefWidth\u003d\"800.0\"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"            xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.controller.MainWindow\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"14.0\" layoutY\u003d\"583.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"622.0\" promptText\u003d\"Your input:...\" AnchorPane.bottomAnchor\u003d\"175.66666666666663\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"643.0\" layoutY\u003d\"583.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"149.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"800.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"             \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"                    \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"555.0\" prefWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"             \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"      \u003cButton fx:id\u003d\"closeProgramButton\" layoutX\u003d\"342.0\" layoutY\u003d\"679.0\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"57.0\" prefWidth\u003d\"116.0\" text\u003d\"Quit program\" onAction\u003d\"#closeProgram\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"   \u003ccursor\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"      \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"   \u003c/cursor\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"Acerizm":25}},{"path":"src/test/java/duke/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.List;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.action.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import duke.action.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import duke.data.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" * Unit testing class for command testing","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"public class CommandTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * Test if input given matches output when user enters \"find\" command","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when there are no similar tasks","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    void testFindCommand() throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        String fakeInput \u003d \"find Foo\";","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        Task tempTask1 \u003d new Todo(\"Foobar\");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        Task tempTask2 \u003d new Todo(\"Foo Foo Foo\");","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        Task tempTask3 \u003d new Todo(\"Foooooooohuhuhuh\");","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        Task tempTask4 \u003d new Todo(\"Bar\");","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        Task tempTask5 \u003d new Todo(\"BarFooooo\");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        List\u003cTask\u003e testList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        testList.add(tempTask1);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        testList.add(tempTask2);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        testList.add(tempTask3);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        testList.add(tempTask4);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        testList.add(tempTask5);","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        Command command \u003d new Parser().parse(fakeInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        Ui tempUi \u003d new Ui();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"        Storage fakeStorage \u003d new Storage();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"        TaskList tempTaskList \u003d new TaskList(testList);","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"        command.execute(tempTaskList, tempUi, fakeStorage);","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Acerizm":47}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import duke.data.TypeOfTask;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * duke.ParserTest class tests the functionality of parser with multiple different test cases","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi (Acerizm)","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * Test if illegal inputs from the user is detected for \"delete\" command","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when user enters illegal inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    void testDeleteInputException() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        String[] fakeInput \u003d new String[]{\"Delete\", \"2\", \"3\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e parser.convertToUserInput(fakeInput, TypeOfTask.delete, \"\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * Test if DukeException is returned if local date cannot be converted","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when user enters illegal inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    void testConvertToLocalDateException() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        //String[] fakeInput \u003d new String[]{\"20/20/20\"};","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        String fakeInput \u003d \"20/20/20\";","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e parser.covertToLocalDate(fakeInput));","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"     * Test if DukeException is returned if local time cannot be converted","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"     * @throws DukeException when user enters illegal inputs","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    void testConvertToLocalTimeException() throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        String fakeInput \u003d \"2PM\";","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        Assertions.assertThrows(DukeException.class, () -\u003e parser.convertToLocalTime(fakeInput));","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Acerizm":50}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"todo borrow book","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Acerizm":1}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","isBinary":true,"lines":[],"authorContributionMap":{"Acerizm":0}}]
