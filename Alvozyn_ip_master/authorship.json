[{"path":"src/main/java/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"public class ArgumentException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"    public ArgumentException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"    protected String deadLineTime;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    public Deadline(String item, String type, String time) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"        String x[] \u003d time.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"        deadLineTime \u003d  x[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadLineTime + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":15}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        toDoList toDo \u003d new toDoList();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Hello I\u0027m Duke\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"            String[] instruction \u003d input.split(\" \",2);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"            if(instruction[0].equals(\"list\")) { // printing list","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"                toDo.printList();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"mark\")){ //marking","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"                    if(instruction.length \u003c\u003d 1 ){","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                    } else if (! instruction[1].matches(\"[0-9]+\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"                    int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                    if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                    toDo.changingStatus(0, index);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"                } catch (ArgumentException ex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(ex.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"unmark\")) { //unmarking","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"                    if(instruction.length \u003c\u003d 1 )  {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                    } else if (! instruction[1].matches(\"[0-9]+\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                    int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                    if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                    toDo.changingStatus(1, index);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"                } catch (ArgumentException ex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(ex.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"            } else if(instruction[0].equals(\"delete\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"                    if(instruction.length \u003c\u003d 1 )  {","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"                    } else if (! instruction[1].matches(\"[0-9]+\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"                    int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"                    if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"                    toDo.deleteTask(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\"Now you have \" + toDo.numberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"                } catch (ArgumentException ex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(ex.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"            } else { // adding into list","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"                String command \u003d instruction[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"                try {","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"                    if(!command.equals(\"todo\") \u0026\u0026 !command.equals(\"deadline\") \u0026\u0026","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                            !command.equals(\"event\") \u0026\u0026 !command.equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                        throw new DukeException(\"*sigh* No such commands, please be serious.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                    if(instruction.length \u003d\u003d 1){","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Yeah let\u0027s keep wasting each other time.\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"                                \" You\u0027re missing the parameters in case you don\u0027t already know.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"                    String item \u003d instruction[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"                    if(item.trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Spacing out already?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"                    if(command.equals(\"todo\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"                        toDo.addItem(\"T\", item);","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"                    } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"                        String itemANDtime[] \u003d item.split(\"/\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"                        if(itemANDtime.length\u003d\u003d 1){","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"How interesting a deadline without a time limit?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"                        } else if(itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"                        } else if(itemANDtime[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Hiding from reality I see. Too bad time waits for no man\");","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"                        String time[] \u003d itemANDtime[1].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"                        if (!time[0].equals(\"by\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Where did your BY go?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"                        } else if (time[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"A blank time I see\");","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"                        toDo.addItemDeadline(\"D\", itemANDtime[0], itemANDtime[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"                    } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"                        String itemANDtime[] \u003d item.split(\"/\", 3);","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"                        if(itemANDtime.length \u003c\u003d 2){","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"How interesting an event without proper timing?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"                        } else if(itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"                        } else if(itemANDtime[1].trim().isEmpty() || itemANDtime[2].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Hiding from reality I see. Too bad time waits for no man\");","lastModifiedDate":"2023-01-19"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"                        String start[] \u003d itemANDtime[1].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"                        String end[] \u003d itemANDtime[2].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"                        if (!start[0].equals(\"from\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"You know, eveything starts FROM somewhere. Where did your FROM go?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"                        } else if (start[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"A blank time I see\");","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"                        } else if (!end[0].equals(\"to\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Where did your TO go?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"                        } else if (end[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"                            throw new ArgumentException(\"Cool event! Too bad I don\u0027t know what time it ends\");","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"                        }","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"                        toDo.addItemEvent(\"E\", itemANDtime[0], itemANDtime[1], itemANDtime[2]);","lastModifiedDate":"2023-01-19"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\"Now you have \" + toDo.numberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"                } catch (DukeException ex) {","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(ex.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"                } catch (ArgumentException ex2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(ex2.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"            input \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Alvozyn":158,"-":10}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"    protected String eventStart;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"    protected String eventEnd;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"    public Event(String item, String type, String time1, String time2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"        String x1[] \u003d time1.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"        String x2[] \u003d time2.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"        eventStart \u003d x1[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"        eventEnd \u003d x2[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + eventStart + \" to: \" + eventEnd + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":16}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"    protected String item;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"    protected boolean status;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    protected String types; // toDo, deadline, events","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    Task(String x, String y) {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"        item \u003d x;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"        types \u003d y;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public String toString(){","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        String getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        if (status \u003d\u003d false) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[ ] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[X] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        if (types.equals(\"T\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"            return \"[T]\" + getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        return getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void mark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        status \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":36}},{"path":"src/main/java/toDoList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class toDoList {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"    ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    toDoList(){","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"        allTasks \u003d  new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    public int numberOfTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        return allTasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public void printList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(index + \". \"+ allTasks.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public void addItem(String type, String item) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Task(item, type);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void addItemDeadline(String type, String item, String time) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Deadline(item, type, time);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    public void addItemEvent(String type, String item, String time1, String time2) {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Event(item, type, time1, time2);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        //newTask.setEventTime(time1, time2);","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    public void changingStatus(int x, int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        if(x \u003d\u003d 0) { //marked","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"            allTasks.get(index-1).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        } else { //unmarked","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"            allTasks.get(index-1).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        allTasks.remove(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":65}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":8}}]
