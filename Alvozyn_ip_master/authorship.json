[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alvozyn":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alvozyn":17,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"E-false-volunteering at animal shelther-3/4/2023 12:00-3/4/2023 18:00","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"D-true-apple -3/4/2023 23:59","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"E-false-cny-3/4/2022 23:59-4/4/2022 23:59","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"T-false-hii","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":4}},{"path":"src/main/java/duke/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class ArgumentException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"     * this class will be created whenever the user types in an invalid command or when the file cannot be found","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"     * @param msg indicates the issue with the user input","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    public ArgumentException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":12}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    private Circle clippedImage;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        clippedImage.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    private void flip() {","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        db.flip();","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        return db;","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":66}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    private Image chatBackground\u003d new Image(this.getClass().getResourceAsStream(\"/images/ChatBackground.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    public Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    public Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public TaskList listOfTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    public Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     * Constructor for the Duke Class.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * Initializes Ui, Storage, Parser and TaskList while loading items found in the path file into it.","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    public Duke()  {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        ui.displayLogo();","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        storage \u003d new Storage(\"/Users/kristen/Documents/NUS/CS2109S/ip/data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    public void runInput(String input) throws FileNotFoundException {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        Command c \u003d parser.parse(input, listOfTasks, ui);","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        c.executeCommand(listOfTasks, storage, ui);","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        ui.setMainWindow(mainWindow);","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"            listOfTasks \u003d new TaskList();","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"            listOfTasks.allTasks \u003d storage.loadFile(listOfTasks.getTasks(), ui);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        }  catch (IOException i) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"            ui.printText(\"Remember that since the file cannot be loaded, you cannot save your file!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"        ui.greet();","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Alvozyn":65,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.Main;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"public class Launcher {","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":9}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this, duke);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"            stage.show();","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":32}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    private Main main;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    private Image background \u003d new Image(this.getClass().getResourceAsStream(\"/images/ChatBackground.png\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"        BackgroundImage bg \u003d new BackgroundImage(background,","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                BackgroundRepeat.REPEAT, BackgroundRepeat.REPEAT, BackgroundPosition.DEFAULT,","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                BackgroundSize.DEFAULT);","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        dialogContainer.setBackground(new Background(bg));","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    public void setDuke(Main main, Duke d) {","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"        this.main \u003d main;","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"        this.duke.setMainWindow(this);","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"     * Creates one dialog box echoing user input reflecting and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"    @FXML","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    private void handleUserInput() throws FileNotFoundException {","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        if (!input.trim().isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"                    DialogBox.getUserDialog(input, userImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"            );","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"            duke.runInput(input);","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"     * Creates one dialog box containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"     * the dialog container.","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    public void passDukeResponse(String response) {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"        if (!response.trim().isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"            dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"                    DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"            );","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":79}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":" * This class is to check if user inputs are valid","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * Checks if the user input are valid and return a Command corresponding to user input","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * @param input is the user input","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     * @param tasklist is where all the tasks are stored","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"     * @return a new Command object based on the user input","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    public Command parse(String input, TaskList tasklist, Ui ui) {","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        String[] instruction \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"            if (instruction[0].equals(\"list\")) { // printing list","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"mark\")) { //marking","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                if (instruction.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                } else if (!instruction[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                if ((index - 1) \u003c 0 || (index - 1) \u003e\u003d tasklist.getNumberOfTask()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"unmark\")) { //unmarking","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                if (instruction.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                } else if (!instruction[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"                if ((index - 1) \u003c 0 || (index - 1) \u003e\u003d tasklist.getNumberOfTask()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"                if (instruction.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"                } else if (!instruction[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"                if ((index - 1) \u003c 0 || (index - 1) \u003e\u003d tasklist.getNumberOfTask()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"                return new FindCommand(instruction[1]);","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"            } else { // adding into list","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"                String command \u003d instruction[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                if (!command.equals(\"todo\") \u0026\u0026 !command.equals(\"deadline\") \u0026\u0026","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                        !command.equals(\"event\") \u0026\u0026 !command.equals(\"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"*sigh* No such commands, please be serious.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"                if (instruction.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Yeah let\u0027s keep wasting each other time.\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"                            \" You\u0027re missing the parameters in case you don\u0027t already know.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"                String item \u003d instruction[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                if (item.trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Spacing out already?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"                if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"                    Task task \u003d new Task(item, \"T\");","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"                    String itemANDtime[] \u003d item.split(\"/\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"                    if (itemANDtime.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"How interesting a deadline without a time limit?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"                    } else if (itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"                    } else if (itemANDtime[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Hiding from reality I see. Too bad time waits for no man\");","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"                    String time[] \u003d itemANDtime[1].split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"                    if (!time[0].equals(\"by\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Where did your BY go?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"                    } else if (time[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"A blank time I see\");","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"                    String deadlineTime \u003d itemANDtime[1].split(\" \", 2)[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"                    Date date \u003d converterDate.parse(deadlineTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"                    Deadline deadline \u003d new Deadline(itemANDtime[0], \"D\", date, deadlineTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"                    return new AddCommand(deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"                    if (!item.contains(\"/from\") || !item.contains(\"/to\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"For event please enter the format: event nameOfEvent /from dd/MM/yyyy HH:mm\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"                                \" /to dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"                    String itemANDtime[] \u003d item.split(\" /from \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"                    if (itemANDtime.length \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"You forget the event name!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"                    } else if (itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"                    String nameItem \u003d itemANDtime[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"                    String startEnd[] \u003d itemANDtime[1].split(\" /to \");","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"                    if (startEnd.length \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Please enter the format: event nameOfEvent /from xxx /to xxx\");","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"                    if (startEnd[0].trim().isEmpty() || startEnd[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Please do not leave the timing blank!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterStartDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"                    Date startDate \u003d converterStartDate.parse(startEnd[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"                    Date endDate \u003d converterStartDate.parse(startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"                    Task task \u003d new Event(nameItem, \"E\", startDate, endDate, startEnd[0], startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":165,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":168,"author":{"gitId":"Alvozyn"},"content":"        } catch (ArgumentException ex2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"Alvozyn"},"content":"            ui.printText(ex2.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"Alvozyn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"Alvozyn"},"content":"           ui.printText(\"Please enter the time of the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":174,"author":{"gitId":"Alvozyn"},"content":"        return new InvalidCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":175,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":176,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":177,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":177}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        filePath \u003d pathName;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * Update the text file whenever a task is added, removed or modified.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * @param entireList A list in which all tasks are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void updateFile(ArrayList\u003cTask\u003e entireList) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(filePath));","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"            for (int i \u003d 0; i \u003c entireList.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                Task task \u003d entireList.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                boolean isMark \u003d task.getComplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                String type \u003d task.getTypes();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                String name \u003d task.getItem();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                if (type.equals(\"D\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"                    String time \u003d task.getTime();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name + \"-\" + time);","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                    String time \u003d task.getTime();","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                    String startEnd [] \u003d time.split(\"-\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name + \"-\" + startEnd[0] + \"-\" + startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"            pw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        }catch(IOException i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"Your file cannot be saved! I did you warned from the start :\u003e\");","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"     * Loads the text of the file into an array.","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"     * @param entireList A list in which all tasks are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    public ArrayList\u003cTask\u003e loadFile(ArrayList\u003cTask\u003e entireList, Ui ui) throws FileNotFoundException {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"            String oneline;","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"            while ( (oneline \u003d br.readLine() )!\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"                String lines [] \u003d oneline.split(\"-\", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"                Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"                if(lines[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Task(lines[2], lines[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                } else if (lines[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"                    String nameTime[] \u003d lines[2].split(\"-\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"                    Date date \u003d converterDate.parse(nameTime[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Deadline(nameTime[0], lines[0], date, nameTime[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"                    String nameStartEnd[] \u003d lines[2].split(\"-\", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                    Date date1 \u003d converterDate.parse(nameStartEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"                    Date date2 \u003d converterDate.parse(nameStartEnd[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Event(nameStartEnd[0], lines[0], date1, date2, nameStartEnd[1], nameStartEnd[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"                if(lines[1].equals(\"true\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                    task.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"                entireList.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"        } catch (IOException i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"            ui.printText(\"File not found! Proceeding without a saved file.\\nPlease note that you will not be able\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"                    \" to save your progress either but you can still use me as you wish :\u003e\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"            ui.printText(\"Unable to load file. Please check your that the item\u0027s date where it should be in the form of\" +","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"                    \" dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"        return entireList;","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":114}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"     * constructor of TaskList","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"     * Initialises allTasks too so that tasks can be stored","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public TaskList(){","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        allTasks \u003d  new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * gets the number of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * @return the number of task in the allTasks","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public int getNumberOfTask() {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        return allTasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     * get the task of in the list and concat them into a string","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     * @return the entire task in string form","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    public String printList() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        String printedList \u003d \"\";","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"            printedList \u003d printedList.concat(index + \". \"+ allTasks.get(i).toString()) + \"\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        if (allTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"            return \"Your list is currently empty :)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        return printedList;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"     * adds a task into the list","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"     * @param task is a Task object to be added into the list","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"     * goes to the index where the task is and calls mark() to mark the task","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"     * @param index of task to be mark","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    public void markTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        allTasks.get(index - 1).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"     * goes to the index where the task is and calls unmark() to unmark the task","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"     * @param index of task to be mark","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        allTasks.get(index - 1).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"     * goes to the index and remove task","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"     * @param index of the task to be deleted","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"    public void deleteTask(int index, Ui ui) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"//        ui.printText(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"        allTasks.remove(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"     * get the allTasks variable","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"     * @return allTasks","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"        return allTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"     * finds tasks that contains the word","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"     * @param word to find tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"     * @return string of all the tasks that contains word","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"    public String findTaskWithWord (String word) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"        String tasksWithWord \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"            if (allTasks.get(i).getItem().contains(word)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"                index++;","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                tasksWithWord \u003d tasksWithWord.concat(i + \". \"+ allTasks.get(i).toString()) + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"        if (index \u003d\u003d 0) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"            return \"Unable to find task with the word: \" + word;","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"        return tasksWithWord;","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":107}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"     * constructor of the Ui class","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"     * initialise scanners sc","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        mainWindow \u003d null;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * greets the user","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public void greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Hello I\u0027m duke.\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        mainWindow.passDukeResponse(\"Hello I\u0027m duke.\\nWhat can I do for you?\");","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * displays the logo","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void displayLogo() {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     * prints a line","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"     * gets user input","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"     * @return user input","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"     * prints out text","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"     * @param text to be print","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    public void printText(String text) {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(text);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        if(mainWindow!\u003dnull) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"            mainWindow.passDukeResponse(text);","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"    public void setMainWindow(MainWindow mainWindow) {","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":71}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":" * AddCommands help calls the function add a new Task object be it Task, Event or Deadline into the task list.","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    protected Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * constructor for AddCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     * @param task represent the either the to do task, event task or deadline task.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the AddCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList is where a task will be added into the list","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        output \u003d output + \"\\n \" + task;","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(output + \"\\n\" + taskList.getNumberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":49}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":" * Command is the super class of all the commands","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * all commands should have this method","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     * @param storage","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * @param ui","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public abstract void executeCommand(TaskList taskList, Storage storage, Ui ui) throws FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     * checks if the command is a ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * @return true if it is a ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":30}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":" * DeleteCommands help calls a function to deletes a task given the index","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    protected int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * constructor of the DeleteCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param index of task that is to be delete","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the DeleteCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList is where a task will be deleted from the list","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        String output \u003d \" Noted. I\u0027ve removed this task:\\n \" + taskList.getTasks().get(index - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        taskList.deleteTask(index, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(output+ \"\\nNow you have \" + taskList.getNumberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":44}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"//import static javafx.application.Platform.exit;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":" * ExitCommand helps call the function to update the file once the command is executed","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList is where the list of task is to be stored","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     * @param storage updates the file","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        storage.updateFile(taskList.getTasks());","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(\"Thanks for using me! Seeya! :)\");","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        System.exit(0);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"     * @return true as addCommand is an ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    protected String word;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     * constructor for FindCommand class","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     * @param word to find the task with it","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    public FindCommand(String word) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        this.word \u003d word;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList use to find the tasks with the word","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * @param ui use to print out tasks with word","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui)  {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(taskList.findTaskWithWord(word));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Alvozyn":35}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":" * InvalidCommand is to help indicate that the input command cannot be used","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"public class InvalidCommand extends Command{","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the InvalidCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        //do nothing","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":31}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":" * ListCommand help calls the function to get the entire list for it to be print","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the ListCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList to get the list of tasks","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        String printedList \u003d \"Here are the tasks in your list:\\n\" + taskList.printList();","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(printedList);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an ExitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":33}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":" * MarkCommand help calls the function to mark a task","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    protected int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * constructor of MarkCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param index of the task to be marked","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the MarkCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList to mark the index task","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        taskList.markTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        Task task \u003d taskList.getTasks().get(index-1);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(\"Nice! I\u0027ve marked this task as done:\\n \" + task.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an exitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":45}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    protected int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"     * constructor for the UnmarkCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     * @param index to unmark the index task","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * executes the purpose of the UnmarkCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     * @param taskList to unmark the index task","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"     * @param storage can be ignored but is required due to the abstract class","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * @param ui handles the displaying of the bot outputs","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    public void executeCommand(TaskList taskList, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        taskList.unmarkTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        Task task \u003d taskList.getTasks().get(index - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        ui.printText(\"OK, I\u0027ve marked this task as not done yet:\\n \" + task);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"     * indication if the command should end the program","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"     * @return false as addCommand is not an exitCommand","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":41}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    protected Date deadLineTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    protected String deadLineString;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"     * constructor of Deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     *  It has several subclasses including Deadline and Event","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     * @param item is name of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * @param type is the type of task","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param date is a Date object when the task needs ot be completed by","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     * @param dateString is the same as date but stores the date as string","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    public Deadline(String item, String type, Date date, String dateString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"        deadLineTime \u003d date;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        deadLineString \u003d dateString;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        SimpleDateFormat convertToString \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm a\", Locale.ENGLISH);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + convertToString.format(deadLineTime) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"     * gets the time in which the deadline task suppose to be completed by","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"     * @return the timing of the deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        return deadLineString;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    protected Date eventStart;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    protected Date eventEnd;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    protected String startString;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    protected String endString;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * constructor of the event class","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     * @param item is the task name","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"     * @param type is the type of task","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"     * @param start is a Date object indicating the starting time of the event","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * @param end is a Date object indicating the ending time of the event","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * @param startStringVer is the same as date but stores the date as string","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     * @param endStringVer is the same as date but stores the date as string","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public Event(String item, String type, Date start, Date end, String startStringVer, String endStringVer) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        eventStart \u003d start;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        eventEnd \u003d end;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        startString \u003d startStringVer;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        endString \u003d endStringVer;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        SimpleDateFormat convertToString \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm a\", Locale.ENGLISH);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + convertToString.format(eventStart) + \" To: \" + convertToString.format(eventEnd) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"     * gets the time of the event","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"     * @return the timing of the event in String form","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        return startString + \"-\" + endString;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":44}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    protected String item;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"    protected boolean isComplete;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    protected String types; // todo, deadline, events","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"     * Task is for all todo task","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"     * It is the super class of event and deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"     * @param item is the name of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"     * @param types is the type of the task mainly \"T\" for todo, \"D\" for deadline and \"E\" for event","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    public Task(String item, String types) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        this.item \u003d item;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        this.types \u003d types;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"     * gets the time for the task","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"     * @return \"\" as todo task does not have a timing attached to them","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"     * gets the name of the task","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"     * @return item","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    public String getItem() {","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"        return item;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"     * gets whether the task is mark or not","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"     * @return true for mark and false for unmark","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    public boolean getComplete() {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        return isComplete;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"     * gets the type of task","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"     * @return \"T\" for todo, \"D\" for deadline and \"E\" for event","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    public String getTypes() {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        return types;","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"    public String toString(){","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        String getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"        if (isComplete \u003d\u003d false) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[ ] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[X] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        if (types.equals(\"T\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"            return \"[T]\" + getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"        return getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"     * changes isComplete to true","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"    public void mark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"        isComplete \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"     * changes isComplete to false","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"        isComplete \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":85}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.effect.DropShadow?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\"  maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-text-fill: #FFFFFF; -fx-background-color: indianred\" textOverrun\u003d\"CLIP\" \u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" bottom\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        \u003cCircle fx:id\u003d\"clippedImage\" radius\u003d\"50\" stroke\u003d\"indianred\" strokeType\u003d\"INSIDE\" \u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        \u003c/Circle\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" minHeight\u003d\"552.0\"/\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Alvozyn":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"     * test if task can be deleted through user input and command generated is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"     * @throws FileNotFoundException when path name cannot be found","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public void deleteTask() throws FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        TaskList dummyList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        Storage dummyStorage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        Ui dummyUi \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item1\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item2\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item3\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item4\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        Command c \u003d parser.parse(\"delete 4\", dummyList, dummyUi);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(true, c instanceof DeleteCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        c.executeCommand(dummyList, dummyStorage, dummyUi);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        int actual \u003d dummyList.getTasks().size();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(3,actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"     * test if task can be mark through user input and command generated is correct","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"     * @throws FileNotFoundException when path name cannot be found","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    public void markTask() throws FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        TaskList dummyList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"        Storage dummyStorage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        Ui dummyUi \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item1\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item2\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item3\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"        dummyList.addTask(new Task(\"Item4\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        dummyUi.printText(dummyList.printList());","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        Command c \u003d parser.parse(\"mark 4\", dummyList, dummyUi);","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(false, c instanceof UnmarkCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(true, c instanceof MarkCommand);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        c.executeCommand(dummyList, dummyStorage, dummyUi);","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"        boolean isMark \u003d dummyList.getTasks().get(3).getComplete();","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(true, isMark);","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Alvozyn":70}},{"path":"src/test/java/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"     * test for adding Task object","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public void addItem() { //adding one item","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        TaskList toDoList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        toDoList.addTask(new Task(\"Item1\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        toDoList.addTask(new Task(\"Item2\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        toDoList.addTask(new Task(\"Item3\",\"T\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        String actual \u003d toDoList.getTasks().get(0).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(\"[T][ ] Item1\", actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        actual \u003d toDoList.getTasks().get(2).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        assertEquals(\"[T][ ] Item3\", actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"     * test for adding Deadline Object","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    public void addItemDeadline() { //adding one item","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"            TaskList toDoList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"            SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"            Date date \u003d converterDate.parse(\"1/1/2023 23:59\");","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"            Task task \u003d new Deadline(\"Test2 \", \"D\", date, \"1/1/2023 23:59\");","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"            toDoList.addTask(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"            String actual \u003d toDoList.getTasks().get(0).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"            System.out.println();","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"            assertEquals(\"[D][ ] Test2 (by: 01 Jan 2023 23:59 PM)\", actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"     * test for adding Event object","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    public void addItemEvent() { //adding one item","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"            TaskList toDoList \u003d new TaskList();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"            SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"            Date start \u003d converterDate.parse(\"1/1/2023 23:59\");","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"            Date end \u003d converterDate.parse(\"1/2/2023 23:59\");","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"            Task task \u003d new Event(\"Test3\", \"E\", start, end,\"1/1/2023 23:59\", \"1/2/2023 23:59\");","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"            toDoList.addTask(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"            String actual \u003d toDoList.getTasks().get(0).toString();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"            assertEquals(\"[E][ ] Test3 (From: 01 Jan 2023 23:59 PM To: 01 Feb 2023 23:59 PM)\", actual);","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Alvozyn":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alvozyn":1,"-":20}}]
