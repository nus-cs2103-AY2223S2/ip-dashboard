[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alvozyn":2,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"E-true-cny-3/4/2022 4:00-4/4/2022 23:59","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":1}},{"path":"src/main/java/duke/ArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class ArgumentException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    public ArgumentException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":7}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"    public Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    public Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    public TaskList listOfTasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    public Duke()  {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        storage \u003d new Storage(\"/Users/kristen/Documents/NUS/CS2109S/ip/data/duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"            listOfTasks \u003d new TaskList();","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"            listOfTasks.allTasks \u003d storage.loadFile(listOfTasks.getTasks());","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        }  catch (IOException i) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public void run(String[] launchArgs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        start(launchArgs);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"    private void start(String[] launchArgs) {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"        ui.greet();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        String input \u003d ui.getInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        while(!input.equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"            ui.startProgram(input, listOfTasks, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"            input \u003d ui.getInput();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        new Duke().run(args);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Alvozyn":40,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    public DukeException(String msg) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"        super(msg);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":7}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    public void commandExecute (String input, TaskList toDo, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        String[] instruction \u003d input.split(\" \",2);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"            if(instruction[0].equals(\"list\")) { // printing list","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"            toDo.printList();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"mark\")){ //marking","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"                if(instruction.length \u003c\u003d 1 ){","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"                } else if (! instruction[1].matches(\"[0-9]+\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we marking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"                toDo.changingStatus(0, index);","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"            } else if (instruction[0].equals(\"unmark\")) { //unmarking","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"                if(instruction.length \u003c\u003d 1 )  {","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"                } else if (! instruction[1].matches(\"[0-9]+\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we unmarking again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"                if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"                toDo.changingStatus(1, index);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"            } else if(instruction[0].equals(\"delete\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"                if(instruction.length \u003c\u003d 1 )  {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                } else if (! instruction[1].matches(\"[0-9]+\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"What are we deleting again?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"                int index \u003d Integer.parseInt(instruction[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"                if ((index -1) \u003c 0 || (index-1) \u003e\u003d toDo.numberOfTask()){","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Can\u0027t find the index\");","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"                System.out.println(\" Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"                toDo.deleteTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"                System.out.println(\"Now you have \" + toDo.numberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"            } else { // adding into list","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"                String command \u003d instruction[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"                if(!command.equals(\"todo\") \u0026\u0026 !command.equals(\"deadline\") \u0026\u0026","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"                        !command.equals(\"event\") \u0026\u0026 !command.equals(\"delete\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"                    throw new DukeException(\"*sigh* No such commands, please be serious.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"                if(instruction.length \u003d\u003d 1){","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Yeah let\u0027s keep wasting each other time.\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"                            \" You\u0027re missing the parameters in case you don\u0027t already know.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"                String item \u003d instruction[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"                if(item.trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"                    throw new ArgumentException(\"Spacing out already?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"                if(command.equals(\"todo\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"                    toDo.addItem(\"T\", item);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"                } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"                    String itemANDtime[] \u003d item.split(\"/\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                    if(itemANDtime.length\u003d\u003d 1){","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"How interesting a deadline without a time limit?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"                    } else if(itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                    } else if(itemANDtime[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Hiding from reality I see. Too bad time waits for no man\");","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"                    String time[] \u003d itemANDtime[1].split(\" \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"                    if (!time[0].equals(\"by\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Where did your BY go?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"                    } else if (time[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"A blank time I see\");","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"                    String deadlineTime \u003d itemANDtime[1].split(\" \", 2)[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"                    Date date \u003d converterDate.parse(deadlineTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"                    toDo.addItemDeadline(\"D\", itemANDtime[0], date, deadlineTime);","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"                    if(!item.contains(\"/from\") || !item.contains(\"/to\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"For event please enter the format: event nameOfEvent /from dd/MM/yyyy HH:mm\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"                                \" /to dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"                    String itemANDtime[] \u003d item.split(\" /from \", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"Alvozyn"},"content":"                    if (itemANDtime.length \u003c 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"You forget the event name!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"Alvozyn"},"content":"                    } else if(itemANDtime[0].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Oh? Looks like your item disappeared into space.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"Alvozyn"},"content":"                    String nameItem \u003d itemANDtime[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":125,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"Alvozyn"},"content":"                    String startEnd [] \u003d itemANDtime[1].split(\" /to \");","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"Alvozyn"},"content":"                    if(startEnd.length \u003c2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Please enter the format: event nameOfEvent /from xxx /to xxx\");","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"Alvozyn"},"content":"                    if(startEnd[0].trim().isEmpty() || startEnd[1].trim().isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"Alvozyn"},"content":"                        throw new ArgumentException(\"Please do not leave the timing blank!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"Alvozyn"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterStartDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"Alvozyn"},"content":"                    Date startDate \u003d converterStartDate.parse(startEnd[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"Alvozyn"},"content":"                    Date endDate \u003d  converterStartDate.parse(startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":141,"author":{"gitId":"Alvozyn"},"content":"                    System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":142,"author":{"gitId":"Alvozyn"},"content":"                    toDo.addItemEvent(\"E\", nameItem, startDate, endDate, startEnd[0], startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":143,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":144,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":145,"author":{"gitId":"Alvozyn"},"content":"                System.out.println(\"Now you have \" + toDo.numberOfTask() + \" tasks in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":146,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":147,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":148,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":149,"author":{"gitId":"Alvozyn"},"content":"           storage.updateFile(toDo.getTasks());","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":151,"author":{"gitId":"Alvozyn"},"content":"        } catch (DukeException ex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":152,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(ex.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Alvozyn"},"content":"        } catch (ArgumentException ex2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":154,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(ex2.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":155,"author":{"gitId":"Alvozyn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":156,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"Please enter the time of the format dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":157,"author":{"gitId":"Alvozyn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":158,"author":{"gitId":"Alvozyn"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":160,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":161,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":162,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":164,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":164}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    protected String filePath;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public Storage(String pathName) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        filePath \u003d pathName;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"     * Update the text file whenever a task is added, removed or modified.","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"     * @param entireList A list in which all tasks are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public void updateFile(ArrayList\u003cTask\u003e entireList) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"            PrintWriter pw \u003d new PrintWriter(new FileOutputStream(filePath));","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"            for (int i \u003d 0; i \u003c entireList.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"                Task task \u003d entireList.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"                boolean isMark \u003d task.getStatus();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"                String type \u003d task.getTypes();","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"                String name \u003d task.getItem();","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"                if (type.equals(\"D\")){","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"                    String time \u003d task.getTime();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name + \"-\" + time);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"                } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"                    String time \u003d task.getTime();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"                    String startEnd [] \u003d time.split(\"-\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name + \"-\" + startEnd[0] + \"-\" + startEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"                    pw.println(type + \"-\" + isMark + \"-\" + name);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"            pw.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"        }catch(IOException i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"            i.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"     * Loads the text of the file into an array.","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"     * @param entireList A list in which all tasks are stored","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"    public ArrayList\u003cTask\u003e loadFile(ArrayList\u003cTask\u003e entireList) throws FileNotFoundException {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"            String oneline;","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Alvozyn"},"content":"            while ( (oneline \u003d br.readLine() )!\u003d null) {","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Alvozyn"},"content":"                String lines [] \u003d oneline.split(\"-\", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Alvozyn"},"content":"                Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Alvozyn"},"content":"                if(lines[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Task(lines[2], lines[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Alvozyn"},"content":"                } else if (lines[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Alvozyn"},"content":"                    String nameTime[] \u003d lines[2].split(\"-\", 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Alvozyn"},"content":"                    Date date \u003d converterDate.parse(nameTime[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Deadline(nameTime[0], lines[0], date, nameTime[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":90,"author":{"gitId":"Alvozyn"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Alvozyn"},"content":"                    String nameStartEnd[] \u003d lines[2].split(\"-\", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Alvozyn"},"content":"                    SimpleDateFormat converterDate \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Alvozyn"},"content":"                    Date date1 \u003d converterDate.parse(nameStartEnd[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Alvozyn"},"content":"                    Date date2 \u003d converterDate.parse(nameStartEnd[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Alvozyn"},"content":"                    task \u003d new Event(nameStartEnd[0], lines[0], date1, date2, nameStartEnd[1], nameStartEnd[2]);","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":97,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Alvozyn"},"content":"                if(lines[1].equals(\"true\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Alvozyn"},"content":"                    task.mark();","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Alvozyn"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Alvozyn"},"content":"                entireList.add(task);","lastModifiedDate":"2023-01-30"},{"lineNumber":104,"author":{"gitId":"Alvozyn"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"Alvozyn"},"content":"        } catch (IOException i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"File not found!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"Alvozyn"},"content":"//            i.printStackTrace();","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Alvozyn"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":111,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"Unable to load file. Please check your that the item\u0027s date where it should be in the form of\" +","lastModifiedDate":"2023-01-30"},{"lineNumber":112,"author":{"gitId":"Alvozyn"},"content":"                    \" dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-30"},{"lineNumber":113,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":115,"author":{"gitId":"Alvozyn"},"content":"        return entireList;","lastModifiedDate":"2023-01-30"},{"lineNumber":116,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":117,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":117}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    ArrayList\u003cTask\u003e allTasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"    TaskList(){","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        allTasks \u003d  new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    public int numberOfTask() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        return allTasks.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public void printList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        for (int i \u003d 0; i \u003c allTasks.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"            int index \u003d i + 1;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(index + \". \"+ allTasks.get(i).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    public void addItem(String type, String item) {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Task(item, type);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    public void addItemDeadline(String type, String item, Date time, String timeString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Deadline(item, type, time, timeString);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"    public void addItemEvent(String type, String item, Date time1, Date time2, String start, String end) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"        Task newTask \u003d new Event(item, type, time1, time2, start, end);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"        allTasks.add(newTask);","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + newTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"    public void changingStatus(int x, int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"        if(x \u003d\u003d 0) { //marked","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"            allTasks.get(index-1).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Alvozyn"},"content":"        } else { //unmarked","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Alvozyn"},"content":"            allTasks.get(index-1).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Alvozyn"},"content":"            System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Alvozyn"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\" \" + allTasks.get(index-1).toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Alvozyn"},"content":"        allTasks.remove(index-1);","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Alvozyn"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Alvozyn"},"content":"        return allTasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":73}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    public Ui(InputStream in, PrintStream out) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        this.sc \u003d new Scanner(in);","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"        this.out \u003d out;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public Ui() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        this(System.in, System.out);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public void greet() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"Hello I\u0027m duke.\\nWhat can I do for you?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"        System.out.println(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"    public String getInput() {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"    public void startProgram(String input, TaskList toDo, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"            parser.commandExecute(input, toDo, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Alvozyn":47}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    protected Date deadLineTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    protected String deadLineString;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"    public Deadline(String item, String type, Date date, String dateString) {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"        deadLineTime \u003d date;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"        deadLineString \u003d dateString;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        SimpleDateFormat convertToString \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm a\", Locale.ENGLISH);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + convertToString.format(deadLineTime) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        return deadLineString;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":28}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"import java.util.Date;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    protected Date eventStart;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"    protected Date eventEnd;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"    protected String startString;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    protected String endString;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public Event(String item, String type, Date start, Date end, String startStringVer, String endStringVer) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        super(item,type);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"        eventStart \u003d start;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"        eventEnd \u003d end;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"        startString \u003d startStringVer;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        endString \u003d endStringVer;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"        SimpleDateFormat convertToString \u003d new SimpleDateFormat(\"dd MMM yyyy HH:mm a\", Locale.ENGLISH);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"        return \"[E]\" + super.toString() + \" (From: \" + convertToString.format(eventStart) + \" To: \" + convertToString.format(eventEnd) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"        return startString + \"-\" + endString;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":31}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"    protected String item;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"    protected boolean status;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"    protected String types; // toDo, deadline, events","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"    public Task(String x, String y) {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Alvozyn"},"content":"        item \u003d x;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Alvozyn"},"content":"        types \u003d y;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Alvozyn"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Alvozyn"},"content":"    public String getTime() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Alvozyn"},"content":"        return \"\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"    public String getItem() {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Alvozyn"},"content":"        return item;","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Alvozyn"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Alvozyn"},"content":"        return status;","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Alvozyn"},"content":"    public String getTypes() {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Alvozyn"},"content":"        return types;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Alvozyn"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Alvozyn"},"content":"    public String toString(){","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Alvozyn"},"content":"        String getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Alvozyn"},"content":"        if (status \u003d\u003d false) {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[ ] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Alvozyn"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Alvozyn"},"content":"            getter \u003d \"[X] \" + item;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Alvozyn"},"content":"        if (types.equals(\"T\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Alvozyn"},"content":"            return \"[T]\" + getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Alvozyn"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Alvozyn"},"content":"        return getter;","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Alvozyn"},"content":"    public void mark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Alvozyn"},"content":"        status \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Alvozyn"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Alvozyn"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Alvozyn"},"content":"        status \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Alvozyn"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Alvozyn"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Alvozyn"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Alvozyn"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Alvozyn"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Alvozyn"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Alvozyn"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Alvozyn"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Alvozyn"},"content":"list","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Alvozyn":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Alvozyn"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Alvozyn":1,"-":20}}]
