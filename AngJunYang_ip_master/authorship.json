[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"# Duke.Duke project template","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"instructions on how to use it.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"   first)","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"   in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"3. After that, locate the `src/main/java/Duke.Duke.java` file, right-click it, and choose `Run Duke.Duke.main()` (if the","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"   code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"   like the below as the output:","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AngJunYang":10,"-":19}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"    mainClassName \u003d \"Duke.Duke\"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AngJunYang":19,"-":40}},{"path":"src/main/java/Duke/Chatbot/Chatbot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import Duke.Exceptions.UnimplementedTaskTypeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":" * Main Representation of Duke","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":" * Handles connections between ui, storage, parser and TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"public class Chatbot {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    public boolean isActive \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"     * Specifies the location of the save file to load from","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"     * @param fileDirectory directory of the save file","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"     * @param fileName      name of the save file","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"    public Chatbot(String fileDirectory, String fileName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"        this.storage \u003d new Storage(fileDirectory, fileName);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"        this.parser \u003d new Parser(this, this.ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"     * Starts sensing the input as commands","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"        ui.showStartupMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"        readInput();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"    private void readInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"        Scanner input \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"        while (isActive) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"            parser.parse(input.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"    ","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"     * Triggers UI to print the tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"    public void printTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"        if (tasks.numTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"            ui.showNoTasksMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"        ui.showTasksMessage(tasks.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"     * Adds a task from Save file Representation form","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"     * @param type      Tasktype of new task","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"     * @param arguments arguments like task name and datetime in string","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"    public void addTask(TaskList.Tasktype type, String... arguments) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"            Task toAdd \u003d tasks.convertToTask(type, arguments);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"            tasks.addTask(toAdd);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"            ui.showTaskAddedMessage(toAdd.toString(), tasks.numTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"            onEditTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"            ui.showDateTimeParseError();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"        } catch (UnimplementedTaskTypeException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"            ui.showUnimplementedTaskTypeError();","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"AngJunYang"},"content":"     * Called when taskList is updated to save the TaskList to save file","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"AngJunYang"},"content":"    public void onEditTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"AngJunYang"},"content":"        storage.saveTaskList(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"AngJunYang"},"content":"     * Called to interface with TaskList to remove a task by index","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"AngJunYang"},"content":"     * @param toRemove index of task to remove","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"AngJunYang"},"content":"    public void removeTask(int toRemove) {","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"AngJunYang"},"content":"        if (!isIndexInRange(toRemove)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"AngJunYang"},"content":"        Task removedTask \u003d tasks.removeTask(toRemove);","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"AngJunYang"},"content":"        ui.showRemovedTaskMessage(removedTask.toString(), tasks.numTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"AngJunYang"},"content":"        onEditTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"AngJunYang"},"content":"    private boolean isIndexInRange(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"AngJunYang"},"content":"        if (!tasks.isValidIndex(index)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"AngJunYang"},"content":"            ui.showIndexError();","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"AngJunYang"},"content":"            return false;","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"AngJunYang"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"AngJunYang"},"content":"     * Called to interface with TaskList to remove all current tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"AngJunYang"},"content":"    public void removeAllTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"AngJunYang"},"content":"        tasks.removeAllTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"AngJunYang"},"content":"        ui.showRemoveAllTasksMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"AngJunYang"},"content":"        onEditTask();","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"AngJunYang"},"content":"     * Called to mark an index as incomplete","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"AngJunYang"},"content":"     * @param index the index to mark as incomplete","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"AngJunYang"},"content":"    public void markAsIncomplete(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"AngJunYang"},"content":"        if (!isIndexInRange(index)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"AngJunYang"},"content":"        if (!tasks.getTaskState(index)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"AngJunYang"},"content":"            ui.showTaskStateIncompletedError();","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"AngJunYang"},"content":"        tasks.toggleState(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"AngJunYang"},"content":"        ui.showTaskIncompletedMessage(tasks.getTaskInfo(index));","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"AngJunYang"},"content":"     * Called to make an index of task as complete","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"AngJunYang"},"content":"     * @param index index to mark as complete","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"AngJunYang"},"content":"    public void markAsComplete(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"AngJunYang"},"content":"        if (!isIndexInRange(index)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"AngJunYang"},"content":"        if (tasks.getTaskState(index)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"AngJunYang"},"content":"            ui.showTaskStateCompletedError();","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"AngJunYang"},"content":"        tasks.toggleState(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"AngJunYang"},"content":"        ui.showTaskCompletedMessage(tasks.getTaskInfo(index));","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"AngJunYang"},"content":"    public void find(String args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"AngJunYang"},"content":"        ui.showFindMessage(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"AngJunYang"},"content":"        TaskList foundTasks \u003d tasks.findKeyword(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"AngJunYang"},"content":"        ui.showTasksMessage(foundTasks.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"AngJunYang":172}},{"path":"src/main/java/Duke/Chatbot/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":" * Specifies the names of commands Duke uses","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"public class Messages {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_END \u003d \"GOODBYE\";","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_LIST \u003d \"LIST\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_MARK \u003d \"MARK\";","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_UNMARK \u003d \"UNMARK\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_TODO \u003d \"TODO\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_DEADLINE \u003d \"DEADLINE\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_EVENT \u003d \"EVENT\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_DELETE \u003d \"DELETE\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_DELETE_ALL_DATA \u003d \"DELETEALL\";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    final static String MESSAGE_FIND \u003d \"FIND\";","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"AngJunYang":26}},{"path":"src/main/java/Duke/Chatbot/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import java.util.function.BiPredicate;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":" * Converts user input to make sense of user command","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"    public static final Map\u003cString, BiPredicate\u003cChatbot, String\u003e\u003e commands","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"            \u003d new HashMap\u003cString, BiPredicate\u003cChatbot, String\u003e\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    private final Chatbot chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     * Hooks onto a chatbot and its ui","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"     * @param chatbot chatbot to connect to","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"     * @param ui      ui of chatbot","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    public Parser(Chatbot chatbot, Ui ui) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"        this.chatbot \u003d chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"        setupCommands();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    private void setupCommands() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_END, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"            System.out.println(Messages.MESSAGE_END);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"            chatbot.isActive \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_LIST, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"            chatbot.printTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_MARK, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"            Integer index \u003d -1;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"                index \u003d Integer.valueOf(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"                ui.showIndexNotSpecifiedError();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"            index -\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"            chatbot.markAsComplete(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_UNMARK, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"            Integer index \u003d -1;","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"                index \u003d Integer.valueOf(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"                ui.showIndexError();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"            index -\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"            chatbot.markAsIncomplete(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_TODO, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"            if (args.trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"                ui.showEmptyDescriptionError();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"            chatbot.addTask(TaskList.Tasktype.TODO, args.trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_DEADLINE, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"            String[] inputs \u003d args.split(\"/by\", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"            if (inputs.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"                ui.showIncompleteDeadlineArgumentsError();","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"            } else if (inputs[0].trim() \u003d\u003d \"\" || inputs[1].trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"                ui.showEmptyDescriptionError();","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"AngJunYang"},"content":"            chatbot.addTask(TaskList.Tasktype.DEADLINE, inputs[0].trim(), inputs[1].trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_EVENT, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"AngJunYang"},"content":"            String[] inputs \u003d args.split(\"(/from | /to)\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"AngJunYang"},"content":"            if (inputs.length !\u003d 3) {","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"AngJunYang"},"content":"                ui.showIncompleteEventArgumentsError();","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"AngJunYang"},"content":"            } else if (inputs[0].trim() \u003d\u003d \"\" || inputs[1].trim() \u003d\u003d \"\" || inputs[2].trim() \u003d\u003d \"\") {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"AngJunYang"},"content":"                ui.showEmptyDescriptionError();","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"AngJunYang"},"content":"            chatbot.addTask(TaskList.Tasktype.EVENT, inputs[0].trim(), inputs[1].trim(), inputs[2].trim());","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_DELETE, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"AngJunYang"},"content":"            Integer index \u003d -1;","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"AngJunYang"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"AngJunYang"},"content":"                index \u003d Integer.valueOf(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"AngJunYang"},"content":"            } catch (NumberFormatException ex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"AngJunYang"},"content":"                ui.showIndexError();","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"AngJunYang"},"content":"                return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"AngJunYang"},"content":"            index -\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"AngJunYang"},"content":"            chatbot.removeTask(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_DELETE_ALL_DATA, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"AngJunYang"},"content":"            chatbot.removeAllTasks();","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"AngJunYang"},"content":"        commands.put(Messages.MESSAGE_FIND, (chatbot, args) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"AngJunYang"},"content":"            if (args \u003d\u003d \"\") {","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"AngJunYang"},"content":"                ui.showEmptyFindKeywordError();","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"AngJunYang"},"content":"            chatbot.find(args);","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"AngJunYang"},"content":"            return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"AngJunYang"},"content":"     * Checks if the Userinput is valid and calls the corresponding BiFunction","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"AngJunYang"},"content":"     * to execute the command","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"AngJunYang"},"content":"     * @param nextLine Next line of User Input","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"AngJunYang"},"content":"    public void parse(String nextLine) {","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"AngJunYang"},"content":"        //Assuming commands start with a space.","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"AngJunYang"},"content":"        String[] userCommand \u003d nextLine.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"AngJunYang"},"content":"        String upperCaseUserCommand \u003d userCommand[0].toUpperCase();","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"AngJunYang"},"content":"        if (commands.containsKey(upperCaseUserCommand)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"AngJunYang"},"content":"            boolean processedCommandState \u003d commands.get(upperCaseUserCommand)","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"AngJunYang"},"content":"                    .test(chatbot, userCommand.length \u003e 1 ? userCommand[1] : \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"AngJunYang"},"content":"            if (!processedCommandState) {","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"AngJunYang"},"content":"                chatbot.isActive \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"AngJunYang"},"content":"                throw new RuntimeException();","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"AngJunYang"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"AngJunYang"},"content":"            //Command not found.","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"AngJunYang"},"content":"            ui.showUnrecognisedCommandError();","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":166}},{"path":"src/main/java/Duke/Chatbot/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import Duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    private final String fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"    private final String fileDir;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    private final String fileSaveLoc;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    public Storage(String fileDir, String fileName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"        this.fileDir \u003d fileDir;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"        this.fileSaveLoc \u003d fileDir + \"/\" + fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    public List\u003cString\u003e load() throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        List\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"            Path path \u003d Paths.get(fileDir);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"                new File(fileDir).mkdir();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"            if (!Files.exists(Paths.get(fileSaveLoc))) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"                new File(fileSaveLoc).createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"            Scanner fileReader \u003d new Scanner(new File(fileSaveLoc));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"            while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"                fileContent.add(fileReader.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"            fileReader.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"        return fileContent;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"    public void saveTaskList(TaskList data) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"            FileWriter writerObj \u003d new FileWriter(fileSaveLoc, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"            writerObj.write(data.toSaveData());","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"            writerObj.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":63}},{"path":"src/main/java/Duke/Chatbot/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import Duke.Exceptions.UnimplementedTaskTypeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import Duke.Tasks.DeadlineTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import Duke.Tasks.EventTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import Duke.Tasks.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import Duke.Tasks.TodoTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":" * TaskList keeps tracks of all operations related to","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":" * the current tasks, as well as manipulation of tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"     * Loads the tasklist from save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"     * @param tasks List of tasks in save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"    public TaskList(List\u003cString\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"        this();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        for (String info : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"            loadData(info);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"     * If no save file is found, create an empty TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"    private void loadData(String data) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"        if (data.length() \u003d\u003d 0)","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"            return;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"        Task todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"        switch (data.charAt(0)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"                todo \u003d TodoTask.loadData(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"                todo \u003d DeadlineTask.loadData(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"                todo \u003d EventTask.loadData(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"                throw new IllegalArgumentException();","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"     * Converts this TaskList\u0027s contents to Save File Representation","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"     * @return Save File Representation of this TaskList\u0027s tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"        for (Task nextTask : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"            output +\u003d nextTask.toSaveData();","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"            output +\u003d \"\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"        return output;","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"     * Returns the User Representation of a specific task at an index","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"     * @param index index of task to query","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"     * @return User Representation of task queried","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"    public String getTaskInfo(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"        return tasks.get(index).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"     * Checks if the index specified corresponds to a Task in TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"AngJunYang"},"content":"     * @param index index of task to query","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"AngJunYang"},"content":"     * @return True if task index corresponds to a task, false otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"AngJunYang"},"content":"    public boolean isValidIndex(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"        return tasks.size() \u003e index;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"AngJunYang"},"content":"     * Removes and returns a task at a specific index","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"AngJunYang"},"content":"     * @param toRemove Index of task to be removed","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"AngJunYang"},"content":"     * @return The removed task","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"AngJunYang"},"content":"    public Task removeTask(int toRemove) {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"AngJunYang"},"content":"        Task removedTask \u003d tasks.get(toRemove);","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"AngJunYang"},"content":"        tasks.remove(toRemove);","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"AngJunYang"},"content":"        return removedTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"AngJunYang"},"content":"     * Returns the number of tasks currently in this TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"AngJunYang"},"content":"     * @return The number of tasks currently in this TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"AngJunYang"},"content":"    public int numTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"AngJunYang"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"AngJunYang"},"content":"     * Returns the completion state of a task specified by the input index","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"AngJunYang"},"content":"     * @param index the index of the Task to query","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"AngJunYang"},"content":"     * @return Returns true if task corresponding to this index is completed, false otherwise","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"AngJunYang"},"content":"    public boolean getTaskState(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"AngJunYang"},"content":"        return tasks.get(index).getCompletionStatus();","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"AngJunYang"},"content":"     * Toggles the state of a task specified by the input index","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"AngJunYang"},"content":"     * @param index the index of the Task to toggle state","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"AngJunYang"},"content":"    public void toggleState(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"AngJunYang"},"content":"        tasks.get(index).toggleState();","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"AngJunYang"},"content":"     * Adds a task to the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"AngJunYang"},"content":"     * @param toAdd the Task to add","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"AngJunYang"},"content":"    public void addTask(Task toAdd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"AngJunYang"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"AngJunYang"},"content":"     * Changes this TaskList into User Representation form","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"AngJunYang"},"content":"     * @return This TaskList in User Representation form","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"AngJunYang"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"AngJunYang"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"AngJunYang"},"content":"        for (Task entry : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"AngJunYang"},"content":"            i +\u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"AngJunYang"},"content":"            result +\u003d ((i \u003d\u003d 1 ? \"\" : \"\\n\") + i + \".\" + entry);","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"AngJunYang"},"content":"        return result;","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"AngJunYang"},"content":"     * Converts a task in Save File Representation form into its corresponding","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"AngJunYang"},"content":"     * Todo, Deadline or Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"AngJunYang"},"content":"     * @param type      Enum specifying the type of Task to generate","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"AngJunYang"},"content":"     * @param arguments Array of strings representing the name and optionally the DateTime in string","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"AngJunYang"},"content":"     * @return Returns the Task generated from this Save File Representation form.","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"AngJunYang"},"content":"     * @throws DateTimeParseException         Throws this Error if DateTime String given cannot be parsed","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"AngJunYang"},"content":"     * @throws UnimplementedTaskTypeException Throws this Error if Tasktype given does not match an implemented Task","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"AngJunYang"},"content":"    public Task convertToTask(Tasktype type, String[] arguments)","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"AngJunYang"},"content":"            throws DateTimeParseException, UnimplementedTaskTypeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"AngJunYang"},"content":"        switch (type) {","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"AngJunYang"},"content":"            case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"AngJunYang"},"content":"                return new TodoTask(arguments[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"AngJunYang"},"content":"            case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"AngJunYang"},"content":"                return new EventTask(arguments[0], LocalDateTime.parse(arguments[1]),","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"AngJunYang"},"content":"                        LocalDateTime.parse(arguments[2]));","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"AngJunYang"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"AngJunYang"},"content":"                return new DeadlineTask(arguments[0], LocalDateTime.parse(arguments[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"AngJunYang"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"AngJunYang"},"content":"                throw new UnimplementedTaskTypeException();","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"AngJunYang"},"content":"     * Removes all elements from this TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"AngJunYang"},"content":"    public void removeAllTasks() {","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"AngJunYang"},"content":"        tasks.clear();","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"AngJunYang"},"content":"     * Returns a new TaskList where each element\u0027s User Representation contains the keyword","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"AngJunYang"},"content":"     * @param keyword keyword to search for","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"AngJunYang"},"content":"     * @return new TaskList containing relevant Tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"AngJunYang"},"content":"    public TaskList findKeyword(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"AngJunYang"},"content":"        TaskList foundTasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"AngJunYang"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"AngJunYang"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"AngJunYang"},"content":"                foundTasks.addTask(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"AngJunYang"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"AngJunYang"},"content":"        return foundTasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"AngJunYang"},"content":"     *  Specifies the Tasktypes currently supported by TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"AngJunYang"},"content":"    public enum Tasktype {","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"AngJunYang"},"content":"        TODO,","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"AngJunYang"},"content":"        EVENT,","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"AngJunYang"},"content":"        DEADLINE","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":224}},{"path":"src/main/java/Duke/Chatbot/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":" * Handles the output to be printed to user.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to user when an error","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"     * occurs when loading data.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error loading data!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to user when","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"     * index user specified is larger than the size of the list","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    public void showIndexError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Index specified must be smaller than current list size.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to user when","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"     * user does not specify an index in Delete","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"     * mark and unmark commands","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"    public void showIndexNotSpecifiedError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Index not specified\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to user when a task has been successfully added to the list","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"     * @param taskMessage    User representation of the task that has just been added","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     * @param newTasksLength length of tasks after this addition","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"    public void showTaskAddedMessage(String taskMessage, int newTasksLength) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"        showTaskEditedMessage(taskMessage, newTasksLength);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"    private void showTaskEditedMessage(String taskMessage, int newTasksLength) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"\\t\" + taskMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Now you have \" + newTasksLength + \" tasks in the list\");","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to user on startup","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"    public void showStartupMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"        String logo \u003d \"               _     __,..---\\\"\\\"-._                 \u0027;-,\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"                \"        ,    _/_),-\\\"`             \u0027-.                `\\\\\\\\\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"                \"       \\\\|.-\\\"`    -_)                 \u0027.                ||\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"                \"       /`   a   ,                      \\\\              .\u0027/\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"                \"       \u0027.___,__/                 .-\u0027    \\\\_        _.-\u0027.\u0027\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"                \"          |\\\\  \\\\      \\\\         /`        _`\\\"\\\"\\\"\\\"\\\"\\\"`_.-\u0027\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"                \"             _/;--._, \u003e        |   --.__/ `\\\"\\\"\\\"\\\"\\\"\\\"`\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"                \"           (((-\u0027  __//`\u0027-......-;\\\\      )\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"                \"                (((-\u0027       __//  \u0027--. /\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"                \"                          (((-\u0027    __//\\n\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"                \"                                 (((-\u0027\";","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"        String MESSAGE_START \u003d \"What can I do for you?\";","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Squeak squeak\\n\" + logo);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(MESSAGE_START);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to user when message is successfully removed from the list","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"     * @param taskMessage User representation of the message successfully removed","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"     * @param taskLength  Length of the list after this removal","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"    public void showRemovedTaskMessage(String taskMessage, int taskLength) {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Got it. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"        showTaskEditedMessage(taskMessage, taskLength);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"     * Shows the User representation of the tasks that are currently in the list","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"     * @param tasks User representation of the tasks that are currently in the list","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"    public void showTasksMessage(String tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown when task the user is trying to mark","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"     * has already been marked","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"AngJunYang"},"content":"    public void showTaskStateCompletedError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Task is already marked as done.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown when the task a user is trying to mark","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"AngJunYang"},"content":"     * has successfully been marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"AngJunYang"},"content":"     * @param taskMessage User representation of the task the user has just marked","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"AngJunYang"},"content":"    public void showTaskCompletedMessage(String taskMessage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"\\t\" + taskMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to the user if the task a user is trying to unmark","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"AngJunYang"},"content":"     * is currently unmarked","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"AngJunYang"},"content":"    public void showTaskStateIncompletedError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Task is already marked as incompelted.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to the user if the task a user is trying to unmark","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"AngJunYang"},"content":"     * has been successfully unmarked","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"AngJunYang"},"content":"     * @param taskMessage User Representation of the task the user has just unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"AngJunYang"},"content":"    public void showTaskIncompletedMessage(String taskMessage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"I have maked this task as incomplete:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"\\t\" + taskMessage);","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to the user if no Description is given","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"AngJunYang"},"content":"     * following a Task command.","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"AngJunYang"},"content":"    public void showEmptyDescriptionError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to the user if Deadline Command is called","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"AngJunYang"},"content":"     * without the appropriate commands","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"AngJunYang"},"content":"    public void showIncompleteDeadlineArgumentsError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Invalid number of args. Pls add a /by in your command, \" +","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"AngJunYang"},"content":"                \"or ensure task name is not not empty\");","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to the user if Event Command is called","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"AngJunYang"},"content":"     * without the appropriate commands","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"AngJunYang"},"content":"    public void showIncompleteEventArgumentsError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Invalid number of args. Pls add a /from and /to in your command,\" +","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"AngJunYang"},"content":"                \" or ensure task name is not not empty\");","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to the user if Duke does not recognise","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"AngJunYang"},"content":"     * the command that has been entered","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"AngJunYang"},"content":"    public void showUnrecognisedCommandError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to user if Command given included an invalid datetime","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"AngJunYang"},"content":"    public void showDateTimeParseError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Unable to parse datetime.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown to user if Save data contains unimplemented task types","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"AngJunYang"},"content":"    public void showUnimplementedTaskTypeError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Task type is not implemented\");","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to user if Deleteall command is run","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"AngJunYang"},"content":"    public void showRemoveAllTasksMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Deletion complete!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown to user if list is called","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"AngJunYang"},"content":"     * when no tasks are in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"AngJunYang"},"content":"    public void showNoTasksMessage() {","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"There are no tasks to print!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"AngJunYang"},"content":"     * Error message to be shown when Find command is called","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"AngJunYang"},"content":"     * when no Keyword is specified","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"AngJunYang"},"content":"    public void showEmptyFindKeywordError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Error: Find has no keyword to find for\");","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"AngJunYang"},"content":"     * Message to be shown when Find command is called","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"AngJunYang"},"content":"     * @param args Keyword entered into find command","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"AngJunYang"},"content":"    public void showFindMessage(String args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"AngJunYang"},"content":"        System.out.println(\"Finding tasks related to keyword: \" + args);","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":217}},{"path":"src/main/java/Duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"        db.flip();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"        return db;","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"    private void flip() {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":61}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import Duke.Chatbot.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    final static String FILE_NAME \u003d \"save.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    final static String SAVE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    private final Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    private final Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"        new Chatbot(SAVE_DIRECTORY, FILE_NAME).run();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"     * The main entry point for all JavaFX applications.","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"     * The start method is called after the init method has returned,","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     * and after the system is ready for the application to begin running.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"     * NOTE: This method is called on the JavaFX Application Thread.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"     *              primary stages.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"     * @throws Exception if something goes wrong","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"        //Step 1. Setting up required components","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"        //The container for the content of the chat to scroll.","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"        scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"        dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"        userInput \u003d new TextField();","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"        sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"        scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"        assert scene !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"        assert FILE_NAME !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"        stage.setScene(scene);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"        stage.show();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"        //Step 2. Formatting the window to look as expected","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"        // You will need to import `javafx.scene.layout.Region` for this.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane.setLeftAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"AngJunYang"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"AngJunYang"},"content":"        //Step 3. Add functionality to handle user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"AngJunYang"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"AngJunYang"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"AngJunYang"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"AngJunYang"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"AngJunYang"},"content":"            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"AngJunYang"},"content":"            userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"AngJunYang"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"AngJunYang"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"AngJunYang"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"AngJunYang"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"AngJunYang"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"AngJunYang"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"AngJunYang"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"AngJunYang"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"AngJunYang"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"AngJunYang"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"AngJunYang"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"AngJunYang"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"AngJunYang"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"AngJunYang"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"AngJunYang"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"AngJunYang"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"AngJunYang"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"AngJunYang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"AngJunYang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"AngJunYang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"AngJunYang"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"AngJunYang"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"AngJunYang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"AngJunYang"},"content":"                DialogBox.getUserDialog(userText.getText(), new ImageView(user).getImage()),","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"AngJunYang"},"content":"                DialogBox.getDukeDialog(dukeText.getText(), new ImageView(duke).getImage())","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"AngJunYang"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"AngJunYang"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"AngJunYang"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"AngJunYang"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"AngJunYang"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"AngJunYang"},"content":"        assert \"\" !\u003d input;","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"AngJunYang"},"content":"        return \"Duke heard: \" + input;","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"AngJunYang":161,"-":2}},{"path":"src/main/java/Duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":" * DukeException is thrown when Duke is unable to read the savefile\u0027s contents,","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":" * or if the savefile is corrupted / altered wrongly.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":9}},{"path":"src/main/java/Duke/Exceptions/UnimplementedTaskTypeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":" * UnimplementedTaskTypeException occurs if the save file has saved an event type","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":" * that is not yet implemented in Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"public class UnimplementedTaskTypeException extends Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":8}},{"path":"src/main/java/Duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"public class Launcher {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"        assert true;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":13}},{"path":"src/main/java/Duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"            stage.show();","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":31}},{"path":"src/main/java/Duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":50}},{"path":"src/main/java/Duke/Tasks/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":" * DeadlineTask is a task that only has a end date.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"    LocalDateTime dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"     * Init function of DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"     * @param taskName Name of this DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"     * @param dueDate  LocalDateTime to complete this task by","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    public DeadlineTask(String taskName, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"     * Converts the Information from save file to load as a DeadlineTask","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"     * @param input Information from save file","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"     * @return the DeadlineTask loaded from save","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"    public static Task loadData(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"        String[] inputEvent \u003d input.split(\"\\\\|\", 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"        Task newEvent \u003d new DeadlineTask(inputEvent[2], LocalDateTime.parse(inputEvent[3]));","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"        newEvent.loadCompletionStatus(inputEvent[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"        return newEvent;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     * Converts the DeadlineTask to a String to save in file","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"     * @return Representation of DeadlineTask in save file","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"        return \"D|\" + (getCompletionStatus() ? \"1\" : \"0\") +","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"                \"|\" + taskName + \"|\" + dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"     * Converts the DeadlineTask to a String to be shown to user","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"     * @return Representation of DeadlineTask for user","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + displayLocalDate(dueDate) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":57}},{"path":"src/main/java/Duke/Tasks/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":" * EventTask is a task that has a start and end date","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"    LocalDateTime dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"    LocalDateTime startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"     * Init function of EventTask","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"     * @param taskName  name of this Event","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"     * @param startDate LocalDateTime to start of Event","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     * @param dueDate   LocalDateTime to end of Event","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    public EventTask(String taskName, LocalDateTime startDate, LocalDateTime dueDate) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"     * Loads Information from save file representation as a EventTask","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     * @param input Information from save file to load","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"     * @return EventTask generated from save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    public static Task loadData(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"        String[] inputEvent \u003d input.split(\"\\\\|\", 5);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"        Task newEvent \u003d new EventTask(inputEvent[2], LocalDateTime.parse(inputEvent[3]),","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"                LocalDateTime.parse(inputEvent[4]));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"        newEvent.loadCompletionStatus(inputEvent[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"        return newEvent;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"     * Converts EventTask to save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"     * @return Save file representation of EventTask","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"        return \"E|\" + (getCompletionStatus() ? \"1\" : \"0\") +","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"                \"|\" + taskName + \"|\" + startDate + \"|\" + dueDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"     * Converts EventTask to string for user","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"     * @return Representation of EventTask for user","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + displayLocalDate(startDate)","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"                + \" to: \" + displayLocalDate(dueDate) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":60}},{"path":"src/main/java/Duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":" * Abstract class to represent a Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":" * Has a taskName and completionStatus, which all tasks have.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    protected final String taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    private boolean completionStatus;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"     * Abstract constructor for Task to set taskName.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     * CompletionStatus is false by default","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"     * @param taskName Name of this task","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"        this.completionStatus \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"     * Toggles the completion status of this task","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     * converts to completed task if task was not completed","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"     * converts to uncompleted task if task was completed","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    public void toggleState() {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"        completionStatus \u003d !completionStatus;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"     * Returns the completion status of this task","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"     * @return the completion status of this task","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    public boolean getCompletionStatus() {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"        return completionStatus;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"     * Loads the completion status from save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"     * @param inp Loads the completion status of this task from save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"    public void loadCompletionStatus(String inp) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"        completionStatus \u003d (inp \u003d\u003d \"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"     * Abstract method to convert this task to save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"     * @return Converts this Task to save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"    public abstract String toSaveData();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"     * Converts this task into a string for user","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"AngJunYang"},"content":"     * @return Converts this Task into a string for user","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"AngJunYang"},"content":"        return \"[\" + (completionStatus ? \"X\" : \" \") + \"] \" + taskName;","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"AngJunYang"},"content":"    protected String displayLocalDate(LocalDateTime input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"AngJunYang"},"content":"        return input.format(DateTimeFormatter.ofPattern(\"E h:mma\u0027, \u0027MMM d yyyy\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"AngJunYang":74}},{"path":"src/main/java/Duke/Tasks/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package Duke.Tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":" * The most basic task TodoTask implements task and accepts a task Name.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"    public TodoTask(String taskName) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"        super(taskName);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"     * Init function for loadData","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"     * @param input Save file representation of this TodoTask","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"     * @return TodoTask generated from Save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    public static Task loadData(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"        String[] inputEvent \u003d input.split(\"\\\\|\", 3);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"        Task newEvent \u003d new TodoTask(inputEvent[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"        newEvent.loadCompletionStatus(inputEvent[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"        return newEvent;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"     * Converts this TodoTask to save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"     * @return Converts this TodoTask to Save file representation","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    public String toSaveData() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"        return \"T|\" + (getCompletionStatus() ? \"1\" : \"0\") +","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"                \"|\" + taskName;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"     * Converts this TodoTask to a string for user","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"     * @return Converts this TodoTask to string for user","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":48}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"\u003cfx:root xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"AngJunYang":19}},{"path":"src/test/java/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"import Duke.Chatbot.Chatbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"import Duke.Chatbot.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"    final static String FILE_NAME \u003d \"save.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"    final static String SAVE_DIRECTORY \u003d \"data\";","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    public void chatBotDummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"        Chatbot chatbot \u003d new Chatbot(SAVE_DIRECTORY, FILE_NAME);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"        assertTrue(chatbot.isActive);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    public void TaskListDummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"        assertEquals(tasks.numTasks(), 0);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":24}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"hello","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"mark","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"unmark","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"TODO slap a rat","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"toDO pet a rat","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"mark 1","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"mark 1","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"unmark 1","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"unmark 1","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"delete 1","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"delete 1","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"delete 1","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"delete 9999","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"deadline drink water /by 2015-01-29 06:00","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"deadline drink water /by 2015-01-29T06:00","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"event dance On The fl0or /from 2022-01-22T12:34 /to 2059-11-12T00:00","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"deadline leap year /by 2028-02-29T00:12","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"list","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"delete","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"DELETEALL","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"list","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"deleteALL","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"lISt","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"AngJunYang":26}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"del /s /q data","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"java -classpath ..\\bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"AngJunYang":2,"-":19}}]
