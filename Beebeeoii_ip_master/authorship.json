[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"# Membot","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"Membot is your personal chat-bot that helps manage your tasks well! It works well with tasks with a deadline, or even tasks with a starting and ending date. It is built for keyboard users and is blazing fast to use.","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"3. After that, locate the `src/main/java/Launcher.java` file, right-click it, and choose `Run Launcher.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see `Membot` working:","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"  \u003cimg src\u003d\"./docs/Ui.png\" width\u003d\"280\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Beebeeoii":7,"-":13}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    mainClassName \u003d \"membot.Launcher\"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    archiveBaseName \u003d \"membot\"","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    archiveVersion \u003d \"v0.3\"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Beebeeoii":22,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"This user guide is written for users who are interested to learn more about how `Membot` works and how to use its features.","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"## Table of Contents","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"- [Introduction](#introduction)","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"- [Getting Started](#getting-started)","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"- [Commands](#commands)","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"  - [Show help message - `help`](#show-help-message---help)","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"  - [View all tasks - `list`](#view-all-tasks---list)","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"  - [Create a TODO task - `todo`](#create-a-todo-task---todo)","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"  - [Create a DEADLINE task - `deadline`](#create-a-deadline-task---deadline)","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"  - [Create a EVENT task - `event`](#create-a-event-task---event)","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"  - [Find a task - `find`](#find-a-task---find)","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"  - [Sort all tasks - `sort`](#sort-all-tasks---sort)","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"  - [Delete a task - `delete`](#delete-a-task---delete)","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"  - [Mark a task as completed - `done`](#mark-a-task-as-completed---done)","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"  - [Mark a task as incomplete - `undone`](#mark-a-task-as-incomplete---undone)","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"  - [Exit Membot - `exit`](#exit-membot---exit)","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"## Introduction","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"\u003cdiv style\u003d\"text-align: center;\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"  \u003cimg src\u003d\"./Ui.png\" width\u003d\"280\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"Membot is your personal chat-bot that helps manage your tasks well! It works well with tasks with a deadline, or even tasks with a starting and ending date. It is built for keyboard users and is blazing fast to use.","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"## Getting Started","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"1. Please ensure you have Java 11 or above installed on your computer. You may check your Java version via `java -version`.","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"2. Download the latest jar from the [release page](https://github.com/Beebeeoii/ip/releases).","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"3. Copy the file to any directory you wish. Ensure that you have the permissions to read/write in that directory.","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"4. Run `java -jar membot.jar` in a terminal in that directory to start `Membot`. A data directory will be created in the location you execute the command from.","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"5. Enjoy using your personal chat-bot `Membot`!","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"- [X] Create tasks (`TODO`)","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"- [X] Create tasks with a deadline (`DEADLINE`)","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"- [X] Create tasks with a starting date/time and an ending date/time (`EVENT`)","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"- [X] Delete tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"- [X] Find tasks by keyword(s)","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"- [X] Sort tasks by a specified option","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"- [X] Mark tasks as complete/incomplete","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"- [X] View all tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"## Commands","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"### Show help message - `help`","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"Shows a help message with all the available commands and their corresponding descriptions.","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"help","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"### View all tasks - `list`","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"Lists out all tasks.","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"### Create a TODO task - `todo`","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"Creates a task with a task title.","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"**Syntax**: `todo [title]`","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"todo Clean my room","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"### Create a DEADLINE task - `deadline`","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"Creates a task with a deadline.","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"**Syntax**: `deadline [title] /by [datetime]`","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"\u003e Note: `datetime` has to be in the following format if you want this task to be","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"sortable by `date` - **dd/MM/yyyy HH:mm**.","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"**Sample input 1:**","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"deadline CS2103 iP Week 6 /by tomorrow 3pm","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"\u003e This is acceptable, but task will not be regarded when `sort date` is executed.","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"**Sample input 2:**","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"deadline CS2103 iP Week 6 /by 15/03/2023 15:00","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"\u003e This task will be regarded when `sort date` is executed.","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"### Create a EVENT task - `event`","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"Creates a task with a start and end date/time.","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"**Syntax**: `event [title] /from [datetime] /to [datetime]`","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"\u003e Note: `datetime` has to be in the following format if you want this task\u0027s start and end date/time","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"\u003e to be viewed as a `DateTime` object - **dd/MM/yyyy HH:mm**.","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"**Sample input 1:**","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 4 /from tomorrow 2pm /to tomorrow 4pm","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"**Sample input 2:**","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 4 /from 16/03/2023 14:00 /to 16/03/2023 16:00","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"### Find a task - `find`","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"Finds a task with any given keyword(s).","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"**Syntax:** `find [keyword(s)]`","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"find cs2103","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"### Sort all tasks - `sort`","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"Sorts all tasks by a specified order.","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"Available orders:","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"- `date` - sorts `deadline` tasks by their deadline recency","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"- `title` - sorts all tasks by their title","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"- `status` - sorts all tasks by their completed status","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"**Syntax:** `sort [date|title|status]`","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"sort date","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"### Delete a task - `delete`","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"Deletes a task from the list.","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"**Syntax:** `delete [index]`","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"\u003e Index is the **index of the task in the list** at a given point in time.","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"delete 5","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"### Mark a task as completed - `done`","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"Marks a task from the list as completed.","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"**Syntax:** `done [index]`","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"\u003e Index is the **index of the task in the list** at a given point in time.","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"done 4","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"### Mark a task as incomplete - `undone`","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"Marks a task from the list as incomplete.","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"**Syntax:** `undone [index]`","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"\u003e Index is the **index of the task in the list** at a given point in time.","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"**Sample input:**","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"```text","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"undone 6","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"```","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"### Exit Membot - `exit`","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"Exits `Membot` safely.","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Beebeeoii":174,"-":29}},{"path":"src/main/java/membot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.ui.Gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * This is the main entry of Membot","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":13}},{"path":"src/main/java/membot/Membot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Timer;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import membot.storage.StorageManager;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.EmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * Main application class.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class Membot {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private static final String FILE_NAME \u003d \"./data/tasks.txt\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private static final String TEST_FILE_NAME \u003d \"./data/test_tasks.txt\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private static final int EXIT_DELAY \u003d 500;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private final Printable ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private StorageManager manager;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * Generates an instance of Membot to run. Multiple instances can be","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     * used if there are multiple types of views to render (e.g. CLI and GUI).","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui The engine for displaying data to a user view.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * @param isTest True if Membot instance is used for test purposes, false otherwise.","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    public Membot(Printable ui, boolean isTest) {","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            String fileName \u003d isTest ? TEST_FILE_NAME : FILE_NAME;","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            this.manager \u003d new StorageManager(fileName);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            Task.load(manager.loadFromFile());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            this.execute(\"help\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            ui.printlnError(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            exit();","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     * Executes the command that corresponds to the input string.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     * @param input A \u003ccode\u003eString\u003c/code\u003e command input.","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public void execute(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        String s \u003d input.trim();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        Command command;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            command \u003d Command.parse(s, ui, this);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            command.execute();","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            if (this.manager !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                try {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"                    Task.save(this.manager);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"                    this.ui.printlnError(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        } catch (EmptyInputException | InvalidCommandException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(\"Sorry I do not understand what to do!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * Cleans up Membot and exits.","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    public void exit() {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        new Timer().schedule(new TimerTask() {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"            @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"            public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"                System.exit(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        }, EXIT_DELAY);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":81}},{"path":"src/main/java/membot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.EmptyInputException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command based on the user input. A \u003ccode\u003eCommand\u003c/code\u003e object has its own","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * characteristic based on its \u003ccode\u003eexecute()\u003c/code\u003e function.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    protected String input;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    protected Printable ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    protected Command(Printable ui) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    protected Command(String input, Printable ui) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the corresponding \u003ccode\u003eCommand\u003c/code\u003e object based on the input.","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A \u003ccode\u003ePrintable\u003c/code\u003e object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"     * @return The corresponding \u003ccode\u003eCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"     * @throws EmptyInputException If the user input is empty.","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"     * @throws InvalidCommandException If the user input does not correspond to any valid \u003ccode\u003eCommand\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public static Command parse(String input, Printable ui, Membot membot)","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"            throws EmptyInputException, InvalidCommandException {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"            throw new EmptyInputException(\"Input cannot be empty\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            switch (CommandType.valueOf(inputArr[0].toUpperCase())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            case HELP:","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                return new HelpCommand(ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            case LIST:","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                return new ListCommand(ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            case EXIT:","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"                return new ExitCommand(ui, membot);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            case DONE:","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"                return new DoneCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            case UNDONE:","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"                return new UndoneCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"            case DELETE:","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"                return new DeleteCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"            case FIND:","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                return new FindCommand(input, ui);","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"            case TODO:","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                return new TodoCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"                return new DeadlineCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"            case EVENT:","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"                return new EventCommand(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"            case SORT:","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"                return new SortCommand(input, ui);","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"                assert false : \"Unknown command\";","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(String.format(\"%s is not a valid command!\", inputArr[0]));","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        throw new InvalidCommandException(String.format(\"%s is not a valid command!\", inputArr[0]));","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"     * Runs a chunk of code depending on the \u003ccode\u003eCommand\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    public abstract void execute();","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":93}},{"path":"src/main/java/membot/commands/CommandType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Valid commands that is recognised by membot.Membot.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public enum CommandType {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    HELP,","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    LIST,","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    DONE,","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    UNDONE,","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    DELETE,","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    FIND,","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    TODO,","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    EVENT,","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    SORT,","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    EXIT","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Beebeeoii":18}},{"path":"src/main/java/membot/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.NoDeadlineFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which creates a \u003ccode\u003eTask\u003c/code\u003e that has a deadline attached to it.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eDeadlineCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    protected DeadlineCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            String[] normalised \u003d InputValidator.normaliseDeadlineInput(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            Deadline task \u003d new Deadline(normalised[1], normalised[2]);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(\"New task created!\", \"\", task.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IndexOutOfBoundsException | NoDeadlineFoundException | InvalidCommandException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"deadline [title] /by [deadline]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"deadline physics project /by tomorrow 3pm\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":41}},{"path":"src/main/java/membot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which deletes a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eDeleteCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    protected DeleteCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (InputValidator.isSingleInputValid(this.input, false, true)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            int taskId \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"                Task deletedTask \u003d Task.delete(taskId);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.println(","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                        \"Deleted! The task has been deleted:\",","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                        String.format(\"%d. %s\", taskId, deletedTask.toString())","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                );","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printlnError(\"Invalid Task ID!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"delete [Task ID]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"delete 1\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":47}},{"path":"src/main/java/membot/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which marks a \u003ccode\u003eTask\u003c/code\u003e as completed.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class DoneCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eDoneCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    protected DoneCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e as completed.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (InputValidator.isSingleInputValid(this.input, false, true)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            int taskId \u003d Integer.parseInt(this.input.split(\" \")[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"                Task.setStatusCompleted(taskId);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.println(","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                        \"Well done! The task is marked as completed:\",","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                        String.format(\"%d. %s\", taskId, Task.listOne(taskId)),","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                        \"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                );","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printlnError(\"Invalid Task ID!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"done [Task ID]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"done 4\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":48}},{"path":"src/main/java/membot/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.NoEndDateTimeFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.NoStartDateTimeFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which creates a \u003ccode\u003eTask\u003c/code\u003e that has a start and end dateTime attached to it.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eEventCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    protected EventCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            String[] normalised \u003d InputValidator.normaliseEventInput(input);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            Event task \u003d new Event(normalised[1], normalised[2], normalised[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(\"New task created!\", \"\", task.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IndexOutOfBoundsException | InvalidCommandException | NoStartDateTimeFoundException","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"                 | NoEndDateTimeFoundException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"event [title] /from [start] /to [end]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"event piano concert /from tomorrow 3pm /to tomorrow 6pm\\\"\");","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"            Task.deleteLast();","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":48}},{"path":"src/main/java/membot/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command that will exit the application. It has \u003ccode\u003eisExit\u003c/code\u003e set to true.","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    private final Membot membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eByeCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    protected ExitCommand(Printable ui, Membot membot) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        super(ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        this.isExit \u003d true;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        this.membot \u003d membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * Prints out farewell message.","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        this.ui.println(\"Have a good day! Good bye!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        this.membot.exit();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":32}},{"path":"src/main/java/membot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which finds a \u003ccode\u003eTask\u003c/code\u003e that contains a certain keyword","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * in its title.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    protected FindCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        if (InputValidator.isSingleInputValid(this.input, true, false)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"            String keyword \u003d input.substring(5);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"            ArrayList\u003cTask\u003e tasks \u003d Task.find(keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.println(\"There are no tasks containing \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"                return;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            String[] a \u003d new String[tasks.size() + 1];","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            a[0] \u003d String.format(\"Here are the tasks containing \\\"%s\\\":\", keyword);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            for (int i \u003d 1; i \u003c\u003d tasks.size(); ++i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                a[i] \u003d String.format(\"%d. %s\", i, tasks.get(i - 1).toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(a);","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"find [keyword]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"find study\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":45}},{"path":"src/main/java/membot/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command that provides users help with using the application.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eHelpCommand\u003c/code\u003e object.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    protected HelpCommand(Printable ui) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        super(ui);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Prints out a list of useful commands for Membot.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        this.ui.println(","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"                Stream.concat(","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"                        Stream.of(\"Welcome to Membot! Here are some things you can do:\", \"\"),","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"                        Arrays.stream(CommandType.class.getEnumConstants())","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                                .map(x -\u003e x.toString().toLowerCase() + \" - \" + getCommandDescription(x))","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                ).toArray(String[]::new)","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    private String getCommandDescription(CommandType command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        switch (command) {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        case HELP:","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            return \"view all available commands\";","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        case LIST:","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            return \"view all tasks\";","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        case FIND:","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"            return \"find a task using a keyword\";","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        case SORT:","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"            return \"Sort all tasks based on option specified\";","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        case TODO:","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"            return \"create a TODO task\";","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"            return \"create a DEADLINE task\";","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        case EVENT:","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"            return \"create an EVENT task\";","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        case DELETE:","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"            return \"delete a task\";","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        case DONE:","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            return \"mark a task as completed\";","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        case UNDONE:","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            return \"mark a task as incomplete\";","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        case EXIT:","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"            return \"exit Membot\";","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            return \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":64}},{"path":"src/main/java/membot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which lists out all created \u003ccode\u003eTask\u003c/code\u003e and their","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * corresponding statuses.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eListCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    protected ListCommand(Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        super(ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * Prints out all created \u003ccode\u003eTask\u003c/code\u003e and their corresponding statuses.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        String[] tasks \u003d Task.listAll();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (tasks.length \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(\"Excellent! You do not have any tasks at hand!\");","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            String[] allTasks \u003d Task.listAll();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            String[] a \u003d new String[allTasks.length + 1];","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            a[0] \u003d \"Here are your updated tasks:\";","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            for (int i \u003d 1; i \u003c\u003d allTasks.length; ++i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                a[i] \u003d String.format(\"%d. %s\", i, allTasks[i - 1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(a);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":38}},{"path":"src/main/java/membot/commands/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.DateTimeParser;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which sorts the \u003ccode\u003eTask\u003c/code\u003e list based on the sort","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * option specified.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class SortCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    protected SortCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        if (!InputValidator.isSingleInputValid(this.input, false, false)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"                    String.format(\"Invalid Syntax: \\\"sort [%s]\\\"\", getSortOptions(\"|\")),","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"sort date\\\"\"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            return;","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            switch (SortOption.valueOf(this.input.split(\" \")[1].toUpperCase())) {","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            case TITLE:","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                Task.sort(Comparator.comparing(Task::getTitle));","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            case DATE:","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"                Task.sort(this::sortByDate);","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            case STATUS:","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                Task.sort(Comparator.comparing(Task::printStatus));","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"            case TYPE:","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"                Task.sort(Comparator.comparing(Task::getTaskType));","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"            default:","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"                assert false : String.format(\"Available options are: %s\", getSortOptions(\", \"));","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid sort option!\",","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                    String.format(\"Available options are: %s\", getSortOptions(\", \"))","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printSeparator();","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"            return;","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        new ListCommand(this.ui).execute();","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        this.ui.printSeparator();","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    private String getSortOptions(String delimiter) {","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        return String.join(delimiter, Arrays.stream(SortOption.class.getEnumConstants())","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"                .map(x -\u003e x.toString().toLowerCase()).toArray(String[]::new));","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    private int sortByDate(Task t1, Task t2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        LocalDateTime t1DT;","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        LocalDateTime t2DT;","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"            t1DT \u003d DateTimeParser.parse(t1.getDeadline());","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"            return 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"            t2DT \u003d DateTimeParser.parse(t2.getDeadline());","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"            return -1;","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        return t1DT.compareTo(t2DT);","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"enum SortOption {","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    DATE,","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    STATUS,","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    TITLE,","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    TYPE","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Beebeeoii":93}},{"path":"src/main/java/membot/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which creates a basic \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eTodoCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    protected TodoCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * Creates a \u003ccode\u003eTodo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            String[] normalised \u003d InputValidator.normaliseTodoInput(this.input);","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            ToDo task \u003d new ToDo(normalised[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.println(\"New task created!\", \"\", task.toString());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        } catch (InvalidCommandException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"todo [title]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"todo math homework\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":41}},{"path":"src/main/java/membot/commands/UndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.commands;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Printable;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a command which marks a \u003ccode\u003eTask\u003c/code\u003e as to be completed.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class UndoneCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eUndoneCommand\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param input User input into the application.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * @param ui A Printable object used for UI display.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    protected UndoneCommand(String input, Printable ui) {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        super(input, ui);","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * Marks a \u003ccode\u003eTask\u003c/code\u003e as to be completed.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public void execute() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (InputValidator.isSingleInputValid(this.input, false, true)) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            int taskId \u003d Integer.parseInt(this.input.split(\" \")[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"                Task.setStatusNew(taskId);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.println(","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                        \"The task is now marked as not done yet:\",","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                        String.format(\"%d. %s\", taskId, Task.listOne(taskId))","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"                );","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                new ListCommand(this.ui).execute();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"                this.ui.printlnError(\"Invalid Task ID!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            this.ui.printlnError(","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"Invalid Syntax: \\\"undone [Task ID]\\\"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    \"\",","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"                    \"Example: \\\"undone 3\\\"\"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Beebeeoii":47}},{"path":"src/main/java/membot/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.model;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.DateTimeParser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e that contains a deadline for the task","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * to be completed by.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    public static final String TAG \u003d \"[D]\";","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private String deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eDeadline\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param title The title of the task to be completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @param deadline The deadline for the task to be completed by.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public Deadline(String title, String deadline) {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        super(title);","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            LocalDateTime dateTime \u003d DateTimeParser.parse(deadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            this.deadline \u003d DateTimeParser.format(dateTime);","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the deadline attached to the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        return this.deadline;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no start dateTime attached","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    public String getStartDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        return EMPTY;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no end dateTime attached","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public String getEndDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        return EMPTY;","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eDeadline\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        return Deadline.TAG + super.toString() + \" (by: \" + this.deadline + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Beebeeoii":85}},{"path":"src/main/java/membot/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.model;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.DateTimeParser;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e that contains a start dateTime and","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * an end dateTime of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    public static final String TAG \u003d \"[E]\";","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    private String start;","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    private String end;","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eEvent\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * @param title The title of the task to be completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     * @param start The start dateTime of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * @param end The end dateTime of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * @throws DateTimeException If the end dateTime is earlier than the start dateTime.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    public Event(String title, String start, String end) throws DateTimeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        super(title);","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            LocalDateTime d1 \u003d DateTimeParser.parse(start);","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            LocalDateTime d2 \u003d DateTimeParser.parse(end);","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            if (d2.isBefore(d1)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                throw new DateTimeException(\"/to time cannot be before /from time\");","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            this.start \u003d DateTimeParser.format(d1);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            this.end \u003d DateTimeParser.format(d2);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            this.start \u003d start;","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            this.end \u003d end;","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no deadline attached","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        return Task.EMPTY;","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the start dateTime attached to the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"     * @return The start dateTime attached to the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"    public String getStartDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        return this.start;","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the end dateTime attached to the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * @return The end dateTime attached to the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"    public String getEndDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        return this.end;","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eEvent\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        return Event.TAG + super.toString() + \" (from: \" + this.start + \" to: \" + this.end + \")\";","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Beebeeoii":95}},{"path":"src/main/java/membot/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.model;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.nio.charset.StandardCharsets;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Base64;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.storage.Outputable;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":" * Represents a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    protected static final String EMPTY \u003d \"~\";","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private static LinkedList\u003cTask\u003e tasks \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private final String title;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private TaskStatus status;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     * @param title The title of the task to be completed.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    protected Task(String title) {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        this.status \u003d TaskStatus.NEW;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        Task.tasks.add(this);","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isIdValid(int id) {","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        return id \u003e\u003d 1 \u0026\u0026 id \u003c\u003d Task.tasks.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    public static void setStatusCompleted(int id) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        if (!Task.isIdValid(id)) {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        Task.tasks.get(id - 1).setStatus(TaskStatus.COMPLETED);","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    public static void setStatusNew(int id) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        if (!Task.isIdValid(id)) {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        Task.tasks.get(id - 1).setStatus(TaskStatus.NEW);","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"     * Deletes a \u003ccode\u003eTask\u003c/code\u003e from the list of tasks with its \u003ccode\u003eid\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     * @param id The \u003ccode\u003eid\u003c/code\u003e of the \u003ccode\u003eTask\u003c/code\u003e to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * @return The deleted \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IndexOutOfBoundsException If the \u003ccode\u003eid\u003c/code\u003e provided is not within range.","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public static Task delete(int id) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        if (!Task.isIdValid(id)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        return Task.tasks.remove(id - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"     * Deletes the last \u003ccode\u003eTask\u003c/code\u003e from the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"     * @return The deleted \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IndexOutOfBoundsException If the list of tasks is empty.","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    public static Task deleteLast() throws NoSuchElementException {","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        return Task.tasks.removeLast();","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"    private void setStatus(TaskStatus status) {","lastModifiedDate":"2023-01-16"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves all \u003ccode\u003eTask\u003c/code\u003e in the task list and returns their","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"     * titles as a string array.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"     * @return A string array of all the \u003ccode\u003eTask\u003c/code\u003e titles.","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    public static String[] listAll() {","lastModifiedDate":"2023-01-16"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        return Task.tasks.stream().map(Task::toString).toArray(String[]::new);","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves a \u003ccode\u003eTask\u003c/code\u003e title via its \u003ccode\u003eid\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"     * @param id The \u003ccode\u003eid\u003c/code\u003e of the \u003ccode\u003eTask\u003c/code\u003e to be retrieved.","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"     * @return The title of the specified \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IndexOutOfBoundsException If the \u003ccode\u003eid\u003c/code\u003e is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"    public static String listOne(int id) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        if (!Task.isIdValid(id)) {","lastModifiedDate":"2023-01-16"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-16"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"        return Task.tasks.get(id - 1).toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"     * Prints out the \u003ccode\u003eTask\u003c/code\u003e status.","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e status.","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"    public String printStatus() {","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        switch (this.status) {","lastModifiedDate":"2023-01-16"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        case NEW:","lastModifiedDate":"2023-01-16"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            return \" \";","lastModifiedDate":"2023-01-16"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        case COMPLETED:","lastModifiedDate":"2023-01-16"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"            return \"✔️\";","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        default:","lastModifiedDate":"2023-01-16"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"            assert false : \"Available Task status are: NEW, COMPLETED\";","lastModifiedDate":"2023-02-03"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        return \"?\";","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"     * Writes the lists of \u003ccode\u003eTask\u003c/code\u003e objects to an \u003ccode\u003eOutputable\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * @param out An \u003ccode\u003eOutputable\u003c/code\u003e object that handles saving of \u003ccode\u003eTask\u003c/code\u003e objects.","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException If some sort of IO error occurs during the process of writing.","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"    public static void save(Outputable out) throws IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        Base64.Encoder encoder \u003d Base64.getEncoder();","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"        for (Task t : Task.tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"            String s \u003d String.format(\"%s | %s | %s | %s | %s | %s\",","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.getTaskType().toString().getBytes(StandardCharsets.UTF_8)),","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.title.getBytes(StandardCharsets.UTF_8)),","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.status.toString().getBytes(StandardCharsets.UTF_8)),","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.getDeadline().getBytes(StandardCharsets.UTF_8)),","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.getStartDateTime().getBytes(StandardCharsets.UTF_8)),","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                    encoder.encodeToString(t.getEndDateTime().getBytes(StandardCharsets.UTF_8)));","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"            sb.append(s).append(\"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"        out.write(sb.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"     * Reads and decodes an array of \u003ccode\u003eTask\u003c/code\u003e data to be used by membot.Membot.","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"     * @param in The array of data to be loaded.","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"    public static void load(ArrayList\u003cString\u003e in) {","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"        Base64.Decoder decoder \u003d Base64.getDecoder();","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        for (String s : in) {","lastModifiedDate":"2023-01-21"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"            String[] split \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"            byte[] taskType \u003d decoder.decode(split[0]);","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"            byte[] title \u003d decoder.decode(split[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"            byte[] status \u003d decoder.decode(split[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"            byte[] deadline \u003d decoder.decode(split[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"            byte[] startDateTime \u003d decoder.decode(split[4]);","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"            byte[] endDateTime \u003d decoder.decode(split[5]);","lastModifiedDate":"2023-02-01"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"            Task restoredTask \u003d null;","lastModifiedDate":"2023-01-21"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"            switch (TaskType.valueOf(new String(taskType, StandardCharsets.UTF_8))) {","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"            case TODO:","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"                restoredTask \u003d new ToDo(new String(title, StandardCharsets.UTF_8));","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"                restoredTask \u003d new Deadline(new String(title, StandardCharsets.UTF_8),","lastModifiedDate":"2023-01-21"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"                        new String(deadline, StandardCharsets.UTF_8));","lastModifiedDate":"2023-01-21"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"            case EVENT:","lastModifiedDate":"2023-01-21"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"                restoredTask \u003d new Event(new String(title, StandardCharsets.UTF_8),","lastModifiedDate":"2023-01-21"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"                        new String(startDateTime, StandardCharsets.UTF_8),","lastModifiedDate":"2023-01-21"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"                        new String(endDateTime, StandardCharsets.UTF_8));","lastModifiedDate":"2023-01-21"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"                assert false : \"Unknown Task type\";","lastModifiedDate":"2023-02-03"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"            restoredTask.setStatus(TaskStatus.valueOf(new String(status, StandardCharsets.UTF_8)));","lastModifiedDate":"2023-01-21"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"     * Finds all \u003ccode\u003eTask\u003c/code\u003e that has titles that contains the specified keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"     * @param keyword The keyword to be used to find \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"     * @return The list of \u003ccode\u003eTask\u003c/code\u003e objects that have titles containing the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"    public static ArrayList\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"        return Task.tasks.stream()","lastModifiedDate":"2023-02-07"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"                .filter(x -\u003e x.title.contains(keyword))","lastModifiedDate":"2023-02-07"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"                .collect(Collectors.toCollection(ArrayList::new));","lastModifiedDate":"2023-02-07"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"     * Sorts the current list of \u003ccode\u003eTask\u003c/code\u003e with a specified \u003ccode\u003eComparator\u003c/code\u003e.","lastModifiedDate":"2023-02-07"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"     * @param c \u003ccode\u003eComparator\u003c/code\u003e used to sort the \u003ccode\u003eTask\u003c/code\u003e list.","lastModifiedDate":"2023-02-07"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"    public static void sort(Comparator\u003c? super Task\u003e c) {","lastModifiedDate":"2023-02-07"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"        Task.tasks.sort(c);","lastModifiedDate":"2023-02-07"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":209,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"     * Retrieves the \u003ccode\u003eTask\u003c/code\u003e title.","lastModifiedDate":"2023-02-07"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"     * @return Title of the task.","lastModifiedDate":"2023-02-07"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"    public String getTitle() {","lastModifiedDate":"2023-02-07"},{"lineNumber":215,"author":{"gitId":"Beebeeoii"},"content":"        return this.title;","lastModifiedDate":"2023-02-07"},{"lineNumber":216,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":218,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":219,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":221,"author":{"gitId":"Beebeeoii"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":222,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":223,"author":{"gitId":"Beebeeoii"},"content":"    public abstract TaskType getTaskType();","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":225,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":226,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the deadline attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":227,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":228,"author":{"gitId":"Beebeeoii"},"content":"     * @return The deadline attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":229,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":230,"author":{"gitId":"Beebeeoii"},"content":"    public abstract String getDeadline();","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":232,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":233,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the start dateTime attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":234,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":235,"author":{"gitId":"Beebeeoii"},"content":"     * @return The start dateTime attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":236,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":237,"author":{"gitId":"Beebeeoii"},"content":"    public abstract String getStartDateTime();","lastModifiedDate":"2023-01-29"},{"lineNumber":238,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":239,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the end dateTime attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":241,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":242,"author":{"gitId":"Beebeeoii"},"content":"     * @return The end dateTime attached to the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":243,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":244,"author":{"gitId":"Beebeeoii"},"content":"    public abstract String getEndDateTime();","lastModifiedDate":"2023-01-29"},{"lineNumber":245,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":246,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":247,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":248,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":249,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":250,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":251,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"        return String.format(\"[%s] %s\", this.printStatus(), this.title);","lastModifiedDate":"2023-01-16"},{"lineNumber":254,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":255,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"},{"lineNumber":256,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":257,"author":{"gitId":"Beebeeoii"},"content":"enum TaskStatus {","lastModifiedDate":"2023-01-16"},{"lineNumber":258,"author":{"gitId":"Beebeeoii"},"content":"    NEW,","lastModifiedDate":"2023-01-16"},{"lineNumber":259,"author":{"gitId":"Beebeeoii"},"content":"    COMPLETED","lastModifiedDate":"2023-01-16"},{"lineNumber":260,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"},{"lineNumber":261,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Beebeeoii":261}},{"path":"src/main/java/membot/model/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.model;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents the available \u003ccode\u003eTask\u003c/code\u003e types.","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public enum TaskType {","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    TODO,","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    DEADLINE,","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    EVENT","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Beebeeoii":10}},{"path":"src/main/java/membot/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.model;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents a basic \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    public static final String TAG \u003d \"[T]\";","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    public ToDo(String title) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"        super(title);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * @return The \u003ccode\u003eTask\u003c/code\u003e type.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        return TaskType.TODO;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no deadline attached","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        return Task.EMPTY;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no start dateTime attached","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public String getStartDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        return Task.EMPTY;","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"     * Returns \u003ccode\u003e\"~\"\u003c/code\u003e to signify that there is no end dateTime attached","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * to any \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     * @return \u003ccode\u003e\"~\"\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public String getEndDateTime() {","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        return Task.EMPTY;","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"     * Returns a \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eToDo\u003c/code\u003e task.","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        return ToDo.TAG + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Beebeeoii":65}},{"path":"src/main/java/membot/storage/Outputable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" * An interface for outputting data to a storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"public interface Outputable {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"     * Outputs data to a storage, such as a database or a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     * @param data Data to be outputted.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException If an error occurs when writing to a storage.","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    void write(String data) throws IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Beebeeoii":16}},{"path":"src/main/java/membot/storage/StorageManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" * Represents a file storage manager responsible for reading and writing","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":" * data to and from a file.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class StorageManager implements Outputable {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private final File file;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eStorageManager\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param filePath The absolute or relative path to the file to be read from","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     *                 or written to.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException If \u003ccode\u003efile\u003c/code\u003e cannot be read from or written to.","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public StorageManager(String filePath) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Writes data to the \u003ccode\u003efile\u003c/code\u003e.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"     * @param data Data to be outputted.","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException If \u003ccode\u003efile\u003c/code\u003e cannot be read from or written to.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    public void write(String data) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.file));","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        writer.write(data);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        writer.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * Reads data from \u003ccode\u003efile\u003c/code\u003e into an \u003ccode\u003eArrayList\u003c/code\u003e, delimited","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     * by new lines.","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * @return An \u003ccode\u003eArrayList\u003c/code\u003e of the lines in the file.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * @throws IOException If \u003ccode\u003efile\u003c/code\u003e cannot be read from or written to.","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public ArrayList\u003cString\u003e loadFromFile() throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        Scanner reader \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        ArrayList\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        while (reader.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"            String data \u003d reader.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"            lines.add(data);","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        reader.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        return lines;","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Beebeeoii":65}},{"path":"src/main/java/membot/ui/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.ui.controller.MainWindow;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.UiPrinter;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" * The main driver class for initialising JavaFX GUI for Membot.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private static final String MAIN_WINDOW_FXML \u003d \"/view/MainWindow.fxml\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private static final String MEMBOT_ICON \u003d \"/assets/membotIcon.png\";","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(MAIN_WINDOW_FXML));","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(MEMBOT_ICON)));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            stage.setTitle(\"Membot\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"            stage.setMinWidth(400);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            stage.setMinHeight(600);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setMembot(","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"                    new Membot(new UiPrinter(fxmlLoader.\u003cMainWindow\u003egetController().getPrinter()), false));","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            stage.show();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":41}},{"path":"src/main/java/membot/ui/controller/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.ui.controller;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private DialogBox(String text, Image img, boolean isError) {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        if (isError) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            dialog.setTextFill(Color.ORANGERED);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    private void flip() {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public static DialogBox getUserDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        return new DialogBox(text, img, isError);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    public static DialogBox getMembotDialog(String text, Image img, boolean isError) {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        var db \u003d new DialogBox(text, img, isError);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        db.flip();","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        return db;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":65}},{"path":"src/main/java/membot/ui/controller/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.ui.controller;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Message;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private static final String BOT_ICON \u003d \"/assets/botIcon.png\";","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"    private static final String USER_ICON \u003d \"/assets/userIcon.png\";","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private Membot membot;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_ICON));","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    private final Image botImage \u003d new Image(this.getClass().getResourceAsStream(BOT_ICON));","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"    public void setMembot(Membot d) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        this.membot \u003d d;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    public Consumer\u003cMessage\u003e getPrinter() {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        return m -\u003e dialogContainer.getChildren().add(DialogBox.getMembotDialog(m.getMessage(), botImage, m.isError()));","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Membot\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    @FXML","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                DialogBox.getUserDialog(input, userImage, false)","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        this.membot.execute(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":63}},{"path":"src/main/java/membot/utils/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":" * A helper class that helps with \u003ccode\u003eString\u003c/code\u003e to/from \u003ccode\u003eLocalDateTime\u003c/code\u003e conversion.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DATETIME_FORMAT \u003d \"dd/MM/yyyy HH:mm\";","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DATE_FORMAT \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * Converts a \u003ccode\u003eString\u003c/code\u003e representation of a dateTime to a \u003ccode\u003eLocalDateTime\u003c/code\u003e","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * object.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param dateTime A \u003ccode\u003eString\u003c/code\u003e representation of a dateTime.","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eLocalDateTime\u003c/code\u003e object that corresponds to the \u003ccode\u003eString\u003c/code\u003e representation.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * @throws DateTimeParseException If the \u003ccode\u003eString\u003c/code\u003e representation","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     *      cannot be converted to a \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public static LocalDateTime parse(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDateTime.parse(dateTime, DateTimeFormatter.ofPattern(DateTimeParser.DATETIME_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeParseException e1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"            return LocalDate.parse(dateTime, DateTimeFormatter.ofPattern(DateTimeParser.DATE_FORMAT)).atStartOfDay();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     * Converts a \u003ccode\u003eLocalDateTime\u003c/code\u003e to a \u003ccode\u003eString\u003c/code\u003e representation.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"     * @param dateTime A \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"     * @return A \u003ccode\u003eString\u003c/code\u003e representation of the \u003ccode\u003eLocalDateTime\u003c/code\u003e object.","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    public static String format(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(DateTimeParser.DATETIME_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"            return dateTime.format(DateTimeFormatter.ofPattern(DateTimeParser.DATE_FORMAT));","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/main/java/membot/utils/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e when the input is empty when it is","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * not supposed to be.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class EmptyInputException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public EmptyInputException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/membot/utils/InputValidator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.List;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":" * Represents a helper class that validates and cleanses inputs by users.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"public class InputValidator {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    private static final String[] RESERVED \u003d new String[]{\"/by\", \"/to\", \"/from\"};","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    private static final int MIN_INPUT_LENGTH \u003d 2;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    private static final String DELIMITER_SPACE \u003d \" \";","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     * Validates if commands in the form of \u003ccode\u003e[command] [input]\u003c/code\u003e is valid.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The command to be validated.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"     * @param isMulti True if the input contains multiple words delimited by `space` characters.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"     * @param isInt True if the input is an integer.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if command is valid, else false.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    public static boolean isSingleInputValid(String input, boolean isMulti, boolean isInt) {","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        String[] split \u003d input.split(DELIMITER_SPACE);","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (split.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        if (!isMulti \u0026\u0026 split.length !\u003d MIN_INPUT_LENGTH) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        if (!isInt) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"            Integer.parseInt(split[1]);","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            return true;","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"            return false;","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"     * Cleanses and normalises a \u003ccode\u003etodo\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The \u003ccode\u003etodo\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"     * @return The normalised command in a form of a \u003ccode\u003eString\u003c/code\u003e array.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"     * @throws InvalidCommandException If the command parsed is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    public static String[] normaliseTodoInput(String input) throws InvalidCommandException {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        String[] split \u003d input.split(DELIMITER_SPACE);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cString\u003e reservedList \u003d Arrays.asList(RESERVED);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        for (String s : split) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"            if (reservedList.contains(s)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                throw new InvalidCommandException(\"There should not be any reserved keywords\");","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        String[] res \u003d new String[2];","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            res[0] \u003d input.substring(0, 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"            res[1] \u003d input.substring(5);","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Unable to normalise input as a Todo input\");","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        return res;","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"     * Cleanses and normalises a \u003ccode\u003edeadline\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The \u003ccode\u003edeadline\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"     * @return The normalised command in a form of a \u003ccode\u003eString\u003c/code\u003e array.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"     * @throws InvalidCommandException If the command parsed is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"     * @throws NoDeadlineFoundException If no deadline can be found in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"    public static String[] normaliseDeadlineInput(String input) throws","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            InvalidCommandException, NoDeadlineFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"        String[] split \u003d input.split(DELIMITER_SPACE);","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        if (split.length \u003c 4) {","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Invalid Syntax - \\\"deadline [title] /by [deadline]\\\" \"","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"                    + \"(e.g. \\\"deadline physics project /by tomorrow 3pm\\\"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        int totalKeywords \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cString\u003e reservedList \u003d Arrays.asList(RESERVED);","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"        for (String s : split) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"            if (reservedList.contains(s)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"                totalKeywords++;","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"                keywords.add(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        if (totalKeywords \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Missing /by keyword in input!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        } else if (totalKeywords \u003e 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Too many keywords in input!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        } else if (!keywords.get(0).equals(\"/by\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Missing /by keyword in input!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        if (split[1].equals(\"/by\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Empty title\");","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        String[] res \u003d new String[3];","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"            res[0] \u003d input.substring(0, 8);","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"            res[2] \u003d extractDeadline(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"            res[1] \u003d input.substring(9, input.indexOf(\"/by \") - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Unable to normalise input as a Deadline input\");","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"        return res;","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"     * Cleanses and normalises an \u003ccode\u003eevent\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"     * @param input The \u003ccode\u003eevent\u003c/code\u003e command.","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"     * @return The normalised command in a form of a \u003ccode\u003eString\u003c/code\u003e array.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"     * @throws InvalidCommandException If the command parsed is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"     * @throws NoStartDateTimeFoundException If no start dateTime can be found in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"     * @throws NoEndDateTimeFoundException If no end dateTime can be found in the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    public static String[] normaliseEventInput(String input) throws InvalidCommandException,","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"            NoStartDateTimeFoundException, NoEndDateTimeFoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        String[] split \u003d input.split(DELIMITER_SPACE);","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"        if (split.length \u003c 6) {","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Invalid syntax\");","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"        int totalKeywords \u003d 0;","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        List\u003cString\u003e reservedList \u003d Arrays.asList(RESERVED);","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        ArrayList\u003cString\u003e keywords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"        String firstKeyword \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"        for (String s : split) {","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"            if (reservedList.contains(s)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"                totalKeywords++;","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"                keywords.add(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"                if (firstKeyword.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"                    firstKeyword \u003d s;","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        if (totalKeywords !\u003d 2 || !(keywords.contains(\"/from\") \u0026\u0026 keywords.contains(\"/to\"))) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"There should only have /from and /to keyword\");","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"        if (split[1].equals(\"/from\") || split[1].equals(\"/to\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Empty title\");","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"        String[] res \u003d new String[4];","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"            res[0] \u003d input.substring(0, 5);","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"            res[1] \u003d input.substring(6, input.indexOf(firstKeyword + \" \") - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"            res[2] \u003d extractStartDateTime(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"            res[3] \u003d extractEndDateTime(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"            throw new InvalidCommandException(\"Unable to normalise input as a Event input\");","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"        return res;","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"    private static String extractDeadline(String input) throws NoDeadlineFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"        int deadlineStartIndex \u003d input.indexOf(\"/by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"        if (deadlineStartIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"            throw new NoDeadlineFoundException(\"Unable to find \\\"/by\\\" subcommand\");","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"        return input.substring(deadlineStartIndex + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"    private static String extractStartDateTime(String input) throws NoStartDateTimeFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"        int dateTimeStartIndex \u003d input.indexOf(\"/from \");","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTimeStartIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"            throw new NoStartDateTimeFoundException(\"Unable to find \\\"/from\\\" subcommand\");","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"        String substring \u003d input.substring(dateTimeStartIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"        if (substring.split(DELIMITER_SPACE)[1].startsWith(\"/\") || substring.split(DELIMITER_SPACE)[1].isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"            throw new NoStartDateTimeFoundException(\"Unable to find start dateTime\");","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"        int dateTimeEndIndex \u003d substring.indexOf(\" /\");","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTimeEndIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"            return input.substring(dateTimeStartIndex + 6);","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"            return input.substring(dateTimeStartIndex + 6, dateTimeEndIndex + dateTimeStartIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"    private static String extractEndDateTime(String input) throws NoEndDateTimeFoundException {","lastModifiedDate":"2023-01-23"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"        int dateTimeStartIndex \u003d input.indexOf(\"/to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTimeStartIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"            throw new NoEndDateTimeFoundException(\"Unable to find \\\"/to\\\" subcommand\");","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"        String substring \u003d input.substring(dateTimeStartIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"Beebeeoii"},"content":"        if (substring.split(DELIMITER_SPACE)[1].startsWith(\"/\") || substring.split(DELIMITER_SPACE)[1].isEmpty()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"            throw new NoEndDateTimeFoundException(\"Unable to find end dateTime\");","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"        int dateTimeEndIndex \u003d substring.indexOf(\" /\");","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"        if (dateTimeEndIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"Beebeeoii"},"content":"            return input.substring(dateTimeStartIndex + 4);","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"Beebeeoii"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"            return input.substring(dateTimeStartIndex + 4, dateTimeEndIndex + dateTimeStartIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Beebeeoii":220}},{"path":"src/main/java/membot/utils/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e when the command input is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public class InvalidCommandException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    public InvalidCommandException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"        super(String.format(\"[Invalid command] %s\", msg));","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Beebeeoii":10}},{"path":"src/main/java/membot/utils/NoDeadlineFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e when no deadline can be found when it is","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * supposed to be.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class NoDeadlineFoundException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public NoDeadlineFoundException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/membot/utils/NoEndDateTimeFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e when no end dateTime can be found when it is","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * supposed to be.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class NoEndDateTimeFoundException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public NoEndDateTimeFoundException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/membot/utils/NoStartDateTimeFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.utils;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Represents an \u003ccode\u003eException\u003c/code\u003e when no start dateTime can be found when it is","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" * supposed to be.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"public class NoStartDateTimeFoundException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    public NoStartDateTimeFoundException(String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"        super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Beebeeoii":11}},{"path":"src/main/java/membot/view/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.view;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * Message encapsulates the message that Membot outputs to the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public class Message {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    private final String message;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"    private final boolean isError;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"     * Generates a \u003ccode\u003eMessage\u003c/code\u003e object.","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"     * @param message The message to be outputted to the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"     * @param isError True if it is an error message, false otherwise.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public Message(String message, boolean isError) {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        this.isError \u003d isError;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"     * Returns the messgae encapsulated by this \u003ccode\u003eMessage\u003c/code\u003e object.","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"     * @return The messgae encapsulated.","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        return this.message;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"     * Returns whether the message is an error message.","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"     * @return True if it is an error message, false otherwise.","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public boolean isError() {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        return this.isError;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Beebeeoii":38}},{"path":"src/main/java/membot/view/Printable.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.view;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":" * An interface for displaying data to a user view.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"public interface Printable {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"     * Prints data to followed by a new line.","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"     * @param out Data to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"    void println(String... out);","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"     * Prints error message followed by a new line.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"     * @param out Data to be printed.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    void printlnError(String... out);","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    void printSeparator();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":22}},{"path":"src/main/java/membot/view/UiPrinter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package membot.view;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":" * Printer for JavaFX view interface.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"public class UiPrinter implements Printable {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    private final Consumer\u003cMessage\u003e printer;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"    public UiPrinter(Consumer\u003cMessage\u003e printer) {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        this.printer \u003d printer;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void println(String... out) {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        if (out.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        printer.accept(new Message(concat(out), false));","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    public void printlnError(String... out) {","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        if (out.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"            return;","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        printer.accept(new Message(concat(out), true));","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public void printSeparator() {","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        // Does nothing as UI does not need any separator.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"    private String concat(String[] in) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        for (String s : in) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"            sb.append(String.format(\"%s\\n\", s));","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"        \u003cLabel fx:id\u003d\"dialog\" maxWidth\u003d\"300.0\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"            \u003cInsets right\u003d\"8.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"         \u003c/HBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"60.0\" fitWidth\u003d\"60.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":19}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"membot.ui.controller.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"        \u003cButton fx:id\u003d\"sendButton\" defaultButton\u003d\"true\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxWidth\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Beebeeoii":19}},{"path":"src/test/java/commands/CommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package commands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.util.function.Consumer;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.DeadlineCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.DeleteCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.DoneCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.EventCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.ExitCommand;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.FindCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.HelpCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.ListCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.SortCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.TodoCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.UndoneCommand;","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.EmptyInputException;","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.Message;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.UiPrinter;","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"public class CommandTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    private final Consumer\u003cMessage\u003e c \u003d m -\u003e System.out.println(m.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    private final UiPrinter p \u003d new UiPrinter(c);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    private final Membot m \u003d new Membot(p, true);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public void parseTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(EmptyInputException.class, () -\u003e Command.parse(\"\", p, m));","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"help\", p, m) instanceof HelpCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"list\", p, m) instanceof ListCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"exit\", p, m) instanceof ExitCommand));","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"done\", p, m) instanceof DoneCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"undone\", p, m) instanceof UndoneCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"delete\", p, m) instanceof DeleteCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"find\", p, m) instanceof FindCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"todo\", p, m) instanceof TodoCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"deadline\", p, m) instanceof DeadlineCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"event\", p, m) instanceof EventCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertTrue(Command.parse(\"sort\", p, m) instanceof SortCommand));","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Command.parse(\"sortt\", p, m));","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(InvalidCommandException.class, () -\u003e Command.parse(\"somerandomcommand\", p, m));","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":51}},{"path":"src/test/java/commands/ExitCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package commands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.UiPrinter;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class ExitCommandTest {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private UiPrinter p;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private Membot m;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        p \u003d new UiPrinter(m -\u003e System.out.println(m.getMessage()));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        m \u003d new Membot(p, true);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(this.outputStreamCaptor::reset);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public void executeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            Command exitCommand \u003d Command.parse(\"exit\", p, m);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            exitCommand.execute();","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"Have a good day! Good bye!\",","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":51}},{"path":"src/test/java/commands/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package commands;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.Membot;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import membot.commands.Command;","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.UiPrinter;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    private UiPrinter p;","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    private Membot m;","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        p \u003d new UiPrinter(m -\u003e System.out.println(m.getMessage()));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        m \u003d new Membot(p, true);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(this.outputStreamCaptor::reset);","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public void executeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"            Command byeCommand \u003d Command.parse(\"list\", p, m);","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"            byeCommand.execute();","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"            assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"                    \"Excellent! You do not have any tasks at hand!\",","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"                    this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"            );","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":51}},{"path":"src/test/java/model/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package model;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.TaskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d1 \u003d new Deadline(\"test deadline 1\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(TaskType.DEADLINE, d1.getTaskType());","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d1 \u003d new Deadline(\"test deadline 1\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"today\", d1.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d2 \u003d new Deadline(\"test deadline 2\", \"12/02/2022 13:01\");","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"12/02/2022 13:01\", d2.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d3 \u003d new Deadline(\"test deadline 2\", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"\", d3.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public void getStartDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d1 \u003d new Deadline(\"test deadline 1\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", d1.getStartDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    public void getEndDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d1 \u003d new Deadline(\"test deadline 1\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", d1.getEndDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        Deadline d1 \u003d new Deadline(\"test deadline 1\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(String.format(\"%s[%s] %s (by: %s)\",","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                Deadline.TAG,","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"                d1.printStatus(),","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                d1.getTitle(),","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"                d1.getDeadline()),","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"                d1.toString()","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        while (true) {","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"                Task.deleteLast();","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":67}},{"path":"src/test/java/model/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package model;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.TaskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class EventTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        Event e1 \u003d new Event(\"test event 1\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(TaskType.EVENT, e1.getTaskType());","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        Event e1 \u003d new Event(\"test event 1\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", e1.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void getStartDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        Event e1 \u003d new Event(\"test event 1\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"today 2pm\", e1.getStartDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"        Event e2 \u003d new Event(\"test event 1\", \"12/02/2022 12:09\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"12/02/2022 12:09\", e2.getStartDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        Event e3 \u003d new Event(\"test event 1\", \"\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"\", e3.getStartDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    public void getEndDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        Event e1 \u003d new Event(\"test event 1\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"today 4pm\", e1.getEndDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        Event e2 \u003d new Event(\"test event 1\", \"12/02/2022 12:09\", \"12/02/2022 14:09\");","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"12/02/2022 14:09\", e2.getEndDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        Event e3 \u003d new Event(\"test event 1\", \"\", \"\");","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"\", e3.getEndDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        Event e1 \u003d new Event(\"test event 1\", \"12/02/2022 12:09\", \"12/02/2022 14:09\");","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(String.format(\"%s[%s] %s (from: %s to: %s)\",","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"                Event.TAG,","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"                e1.printStatus(),","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                e1.getTitle(),","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                e1.getStartDateTime(),","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"                e1.getEndDateTime()),","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"                e1.toString()","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        while (true) {","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"                Task.deleteLast();","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":74}},{"path":"src/test/java/model/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package model;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Deadline;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Event;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void isIdValidTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Task.isIdValid(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Task.isIdValid(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Task.isIdValid(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(Task.isIdValid(2));","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 2\");","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(Task.isIdValid(2));","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"    public void setStatusCompletedTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.setStatusCompleted(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.setStatusCompleted(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusCompleted(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"✔️\", t1.printStatus());","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusCompleted(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"✔️\", t1.printStatus());","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        Task t2 \u003d new Deadline(\"deadline 2\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusCompleted(2));","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"✔️\", t2.printStatus());","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"        Task t3 \u003d new Event(\"event 3\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusCompleted(3));","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"✔️\", t3.printStatus());","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"    public void setStatusNewTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.setStatusNew(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.setStatusNew(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusNew(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\" \", t1.printStatus());","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusNew(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\" \", t1.printStatus());","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"        Task t2 \u003d new Deadline(\"deadline 2\", \"today\");","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusNew(2));","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\" \", t2.printStatus());","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"        Task t3 \u003d new Event(\"event 3\", \"today 2pm\", \"today 4pm\");","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e Task.setStatusNew(3));","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\" \", t3.printStatus());","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"    public void deleteTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.delete(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.delete(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(Task.delete(1), t1));","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 2\");","lastModifiedDate":"2023-02-13"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        Task t3 \u003d new ToDo(\"todo 3\");","lastModifiedDate":"2023-02-13"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 4\");","lastModifiedDate":"2023-02-13"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(Task.delete(2), t3));","lastModifiedDate":"2023-02-13"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    public void deleteLastTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NoSuchElementException.class, Task::deleteLast);","lastModifiedDate":"2023-02-13"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(NoSuchElementException.class, Task::deleteLast);","lastModifiedDate":"2023-02-13"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(Task.deleteLast(), t1));","lastModifiedDate":"2023-02-13"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 2\");","lastModifiedDate":"2023-02-13"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        new ToDo(\"todo 3\");","lastModifiedDate":"2023-02-13"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        Task t4 \u003d new ToDo(\"todo 4\");","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e assertEquals(Task.deleteLast(), t4));","lastModifiedDate":"2023-02-13"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"    public void listAllTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"        Task t2 \u003d new ToDo(\"todo 2\");","lastModifiedDate":"2023-02-13"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        Task t3 \u003d new ToDo(\"todo 3\");","lastModifiedDate":"2023-02-13"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"        Task t4 \u003d new ToDo(\"todo 4\");","lastModifiedDate":"2023-02-13"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        Task t5 \u003d new ToDo(\"todo 5\");","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        assertArrayEquals(new String[]{t1.toString(), t2.toString(), t3.toString(), t4.toString(), t5.toString()},","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"                Task.listAll());","lastModifiedDate":"2023-02-13"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"    public void listOneTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.listOne(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.listOne(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(t1.toString(), Task.listOne(1));","lastModifiedDate":"2023-02-13"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"        Task t2 \u003d new ToDo(\"todo 2\");","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"        Task t3 \u003d new ToDo(\"todo 3\");","lastModifiedDate":"2023-02-13"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(t2.toString(), Task.listOne(2));","lastModifiedDate":"2023-02-13"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(t3.toString(), Task.listOne(3));","lastModifiedDate":"2023-02-13"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Task.listOne(4));","lastModifiedDate":"2023-02-13"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"    public void printStatusTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"        Task t1 \u003d new ToDo(\"todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\" \", t1.printStatus());","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"        Task.setStatusCompleted(1);","lastModifiedDate":"2023-02-13"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"✔️\", t1.printStatus());","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"        while (true) {","lastModifiedDate":"2023-02-13"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"                Task.deleteLast();","lastModifiedDate":"2023-02-13"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":152}},{"path":"src/test/java/model/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package model;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.util.NoSuchElementException;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.Task;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.TaskType;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.model.ToDo;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    public void getTaskTypeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"        ToDo t1 \u003d new ToDo(\"test todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(TaskType.TODO, t1.getTaskType());","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"    public void getDeadlineTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        ToDo t1 \u003d new ToDo(\"test todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", t1.getDeadline());","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"    public void getStartDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        ToDo t1 \u003d new ToDo(\"test todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", t1.getStartDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    public void getEndDateTimeTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        ToDo t1 \u003d new ToDo(\"test todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"~\", t1.getEndDateTime());","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        ToDo t1 \u003d new ToDo(\"test todo 1\");","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(String.format(\"%s[%s] %s\", ToDo.TAG, t1.printStatus(), t1.getTitle()), t1.toString());","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"        while (true) {","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"            try {","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"                Task.deleteLast();","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"            } catch (NoSuchElementException e) {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"                break;","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"            }","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        }","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":55}},{"path":"src/test/java/utils/DateTimeParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package utils;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.DateTimeParser;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"public class DateTimeParserTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    public void parseTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DateTimeException.class, () -\u003e DateTimeParser.parse(\"some random date\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        assertThrows(DateTimeException.class, () -\u003e DateTimeParser.parse(\"12/12/2022 25:00\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e DateTimeParser.parse(\"12/12/2022 16:12\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e DateTimeParser.parse(\"12/12/2022\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(DateTimeParser.parse(\"12/12/2022 16:12\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 12, 12, 16, 12));","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(DateTimeParser.parse(\"12/12/2022\"),","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"                LocalDateTime.of(2022, 12, 12, 0, 0));","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"    public void formatTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        LocalDateTime dt \u003d LocalDateTime.parse(\"01/01/2023 16:30\",","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(DateTimeParser.format(dt), \"01/01/2023 16:30\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        LocalDateTime d \u003d LocalDate.parse(\"01/02/2023\", DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")).atStartOfDay();","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(DateTimeParser.format(d), \"01/02/2023 00:00\");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Beebeeoii":38}},{"path":"src/test/java/utils/InputValidatorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package utils;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InputValidator;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"import membot.utils.InvalidCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"public class InputValidatorTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"    public void isSingleInputValidTest() {","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"        String input1 \u003d \"done 1\";","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"        String input2 \u003d \"done one\";","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        String input3 \u003d \"done 1 2\";","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"        String input4 \u003d \"done (1)\";","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"        String input5 \u003d \"i have done task 1\";","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"        String input6 \u003d \"undone 1\";","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"        String input7 \u003d \"undone two\";","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        String input8 \u003d \"undone 6 7\";","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"        String input9 \u003d \"delete 9\";","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        String input10 \u003d \"delete 0\";","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"        String input11 \u003d \"somerandomcommand 0\";","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        String input12 \u003d \"find something\";","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        String input13 \u003d \"find something i havent do\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"        String input14 \u003d \"find\";","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input1, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input2, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input3, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input4, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input5, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input6, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input7, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input8, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input9, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input10, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input11, false, true));","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input12, true, false));","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"        assertTrue(InputValidator.isSingleInputValid(input13, true, false));","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        assertFalse(InputValidator.isSingleInputValid(input14, true, false));","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public void normaliseTodoInputTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        String input1 \u003d \"todo test\";","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"        String input2 \u003d \"todo test /by tmr\";","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        String input3 \u003d \"todo test /from tmr /to 2 days later\";","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"        String input4 \u003d \"todo\";","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        String input5 \u003d \"todoo test\";","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        String input6 \u003d \"todo test item one two three       \";","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"        String input7 \u003d \"tdo\";","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseTodoInput(input1);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"todo\", \"test\"}, InputValidator.normaliseTodoInput(input1));","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e2 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseTodoInput(input2));","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] There should not be any reserved keywords\", e2.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e3 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseTodoInput(input3));","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] There should not be any reserved keywords\", e3.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e4 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseTodoInput(input4));","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Unable to normalise input as a Todo input\", e4.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseTodoInput(input5);","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"todo\", \" test\"}, InputValidator.normaliseTodoInput(input5));","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseTodoInput(input6);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"todo\", \"test item one two three       \"},","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseTodoInput(input6));","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e7 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseTodoInput(input7));","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Unable to normalise input as a Todo input\", e7.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"Beebeeoii"},"content":"    public void normaliseDeadlineInputTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":94,"author":{"gitId":"Beebeeoii"},"content":"        String input1 \u003d \"deadline test deadline task /by tomorrow\";","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"Beebeeoii"},"content":"        String input2 \u003d \"deadline test deadline task by tomorrow\";","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"Beebeeoii"},"content":"        String input3 \u003d \"deadline\";","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"Beebeeoii"},"content":"        String input4 \u003d \"deadline /by tmr\";","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"Beebeeoii"},"content":"        String input5 \u003d \"deadline /by tmr 2pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"Beebeeoii"},"content":"        String input6 \u003d \"deadline   /by tmr\";","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"Beebeeoii"},"content":"        String input7 \u003d \"deadline  /by tmr\";","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"Beebeeoii"},"content":"        String input8 \u003d \"deadline test deadline task /by tomorrow /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"Beebeeoii"},"content":"        String input9 \u003d \"deadline test deadline task /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"Beebeeoii"},"content":"        String input10 \u003d \"deadline test deadline task /from 2pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"Beebeeoii"},"content":"        String input11 \u003d \"deadlin test deadline task /by tomorrow\";","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseDeadlineInput(input1);","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"deadline\", \"test deadline task\", \"tomorrow\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseDeadlineInput(input1));","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e2 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input2));","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Missing /by keyword in input!\", e2.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":116,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e3 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input3));","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid Syntax - \"","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Beebeeoii"},"content":"                        + \"\\\"deadline [title] /by [deadline]\\\" (e.g. \\\"deadline physics project /by tomorrow 3pm\\\"\",","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Beebeeoii"},"content":"                e3.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e4 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input4));","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid Syntax - \"","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Beebeeoii"},"content":"                        + \"\\\"deadline [title] /by [deadline]\\\" (e.g. \\\"deadline physics project /by tomorrow 3pm\\\"\",","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Beebeeoii"},"content":"                e4.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e5 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input5));","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Empty title\",","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"Beebeeoii"},"content":"                e5.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":132,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseDeadlineInput(input6);","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"deadline\", \" \", \"tmr\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":136,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseDeadlineInput(input6));","lastModifiedDate":"2023-01-23"},{"lineNumber":137,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":138,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":139,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":140,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseDeadlineInput(input7);","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"deadline\", \"\", \"tmr\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":142,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseDeadlineInput(input7));","lastModifiedDate":"2023-01-23"},{"lineNumber":143,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":144,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":145,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e8 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input8));","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Too many keywords in input!\",","lastModifiedDate":"2023-01-23"},{"lineNumber":148,"author":{"gitId":"Beebeeoii"},"content":"                e8.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":149,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e9 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input9));","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Too many keywords in input!\",","lastModifiedDate":"2023-01-23"},{"lineNumber":153,"author":{"gitId":"Beebeeoii"},"content":"                e9.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e10 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseDeadlineInput(input10));","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Missing /by keyword in input!\",","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"Beebeeoii"},"content":"                e10.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":160,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":161,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseDeadlineInput(input11);","lastModifiedDate":"2023-01-23"},{"lineNumber":162,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"deadlin \", \"est deadline task\", \"tomorrow\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseDeadlineInput(input11));","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":168,"author":{"gitId":"Beebeeoii"},"content":"    public void normaliseEventInputTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":169,"author":{"gitId":"Beebeeoii"},"content":"        String input1 \u003d \"event piano concert /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"Beebeeoii"},"content":"        String input2 \u003d \"event piano concert /to 4pm /from 2pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"Beebeeoii"},"content":"        String input3 \u003d \"event piano concert /from 2pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":172,"author":{"gitId":"Beebeeoii"},"content":"        String input4 \u003d \"event piano concert /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"Beebeeoii"},"content":"        String input5 \u003d \"event piano concert /to tomorrow 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"Beebeeoii"},"content":"        String input6 \u003d \"event piano concert\";","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"Beebeeoii"},"content":"        String input7 \u003d \"event piano concert /by tmr /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":176,"author":{"gitId":"Beebeeoii"},"content":"        String input8 \u003d \"event /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":177,"author":{"gitId":"Beebeeoii"},"content":"        String input9 \u003d \"event /to 2pm /from 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":178,"author":{"gitId":"Beebeeoii"},"content":"        String input10 \u003d \"event /to 2pm /from tomrrow 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":179,"author":{"gitId":"Beebeeoii"},"content":"        String input11 \u003d \"event /from 2pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":180,"author":{"gitId":"Beebeeoii"},"content":"        String input12 \u003d \"event /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":181,"author":{"gitId":"Beebeeoii"},"content":"        String input13 \u003d \"even piano concert /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"Beebeeoii"},"content":"        String input14 \u003d \"event piano concert /by tmr\";","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"Beebeeoii"},"content":"        String input15 \u003d \"event   /from 2pm /to 4pm\";","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseEventInput(input1);","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"event\", \"piano concert\", \"2pm\", \"4pm\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":188,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseEventInput(input1));","lastModifiedDate":"2023-01-23"},{"lineNumber":189,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":190,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":191,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":192,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseEventInput(input2);","lastModifiedDate":"2023-01-23"},{"lineNumber":193,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"event\", \"piano concert\", \"2pm\", \"4pm\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":194,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseEventInput(input2));","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":196,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":197,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e3 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input3));","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e3.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":200,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e4 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input4));","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e4.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e5 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input5));","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] There should only have /from and /to keyword\", e5.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":208,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":209,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e6 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input6));","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e6.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":212,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":213,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e7 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input7));","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] There should only have /from and /to keyword\", e7.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":216,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":217,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e8 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input8));","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e8.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":220,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":221,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e9 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input9));","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e9.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":224,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":225,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e10 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input10));","lastModifiedDate":"2023-01-29"},{"lineNumber":227,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Empty title\", e10.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":228,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":229,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e11 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":230,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input11));","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e11.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":232,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":233,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e12 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input12));","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e12.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":236,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":237,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":238,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseEventInput(input13);","lastModifiedDate":"2023-01-23"},{"lineNumber":239,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"even \", \"iano concert\", \"2pm\", \"4pm\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":240,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseEventInput(input13));","lastModifiedDate":"2023-01-23"},{"lineNumber":241,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":242,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":243,"author":{"gitId":"Beebeeoii"},"content":"        InvalidCommandException e14 \u003d assertThrows(InvalidCommandException.class, () -\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":244,"author":{"gitId":"Beebeeoii"},"content":"                InputValidator.normaliseEventInput(input14));","lastModifiedDate":"2023-01-29"},{"lineNumber":245,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(\"[Invalid command] Invalid syntax\", e14.getMessage());","lastModifiedDate":"2023-01-23"},{"lineNumber":246,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":247,"author":{"gitId":"Beebeeoii"},"content":"        assertDoesNotThrow(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":248,"author":{"gitId":"Beebeeoii"},"content":"            InputValidator.normaliseEventInput(input15);","lastModifiedDate":"2023-01-23"},{"lineNumber":249,"author":{"gitId":"Beebeeoii"},"content":"            assertArrayEquals(new String[]{\"event\", \" \", \"2pm\", \"4pm\"},","lastModifiedDate":"2023-01-23"},{"lineNumber":250,"author":{"gitId":"Beebeeoii"},"content":"                    InputValidator.normaliseEventInput(input15));","lastModifiedDate":"2023-01-23"},{"lineNumber":251,"author":{"gitId":"Beebeeoii"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":252,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":253,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Beebeeoii":253}},{"path":"src/test/java/view/UiPrinterTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"package view;","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-13"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"import membot.view.UiPrinter;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"public class UiPrinterTest {","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"    private final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"    private final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"    public void setUp() {","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"    public void printlnEmptyTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"        UiPrinter p \u003d new UiPrinter(System.out::println);","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"        String[] s1 \u003d {};","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"        p.println(s1);","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"                \"\",","lastModifiedDate":"2023-02-13"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"                this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"    public void printlnTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"        UiPrinter p \u003d new UiPrinter(m -\u003e System.out.println(m.getMessage()));","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"        String[] s1 \u003d {\"test\", \"1\", \"2\", \"3\"};","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"        p.println(s1);","lastModifiedDate":"2023-02-13"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"                String.join(\"\\n\", s1),","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"                this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":47,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":49,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":50,"author":{"gitId":"Beebeeoii"},"content":"    public void printlnErrorEmptyTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"Beebeeoii"},"content":"        UiPrinter p \u003d new UiPrinter(System.out::println);","lastModifiedDate":"2023-02-13"},{"lineNumber":52,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":53,"author":{"gitId":"Beebeeoii"},"content":"        String[] s1 \u003d {};","lastModifiedDate":"2023-02-13"},{"lineNumber":54,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Beebeeoii"},"content":"        p.printlnError(s1);","lastModifiedDate":"2023-02-13"},{"lineNumber":56,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":57,"author":{"gitId":"Beebeeoii"},"content":"                \"\",","lastModifiedDate":"2023-02-13"},{"lineNumber":58,"author":{"gitId":"Beebeeoii"},"content":"                this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":59,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":60,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"Beebeeoii"},"content":"    @Test","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"Beebeeoii"},"content":"    public void printlnErrorTest() {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"Beebeeoii"},"content":"        UiPrinter p \u003d new UiPrinter(m -\u003e System.out.println(m.getMessage()));","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"Beebeeoii"},"content":"        String[] s1 \u003d {\"testerror\", \"1\", \"2\", \"3\"};","lastModifiedDate":"2023-02-13"},{"lineNumber":67,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":68,"author":{"gitId":"Beebeeoii"},"content":"        p.printlnError(s1);","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Beebeeoii"},"content":"        assertEquals(","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Beebeeoii"},"content":"                String.join(\"\\n\", s1),","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Beebeeoii"},"content":"                this.outputStreamCaptor.toString().trim()","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Beebeeoii"},"content":"        );","lastModifiedDate":"2023-02-13"},{"lineNumber":73,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":74,"author":{"gitId":"Beebeeoii"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":75,"author":{"gitId":"Beebeeoii"},"content":"    @AfterEach","lastModifiedDate":"2023-02-13"},{"lineNumber":76,"author":{"gitId":"Beebeeoii"},"content":"    public void tearDown() {","lastModifiedDate":"2023-02-13"},{"lineNumber":77,"author":{"gitId":"Beebeeoii"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-02-13"},{"lineNumber":78,"author":{"gitId":"Beebeeoii"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":79,"author":{"gitId":"Beebeeoii"},"content":"}","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"Beebeeoii":79}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Beebeeoii"},"content":"todo","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Beebeeoii"},"content":"deadline","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Beebeeoii"},"content":"event","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Beebeeoii"},"content":"somerandomcommand","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Beebeeoii"},"content":"todo CS2103 Tutorial 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Beebeeoii"},"content":"todo CS2103 Tutorial 2 /by tomorrow","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Beebeeoii"},"content":"deadline CS2103 Tutorial 2 /by tomorrow","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Beebeeoii"},"content":"deadline /by tomorrow CS2103 Tutorial 3","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Beebeeoii"},"content":"deadline CS2103 Tutorial 3 /by","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Beebeeoii"},"content":"deadline CS2103 Tutorial 3 /from today 2pm /to today 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 3 /from today 2pm /to today 3pm","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 4 /to next monday 3pm /from next monday 2pm","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 5 /to 2pm","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 5 /from 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 5 /from /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Beebeeoii"},"content":"event CS2103 Tutorial 5 /from /to","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Beebeeoii"},"content":"event /from 2pm CS2103 Tutorial 5 /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Beebeeoii"},"content":"done 1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"done 3","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Beebeeoii"},"content":"todo Another task on hand","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Beebeeoii"},"content":"todo Yet another one","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Beebeeoii"},"content":"done 4","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Beebeeoii"},"content":"done 10","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Beebeeoii"},"content":"done 0","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Beebeeoii"},"content":"done 1","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Beebeeoii"},"content":"undone 2","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Beebeeoii"},"content":"undone 1","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Beebeeoii"},"content":"undone 10","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Beebeeoii"},"content":"undone 0","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Beebeeoii"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Beebeeoii"},"content":"delete 10","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Beebeeoii"},"content":"delete 0","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Beebeeoii"},"content":"deadline Finish up CS2103 Project /by tomorrow 5pm","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Beebeeoii"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Beebeeoii"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Beebeeoii"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Beebeeoii":46}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Beebeeoii"},"content":"java -classpath ..\\bin membot.Membot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Beebeeoii":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Beebeeoii"},"content":"java -classpath ../bin Membot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Beebeeoii":1,"-":37}}]
