[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bisceto":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"checkstyle {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bisceto":22,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"T,true,buy apples","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"D,false,submit homework,2023-02-10","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"E,false,concert,Feb 05 2023 1800 to Feb 05 2023 2130","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Bisceto":3}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        db.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        return db;","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public Duke() {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"            this.storage \u003d new Storage(\"/data/duke.txt\");","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"            assert storage.isFileLoaded(): \"File loaded to load and save tasks\";","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"            this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            assert taskList.getTasks() !\u003d null : \"taskList should be present\";","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"            this.ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            System.out.println(err.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    public void run() {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"                String inputCommandString \u003d ui.readCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"                Command inputCommand \u003d Parser.parse(inputCommandString);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"                inputCommand.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"                isExit \u003d inputCommand.isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"                ui.showMessage(err.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"                Command inputCommand \u003d Parser.parse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"                String response \u003d inputCommand.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"                if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"                    Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"                }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"                return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"                return err.getMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Bisceto":58,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class Launcher {","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        addDialog(Ui.showWelcomeMessage());","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"    private void addDialog(String response) {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":62}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    private Task task;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        taskList.addTask(this.task);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        assert taskList.getTasks().contains(this.task) : \"Task can be found inside tasklist\";","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"        return (\"Got it. I\u0027ve added this task: \\n Now you have \" + taskList.getNumTasks() + \" tasks in your list\");","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":23}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"     * Execute the command given by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"     * @param taskList The ArrayList of tasks to modify.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"     * @param ui The UI to show different messages to the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"     * @param storage To access to storage file to save or load tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If execution of command is not successful.","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     * Determines whether the program should exit after executing a command.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"     * @return A boolean indicating whether to exit or not.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":24}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    private final int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        Task cur \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        assert !taskList.getTasks().contains(cur) : \"Task should be deleted from tasklist\";","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"        String taskString \u003d \"[\" + cur.getStatusIcon() + \"] \" + cur.getDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        if (!(cur instanceof Todo)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            taskString +\u003d  \" (\" + cur.getDuedateString() + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        return \"Noted, I\u0027ve removed this task: \\n\" + taskString + \"\\n Now you have \" + taskList.getNumTasks() + \" tasks in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":31}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"        storage.saveTasks(taskList);","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"        ui.close();","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        return true;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":18}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    private String InputToSearch;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        this.InputToSearch \u003d input;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.findTasks(this.InputToSearch);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        if (foundTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"            return \"We could not find any matching tasks.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            String response \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"            for (Task foundTask : foundTasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"                    String taskString \u003d foundTasks.indexOf(foundTask) + 1 + \". [\" + foundTask.getSymbol() + \"] \"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"                            + \"[\" + foundTask.getStatusIcon() + \"] \" + foundTask.getDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"                if (!(foundTask instanceof Todo)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"                    taskString +\u003d \" (\" + foundTask.getDuedateString() + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"                }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"                    response +\u003d taskString + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"            return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Bisceto":38}},{"path":"src/main/java/duke/command/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"        return \"Invalid command, please try again\";","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":18}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"        if (taskList.getNumTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"            return \"You have no tasks due!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"            String response \u003d \"Here are the tasks you have due!\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"            for (Task cur : taskList.getTasks()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"                String taskString \u003d taskList.getTasks().indexOf(cur) + 1 + \". [\" + cur.getSymbol() + \"] \"","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"                        + \"[\" + cur.getStatusIcon() + \"] \" + cur.getDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"                if (!(cur instanceof Todo)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"                    taskString +\u003d  \" (\" + cur.getDuedateString() + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"                    response +\u003d taskString + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            return response;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":31}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    private final int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        Task cur \u003d taskList.getTasks().get(index-1);","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"        if (cur.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"            return \"This task is already marked!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"            taskList.markTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"            String taskString \u003d \"[\" + cur.getStatusIcon() + \"] \" + cur.getDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            if (!(cur instanceof Todo)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"                taskString +\u003d \" (\" + cur.getDuedateString() + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            return \"Nice! I\u0027ve marked this task as done: \\n\" + taskString;","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":31}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    private final int index;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        Task cur \u003d taskList.getTasks().get(index-1);","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        if (cur.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"            return \"This task is already unmarked!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            taskList.unmarkTask(index);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"            String taskString \u003d \"[\" + cur.getStatusIcon() + \"] \" + cur.getDescription();","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            if (!(cur instanceof Todo)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"                taskString +\u003d \" (\" + cur.getDuedateString() + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"            return \"OK, I\u0027ve marked this task as not done yet: \\n\" + taskString;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":35}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.exception;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":" * Represents any exception that can occur in Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Bisceto":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":" * Represents a Parser that parses in the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":" * Determines what Command it should execute based on the string format.","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"public class Parser {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"     * Parses a string input specifying a Date and Time.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     * @param dateTimeString string input specifying a Date and Time.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"     * @return A LocalDateTime object of the specified Date and TIme.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If the String input does not match the desired format of Date and Time.","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"            return LocalDateTime.parse(dateTimeString, displayFormatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Invalid deadline format! Please format it in\"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"                                    + \" \u003cyyyy-MM-dd HHmm\u003e to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * Parses a string input specifying a Date.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     * @param dateString String input specifying a Date.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"     * @return A LocalDate object of the specified Date.","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException if the String input does not match the desired format of Date.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    public static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Invalid deadline format! Please format it in \u003cyyyy-MM-dd\u003e\");","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"     * Parses the entire String input by the user and determines what command the input represents.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"     * @param fullCommand String input specifying the type of command and its description.","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"     * @return A Command Object specifying what command the String input is addressing.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If a task that the input is trying to add to the task list is invalid.","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        QueryType inputType \u003d Query.queryType(fullCommand);","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        String[] fullCommandArr \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        switch (inputType) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        case list:","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"        case todo:","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"            Todo todo \u003d new Todo(fullCommand);","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"            return new AddCommand(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"        case deadline:","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"            Deadline deadline \u003d new Deadline(fullCommand);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"            return new AddCommand(deadline);","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"        case event:","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"            Event event \u003d new Event(fullCommand);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"            return new AddCommand(event);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"        case find:","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"            return new FindCommand(fullCommandArr[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"        case mark:","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"            return new MarkCommand(Integer.parseInt(fullCommandArr[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"        case unmark:","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"            return new UnmarkCommand(Integer.parseInt(fullCommandArr[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"        case delete:","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"            return new DeleteCommand(Integer.parseInt(fullCommandArr[1]));","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"        case exit:","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"        default:","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"            return new InvalidCommand();","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":84}},{"path":"src/main/java/duke/parser/Query.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":" * Represents the type of Command when there is a String user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"public class Query {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"    protected String input;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    public Query(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"     * Determines if a string consists of only numbers","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"     * @param str String to check","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"     * @return a boolean indicating whether the string is numeric or not.","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    static boolean isNumeric(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        char[] charArray \u003d str.toCharArray();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"        for (char c : charArray) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"            if (!Character.isDigit(c)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"                return false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        return true;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"     * Returns an enumeration of QueryType that tells what type of command the input is.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"     * @param input String to check.","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"     * @return A QueryType indicating the type of command.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    static QueryType queryType(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"            return QueryType.list;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        } else if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"            return QueryType.exit;","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        if (inputArr.length \u003d\u003d 2 \u0026\u0026 isNumeric(inputArr[1])) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"            if (inputArr[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"                return QueryType.mark;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"            } else if (inputArr[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"                return QueryType.unmark;","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"            } else if (inputArr[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"                return QueryType.delete;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        } else if (inputArr[0].equals(\"find\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"            return QueryType.find;","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        } else if (inputArr[0].equals(\"todo\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"            return QueryType.todo;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        } else if (inputArr[0].equals(\"deadline\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"            return QueryType.deadline;","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"        } else if (inputArr[0].equals(\"event\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"            return QueryType.event;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        return QueryType.invalid;","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Bisceto":60}},{"path":"src/main/java/duke/parser/QueryType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":" * Enumeration of the different types that a user input Command can refer to.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"public enum QueryType {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"    list,","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"    mark,","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    unmark,","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    delete,","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    todo,","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    deadline,","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    event,","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    invalid,","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    find,","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    exit","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Bisceto":17}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.storage;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.io.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import java.nio.file.*;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":" * Represents the storage of Duke, allowing the application to load and save tasks to a text file.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"public class Storage {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    protected File file;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"     * Finds or creates a storage text file to save and load tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"     * @param fileInput The String file path to find the storage text file.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If creating the directory or file for storage is unsuccessful.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    public Storage(String fileInput) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"            this.file \u003d new File(fileInput);","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"            if (!file.exists()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"                Files.createDirectories(Paths.get(file.getParent()));","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"                this.file \u003d Files.createFile(Path.of(fileInput)).toFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Error, the directory of tasks cannot be found or created. \"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"                                    + \"Any new tasks you enter will not be saved.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     * Loads the tasks written in the storage file (if any) to an ArrayList.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"     * @return An ArrayList of tasks that was written into the storage text file.","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If there is an error with opening a scanner to read the storage file.","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"            Scanner scFile \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"            while (scFile.hasNextLine()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"                String input \u003d scFile.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"                String[] cur \u003d input.split(\",\", 3);","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"                if (cur[0].equals(\"T\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"                    tasks.add(new Todo(cur[2], Boolean.parseBoolean(cur[1])));","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"                } else if (cur[0].equals(\"D\")) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"                    tasks.add(new Deadline(cur[2], Boolean.parseBoolean(cur[1])));","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"                } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"                    tasks.add(new Event(cur[2], Boolean.parseBoolean(cur[1])));","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"            return tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"There has been an error loading your saved tasks. \"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"                                    + \"Any new tasks you enter will not be saved.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"     * Saves the ArrayList of tasks into the storage file.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"     * @param taskList The taskList to save the tasks from.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If there is an error with writing the tasks into the storage text file.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"    public void saveTasks(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"            for (Task cur : taskList.getTasks()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"                String curText \u003d cur.saveTask();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"                fileWriter.write(curText);","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"                fileWriter.write(\u0027\\n\u0027);","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Error, your tasks cannot be saved.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"    public Boolean isFileLoaded() {","lastModifiedDate":"2023-02-13"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"        return this.file !\u003d null;","lastModifiedDate":"2023-02-13"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":84}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":" * Represents a Deadline Task that has a description and a due date.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    protected LocalDate duedate;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"     * Constructor for Deadline task, loaded from the storage file.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"     * @param input Description of task including its due date.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"     * @param isDone Whether the task is marked or unmarked.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    public Deadline(String input, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"        super(input, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027D\u0027;","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        String[] temp \u003d input.split(\",\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d temp[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        LocalDate inputFormatter \u003d LocalDate.parse(temp[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        this.duedate \u003d inputFormatter;","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        this.duedateString \u003d inputFormatter.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"     * Constructor a new Deadline task keyed in by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"     * @param input Description and duedate of the task, including its header \"deadline\".","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If description is empty, or duedate keyed in does not fit specified format.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"    public Deadline(String input) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"        super(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027D\u0027;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        String[] inputArr \u003d input.split(\" \", 2); //split \u0027deadline\u0027 from task input","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        if (inputArr.length \u003d\u003d 1 || inputArr[1].isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Sorry, the description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        String[] descriptionArr \u003d inputArr[1].split(\"/\"); //split task from due date","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"        if (descriptionArr.length \u003d\u003d 1 || descriptionArr[0].isEmpty()) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Please include a description or a deadline in the following format: \u0027/yyyy-MM-dd\u0027\");","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d descriptionArr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"        LocalDate inputFormatter \u003d Parser.parseDate(descriptionArr[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        this.duedate \u003d inputFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"        this.duedateString \u003d inputFormatter.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        return this.symbol + \",\" + isDone + \",\" + this.description + \",\" + duedate;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"//sample input: deadline do homework/2023-01-30","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":58}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":" * Represents an Event task that has a description, a start date and time as well as an end date and time.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    protected DateTimeFormatter displayFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"     * Constructor for Event task, loaded from the storage file.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"     * @param input Description of task including event time.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     * @param isDone Whether the task is marked or unmarked.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    public Event(String input, boolean isDone) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        super(input, isDone);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027E\u0027;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        String[] temp \u003d input.split(\",\");","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d temp[0];","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        String[] dueArr \u003d temp[1].split(\" to \");","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        this.startTime \u003d LocalDateTime.parse(dueArr[0], displayFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        this.endTime \u003d LocalDateTime.parse(dueArr[1], displayFormatter);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"        this.duedateString \u003d temp[1];","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"     * Constructor a new Event task keyed in by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * @param input Description and event time of the task, including its header \"event\".","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If description is empty, or event time keyed in does not fit specified format.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"    public Event(String input) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        super(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027E\u0027;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"        String[] inputArr \u003d input.split(\" \", 2); //split \u0027event\u0027 from task input","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        if (inputArr.length \u003d\u003d 1 || inputArr[1].isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Sorry, the description of an event cannot be empty!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        String[] eventArr \u003d inputArr[1].split(\"/\", 2); //split description from timings","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        if (eventArr.length \u003d\u003d 1 || eventArr[1].isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Please include duration of the event in the following format:\"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"                                     + \" /\u003cyyyy-MM-dd HHmm\u003e to \u003cyyyy-MM-dd HHmm\u003e\");","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d eventArr[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        String[] dueArr \u003d eventArr[1].split(\" to \");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"        this.startTime \u003d Parser.parseDateTime(dueArr[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"        this.endTime \u003d Parser.parseDateTime(dueArr[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"        this.duedateString \u003d startTime.format(displayFormatter) + \" to \" + endTime.format(displayFormatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"        return this.symbol + \",\" + isDone + \",\" + this.description + \",\" + duedateString;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"//sample input: event project meeting /2023-01-30 0900 to 2023-01-30 1800","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Bisceto":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":" * Represents a task. It can be a \u0027to do\u0027, \u0027deadline\u0027 or \u0027event\u0027 task.","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"    protected String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    protected String duedateString;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    protected char symbol;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"        return description;","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public String getDuedateString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        return duedateString;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"    public char getSymbol() {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        return symbol;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * Gets the status icon of a task to indicate if it is marked or not.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     * @return An \"X\" or \" \" if it is marked or unmarked respectively.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"     * Converts the task to a specified string format of","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"     * [Symbol],[Marked/UnMarked],[Description],[Deadline if any] to save.","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"     * @return String with the specified save format of a task.","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"    public abstract String saveTask();","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Bisceto":56}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":" * Represents the list of tasks in Duke. This task list will be saved into and loaded from a storage text file.","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"public class TaskList {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"     * Gets the ArrayList of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"     * @return The ArrayList of tasks.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"        return tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        tasks.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"     * Deletes a task from the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"     * @param index The number of the task to delete.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If the number specified is invalid (\u003e Number of tasks in task list or \u003c\u003d 0).","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"            return tasks.remove(index - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"That task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"     * Unmarks a task in the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"     * @param index The number of the task to unmark.","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If the number specified is invalid (\u003e Number of tasks in task list or \u003c\u003d 0).","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Bisceto"},"content":"    public Task unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Bisceto"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"Bisceto"},"content":"            task.markUndone();","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"Bisceto"},"content":"            assert task.getStatusIcon().equals(\" \"): \"Task should be unmarked\";","lastModifiedDate":"2023-02-13"},{"lineNumber":55,"author":{"gitId":"Bisceto"},"content":"            return task;","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"Bisceto"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"That task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Bisceto"},"content":"     * Marks a task in the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Bisceto"},"content":"     * @param index The number of the task to mark.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If the number specified is invalid (\u003e Number of tasks in task list or \u003c\u003d 0).","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Bisceto"},"content":"    public Task markTask(int index) throws DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Bisceto"},"content":"            Task task \u003d tasks.get(index - 1);","lastModifiedDate":"2023-02-13"},{"lineNumber":69,"author":{"gitId":"Bisceto"},"content":"            task.markDone();","lastModifiedDate":"2023-02-13"},{"lineNumber":70,"author":{"gitId":"Bisceto"},"content":"            assert task.getStatusIcon().equals(\"X\"): \"Task should be marked\";","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"Bisceto"},"content":"            return task;","lastModifiedDate":"2023-02-13"},{"lineNumber":72,"author":{"gitId":"Bisceto"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"That task does not exist!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":75,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":76,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"Bisceto"},"content":"    public ArrayList\u003cTask\u003e findTasks(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"Bisceto"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"Bisceto"},"content":"        for (Task cur : this.tasks) {","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"Bisceto"},"content":"            if (cur.getDescription().contains(input)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Bisceto"},"content":"                foundTasks.add(cur);","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Bisceto"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Bisceto"},"content":"        return foundTasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"Bisceto"},"content":"    public int getNumTasks() {","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"Bisceto"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":89}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":" * Represents a \u0027To Do\u0027 task that has a description.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"     * Constructor for Todo task, loaded from the storage file.","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"     * @param input Description of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"     * @param isDone Whether the task is marked or unmarked.","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    public Todo(String input, boolean isDone) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"        super(input, isDone);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"     * Constructor for a new Todo task keyed in by the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"     * @param input Description of the task, including its header \"todo\".","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"     * @throws DukeException If description of task is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    public Todo(String input) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"        super(input);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        this.symbol \u003d \u0027T\u0027;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        if (inputArr.length \u003d\u003d 1 || inputArr[1].isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"            throw new DukeException(\"Sorry, the description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        this.description \u003d inputArr[1];","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    public String saveTask() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"        return this.symbol + \",\" + isDone + \",\" + this.description;","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Bisceto":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke.ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":" * Represents the user interface that the user interacts with, displaying messages and reading in inputs.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    private Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"     * Prints out a welcome message for the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public static String showWelcomeMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        return \"Hello from Duke managed by Wesley Teo!\\nWhat can I do for you?\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    public void showMessage(String message) {","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        System.out.println(\"---------------------------------\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"    public void close() {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"        scanner.close();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Bisceto":33}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"Bisceto":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"public class DukeTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Bisceto":18}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Bisceto"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"Bisceto"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Bisceto"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Bisceto"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Bisceto"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Bisceto"},"content":"    public void addTodoTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Bisceto"},"content":"            taskList.addTask(new Todo(\"todo Dummy Task\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Bisceto"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Bisceto"},"content":"            fail();","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Bisceto"},"content":"        assertEquals(1, taskList.getNumTasks());","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Bisceto"},"content":"    public void validateTodoTask() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Bisceto"},"content":"            Todo todo \u003d new Todo(\"todo \");","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Bisceto"},"content":"            fail();","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Bisceto"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Bisceto"},"content":"            return;","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Bisceto"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Bisceto"},"content":"    public void markTodoTest() {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Bisceto"},"content":"        TaskList taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Bisceto"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Bisceto"},"content":"            taskList.addTask(new Todo(\"todo Dummy Task\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Bisceto"},"content":"            taskList.markTask(1);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Bisceto"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Bisceto"},"content":"            System.out.println(\"Ignore exception: For testing purposes\");","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Bisceto"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Bisceto"},"content":"        assertEquals(\"X\", taskList.getTasks().get(0).getStatusIcon());","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Bisceto"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Bisceto"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Bisceto"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Bisceto":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Bisceto"},"content":"list","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Bisceto"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Bisceto"},"content":"list","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Bisceto"},"content":"mark 1","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Bisceto"},"content":"deadline meeting/2023-01-30 ","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Bisceto"},"content":"event wedding/2023-01-30 1700 to 2023-01-30 2300","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Bisceto"},"content":"mark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Bisceto"},"content":"unmark 1","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Bisceto"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Bisceto":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Bisceto"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Bisceto":1,"-":20}}]
