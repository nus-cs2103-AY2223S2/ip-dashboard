[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"checkstyle {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":21,"-":40}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"include \u0027src:test:java2\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"findProject(\u0027:src:test:java2\u0027)?.name \u003d \u0027java2\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":3}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import gui.DukeGui;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class Launcher {","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        Application.launch(DukeGui.class, args);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"BoAi01":12}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The main class","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class Main {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"     * Runs the main program","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     * @param args the arg","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        duke.runWithTextUi();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":15}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import ui.TextUi;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * An abstract class for all commands","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    protected final String command;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    protected final boolean doesPrint;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    protected int numComponents;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * Default constructor, saves the command","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Command(String command, boolean doesPrint, int numComponents) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        this.doesPrint \u003d doesPrint;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        this.numComponents \u003d numComponents;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        checkInputComponents();","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * Executes a command","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @param ui       a text UI","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when command invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    public void execute(TaskList taskList, TextUi ui) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        uiPrint(ui, execute(taskList));","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     * Executes a command and returns the message","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * @return the reply message from Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when command invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    public abstract String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * Prints to TextUI if print is not suppressed","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     * @param ui the Text UI to print to","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * @param toPrint the message to print out","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"    protected void uiPrint(TextUi ui, String toPrint) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"        if (doesPrint) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            ui.printStructuredString(toPrint);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * Returns whether this is an exit command","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @return a boolean value indicating status","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        return isExit;","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * Get the sub-string after the command key word","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * @param string the command","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     * @return the sub-string after the command keyword","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public String getCommandContent(String string, String commandName) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        String commandString \u003d commandName.toLowerCase();","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        if ((!commandString.equals(\"list\")) \u0026\u0026 string.length() \u003c\u003d commandString.length() + 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"The command argument is not complete.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        return string.substring(string.indexOf(commandString) + commandString.length() + \" \".length());","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"     * Throws exceptions if the user-input is not a complete command.","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"    protected void checkInputComponents() throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        String[] splits \u003d command.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        if (splits.length \u003c numComponents) {","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(String.format(\"Input is not a complete command. \"","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"                            + \"It should contain %d components. \\nPlease try again. \",","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"                    numComponents));","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":92}},{"path":"src/main/java/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * Command for deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class DeadlineCommand extends TaskCommand {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     * @param command user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print the message","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public DeadlineCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 4);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":17}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import duke.IndexOutOfBoundsDukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.NumberFormatDukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * Command for deleting a task","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class DeleteCommand extends TaskCommand {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messages","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    public DeleteCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * Executes the delete task","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when index is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        String indexToDelete \u003d getCommandContent(command);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"            int idx \u003d Integer.parseInt(indexToDelete) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"            Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"            taskList.remove(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            String toPrint \u003d String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"                    + \"Now you have %d tasks in the list.\", t, taskList.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"            return toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"            throw new IndexOutOfBoundsDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            throw new NumberFormatDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":45}},{"path":"src/main/java/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * Class for calling event command","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class EventCommand extends TaskCommand {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    public EventCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 6);","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":12}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" * Command for exiting from the program","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messages","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public ExitCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * Execute the command","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":31}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * A command for finding a class","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class FindCommand extends TaskCommand {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messaegs","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public FindCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Execute the find task","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of tasks match the requirement","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the task cannot be found or the command is incomplete","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        String[] stringsToSearch \u003d getCommandContent(command).split(\" \");","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        String taskListString \u003d \"Here are the matching tasks in your list:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"                + taskList","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"                .getTaskNameContains(stringsToSearch)","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"                .getTaskListString(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        return taskListString;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":36}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" * List commands","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Default constructor, saves the command","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public ListCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Lists all tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @return string representation of the task list","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    @ Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        String taskListString \u003d \"Here are the tasks in your list:\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"                + taskList.getTaskListString(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        return taskListString;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":32}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import duke.IndexOutOfBoundsDukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.NumberFormatDukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * Mark a task as done","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * Default constructor, saves the command","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    public MarkCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * Execute the task","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"            int idx \u003d Integer.parseInt(command.substring(5)) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"            Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"            t.markDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"            return String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", t);","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"            throw new IndexOutOfBoundsDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"            throw new NumberFormatDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":41}},{"path":"src/main/java/command/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.lang.reflect.Constructor;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * A class for many tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class TaskCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    protected final String commandName;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messages","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public TaskCommand(String command, boolean doesPrint, int numComponents) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, numComponents);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        this.commandName \u003d captalizeFirstChar(command.split(\" \")[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     * Capitalize the first character in a string","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     * @param string the string","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * @return a new string whose first character is capitalized","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    protected String captalizeFirstChar(String string) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        return string.substring(0, 1).toUpperCase() + string.substring(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * Execute the task","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when class name invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        String content \u003d getCommandContent(command);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"            Class\u003c?\u003e c \u003d Class.forName(\"task.\" + commandName);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"            Constructor\u003c?\u003e cons \u003d c.getConstructor(String.class);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"            Object object \u003d cons.newInstance(content);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            return handleTask((Task) object, taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"        } catch (ClassNotFoundException | NoSuchMethodException | InstantiationException | IllegalAccessException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        } catch (InvocationTargetException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"            Throwable t \u003d e.getTargetException();","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(t.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * Handles the task, a subroutine of execute","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param task the task to execute","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the task list","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public String handleTask(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        taskList.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        String toPrint \u003d String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"                        + \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"                task,","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"                taskList.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"        return toPrint;","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"     * Gets the content of the command","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     * @param string the command string","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"     * @return the content of the command","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the string is not complete","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    public String getCommandContent(String string) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        return super.getCommandContent(string, commandName);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":83}},{"path":"src/main/java/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" * Command for to-do tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class TodoCommand extends TaskCommand {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     * @param command user-input command","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messages","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public TodoCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":17}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import duke.IndexOutOfBoundsDukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.NumberFormatDukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * Mark a task as undone","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * @param command the command","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * @param doesPrint whether to print messages","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    public UnmarkCommand(String command, boolean doesPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        super(command, doesPrint, 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * Unmarks a task","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     * @return the string reprepsentation of the reply","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the index or command format is incorrect","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"            int idx \u003d Integer.parseInt(command.substring(7)) - 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"            Task task \u003d taskList.get(idx);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"            task.unmarkDone();","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"            return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", task);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"            throw new IndexOutOfBoundsDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"            throw new NumberFormatDukeException();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":42}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import ui.TextUi;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * duke.Duke is the class that responds to user enquiry.","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" * It has other objects such as UI and storage, and connected these components","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * to process user-input commands, recording, carry out actual operations, and respond","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":" * to users.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"public class Duke {","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    protected final TextUi ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    protected final String myName;","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    protected final ArrayList\u003cString\u003e commandList;","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    protected final String RECORD_DIR \u003d \"./data\";","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    protected final String RECORD_NAME \u003d \"/duke.txt\";","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    protected final Storage storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    protected boolean hasExited;","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    public Duke() {","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        this.myName \u003d \"Duke\";","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        this.ui \u003d new TextUi(myName);","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        this.storage \u003d new Storage(RECORD_DIR, RECORD_NAME);","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        this.commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        this.hasExited \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        loadRecord();","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     * The process that interacts with user","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public void runWithTextUi() {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        boolean isRunning \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        while (isRunning) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            String inMsg \u003d ui.getUserInput();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"                isRunning \u003d handleCommandReturnStatus(inMsg, false);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                if (isRunning) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"                    commandList.add(inMsg);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"                ui.printStructuredString(e.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"                ui.printStructuredString(\"Please specify the index.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        storage.saveToFile(getCommandListString());","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"     * Runs command and handles exceptions","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"     * @param inMsg the user-input command","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * @return the response message to print out","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    public String handleCommandWithException(String inMsg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"            response \u003d handleCommandReturnResponse(inMsg);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"            boolean isRunning \u003d !inMsg.equalsIgnoreCase(\"bye\"); // hardcode, not ideal","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"            if (isRunning) {","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"                commandList.add(inMsg);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"                hasExited \u003d true;","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"                storage.saveToFile(getCommandListString());","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"            response \u003d e.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"            response \u003d \"Please specify the index.\";","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"        return response;","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"     * Returns whether the program has exited.","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"     * @return whether the program has exited.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"    public boolean isExited() {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"        return hasExited;","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"     * Returns the name of the robot","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"     * @return the name","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"        return myName;","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"     * Load record file","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"    public void loadRecord() {","lastModifiedDate":"2023-01-23"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"        storage.loadRecordIfExists(commandList);","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"        for (String s : commandList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"                handleCommandReturnStatus(s, true);","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"     * Handles the input string from the user. It checks whether the input is","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"     * some command and performs the corresponding operation.","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"     * In case of invalid or incomplete command, it throws an error message","lastModifiedDate":"2023-01-23"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"     * to the user and prompts for a new command.","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"     * @param inMsg         the input message from the user","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"     * @param suppressPrint suppress print out message or not","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"     * @return whether the program continues or not","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the command is unknown","lastModifiedDate":"2023-01-22"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"    public boolean handleCommandReturnStatus(String inMsg, boolean suppressPrint) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"        Command command \u003d Parser.parseCommand(inMsg, suppressPrint);","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"        command.execute(taskList, ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        return !command.isExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"     * Handles a string command","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"     * @param inMsg the user-input command","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"     * @return the response from Duke","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the command is unknown or incomplete","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"    public String handleCommandReturnResponse(String inMsg) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"        Command command \u003d Parser.parseCommand(inMsg, true);","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        return command.execute(taskList);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"     * Returns the string representation of all history commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"     * This is different from the string of all tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"     * @return the string containing all commands","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"    public String getCommandListString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"        String string \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"        for (String s : commandList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"            string \u003d string + s + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"        return string;","lastModifiedDate":"2023-01-22"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"     * Returns welcome message at startup","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"     * @return welcome message","lastModifiedDate":"2023-02-01"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"    public String getWelcomeMessage() {","lastModifiedDate":"2023-02-01"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", myName);","lastModifiedDate":"2023-02-01"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BoAi01":173,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.io.StringWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * Exception class, thrown by duke.Duke","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    protected String errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * @param errorMessage the error message of the exception","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * Constructor that prints out stack trace.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @param exception the exception","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    public DukeException(Exception exception) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        exception.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        String exceptionAsString \u003d sw.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.errorMessage \u003d exceptionAsString;","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Returns the error message as a string","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @return the string error message","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        return this.errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":42}},{"path":"src/main/java/duke/IndexOutOfBoundsDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Exception for out of bound error.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class IndexOutOfBoundsDukeException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"     * Constructor.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    public IndexOutOfBoundsDukeException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"        super(\"Invalid index. Please try again. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":13}},{"path":"src/main/java/duke/NumberFormatDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Exception for number format","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class NumberFormatDukeException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    public NumberFormatDukeException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"        super(\"Please specify a number instead. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"BoAi01":10}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" * An object to show a dialog box","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    private Label text;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * @param l a label object","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * @param iv an imageview object, which is the profile pic","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        text \u003d l;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    private void flip() {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        this.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        FXCollections.reverse(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        this.getChildren().setAll(tmp);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     * Returns a dialog object for user","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * @param l user text","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * @param iv an image view object to present text","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     * @return a dialog object for user","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * Returns a dialog object for duke","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     * @param l duke text","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * @param iv an image view object to present text","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * @return a dialog object for duk e","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        db.flip();","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        return db;","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"BoAi01":67}},{"path":"src/main/java/gui/DukeGui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package gui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":" * The class that starts the GUI application and interacts with the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"public class DukeGui extends Application {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            this.getClass().getResourceAsStream(\"/images/DaUser.png\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"            this.getClass().getResourceAsStream(\"/images/DaDuke.png\")));","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    private String name \u003d \"Duke\";","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Starts the GUI.","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     *              Applications may create other stages, if needed,","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     *              but they will not be primary stages.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        ScrollPane scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        VBox dialogContainer \u003d new VBox();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        this.dialogContainer \u003d dialogContainer;","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setContent(dialogContainer);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        TextField userInput \u003d new TextField();","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        this.userInput \u003d userInput;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"        Button sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        Scene scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"        userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"        AnchorPane.setTopAnchor(scrollPane, 1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"        AnchorPane.setBottomAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        AnchorPane.setRightAnchor(sendButton, 1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"        AnchorPane.setLeftAnchor(userInput , 1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"        AnchorPane.setBottomAnchor(userInput, 1.0);","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"        // show welcome","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        // step 3: handle user input","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"        });","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"        userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"        });","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"        // render","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"        stage.setScene(scene); // Setting the stage to show our screen","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"        stage.show(); // Render the stage.","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"     * Iteration 1:","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"     * Creates a label with the specified text and adds it to the dialog container.","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"     * @param text String containing text to add","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"     * @return a label with the specified text that has word wrap enabled.","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"    private Label getDialogLabel(String text) {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"        // You will need to import `javafx.scene.control.Label`.","lastModifiedDate":"2023-02-01"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"        Label textToAdd \u003d new Label(text);","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"        textToAdd.setWrapText(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"        return textToAdd;","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"     * Iteration 2:","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"        if (duke.isExited()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-01"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"        Label userText \u003d new Label(userInput.getText());","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        Label dukeText \u003d new Label(getResponse(userInput.getText()));","lastModifiedDate":"2023-02-01"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"                DialogBox.getUserDialog(userText, new ImageView(userImage)),","lastModifiedDate":"2023-02-01"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"    private String getResponse(String input) {","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"        return duke.handleCommandWithException(input);","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"     * Prints to GUI interface","lastModifiedDate":"2023-02-01"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"     * @param string the string to be printed out","lastModifiedDate":"2023-02-01"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    public void guiPrint(String string) {","lastModifiedDate":"2023-02-01"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        Label dukeText \u003d new Label(string);","lastModifiedDate":"2023-02-01"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"                DialogBox.getDukeDialog(dukeText, new ImageView(dukeImage))","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"        );","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"     * Prints welcome message","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"        guiPrint(duke.getWelcomeMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"BoAi01":163}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * Deals with loading and saving task record","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    protected final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    protected final String directory;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    protected final String fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @param directory directory of the record file","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @param fileName  the name of the record file","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public Storage(String directory, String fileName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.filePath \u003d getRecordPath();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Returns the path to the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @return the path to the record","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private String getRecordPath() {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        return directory + \"/\" + fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * Saves the list of tasks to a txt file as a string","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @param commandListString the string to write to","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    public void saveToFile(String commandListString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        // https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            // create the directory and the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"            // https://stackoverflow.com/questions/15571496/how-to-check-if-a-folder-exists","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"            if (!(new File(filePath).exists())) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                Files.createDirectories(Paths.get(directory));","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"            // write to the file","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            myWriter.write(commandListString);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"            System.out.println(\"An error occurred while saving record.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Loads the record file at start-up","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @param commandList the list to store commands into","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public void loadRecordIfExists(ArrayList\u003cString\u003e commandList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        // check if file exists","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"            return;","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        // read the file","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"                commandList.add(data);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"            myReader.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"            System.out.println(\"An error occurred while loading up record. \");","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":93}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * A deadline class extends from the Task.Task.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * It has a deadline attribute on top of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate time;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    /***","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * Constructor.","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @param description the content of the user command","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the command is incomplete","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        int indexOfBy \u003d description.indexOf(\"/by\");","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        if (indexOfBy \u003c 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"This is not a complete command, missing dates. \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"                    + \"Please try again\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        this.time \u003d Parser.parseDate(description.substring(indexOfBy + \"/by \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d description.substring(0, indexOfBy - \" \".length());","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * The deadline date is included.","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * @return string representation of a deadline task, where the deadline is specified","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s (by: %s)\", type, super.toString(), Task.printDate(time));","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":44}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * The event class that extends the Task class.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * An even should have a start and an end date.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * The default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @param description the content of the command","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        int indexOfFrom \u003d description.indexOf(\"/from\");","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        int indexOfTo \u003d description.indexOf(\"/to\");","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        if (indexOfFrom \u003c 0 | indexOfFrom \u003c 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"This is not a complete command, missing dates. \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"                    + \"Please try again. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d description.substring(0, indexOfFrom - \" \".length());","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"        this.startTime \u003d Parser.parseDate(","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"                description.substring(indexOfFrom + \"/from \".length(),","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"                indexOfTo - \" \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"        this.endTime \u003d Parser.parseDate(","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"                description.substring(","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"                        description.indexOf(\"/to\") + \"/to \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-01-16"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     * Parse the start time of the event from the user string","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     * @param s the user-input string","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @return the start time of the event","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    public static String parseStartTime(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        return s.substring(s.indexOf(\"/from\") + \"/from \".length(),","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"                s.indexOf(\"/to\") - \" \".length());","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * Parse the end time of the event from the user string","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * @param s the user-input string","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * @return the end time of the event","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    public static String parseEndTime(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"        return s.substring(s.indexOf(\"/to\"));","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     * Overriding the toString class","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of an event","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s (from: %s to: %s)\", type,","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"                super.toString(), Task.printDate(startTime), Task.printDate(endTime));","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":72}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * The base class for all tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    protected String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    protected String type;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * The default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public Task() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        this(\"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * The task string description","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @param description a string describing the task, which should include the parameters","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     *                   corresponding to the task","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Gives the string representation of date","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @param date a date object","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * @return the corresponding string representation","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    protected static String printDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     * Get the name of the task. The name is the content of the task (what to do)","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * @return the string name of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        return this.name;","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * Get whether the task is done.","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * @return the status of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Mark the task as undone.","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     * Get the string icon of the status of the task. It is either space or X.","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"     * @return the string icon of the task status","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     * Overrides the original toString method. The status and the task content","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * are reflected in the string representation.","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     * @return the task string","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), name);","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"     * Return the type of the task, which is a character,","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"     * such as \"D\" for deadline and \"E\" for event","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"     * @return the type character","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    public String getType() {","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"        return type;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"     * Checks if the task name contains a given string","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"     * @param string a given string","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"     * @return a boolean value","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"    public boolean containString(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        return toString().contains(string);","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":113}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * A data structure that saves a list of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * It is directly inherited from ArrayList","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * Default constructor.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Construct an instance from an array list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * @param tasks an array list of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        super(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * Return the string representation of the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @param isIndexed whether to add an index number at the beginning of each task","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *                   or not","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public String getTaskListString(boolean isIndexed) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        for (Task t : this) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"            s +\u003d (isIndexed ? (count + \". \") : \"\") + t;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            if (count \u003c this.size()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"                s +\u003d \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        return s;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * Get the task list that all tasks whose names contain the given strings","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * @param strings the strings to search for","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * @return a task list","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public TaskList getTaskNameContains(String... strings) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        List\u003cTask\u003e filteredTasks \u003d this","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"                .stream()","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"                .filter(","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"                        t -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"                            boolean isContained \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                            for (String string: strings) {","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"                                isContained \u003d isContained || t.containString(string);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                            }","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"                            return isContained;","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                        })","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        return new TaskList(new ArrayList\u003c\u003e(filteredTasks));","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":69}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The to-do class extending from the Task.Task class.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * To-do items have no starting date or deadlines.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     * @param description a string describing the to-do task","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * Overriding","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of the to-do task","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s\", this.type, super.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":27}},{"path":"src/main/java/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static java.util.Map.entry;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import java.lang.reflect.Constructor;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import java.lang.reflect.InvocationTargetException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"import command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":" * A string parser that processes user-input commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    private static Map\u003cString, String\u003e stringToCommandClass \u003d Map.ofEntries(","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"            entry(\"list\", \"ListCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"            entry(\"mark\", \"MarkCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"            entry(\"unmark\", \"UnmarkCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"            entry(\"delete\", \"DeleteCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"            entry(\"todo\", \"TodoCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            entry(\"event\", \"EventCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"            entry(\"deadline\", \"DeadlineCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"            entry(\"bye\", \"ExitCommand\"),","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"            entry(\"find\", \"FindCommand\")","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    );","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     * Parse the user-input date string into a date object","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * @param dateString the string representation of the date","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @return the date object","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"The date could not be parsed!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * Returns the appropriate command object based on user-input command string","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     * @param command the user-input string","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * @param suppressPrint whether to suppress print-out or not","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * @return the command object","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when any error occurs","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    public static Command parseCommand(String command, boolean suppressPrint) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        Object object \u003d null;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            Class\u003c?\u003e c \u003d Class.forName(\"command.\" + stringToCommandClass.get(command.split(\" \")[0]));","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"            Constructor\u003c?\u003e cons \u003d c.getConstructor(String.class, boolean.class);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            object \u003d cons.newInstance(command, !suppressPrint);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        } catch (ClassNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"Command not recognized. Try again. \");","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"        } catch (NoSuchMethodException | InstantiationException | IllegalAccessException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(e.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        } catch (InvocationTargetException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"            Throwable t \u003d e.getTargetException();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"        return (Command) object;","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":68}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * The text UI interface that processes user input and prints outputs","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class TextUi {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    protected final String name;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    protected final Scanner scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * @param name string name of the robot duke","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public TextUi(String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * Prints a welcome message when starting up","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        printStructuredString(String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", name));","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * Waits for and reads user input.","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @return the string input from the user","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * Print the string in a pre-specified format.","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     * @param string the string content to print out","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public void printStructuredString(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        String longLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        System.out.println(longLine + \"\\n\" + string + \"\\n\" + longLine);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     * Returns the end message and do final clean-up.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * Specifically history commands are saved to a local file.","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        printStructuredString(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * Checks if the command marks the end.","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param string User-input string","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * @return if the string marks the end of the conversation","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public boolean isEnd(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        return Objects.equals(string.toLowerCase(), \"bye\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":67}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    public void testGetType() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        Deadline deadline \u003d new Deadline(\"a deadline /by 2022-10-22\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"D\", deadline.getType());","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public void testToString() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        Deadline deadline \u003d new Deadline(\"a deadline /by 2022-10-22\");","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[D][ ] a deadline (by: Oct 22 2022)\", deadline.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        deadline.markDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[D][X] a deadline (by: Oct 22 2022)\", deadline.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":25}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class EventTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    public void testToString() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"        Event event \u003d new Event(\"Love Iko /from 2022-08-19 /to +999999999-12-31\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[E][ ] Love Iko (from: Aug 19 2022 to: Dec 31 +999999999)\", event.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":15}},{"path":"src/test/java/ui/TextUiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"public class TextUiTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    public void testGetUserInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"        TextUi ui \u003d new TextUi(\"name\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        assertTrue(ui.isEnd(\"bye\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        assertFalse(ui.isEnd(\"bye-bye\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":16}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"todo research","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"deadline TA /by 2022-10-22","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"mark TA","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":1,"-":37}}]
