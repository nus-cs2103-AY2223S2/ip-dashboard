[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    mainClassName \u003d \"Main\"","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":1,"-":40}},{"path":"settings.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"include \u0027src:test:java2\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"findProject(\u0027:src:test:java2\u0027)?.name \u003d \u0027java2\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":3}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The main class ","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class Main {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"     * Runs the main program","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     * @param args: args to be specified","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        duke.run();","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":16}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * An enum that specifies all types of commands","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public enum Command {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    LIST,","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    MARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    UNMARK,","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    TODO,","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    EVENT,","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    DELETE,","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    FIND","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":15}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import storage.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import task.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import task.ToDo;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"import ui.TextUi;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":" * duke.Duke is the class that responds to user enquiry.","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":" * It has other objects such as UI and storage, and connected these components","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":" * to process user-input commands, recording, carry out actual operations, and respond","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":" * to users.","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"public class Duke {","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    protected final TextUi ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    protected final TaskList taskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    protected final String myName;","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    protected final ArrayList\u003cString\u003e commandList;","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    protected final String RECORD_DIR \u003d \"./data\";","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"    protected final String RECORD_NAME \u003d \"/duke.txt\";","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    private final Parser parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"    public Duke() {","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"        this.myName \u003d \"Duke\";","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        this.ui \u003d new TextUi(myName);","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        this.storage \u003d new Storage(RECORD_DIR, RECORD_NAME);","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        this.commandList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        loadRecord();","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     * The process that interacts with user","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    public void run() {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        String inMsg \u003d null;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        while (true) {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"            inMsg \u003d ui.getUserInput();","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            if (ui.isEnd(inMsg)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"                handleCommand(inMsg, false);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"                addCommandList(inMsg);","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                ui.printStructuredString(e.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"                ui.printStructuredString(\"Please enter a number.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"        storage.saveToFile(getCommandListString());","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"        ui.sayGoodbye();","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"     * Returns the name of the robot","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     * @return the name","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"        return myName;","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"     * Load record file","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"    public void loadRecord() {","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"        storage.loadRecordIfExists(commandList);","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"        for (String s : commandList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"            try {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"                handleCommand(s, true);","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"                System.out.println(e.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"     * Handles the input string from the user. It checks whether the input is","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     * some command and performs the corresponding operation.","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"     * In case of invalid or incomplete command, it throws an error message","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"     * to the user and prompts for a new command.","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"     * @param inMsg:         the input message from the user","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"     * @param suppressPrint: suppress print out message or not","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the command is unknown","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"    public void handleCommand(String inMsg, boolean suppressPrint) throws DukeException {","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"        String stringToPrint \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"        if (parser.checkCommand(inMsg, Command.LIST)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d listTasks();","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.MARK)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"            int idx \u003d Integer.parseInt(inMsg.substring(5)) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d markTaskDone(idx);","lastModifiedDate":"2023-01-22"},{"lineNumber":114,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.UNMARK)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":115,"author":{"gitId":"BoAi01"},"content":"            int idx \u003d Integer.parseInt(inMsg.substring(7)) - 1;","lastModifiedDate":"2023-01-22"},{"lineNumber":116,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d unmarkTaskDone(idx);","lastModifiedDate":"2023-01-22"},{"lineNumber":117,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.TODO)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":118,"author":{"gitId":"BoAi01"},"content":"            String todoName \u003d parser.getCommandContent(inMsg, Command.TODO);","lastModifiedDate":"2023-01-23"},{"lineNumber":119,"author":{"gitId":"BoAi01"},"content":"            ToDo todo \u003d new ToDo(todoName);","lastModifiedDate":"2023-01-22"},{"lineNumber":120,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d addTask(todo);","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.DEADLINE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":122,"author":{"gitId":"BoAi01"},"content":"            String deadlineContent \u003d parser.getCommandContent(inMsg, Command.DEADLINE);","lastModifiedDate":"2023-01-23"},{"lineNumber":123,"author":{"gitId":"BoAi01"},"content":"            Deadline ddl \u003d new Deadline(deadlineContent);","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d addTask(ddl);","lastModifiedDate":"2023-01-22"},{"lineNumber":125,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.EVENT)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":126,"author":{"gitId":"BoAi01"},"content":"            String eventContent \u003d parser.getCommandContent(inMsg, Command.EVENT);","lastModifiedDate":"2023-01-23"},{"lineNumber":127,"author":{"gitId":"BoAi01"},"content":"            Event event \u003d new Event(eventContent);","lastModifiedDate":"2023-01-22"},{"lineNumber":128,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d addTask(event);","lastModifiedDate":"2023-01-22"},{"lineNumber":129,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.DELETE)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":130,"author":{"gitId":"BoAi01"},"content":"            String indexToDelete \u003d parser.getCommandContent(inMsg, Command.DELETE);","lastModifiedDate":"2023-01-23"},{"lineNumber":131,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d deleteTask(Integer.parseInt(indexToDelete));","lastModifiedDate":"2023-01-22"},{"lineNumber":132,"author":{"gitId":"BoAi01"},"content":"        } else if (parser.checkCommand(inMsg, Command.FIND)) {","lastModifiedDate":"2023-01-23"},{"lineNumber":133,"author":{"gitId":"BoAi01"},"content":"            String keyword \u003d parser.getCommandContent(inMsg, Command.FIND);","lastModifiedDate":"2023-01-23"},{"lineNumber":134,"author":{"gitId":"BoAi01"},"content":"            stringToPrint \u003d find(keyword);","lastModifiedDate":"2023-01-23"},{"lineNumber":135,"author":{"gitId":"BoAi01"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":136,"author":{"gitId":"BoAi01"},"content":"                throw new DukeException(\"  OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-22"},{"lineNumber":137,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":138,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":139,"author":{"gitId":"BoAi01"},"content":"        if (!suppressPrint) {","lastModifiedDate":"2023-01-22"},{"lineNumber":140,"author":{"gitId":"BoAi01"},"content":"            ui.printStructuredString(stringToPrint);","lastModifiedDate":"2023-01-23"},{"lineNumber":141,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":142,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":143,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":144,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":145,"author":{"gitId":"BoAi01"},"content":"     * Returns the string representation to be printed out when the command \"list\" is invoked","lastModifiedDate":"2023-01-22"},{"lineNumber":146,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":147,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of the message","lastModifiedDate":"2023-01-22"},{"lineNumber":148,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":149,"author":{"gitId":"BoAi01"},"content":"    public String listTasks() {","lastModifiedDate":"2023-01-23"},{"lineNumber":150,"author":{"gitId":"BoAi01"},"content":"        String taskListString \u003d \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":151,"author":{"gitId":"BoAi01"},"content":"                taskList.getTaskListString(true);","lastModifiedDate":"2023-01-23"},{"lineNumber":152,"author":{"gitId":"BoAi01"},"content":"        return taskListString;","lastModifiedDate":"2023-01-22"},{"lineNumber":153,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":156,"author":{"gitId":"BoAi01"},"content":"     * Add a task to the list","lastModifiedDate":"2023-01-22"},{"lineNumber":157,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":158,"author":{"gitId":"BoAi01"},"content":"     * @param task: a task to add","lastModifiedDate":"2023-01-22"},{"lineNumber":159,"author":{"gitId":"BoAi01"},"content":"     * @return the string response after adding a task","lastModifiedDate":"2023-01-22"},{"lineNumber":160,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":161,"author":{"gitId":"BoAi01"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-01-22"},{"lineNumber":162,"author":{"gitId":"BoAi01"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-23"},{"lineNumber":163,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":164,"author":{"gitId":"BoAi01"},"content":"                        \"Now you have %d tasks in the list.\",","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"BoAi01"},"content":"                task,","lastModifiedDate":"2023-01-23"},{"lineNumber":166,"author":{"gitId":"BoAi01"},"content":"                taskList.size());","lastModifiedDate":"2023-01-23"},{"lineNumber":167,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":168,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":169,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":170,"author":{"gitId":"BoAi01"},"content":"     * Marks a task as done by index","lastModifiedDate":"2023-01-23"},{"lineNumber":171,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":172,"author":{"gitId":"BoAi01"},"content":"     * @param idx: index of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":173,"author":{"gitId":"BoAi01"},"content":"     * @return the string message to print out","lastModifiedDate":"2023-01-23"},{"lineNumber":174,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":175,"author":{"gitId":"BoAi01"},"content":"    public String markTaskDone(int idx) {","lastModifiedDate":"2023-01-16"},{"lineNumber":176,"author":{"gitId":"BoAi01"},"content":"        Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":177,"author":{"gitId":"BoAi01"},"content":"        t.markDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":178,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\", t);","lastModifiedDate":"2023-01-16"},{"lineNumber":179,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":180,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":181,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":182,"author":{"gitId":"BoAi01"},"content":"     * Marks a task as undone by index","lastModifiedDate":"2023-01-23"},{"lineNumber":183,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":184,"author":{"gitId":"BoAi01"},"content":"     * @param idx: index of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":185,"author":{"gitId":"BoAi01"},"content":"     * @return the string message to print out","lastModifiedDate":"2023-01-23"},{"lineNumber":186,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":187,"author":{"gitId":"BoAi01"},"content":"    public String unmarkTaskDone(int idx) {","lastModifiedDate":"2023-01-16"},{"lineNumber":188,"author":{"gitId":"BoAi01"},"content":"        Task t \u003d this.taskList.get(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":189,"author":{"gitId":"BoAi01"},"content":"        t.unmarkDone();","lastModifiedDate":"2023-01-16"},{"lineNumber":190,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"OK, I\u0027ve marked this task as not done yet:\\n  %s\", t);","lastModifiedDate":"2023-01-16"},{"lineNumber":191,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":192,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":193,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":194,"author":{"gitId":"BoAi01"},"content":"     * Deletes a task by index","lastModifiedDate":"2023-01-23"},{"lineNumber":195,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":196,"author":{"gitId":"BoAi01"},"content":"     * @param idx: the index of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":197,"author":{"gitId":"BoAi01"},"content":"     * @return the string message to print out","lastModifiedDate":"2023-01-23"},{"lineNumber":198,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":199,"author":{"gitId":"BoAi01"},"content":"    public String deleteTask(int idx) {","lastModifiedDate":"2023-01-16"},{"lineNumber":200,"author":{"gitId":"BoAi01"},"content":"        idx \u003d idx - 1;   // count from zero","lastModifiedDate":"2023-01-23"},{"lineNumber":201,"author":{"gitId":"BoAi01"},"content":"        Task t \u003d taskList.get(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":202,"author":{"gitId":"BoAi01"},"content":"        taskList.remove(idx);","lastModifiedDate":"2023-01-23"},{"lineNumber":203,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":204,"author":{"gitId":"BoAi01"},"content":"                \"Now you have %d tasks in the list.\", t, taskList.size());","lastModifiedDate":"2023-01-23"},{"lineNumber":205,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":206,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":207,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":208,"author":{"gitId":"BoAi01"},"content":"     * Adds user command to a list. The list will be used for","lastModifiedDate":"2023-01-23"},{"lineNumber":209,"author":{"gitId":"BoAi01"},"content":"     * saving to local files as history.","lastModifiedDate":"2023-01-23"},{"lineNumber":210,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":211,"author":{"gitId":"BoAi01"},"content":"     * @param string: the user-input command","lastModifiedDate":"2023-01-22"},{"lineNumber":212,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":213,"author":{"gitId":"BoAi01"},"content":"    public void addCommandList(String string) {","lastModifiedDate":"2023-01-22"},{"lineNumber":214,"author":{"gitId":"BoAi01"},"content":"        commandList.add(string);","lastModifiedDate":"2023-01-22"},{"lineNumber":215,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":216,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":217,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":218,"author":{"gitId":"BoAi01"},"content":"     * Returns the string representation of all history commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":219,"author":{"gitId":"BoAi01"},"content":"     * This is different from the string of all tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":220,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":221,"author":{"gitId":"BoAi01"},"content":"     * @return the string containing all commands","lastModifiedDate":"2023-01-23"},{"lineNumber":222,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":223,"author":{"gitId":"BoAi01"},"content":"    public String getCommandListString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":224,"author":{"gitId":"BoAi01"},"content":"        String string \u003d \"\";","lastModifiedDate":"2023-01-22"},{"lineNumber":225,"author":{"gitId":"BoAi01"},"content":"        for (String s : commandList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":226,"author":{"gitId":"BoAi01"},"content":"            string \u003d string + s + \"\\n\";","lastModifiedDate":"2023-01-22"},{"lineNumber":227,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":228,"author":{"gitId":"BoAi01"},"content":"        return string;","lastModifiedDate":"2023-01-22"},{"lineNumber":229,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":230,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":231,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":232,"author":{"gitId":"BoAi01"},"content":"     * Return the string representation of the list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":233,"author":{"gitId":"BoAi01"},"content":"     * whose names contain the given keyword.","lastModifiedDate":"2023-01-23"},{"lineNumber":234,"author":{"gitId":"BoAi01"},"content":"     * @param string: the keyword","lastModifiedDate":"2023-01-23"},{"lineNumber":235,"author":{"gitId":"BoAi01"},"content":"     * @return the string of the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":236,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":237,"author":{"gitId":"BoAi01"},"content":"    public String find(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":238,"author":{"gitId":"BoAi01"},"content":"        String taskListString \u003d \"Here are the matching tasks in your list:\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":239,"author":{"gitId":"BoAi01"},"content":"                taskList.getTaskNameContains(string).getTaskListString(true);","lastModifiedDate":"2023-01-23"},{"lineNumber":240,"author":{"gitId":"BoAi01"},"content":"        return taskListString;","lastModifiedDate":"2023-01-23"},{"lineNumber":241,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"BoAi01":241,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package duke;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * Exception class, thrown by duke.Duke","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"    protected String errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     * @param errorMessage: the error message of the exception","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * Returns the error message as a string","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * @return the string error message","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        return this.errorMessage;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":28}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":" * Deals with loading and saving task record","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"public class Storage {","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    protected final String filePath;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    protected final String directory;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    protected final String fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * @param directory: directory of the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @param fileName:  the name of the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"    public Storage(String directory, String fileName) {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        this.directory \u003d directory;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.filePath \u003d getRecordPath();","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Returns the path to the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @return the path to the record","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"    private String getRecordPath() {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        return directory + \"/\" + fileName;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     * Saves the list of tasks to a txt file as a string","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     * @param commandListString: the string to write to","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    public void saveToFile(String commandListString) {","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        // https://www.w3schools.com/java/java_files_create.asp","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            // create the directory and the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"            // https://stackoverflow.com/questions/15571496/how-to-check-if-a-folder-exists","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"            if (!(new File(filePath).exists())) {","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"                Files.createDirectories(Paths.get(directory));","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"            // write to the file","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"            FileWriter myWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"            myWriter.write(commandListString);","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"            System.out.println(\"An error occurred while saving record.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Loads the record file at start-up","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"     * @param path: path to the record file","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    public void loadRecordIfExists(ArrayList\u003cString\u003e commandList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"        // check if file exists","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"            return;","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"        // read the file","lastModifiedDate":"2023-01-23"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-23"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"                commandList.add(data);","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"            myReader.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"            System.out.println(\"An error occurred while loading up record. \");","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":93}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * A deadline class extends from the Task.Task.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * It has a deadline attribute on top of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate time;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /***","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * Constructor.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param description: the content of the user command","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the command is incomplete","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    public Deadline(String description) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        int indexOfBy \u003d description.indexOf(\"/by\");","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            this.time \u003d Parser.parseDate(description.substring(indexOfBy + \"/by \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"            this.name \u003d description.substring(0, indexOfBy - \" \".length());","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"The command argument is not complete.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"D\";","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Returns the string representation of the task.","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * The deadline date is included.","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * @return string representation of a deadline task,","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * where the deadline is specified","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s (by: %s)\", type, super.toString(), Task.printDate(time));","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":44}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import ui.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" * The event class that extends the Task class.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * An even should have a start and an end date.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate startTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    protected LocalDate endTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * The default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param description: the content of the command","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    public Event(String description) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        int indexOfFrom \u003d description.indexOf(\"/from\");","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        int indexOfTo \u003d description.indexOf(\"/to\");","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d description.substring(0, indexOfFrom - \" \".length());","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        this.startTime \u003d Parser.parseDate(","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"                description.substring(indexOfFrom + \"/from \".length(),","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"                indexOfTo - \" \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"        this.endTime \u003d Parser.parseDate(","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"                description.substring(","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"                        description.indexOf(\"/to\") + \"/to \".length()));","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"E\";","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * Parse the start time of the event from the user string","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * @param s: the user-input string","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     * @return the start time of the event","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"    public static String parseStartTime(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"        return s.substring(s.indexOf(\"/from\") + \"/from \".length(),","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"                s.indexOf(\"/to\") - \" \".length());","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * Parse the end time of the event from the user string","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"     * @param s: the user-input string","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"     * @return the end time of the event","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"    public static String parseEndTime(String s) {","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        return s.substring(s.indexOf(\"/to\"));","lastModifiedDate":"2023-01-16"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     * Overriding the toString class","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of an event","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s (from: %s to: %s)\", type,","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"                super.toString(), Task.printDate(startTime), Task.printDate(endTime));","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":65}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * The base class for all tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    protected String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    protected String type;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * The default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public Task() {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        this(\"\");","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * The task string description","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     * @param description: a string describing the task, which should include the parameters","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"     *                   corresponding to the task","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d description;","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * Gives the string representation of date","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     * @param date: a date object","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"     * @return the corresponding string representation","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    protected static String printDate(LocalDate date) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"     * Get the name of the task. The name is the content of the task (what to do)","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"     * @return the string name of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    public String getName() {","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        return this.name;","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * Get whether the task is done.","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"     * @return the status of the task","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"        return this.isDone;","lastModifiedDate":"2023-01-16"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * Mark the task as done.","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"     * Mark the task as undone.","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"BoAi01"},"content":"    public void unmarkDone() {","lastModifiedDate":"2023-01-16"},{"lineNumber":72,"author":{"gitId":"BoAi01"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":73,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":74,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":75,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"BoAi01"},"content":"     * Get the string icon of the status of the task. It is either space or X.","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"BoAi01"},"content":"     * @return the string icon of the task status","lastModifiedDate":"2023-01-23"},{"lineNumber":79,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":80,"author":{"gitId":"BoAi01"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-16"},{"lineNumber":81,"author":{"gitId":"BoAi01"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-16"},{"lineNumber":82,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":83,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":84,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":85,"author":{"gitId":"BoAi01"},"content":"     * Overrides the original toString method. The status and the task content","lastModifiedDate":"2023-01-23"},{"lineNumber":86,"author":{"gitId":"BoAi01"},"content":"     * are reflected in the string representation.","lastModifiedDate":"2023-01-23"},{"lineNumber":87,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"BoAi01"},"content":"     * @return the task string","lastModifiedDate":"2023-01-23"},{"lineNumber":89,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":90,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":91,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":92,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), name);","lastModifiedDate":"2023-01-16"},{"lineNumber":93,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"BoAi01"},"content":"     * Return the type of the task, which is a character,","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"BoAi01"},"content":"     * such as \"D\" for deadline and \"E\" for event","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"BoAi01"},"content":"     * @return the type character","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"BoAi01"},"content":"    public String getType() {","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"BoAi01"},"content":"        return type;","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":106,"author":{"gitId":"BoAi01"},"content":"     * Checks if the task name contains a given string","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"BoAi01"},"content":"     * @param string: a given string","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"BoAi01"},"content":"     * @return a boolean value","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":110,"author":{"gitId":"BoAi01"},"content":"    public boolean containString(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":111,"author":{"gitId":"BoAi01"},"content":"        return toString().contains(string);","lastModifiedDate":"2023-01-23"},{"lineNumber":112,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":113,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":113}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.List;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":" * A data structure that saves a list of tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":" * It is directly inherited from ArrayList\u003cTask.Task\u003e","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * Default constructor.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        super();","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     * Construct an instance from an array list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"     * @param tasks: an array list of tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        super(tasks);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * Return the string representation of the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @param isIndexed: whether to add an index number at the beginning of each task","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     *                   or not","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of the task list","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public String getTaskListString(boolean isIndexed) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        String s \u003d \"\";","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        int count \u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        for (Task t : this) {","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"            s +\u003d (isIndexed ? (count + \". \") : \"\") + t;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            if (count \u003c this.size()) {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"                s +\u003d \"\\n\";","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        return s;","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * Get the task list that contains all tasks whose names contain the given string","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     * @param string: the string to search for","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     * @return a task list","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"    public TaskList getTaskNameContains(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"        List\u003cTask\u003e filteredTasks \u003d this.stream().filter(t -\u003e t.containString(string)).collect(Collectors.toList());","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"        return new TaskList(new ArrayList\u003c\u003e(filteredTasks));","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":59}},{"path":"src/main/java/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":" * The to-do class extending from the Task.Task class.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":" * To-do items have no starting date or deadlines.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"     * Default constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"     * @param description: a string describing the to-do task","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        super(description);","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        this.type \u003d \"T\";","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * Overriding","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     * @return the string representation of the to-do task","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"        return String.format(\"[%s]%s\", this.type, super.toString());","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"BoAi01":27}},{"path":"src/main/java/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":" * A string parser that processes user-input commands.","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"public class Parser {","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     * Gets the content of the command","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     * @param string:  the command string","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"     * @param command: a command type","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"     * @return the content of the command","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"     * @throws DukeException when the string is not complete","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"    public String getCommandContent(String string, Command command) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"        String commandString \u003d command.name().toLowerCase();","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"        if ((!commandString.equals(\"list\")) \u0026\u0026 string.length() \u003c\u003d commandString.length() + 1) {","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"The command argument is not complete.\");","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        return string.substring(string.indexOf(commandString) + commandString.length() + \" \".length());","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * Returns whether the input string is of the specified command type","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @param string:  the input string from the user","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     * @param command: a candidate command to check against","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"     * @return whether the input string is of the specified command type","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    public boolean checkCommand(String string, Command command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"        boolean isCommand \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"        switch (command) {","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"        case LIST:","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"            isCommand \u003d string.equalsIgnoreCase(\"list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"        case MARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        case TODO:","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"        case EVENT:","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"        case DELETE:","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"        case FIND:","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"            isCommand \u003d string.toUpperCase().startsWith(command.name());","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"            break;","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"        return isCommand;","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"     * Parse the user-input date string into a date object","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * @param dateString: the string representation of the date","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     * @return the date object","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"    public static LocalDate parseDate(String dateString) throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"            return LocalDate.parse(dateString);","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"            throw new DukeException(\"The date could not be parsed!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":69}},{"path":"src/main/java/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import java.util.Objects;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":" * The text UI interface that processes user input and prints outputs","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class TextUi {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    protected final String name;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    protected final Scanner scanner;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"     * Constructor","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"     * @param name: string name of the robot duke.","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"    public TextUi(String name) {","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"     * Prints a welcome message when starting up","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"BoAi01"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"BoAi01"},"content":"        printStructuredString(String.format(\"Hello! I\u0027m %s\\nWhat can I do for you?\", name));","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"BoAi01"},"content":"     * Waits for and reads user input.","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"BoAi01"},"content":"     * @return the string input from the user","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"BoAi01"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"BoAi01"},"content":"        return scanner.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"BoAi01"},"content":"     * Print the string in a pre-specified format.","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"BoAi01"},"content":"     * @param string: the string content to print out","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"BoAi01"},"content":"    public void printStructuredString(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"BoAi01"},"content":"        String longLine \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"BoAi01"},"content":"        System.out.println(longLine + \"\\n\" + string + \"\\n\" + longLine);","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"BoAi01"},"content":"     * Returns the end message and do final clean-up.","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"BoAi01"},"content":"     * Specifically history commands are saved to a local file.","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"BoAi01"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"BoAi01"},"content":"        printStructuredString(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"BoAi01"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"BoAi01"},"content":"     * Checks if the command marks the end.","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"BoAi01"},"content":"     *","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"BoAi01"},"content":"     * @param string: User-input string","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"BoAi01"},"content":"     * @return if the string marks the end of the conversation","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"BoAi01"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"BoAi01"},"content":"    public boolean isEnd(String string) {","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"BoAi01"},"content":"        return Objects.equals(string.toLowerCase(), \"bye\");","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":67}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    public void testGetType() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"        Deadline deadline \u003d new Deadline(\"a deadline /by 2022-10-22\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"D\", deadline.getType());","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    public void testToString() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"        Deadline deadline \u003d new Deadline(\"a deadline /by 2022-10-22\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[D][ ] a deadline (by: Oct 22 2022)\", deadline.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"BoAi01"},"content":"        deadline.markDone();","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[D][X] a deadline (by: Oct 22 2022)\", deadline.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":24}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"import task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class EventTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    public void testToString() throws DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        Event event \u003d new Event(\"Love Iko /from 2022-08-19 /to +999999999-12-31\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"        assertEquals(\"[E][ ] Love Iko (from: Aug 19 2022 to: Dec 31 +999999999)\", event.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":16}},{"path":"src/test/java/ui/TextUiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"package ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"import ui.TextUi;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"BoAi01"},"content":"public class TextUiTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"BoAi01"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"BoAi01"},"content":"    public void testGetUserInput() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"BoAi01"},"content":"        TextUi ui \u003d new TextUi(\"name\");","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"BoAi01"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"BoAi01"},"content":"        assertTrue(ui.isEnd(\"bye\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"BoAi01"},"content":"        assertFalse(ui.isEnd(\"bye-bye\"));","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"BoAi01"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"BoAi01":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"BoAi01"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"BoAi01"},"content":"todo research","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"BoAi01"},"content":"deadline TA /by 2022-10-22","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"BoAi01"},"content":"mark TA","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"BoAi01"},"content":"mark 2","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"BoAi01"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"BoAi01"},"content":"bye","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"BoAi01":7}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"BoAi01"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"BoAi01"},"content":"java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"BoAi01":1,"-":37}}]
