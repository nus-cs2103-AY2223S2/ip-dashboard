[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"# Duke","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"Duke is your personal chat box that allows you to easily note down and manage your daily task.","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"## - Features","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"+ **todo**","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"+ **deadline**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"+ **event**","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"+ **list**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"+ **mark**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"+ **unmark**","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"+ **delete**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"+ **check**","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"+ **find**","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"+ **sort**","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"+ **bye**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"## - Usage","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"### `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"Add in the task that you are planing to do.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `todo + [task]`","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `todo study CS2103`","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"### `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"Record down a deadline for a task.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `deadline + [task] + /by + [date + time]`","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `deadline return book /by 2019-10-15 18:00`","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"### `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"Record down the start date and end date for an event.","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `event + [task] + /from + [date + time] + /to + [date + time]`","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `event project meeting /from 2015-03-17 09:00 /to 2015-05-03 12:00`","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"### `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"Display all the tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"**Sample result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"2.[D][] return book (by:Oct 15 2019 06:00pm)","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"3.[E][] project meeting (from:Mar 17 2015 09:00am to:May 03 2015 12:00pm)","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"### `mark`","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"Mark a task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `mark + [task number]`","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][X] study CS2103","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"### `unmark`","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"Unmark a task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `unmark + [task number]`","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"### `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"Delete a task.","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `delete + [task number]`","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"### `check`","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"Check if a deadline exist.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `Check + deadline + / + [date]`","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `check deadline /2019-10-15`","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"2.[D][] return book (by:Oct 15 2019 06:00pm)","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:**","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"+ Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"+ check can only be used to check for deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"### `find`","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"CarrieLi1015"},"content":"Find tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `Find + [description]`","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `Find study`","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"CarrieLi1015"},"content":"### `sort`","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"CarrieLi1015"},"content":"Display deadline or event in a sorted order.","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `sort + deadline/event`","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `sort deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** sort can only be used to sort deadline or event.","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"CarrieLi1015"},"content":"### `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"CarrieLi1015"},"content":"Exit from Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"CarrieLi1015"},"content":"## - Setting up in Intellij","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"CarrieLi1015"},"content":"1. Open Intellij.","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"CarrieLi1015"},"content":"2. Open the project in Intellij.","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"CarrieLi1015"},"content":"3. Configure the project to use **JDK 11** (for Mac user, use zulu might be preferred). You can refer to [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"CarrieLi1015"},"content":"4. Set the project language level to `SDK default`.","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"CarrieLi1015"},"content":"5. To run the project inside Intellij, locate `src/main/java/duke/Launcher.java` file and run `Launcher.main()`.","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"CarrieLi1015"},"content":"## - Run .jar","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"CarrieLi1015"},"content":"1. Download the released .jar file.","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"CarrieLi1015"},"content":"2. Put .jar inside a folder.","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"CarrieLi1015"},"content":"3. Right-click on the folder and open the terminal.","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"CarrieLi1015"},"content":"4. After the terminal is opened, key in commend `java -jar myIP.jar`","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"CarrieLi1015"},"content":"## Enjoy using Duke!","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"CarrieLi1015":158,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"checkstyle {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"jar {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"    manifest {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"        attributes(","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"                \u0027Main-Class\u0027: \u0027duke.Launcher\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"        )","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"    from {","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CarrieLi1015":32,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"# Duke","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"Duke is your personal chat box that allows you to easily note down and manage your daily task.","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"## - Features","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"+ **todo**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"+ **deadline**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"+ **event**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"+ **list**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"+ **mark**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"+ **unmark**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"+ **delete**","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"+ **check**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"+ **find**","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"+ **sort**","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"+ **bye**","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"## - Usage","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"### `todo`","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"Add in the task that you are planing to do.","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `todo + [task]`","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `todo study CS2103`","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"### `deadline`","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"Record down a deadline for a task.","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `deadline + [task] + /by + [date + time]`","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `deadline return book /by 2019-10-15 18:00`","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"### `event`","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"Record down the start date and end date for an event.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `event + [task] + /from + [date + time] + /to + [date + time]`","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `event project meeting /from 2015-03-17 09:00 /to 2015-05-03 12:00`","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"### `list`","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"Display all the tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `list`","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `list`","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"**Sample result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"2.[D][] return book (by:Oct 15 2019 06:00pm)","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"3.[E][] project meeting (from:Mar 17 2015 09:00am to:May 03 2015 12:00pm)","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"### `mark`","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"Mark a task as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `mark + [task number]`","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `mark 1`","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][X] study CS2103","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"### `unmark`","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"Unmark a task as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `unmark + [task number]`","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `unmark 1`","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"### `delete`","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"Delete a task.","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `delete + [task number]`","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `delete 1`","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"### `check`","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"Check if a deadline exist.","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `Check + deadline + / + [date]`","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `check deadline /2019-10-15`","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"2.[D][] return book (by:Oct 15 2019 06:00pm)","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:**","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"+ Date and time must be in the format of **yyyy-MM-dd hh:mm.** Else your date input will be deemed as invalid.","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"+ check can only be used to check for deadline.","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"### `find`","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"CarrieLi1015"},"content":"Find tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `Find + [description]`","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `Find study`","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"CarrieLi1015"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"CarrieLi1015"},"content":"### `sort`","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"CarrieLi1015"},"content":"Display deadline or event in a sorted order.","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `sort + deadline/event`","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `sort deadline`","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"CarrieLi1015"},"content":"**Expected result:**","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"CarrieLi1015"},"content":"1.[T][] study CS2103","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"CarrieLi1015"},"content":"**Attention:** sort can only be used to sort deadline or event.","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"CarrieLi1015"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"CarrieLi1015"},"content":"### `bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"CarrieLi1015"},"content":"Exit from Duke.","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"CarrieLi1015"},"content":"**Format:** `bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"CarrieLi1015"},"content":"**Example of usage:** `bye`","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"CarrieLi1015"},"content":"## - Setting up in Intellij","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"CarrieLi1015"},"content":"1. Open Intellij.","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"CarrieLi1015"},"content":"2. Open the project in Intellij.","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"CarrieLi1015"},"content":"3. Configure the project to use **JDK 11** (for Mac user, use zulu might be preferred). You can refer to [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"CarrieLi1015"},"content":"4. Set the project language level to `SDK default`.","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"CarrieLi1015"},"content":"5. To run the project inside Intellij, locate `src/main/java/duke/Launcher.java` file and run `Launcher.main()`.","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"CarrieLi1015"},"content":"## - Run .jar","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"CarrieLi1015"},"content":"1. Download the released .jar file.","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"CarrieLi1015"},"content":"2. Put .jar inside a folder.","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"CarrieLi1015"},"content":"3. Right-click on the folder and open the terminal. ","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"CarrieLi1015"},"content":"4. After the terminal is opened, key in commend `java -jar myIP.jar`","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"CarrieLi1015"},"content":"## Enjoy using Duke!","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"CarrieLi1015":147,"-":17}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"    //The dialog is being used to set text.","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    //The displayPicture is being used to set image.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(getClass().getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"        Rectangle clip \u003d new Rectangle((int) displayPicture.getFitWidth(), (int) displayPicture.getFitHeight());","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"        clip.setArcHeight(20);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"        clip.setArcWidth(20);","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"    private void flip() {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        setAlignment(Pos.CENTER_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"        dialog.setStyle(\"-fx-padding: 15; -fx-background-insets: 5; -fx-background-color: #659EC7; \"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"                + \"-fx-background-radius: 10; -fx-text-fill: white;\");","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets the user input.","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"     * @param text User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"     * @param img The user avatar.","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Wrap the user input text and avatar inside a DialogBox.","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns message from Duke.","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"     * @param text Duke\u0027s reply.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"     * @param img Duke avatar.","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Wrap the Duke\u0027s reply and avatar inside a DialogBox.","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"        db.flip();","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"        return db;","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"CarrieLi1015":85}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" * Main application class.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates \u003ccase\u003eDuke\u003c/case\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     * @param filePath To specific a file path to save the previous records.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"            tasks \u003d new TaskList(storage.loadRecord());","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"            tasks.printList();","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets the user input to trigger the run.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"     * Main application loop.","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Duke response to the user input respectively.","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"        String temp;","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"            temp \u003d Parser.parseInput(tasks, userInput);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"            storage.writeToFile(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"            return temp;","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"            return numberFormatExceptionMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"            return ioExceptionMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"            return dateTimeExceptionMessage();","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"            return arrayIndexOutOfBoundsException();","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"     * The operation must follow by an integer.","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Number format exception message.","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"    public String numberFormatExceptionMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"        return \"The operation must follow by a integer!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"     * Error occurs when try to get access to the storage file.","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"    public String ioExceptionMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Error occurs when try to access your file\";","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"     * User input date time is in the wrong format.","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Date time exception message.","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"    public String dateTimeExceptionMessage() {","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Invalid date time format, please try again!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"     * User does not provide enough information that caused out of bounds.","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Array index out of bounds error message.","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"    public String arrayIndexOutOfBoundsException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Invalid format! Please ensure your input is in the \"","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"                + \"correct format!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"CarrieLi1015":96,"-":1}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * Extends from Exception to handle different exceptions.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" * Different exceptions correspond to different message.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    private final String eMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"     * Generates a \u003ccode\u003eDukeException\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * @param eMessage Respective error message for exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public DukeException(String eMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        this.eMessage \u003d eMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets the error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    public String getMessage() {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"        return this.eMessage;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"class MissingDescriptionException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"    public MissingDescriptionException(String taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the description of \" + taskType + \" is missing/incomplete! Please try again.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"class MissingNumberException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"    public MissingNumberException(String operationType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the \" + operationType + \" must specific the task number! Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"class TaskNotExistException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the task is not exist yet! Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"class CheckNotFindException extends DukeException {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"    public CheckNotFindException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"On no, your check is in the wrong format! Please try again.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"class NoSortTypeException extends DukeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"    public NoSortTypeException() {","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"You must specific what you want to sort, deadline or event. Please try again!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"CarrieLi1015":58}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"public class Launcher {","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"CarrieLi1015":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    private final Duke duke \u003d new Duke(\"./userRecords/records.txt\");","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"     * Starts the stage.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"     * @param stage The primary stage for this application, onto which","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"            VBox ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"            scene.getRoot().setStyle(\"-fx-font-family: \u0027ui-serif\u0027\");","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().welcome();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"            stage.show();","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"CarrieLi1015":42}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"public class MainWindow extends VBox {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"     * Displays the welcome message.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"    public void welcome() {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"        String welcome \u003d \"Hello! This is Duke! \\n\" + \"How can I help you today? ^_^ \\n\"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"                + \"Please follow the date format: yyyy-MM-dd hh:mm (e.g. 2019-10-15 18:00), \"","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"                + \"otherwise your date input will be invalid. \\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"                + \"To find more details about Duke, please refer to the README - the user guide manual.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(welcome, dukeImage));","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     * appends them to the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"CarrieLi1015":60}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" * The Parser class is to make sense of (interpret) the user commend.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" * Executes different functions based on the user commend/input.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    private static String getSubstring(String type, String userInput) {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        if (type.equals(\"recordType\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"            return userInput.substring(0, 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"        } else if (type.equals(\"recordStatus\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"            return userInput.substring(3, 6);","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"            return userInput.substring(7);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     * Interprets the task from the history file.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput Input the previous file history into the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     * @return All the tasks that stored previously in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    public static Task parseFile(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"        String recordType \u003d getSubstring(\"recordType\", userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"        String recordStatus \u003d getSubstring(\"recordStatus\", userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"        String recordDescription \u003d getSubstring(\"recordDescription\", userInput);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"        Task item \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"        switch (recordType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[T]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Todo(recordDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[D]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"            String byDate \u003d recordDescription.substring(recordDescription.indexOf(\":\")","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"                    + 2, recordDescription.length() - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"            recordDescription \u003d recordDescription.substring(0, recordDescription.indexOf(\"(\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Deadline(recordDescription, new TimeConvertor(byDate, \"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[E]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"            String fromDate \u003d recordDescription.substring(recordDescription.indexOf(\"from:\")","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"                    + 6, recordDescription.indexOf(\"to:\") - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"            String toDate \u003d recordDescription.substring(recordDescription.indexOf(\"to:\")","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"                    + 4, recordDescription.length() - 1);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"            recordDescription \u003d recordDescription.substring(0, recordDescription.indexOf(\"(\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Event(recordDescription, new TimeConvertor(fromDate, \"MMM dd yyyy hh:mma\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"                    new TimeConvertor(toDate, \"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"        default:","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"            assert false : \"This type of record cannot be parsed\";","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"        if (recordStatus.equals(\"[X]\") \u0026\u0026 item !\u003d null) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"            item.setIsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"        return item;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"     * Parses the user input to interpret the user intended behaviours and take action.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"     * @param list Instantiate \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input into the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"     * @return A string value for the output.","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If task does not exist in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingNumberException If not indication of task index number.","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException If no task description.","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws CheckNotFindException If no result find when check for the user input.","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws NoSortTypeException If the type chosen cannot be sort.","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"    public static String parseInput(TaskList list, String userInput)","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"            throws TaskNotExistException, MissingNumberException, MissingDescriptionException, CheckNotFindException,","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"            NoSortTypeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"        switch (userInput.split(\"\\\\s+\")[0].toLowerCase()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"            return \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"            return list.printList();","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"            return list.mark(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"            return list.unmark(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"            return list.todo(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"            return list.deadline(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"            return list.event(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"            return list.delete(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"        case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"            return list.find(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"        case \"check\":","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"            return list.check(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"        case \"sort\":","lastModifiedDate":"2023-02-10"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"            return list.sort(userInput);","lastModifiedDate":"2023-02-10"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"            assert false : \"User input unknown case\";","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Oh no, I am not sure what that means, could you try again?\";","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":107}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":" * The Storage class is to handle loading/saving tasks from/in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    private final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     * Stores user input. Creates directory if it does not exist/cannot","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"     * be found in the given file path.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"     * @param filePath Where the file should be stored.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If file cannot be created.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"        file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"        file.createNewFile();","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"     * Loads all records from the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Previous records that store inside an array list.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If records in the file cannot be loaded.","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    public ArrayList\u003cString\u003e loadRecord() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"        Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"        ArrayList\u003cString\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"            records.add(sc.nextLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        return records;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     * Writes/updates to the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"     * @param tasks Tasks that needed to be written to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If update cannot be written to the file.","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"            fw.write(tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":61}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * The task class contains all the tasks that can be operated by users.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"     * Generates a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * @param taskDescription The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets the status of a task.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Whether the task is being marked or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"     * Sets the task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    public void setIsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"     * Sets the task as not done.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    public void revertIsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets the description of a task.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"     * @return A specific task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"    public String getTaskDes() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"        return taskDescription;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"     * Constructs display message.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Message in format.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + taskDescription;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"class Deadline extends Task implements Comparable\u003cDeadline\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"    private final TimeConvertor by;","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"    public Deadline(String description, TimeConvertor by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"        return this.by.getDate();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"    public int compareTo(Deadline o) {","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"        return by.compareTo(o.by);","lastModifiedDate":"2023-02-10"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"class Event extends Task implements Comparable\u003cEvent\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"    private final TimeConvertor from;","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"    private final TimeConvertor to;","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"    public Event(String description, TimeConvertor from, TimeConvertor to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"    public int compareTo(Event o) {","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"        return from.compareTo(o.from);","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":115}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.PriorityQueue;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" * The TaskList class contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    private ArrayList\u003cTask\u003e lists \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * Generates a collection of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"     * @param inputs The user/file input.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskList(ArrayList\u003cString\u003e inputs) {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"        for (String item : inputs) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"            lists.add(Parser.parseFile(item));","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates an empty task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"        //For the program to initialize, create an empty task list.","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns the size of the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The size of the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"        return lists.size();","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"     * Gets a specific task from the task list.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"     * @param index The task index.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The task of the corresponding index.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"        return lists.get(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"     * Displays all the tasks in the list.","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    public String printList() {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"        String allItems \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"        if (lists.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"            return \"No tasks in your list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"            allItems \u003d allItems + (i + 1) + \". \" + lists.get(i) + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"        return allItems;","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"    private boolean isIndexExist(int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isLargerThanSize \u003d index \u003e lists.size();","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isIndexSmaller \u003d index \u003c 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isInvalidIndex \u003d isLargerThanSize || isIndexSmaller;","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"        return isInvalidIndex;","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"    private int checkIndex(String userInput, String type) throws MissingNumberException, TaskNotExistException {","lastModifiedDate":"2023-02-10"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"        if ((userInput.split(\"\\\\s+\")).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"            throw new MissingNumberException(type);","lastModifiedDate":"2023-02-10"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"        int index \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"        if (isIndexExist(index)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-02-10"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"        return index;","lastModifiedDate":"2023-02-10"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"     * Marks a specific task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return marked message.","lastModifiedDate":"2023-02-10"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If the task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingNumberException If user not specific which task to mark.","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"    public String mark(String userInput) throws TaskNotExistException, MissingNumberException {","lastModifiedDate":"2023-02-10"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"        int index \u003d checkIndex(userInput, \"mark\");","lastModifiedDate":"2023-02-10"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003e\u003d 1 : \"User input index smaller than 1\";","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003c\u003d lists.size() : \"User input index larger than the current list size\";","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e lists.size() || index \u003c 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"        lists.get(index - 1).setIsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Nice! I\u0027ve marked this task as done: \\n\" + lists.get(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"     * Marks a specific task as not done.","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return unmarked message.","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If the task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingNumberException If user not specific which task to unmark.","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"CarrieLi1015"},"content":"    public String unmark(String userInput) throws TaskNotExistException, MissingNumberException {","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"CarrieLi1015"},"content":"        int index \u003d checkIndex(userInput, \"unmark\");","lastModifiedDate":"2023-02-10"},{"lineNumber":119,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003e\u003d 1 : \"User input index smaller than 1\";","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003c\u003d lists.size() : \"User input index larger than the current list size\";","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e lists.size() || index \u003c 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"CarrieLi1015"},"content":"        lists.get(index - 1).revertIsDone();","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Ok! I\u0027ve marked this task as not done: \\n\" + lists.get(index - 1);","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates a to do task.","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":135,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return to do task message.","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException If to do task is missing a description.","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"CarrieLi1015"},"content":"    public String todo(String userInput) throws MissingDescriptionException {","lastModifiedDate":"2023-02-10"},{"lineNumber":139,"author":{"gitId":"CarrieLi1015"},"content":"        if ((userInput.split(\"\\\\s+\")).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"CarrieLi1015"},"content":"            throw new MissingDescriptionException(\"todo\");","lastModifiedDate":"2023-02-10"},{"lineNumber":141,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":142,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":143,"author":{"gitId":"CarrieLi1015"},"content":"        String desc \u003d userInput.substring(userInput.indexOf(\" \")).trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":144,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":145,"author":{"gitId":"CarrieLi1015"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":146,"author":{"gitId":"CarrieLi1015"},"content":"        lists.add(todo);","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + todo + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"CarrieLi1015"},"content":"                + lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":149,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"CarrieLi1015"},"content":"    private boolean isDeadlineValid(String ddDate, String ddDescription) {","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isMissingDate \u003d (ddDate.trim()).length() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isMissingDescription \u003d (ddDescription.trim()).length() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isInvalidFormat \u003d isMissingDate || isMissingDescription;","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"CarrieLi1015"},"content":"        return isInvalidFormat;","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates a deadline task.","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":163,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return deadline message.","lastModifiedDate":"2023-02-10"},{"lineNumber":164,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException If deadline task is missing a description.","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"CarrieLi1015"},"content":"    public String deadline(String userInput) throws MissingDescriptionException {","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"CarrieLi1015"},"content":"        String ddDate \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"CarrieLi1015"},"content":"        String ddDescription \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"CarrieLi1015"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"CarrieLi1015"},"content":"        String[] input \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"CarrieLi1015"},"content":"        while (i \u003c input.length) {","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"CarrieLi1015"},"content":"            if (input[i].equals(\"/by\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"CarrieLi1015"},"content":"                ddDate \u003d input[i + 1] + \" \" + input[i + 2];","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"CarrieLi1015"},"content":"                i +\u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"CarrieLi1015"},"content":"            } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"CarrieLi1015"},"content":"                ddDescription +\u003d input[i] + \" \";","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"CarrieLi1015"},"content":"                i +\u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":180,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"CarrieLi1015"},"content":"        if (isDeadlineValid(ddDate, ddDescription)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"CarrieLi1015"},"content":"            throw new MissingDescriptionException(\"deadline\");","lastModifiedDate":"2023-02-10"},{"lineNumber":184,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":185,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":186,"author":{"gitId":"CarrieLi1015"},"content":"        Deadline deadline \u003d new Deadline(ddDescription, new TimeConvertor(ddDate));","lastModifiedDate":"2023-02-10"},{"lineNumber":187,"author":{"gitId":"CarrieLi1015"},"content":"        lists.add(deadline);","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + deadline + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"CarrieLi1015"},"content":"                + lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"CarrieLi1015"},"content":"    private boolean isEventValid(String eventFrom, String eventTo, String eventDescription) {","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isMissingFrom \u003d (eventFrom.trim()).length() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isMissingTo \u003d (eventTo.trim()).length() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isMissingDescription \u003d (eventDescription.trim()).length() \u003d\u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isInvalidFormat \u003d isMissingFrom || isMissingTo || isMissingDescription;","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"CarrieLi1015"},"content":"        return isInvalidFormat;","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"CarrieLi1015"},"content":"     * Creates an event task.","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":204,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":205,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return event message.","lastModifiedDate":"2023-02-10"},{"lineNumber":206,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException If event task is missing a description.","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":208,"author":{"gitId":"CarrieLi1015"},"content":"    public String event(String userInput) throws MissingDescriptionException {","lastModifiedDate":"2023-02-10"},{"lineNumber":209,"author":{"gitId":"CarrieLi1015"},"content":"        String eventDescription \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":210,"author":{"gitId":"CarrieLi1015"},"content":"        String eventFrom \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":211,"author":{"gitId":"CarrieLi1015"},"content":"        String eventTo \u003d \"\";","lastModifiedDate":"2023-02-16"},{"lineNumber":212,"author":{"gitId":"CarrieLi1015"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":213,"author":{"gitId":"CarrieLi1015"},"content":"        String[] input \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-02-16"},{"lineNumber":214,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":215,"author":{"gitId":"CarrieLi1015"},"content":"        while (i \u003c input.length) {","lastModifiedDate":"2023-02-16"},{"lineNumber":216,"author":{"gitId":"CarrieLi1015"},"content":"            if (input[i].equals(\"/from\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":217,"author":{"gitId":"CarrieLi1015"},"content":"                eventFrom \u003d input[i + 1] + \" \" + input[i + 2];","lastModifiedDate":"2023-02-16"},{"lineNumber":218,"author":{"gitId":"CarrieLi1015"},"content":"                i +\u003d 3;","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"CarrieLi1015"},"content":"            } else if (input[i].equals(\"/to\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"CarrieLi1015"},"content":"                eventTo \u003d input[i + 1] + \" \" + input[i + 2];","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"CarrieLi1015"},"content":"                i +\u003d 3;","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"CarrieLi1015"},"content":"            } else {","lastModifiedDate":"2023-02-16"},{"lineNumber":223,"author":{"gitId":"CarrieLi1015"},"content":"                eventDescription +\u003d input[i] + \" \";","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"CarrieLi1015"},"content":"                i +\u003d 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":225,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":226,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":227,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":228,"author":{"gitId":"CarrieLi1015"},"content":"        if (isEventValid(eventFrom, eventTo, eventDescription)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"CarrieLi1015"},"content":"            throw new MissingDescriptionException(\"event\");","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":231,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":232,"author":{"gitId":"CarrieLi1015"},"content":"        Event event \u003d new Event(eventDescription, new TimeConvertor(eventFrom), new TimeConvertor(eventTo));","lastModifiedDate":"2023-02-10"},{"lineNumber":233,"author":{"gitId":"CarrieLi1015"},"content":"        lists.add(event);","lastModifiedDate":"2023-02-02"},{"lineNumber":234,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Got it. I\u0027ve added this task:\\n\" + event + \"\\n\" + \"Now you have \"","lastModifiedDate":"2023-02-03"},{"lineNumber":235,"author":{"gitId":"CarrieLi1015"},"content":"                + lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":236,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"CarrieLi1015"},"content":"     * Deletes the selected task.","lastModifiedDate":"2023-02-02"},{"lineNumber":240,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":241,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":242,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return delete messages.","lastModifiedDate":"2023-02-10"},{"lineNumber":243,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If the selected task does not exist in the list.","lastModifiedDate":"2023-02-17"},{"lineNumber":244,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingNumberException If user not specific which task to delete.","lastModifiedDate":"2023-02-17"},{"lineNumber":245,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":246,"author":{"gitId":"CarrieLi1015"},"content":"    public String delete(String userInput) throws TaskNotExistException, MissingNumberException {","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"CarrieLi1015"},"content":"        int index \u003d checkIndex(userInput, \"delete\");","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":249,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003e\u003d 1 : \"User input index smaller than 1\";","lastModifiedDate":"2023-02-09"},{"lineNumber":250,"author":{"gitId":"CarrieLi1015"},"content":"        assert index \u003c\u003d lists.size() : \"User input index larger than the current list size\";","lastModifiedDate":"2023-02-09"},{"lineNumber":251,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":252,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e lists.size() || index \u003c 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":253,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":255,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":256,"author":{"gitId":"CarrieLi1015"},"content":"        return \"Got it. I\u0027ve remove this task:\\n\" + lists.remove(index - 1)","lastModifiedDate":"2023-02-03"},{"lineNumber":257,"author":{"gitId":"CarrieLi1015"},"content":"                + \"\\n\" + \"Now you have \" + lists.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":258,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":259,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":260,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":261,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns tasks with specific key word.","lastModifiedDate":"2023-02-02"},{"lineNumber":262,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":263,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput Search key for finding the tasks.","lastModifiedDate":"2023-02-10"},{"lineNumber":264,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return task is found or not.","lastModifiedDate":"2023-02-10"},{"lineNumber":265,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException If user not specific what to find.","lastModifiedDate":"2023-02-17"},{"lineNumber":266,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":267,"author":{"gitId":"CarrieLi1015"},"content":"    public String find(String userInput) throws MissingDescriptionException {","lastModifiedDate":"2023-02-10"},{"lineNumber":268,"author":{"gitId":"CarrieLi1015"},"content":"        if ((userInput.split(\"\\\\s+\")).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":269,"author":{"gitId":"CarrieLi1015"},"content":"            throw new MissingDescriptionException(\"find\");","lastModifiedDate":"2023-02-10"},{"lineNumber":270,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":271,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":272,"author":{"gitId":"CarrieLi1015"},"content":"        String searchKey \u003d userInput.substring(userInput.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-10"},{"lineNumber":273,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":274,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isNotFind \u003d true;","lastModifiedDate":"2023-02-10"},{"lineNumber":275,"author":{"gitId":"CarrieLi1015"},"content":"        String allFind \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":276,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":277,"author":{"gitId":"CarrieLi1015"},"content":"        //The arrow head need to maintain here as there might be multiple items that matches.","lastModifiedDate":"2023-02-10"},{"lineNumber":278,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":279,"author":{"gitId":"CarrieLi1015"},"content":"            if (lists.get(i).getTaskDes().contains(searchKey.trim())) {","lastModifiedDate":"2023-02-02"},{"lineNumber":280,"author":{"gitId":"CarrieLi1015"},"content":"                isNotFind \u003d false;","lastModifiedDate":"2023-02-10"},{"lineNumber":281,"author":{"gitId":"CarrieLi1015"},"content":"                allFind \u003d allFind + (i + 1) + \". \" + lists.get(i) + \"\\n\";","lastModifiedDate":"2023-02-03"},{"lineNumber":282,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":283,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":284,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":285,"author":{"gitId":"CarrieLi1015"},"content":"        if (isNotFind) {","lastModifiedDate":"2023-02-10"},{"lineNumber":286,"author":{"gitId":"CarrieLi1015"},"content":"            return \"No result found.\";","lastModifiedDate":"2023-02-03"},{"lineNumber":287,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":288,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":289,"author":{"gitId":"CarrieLi1015"},"content":"        return allFind;","lastModifiedDate":"2023-02-03"},{"lineNumber":290,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":291,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":292,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":293,"author":{"gitId":"CarrieLi1015"},"content":"     * Checks if there is deadline on a specific date.","lastModifiedDate":"2023-02-02"},{"lineNumber":294,"author":{"gitId":"CarrieLi1015"},"content":"     * Needs check keywords.","lastModifiedDate":"2023-02-10"},{"lineNumber":295,"author":{"gitId":"CarrieLi1015"},"content":"     * Format: check deadline /2019-10-15.","lastModifiedDate":"2023-01-27"},{"lineNumber":296,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":297,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-10"},{"lineNumber":298,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Return the items that fulfill the check condition.","lastModifiedDate":"2023-02-10"},{"lineNumber":299,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws CheckNotFindException If user not specific which task to check.","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":301,"author":{"gitId":"CarrieLi1015"},"content":"    public String check(String userInput) throws CheckNotFindException {","lastModifiedDate":"2023-02-10"},{"lineNumber":302,"author":{"gitId":"CarrieLi1015"},"content":"        if (!userInput.contains(\"/\")) {","lastModifiedDate":"2023-02-10"},{"lineNumber":303,"author":{"gitId":"CarrieLi1015"},"content":"            throw new CheckNotFindException();","lastModifiedDate":"2023-02-10"},{"lineNumber":304,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":305,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":306,"author":{"gitId":"CarrieLi1015"},"content":"        String checkDeadline \u003d userInput.split(\"/\")[1];","lastModifiedDate":"2023-02-10"},{"lineNumber":307,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":308,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isDeadlineNotExist \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":309,"author":{"gitId":"CarrieLi1015"},"content":"        String allCheck \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":310,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":311,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c lists.size(); i++) {","lastModifiedDate":"2023-02-02"},{"lineNumber":312,"author":{"gitId":"CarrieLi1015"},"content":"            Task currT \u003d lists.get(i);","lastModifiedDate":"2023-02-02"},{"lineNumber":313,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":314,"author":{"gitId":"CarrieLi1015"},"content":"            if (!(currT instanceof Deadline)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":315,"author":{"gitId":"CarrieLi1015"},"content":"                continue;","lastModifiedDate":"2023-02-10"},{"lineNumber":316,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":317,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":318,"author":{"gitId":"CarrieLi1015"},"content":"            Deadline dTask \u003d (Deadline) currT;","lastModifiedDate":"2023-01-26"},{"lineNumber":319,"author":{"gitId":"CarrieLi1015"},"content":"            if (dTask.getDeadline().equals(checkDeadline)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":320,"author":{"gitId":"CarrieLi1015"},"content":"                isDeadlineNotExist \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":321,"author":{"gitId":"CarrieLi1015"},"content":"                allCheck \u003d allCheck + (i + 1) + \".\" + dTask + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":322,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":323,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":324,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":325,"author":{"gitId":"CarrieLi1015"},"content":"        if (isDeadlineNotExist) {","lastModifiedDate":"2023-02-17"},{"lineNumber":326,"author":{"gitId":"CarrieLi1015"},"content":"            return \"No deadline found\";","lastModifiedDate":"2023-02-17"},{"lineNumber":327,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":328,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":329,"author":{"gitId":"CarrieLi1015"},"content":"        return allCheck;","lastModifiedDate":"2023-02-03"},{"lineNumber":330,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":331,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":332,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":333,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":334,"author":{"gitId":"CarrieLi1015"},"content":"     * Displays the sorted sequence of deadline or event.","lastModifiedDate":"2023-02-17"},{"lineNumber":335,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":336,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput What user want to sort.","lastModifiedDate":"2023-02-17"},{"lineNumber":337,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The sorted list of deadline or event based on the user\u0027s choice.","lastModifiedDate":"2023-02-17"},{"lineNumber":338,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws NoSortTypeException If sort is not applied to deadline or event type.","lastModifiedDate":"2023-02-17"},{"lineNumber":339,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":340,"author":{"gitId":"CarrieLi1015"},"content":"    public String sort(String userInput) throws NoSortTypeException {","lastModifiedDate":"2023-02-10"},{"lineNumber":341,"author":{"gitId":"CarrieLi1015"},"content":"        if ((userInput.split(\"\\\\s+\")).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-16"},{"lineNumber":342,"author":{"gitId":"CarrieLi1015"},"content":"            throw new NoSortTypeException();","lastModifiedDate":"2023-02-10"},{"lineNumber":343,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":344,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":345,"author":{"gitId":"CarrieLi1015"},"content":"        String type \u003d userInput.split(\" \")[1].trim();","lastModifiedDate":"2023-02-10"},{"lineNumber":346,"author":{"gitId":"CarrieLi1015"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-02-10"},{"lineNumber":347,"author":{"gitId":"CarrieLi1015"},"content":"        PriorityQueue\u003cTask\u003e pqTasks \u003d new PriorityQueue\u003c\u003e();","lastModifiedDate":"2023-02-10"},{"lineNumber":348,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":349,"author":{"gitId":"CarrieLi1015"},"content":"        for (Task items: lists) {","lastModifiedDate":"2023-02-10"},{"lineNumber":350,"author":{"gitId":"CarrieLi1015"},"content":"            if (type.equals(\"deadline\") \u0026\u0026 items instanceof Deadline) {","lastModifiedDate":"2023-02-10"},{"lineNumber":351,"author":{"gitId":"CarrieLi1015"},"content":"                pqTasks.add(items);","lastModifiedDate":"2023-02-10"},{"lineNumber":352,"author":{"gitId":"CarrieLi1015"},"content":"            } else if (type.equals(\"event\") \u0026\u0026 items instanceof Event) {","lastModifiedDate":"2023-02-10"},{"lineNumber":353,"author":{"gitId":"CarrieLi1015"},"content":"                pqTasks.add(items);","lastModifiedDate":"2023-02-10"},{"lineNumber":354,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":355,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":356,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":357,"author":{"gitId":"CarrieLi1015"},"content":"        while (!pqTasks.isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":358,"author":{"gitId":"CarrieLi1015"},"content":"            result +\u003d \"• \" + pqTasks.poll() + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":359,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":360,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":361,"author":{"gitId":"CarrieLi1015"},"content":"        return result.length() !\u003d 0 ? result : \"No result return! Either you do not have deadline/event \"","lastModifiedDate":"2023-02-17"},{"lineNumber":362,"author":{"gitId":"CarrieLi1015"},"content":"                + \"task in your list currently or your sort is not valid. \";","lastModifiedDate":"2023-02-17"},{"lineNumber":363,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":364,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":365,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"CarrieLi1015":365}},{"path":"src/main/java/duke/TimeConvertor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" * The TimeConvertor is to convert the user input time to a date type.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"public class TimeConvertor implements Comparable\u003cTimeConvertor\u003e {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    private final LocalDateTime realDate;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * Converts to date type.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"     * @param timing User input time.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    public TimeConvertor(String timing) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"        this.realDate \u003d LocalDateTime.parse(timing, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     * Converts to date type.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     * @param timing Time load from the record file.","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"     * @param type To indicate the time is loaded from a file instead of user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    public TimeConvertor(String timing, String type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"        this.realDate \u003d LocalDateTime.parse(timing, DateTimeFormatter.ofPattern(type));","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns the date.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date in pattern yyyy-MM-dd.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDate() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"     * Returns the date.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"     * With require to provide date type.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"     * @param type The pattern of date.","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date in given pattern.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDate(String type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate.format(DateTimeFormatter.ofPattern(type));","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"     * Displays the date.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"    public int compareTo(TimeConvertor o) {","lastModifiedDate":"2023-02-10"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"        if (realDate.isBefore(o.realDate)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"            return -1;","lastModifiedDate":"2023-02-10"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"        } else if (realDate.isAfter(o.realDate)) {","lastModifiedDate":"2023-02-10"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"            return 1;","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"            return 0;","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":71}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" style\u003d\"-fx-padding: 15; -fx-background-insets: 5; -fx-background-color: #DADBDD; -fx-background-radius: 10;\"/\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"69.0\" fitWidth\u003d\"69.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"CarrieLi1015":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"\u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"600.0\" prefWidth\u003d\"420.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" VBox.vgrow\u003d\"ALWAYS\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" prefWidth\u003d\"588.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"360.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"                \u003cInsets top\u003d\"5.0\" bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"CarrieLi1015":27}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    public void testTodo() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        Todo todoTest \u003d new Todo(\"eat\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"[T][ ] eat\", todoTest.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":13}},{"path":"src/test/java/duke/TimeConvertorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class TimeConvertorTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    public void timeTest1() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        TimeConvertor timeTest \u003d new TimeConvertor(\"2015-03-17 09:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"2015-03-17\", timeTest.getDate());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public void timeTest2() {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        TimeConvertor timeTest \u003d new TimeConvertor(\"2015-03-17 09:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"Mar 17 2015\", timeTest.getDate(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"todo eat","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"deadline submit /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"event meeting /from Monday 2pm /to Friday 5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"CarrieLi1015":8}}]
