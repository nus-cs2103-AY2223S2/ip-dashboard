[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"jar {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"    manifest {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        attributes(","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"                \u0027Class-Path\u0027: configurations.compile.collect { it.getName() }.join(\u0027 \u0027),","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"                \u0027Main-Class\u0027: \u0027Duke\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"        )","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CarrieLi1015":10,"-":41}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import duke.Parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":" * Main application class.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"//Follow the given coding standard.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"     * Create \u003ccase\u003eDuke\u003c/case\u003e object.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     * @param filePath To specific a file path to save the previous records.","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If file cannot be loaded.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"            storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"            tasks \u003d new TaskList(storage.loadRecord());","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"            tasks.printList();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"            ui.printDashes();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"Error occurs when try to load.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"     * Main application loop.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"     * Get the user input to trigger the run.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"                if (Parser.parseInput(tasks, sc.nextLine().trim())) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"                    storage.writeToFile(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"                ui.println(e.eMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"                ui.println(\"The operation must follow by a integer\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"                ui.println(\"Error occurs when try to access your file\");","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"            } catch (DateTimeException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"                ui.println(\"Invalid date time format, please try again!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"            ui.printDashes();","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"     * Entry point to the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"     * @param args Optional arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException if cannot access folder/file.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"        Duke duke \u003d new Duke(\"./userRecords/records.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"        duke.run();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"CarrieLi1015":69,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * Extend from Exception to handle different exceptions.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" * Different exceptions correspond to different message.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    public String eMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"     * Generate a \u003ccode\u003eDukeException\u003c/code\u003e object.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * @param eMessage Respective error message for exception.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public DukeException(String eMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        this.eMessage \u003d eMessage;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"class UnknownInputException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"    public UnknownInputException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, I am not sure what that means, could you try again?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"class MissingDescriptionException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    public MissingDescriptionException(String taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the description of a \" + taskType + \" cannot be empty! Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"class MissingNumberException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"    public MissingNumberException(String operationType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the \" + operationType + \" must specific the task number! Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"class TaskNotExistException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        super(\"Oh no, the task is not exist yet! Please try again.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":42}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * The Parser class is to make sense of (interpret) the user commend.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" * Execute different function based on the user commend/input.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"     * Interpret the task from the history file.","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput Input the previous file history into the","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     *                  application.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * @return All the tasks that stored previously in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public static Task parseFile(String userInput) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        String recordType \u003d userInput.substring(0, 3);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        String recordStatus \u003d userInput.substring(3, 6);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"        String recordDescription \u003d userInput.substring(7);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"        Task item \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"        switch (recordType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[T]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Todo(recordDescription);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"                break;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[D]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"            String byDate \u003d recordDescription.substring(recordDescription.indexOf(\":\") + 2,","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"                    recordDescription.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"            recordDescription \u003d recordDescription.substring(0, recordDescription.indexOf(\"(\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Deadline(recordDescription, new TimeConvertor(byDate, \"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"        case \"[E]\":","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"            String fromDate \u003d recordDescription.substring(recordDescription.indexOf(\"from:\") + 6,","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"                    recordDescription.indexOf(\"to:\") - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"            String toDate \u003d recordDescription.substring(recordDescription.indexOf(\"to:\") + 4,","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"                    recordDescription.length() - 1);","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"            recordDescription \u003d recordDescription.substring(0, recordDescription.indexOf(\"(\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"            item \u003d new Event(recordDescription, new TimeConvertor(fromDate, \"MMM dd yyyy hh:mma\"),","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"                    new TimeConvertor(toDate, \"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"        if (recordStatus.equals(\"[X]\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"                item.setIsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"        return item;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"     * @param list Instantiate \u003ccode\u003eTaskList\u003c/code\u003e object.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"     * @param userInput User input into the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"     * @return a boolean value that indicate whether there is","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"     *         change that need to be updated due to the task conducted.","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException The task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingNumberException Not indication of task index number.","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws MissingDescriptionException No task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"    public static boolean parseInput(TaskList list, String userInput)","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"            throws TaskNotExistException, MissingNumberException, MissingDescriptionException,","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"            UnknownInputException {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"        int chosenTask;","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"        switch (userInput.split(\"\\\\s+\")[0]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"            list.bye();","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"            list.printList();","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingNumberException(\"mark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"            chosenTask \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"            list.mark(chosenTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingNumberException(\"unmark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"            chosenTask \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"            list.unmark(chosenTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingDescriptionException(\"todo\");","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"            String todo_description \u003d userInput.substring(userInput.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"            list.todo(todo_description);","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingDescriptionException(\"deadline\");","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\"/\") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingDescriptionException(\"deadline\");","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"            String dd_full \u003d userInput.substring(userInput.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"            String dd_description \u003d dd_full.split(\"/\")[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"            String dd_date \u003d dd_full.split(\"/\")[1].substring(dd_full.split(\"/\")[1]","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"                    .indexOf(\" \")).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"            list.deadline(dd_description, new TimeConvertor(dd_date));","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingDescriptionException(\"event\");","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\"/\") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingDescriptionException(\"event\");","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"            String event_full \u003d userInput.substring(userInput.indexOf(\" \")).trim();","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"            String event_description \u003d event_full.split(\"/\")[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"            String event_from \u003d event_full.split(\"/\")[1]","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"                    .substring(event_full.split(\"/\")[1].indexOf(\" \")).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"            String event_to \u003d event_full.split(\"/\")[2].substring(event_full","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"                    .split(\"/\")[2].indexOf(\" \")).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"            list.event(event_description, new TimeConvertor(event_from),","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"CarrieLi1015"},"content":"                    new TimeConvertor(event_to));","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"CarrieLi1015"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingNumberException(\"delete\");","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"CarrieLi1015"},"content":"            chosenTask \u003d Integer.parseInt(userInput.split(\"\\\\s+\")[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"CarrieLi1015"},"content":"            list.delete(chosenTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"CarrieLi1015"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"CarrieLi1015"},"content":"        case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\" \") \u003d\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingNumberException(\"find\");","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"CarrieLi1015"},"content":"            list.find(userInput.substring(userInput.indexOf(\" \") + 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"CarrieLi1015"},"content":"            return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"CarrieLi1015"},"content":"        case \"check\":","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"CarrieLi1015"},"content":"            if (userInput.indexOf(\"/\") \u003d\u003d -1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"CarrieLi1015"},"content":"                throw new MissingNumberException(\"check\");","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"CarrieLi1015"},"content":"            String checkDeadline \u003d userInput.split(\"/\")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"CarrieLi1015"},"content":"            list.check(checkDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"CarrieLi1015"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"CarrieLi1015"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"Oh no, I am not sure what that means, could you try again?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"CarrieLi1015"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":144}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":" * The Storage class is to handle loading/saving tasks from/in the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"    private final File file;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     * Store user input. Create directory if it does not exist/cannot","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"     * be found in the given file path.","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"     * @param filePath Where the file should be stored.","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If file cannot be created.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     * Load all records from the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Previous records that store inside an array list.","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException If records in the file cannot be loaded.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    public ArrayList\u003cString\u003e loadRecord() throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"        Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"        ArrayList\u003cString\u003e records \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"            records.add(sc.nextLine());","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"        sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        return records;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     * Write/update to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"     * @param tasks Tasks that needed to be written to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws IOException Update cannot be written to the file.","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    public void writeToFile(TaskList tasks) throws IOException {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"        FileWriter fw \u003d new FileWriter(this.file);","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"            fw.write(tasks.get(i).toString() + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":59}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * The task class contains all the tasks that can be opreated by","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" * users.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     * Generate a \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * @param taskDescription The task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public Task (String taskDescription) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     * Get the status of a task.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Whether the task is being marked or not.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"     * Set the task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    public void setIsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"     * Set the task as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    public void revertIsDone() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"     * Get the description of a task","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"     * @return A specific task description.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"    public String getTaskDes() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"        return taskDescription;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"     * Construct display message.","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"     * @return Message in format.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[\" + this.getStatusIcon() + \"]\" + \" \" + this.getTaskDes();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"    private TimeConvertor by;","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"    public Deadline(String description, TimeConvertor by) {","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"        return this.by.getDate();","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"    private TimeConvertor from;","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"    private TimeConvertor to;","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"    public Event(String description, TimeConvertor from, TimeConvertor to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"        super(description);","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":106}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" * The TaskList class contains the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"     * A collection of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"     * @param input The user/file input.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskList(ArrayList\u003cString\u003e input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"        for (String item : input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"            list.add(Parser.parseFile(item));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"     * Create a empty task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"     * Find the size of the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The size of the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    public int size() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"        return list.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"     * Get a specific task from the task list.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"     * @param index The task index.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The task of the corresponding index.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"        return list.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     * Exit from the application.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"    public void bye() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Bye. Hope to see you again soon! ^_^\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"     * Display all the tasks in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"    public void printList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"        if (list.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"No tasks in your list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"            for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"                System.out.println(i + \".\" + list.get(i - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"CarrieLi1015"},"content":"     * Mark a specific task as done.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"CarrieLi1015"},"content":"     * @param index The task to be selected.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If the task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"CarrieLi1015"},"content":"    public void mark(int index) throws TaskNotExistException {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"CarrieLi1015"},"content":"        list.get(index - 1).setIsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(list.get(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"CarrieLi1015"},"content":"     * Mark a specific task as not done.","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"CarrieLi1015"},"content":"     * @param index The task to be selected.","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException If the task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"CarrieLi1015"},"content":"    public void unmark(int index) throws TaskNotExistException {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"CarrieLi1015"},"content":"        list.get(index - 1).revertIsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(list.get(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"CarrieLi1015"},"content":"     * Create a todo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"CarrieLi1015"},"content":"     * @param desc The description of the todo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"CarrieLi1015"},"content":"    public void todo(String desc) {","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"CarrieLi1015"},"content":"        Todo todo \u003d new Todo(desc);","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"CarrieLi1015"},"content":"        list.add(todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + todo);","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"CarrieLi1015"},"content":"     * Create a deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"CarrieLi1015"},"content":"     * @param desc The description of the deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"CarrieLi1015"},"content":"     * @param time The deadline of the deadline task.","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"CarrieLi1015"},"content":"    public void deadline(String desc, TimeConvertor time) {","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"CarrieLi1015"},"content":"        Deadline deadline \u003d new Deadline(desc, time);","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"CarrieLi1015"},"content":"        list.add(deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + deadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"CarrieLi1015"},"content":"     * Create a event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"CarrieLi1015"},"content":"     * @param desc The description of the event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"CarrieLi1015"},"content":"     * @param from The start time of the event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"CarrieLi1015"},"content":"     * @param to The end time of the event task.","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"CarrieLi1015"},"content":"    public void event(String desc, TimeConvertor from, TimeConvertor to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"CarrieLi1015"},"content":"        Event event \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"CarrieLi1015"},"content":"        list.add(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\\n\" + event);","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"CarrieLi1015"},"content":"     * Delete the selected task.","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"CarrieLi1015"},"content":"     * @param index The task to be selected.","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"CarrieLi1015"},"content":"     * @throws TaskNotExistException The selected task does not exist in the list.","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"CarrieLi1015"},"content":"    public void delete(int index) throws TaskNotExistException {","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"CarrieLi1015"},"content":"        if (index \u003e list.size() || index \u003c 1) {","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"CarrieLi1015"},"content":"            throw new TaskNotExistException();","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Got it. I\u0027ve remove this task:\\n\" + list.remove(index - 1));","lastModifiedDate":"2023-01-26"},{"lineNumber":148,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":149,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":150,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":151,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"CarrieLi1015"},"content":"     * To find tasks with specific key word.","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"CarrieLi1015"},"content":"     * @param searchKey Search key for finding the task.","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"CarrieLi1015"},"content":"    public void find (String searchKey) {","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"CarrieLi1015"},"content":"        boolean isFind \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"CarrieLi1015"},"content":"            if(list.get(i).getTaskDes().indexOf(searchKey.trim()) !\u003d -1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"CarrieLi1015"},"content":"                System.out.println((i + 1) + \". \" + list.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"CarrieLi1015"},"content":"                isFind \u003d true;","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"CarrieLi1015"},"content":"        if(!isFind) {","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"No result found.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"CarrieLi1015"},"content":"     * Check if there is deadline on a specific date.","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"CarrieLi1015"},"content":"     * Need check keyword.","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"CarrieLi1015"},"content":"     * Format: check deadline /2019-10-15.","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"CarrieLi1015"},"content":"     * @param checkDeadline The date.","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"CarrieLi1015"},"content":"    public void check(String checkDeadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"CarrieLi1015"},"content":"        boolean ifDeadlineExist \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"CarrieLi1015"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"CarrieLi1015"},"content":"            Task currT \u003d list.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":180,"author":{"gitId":"CarrieLi1015"},"content":"            if (currT instanceof Deadline) {","lastModifiedDate":"2023-01-26"},{"lineNumber":181,"author":{"gitId":"CarrieLi1015"},"content":"                Deadline dTask \u003d (Deadline) currT;","lastModifiedDate":"2023-01-26"},{"lineNumber":182,"author":{"gitId":"CarrieLi1015"},"content":"                if (dTask.getDeadline().equals(checkDeadline)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"CarrieLi1015"},"content":"                    ifDeadlineExist \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"CarrieLi1015"},"content":"                    System.out.println((i + 1) + \".\" + dTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"CarrieLi1015"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"CarrieLi1015"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":187,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":188,"author":{"gitId":"CarrieLi1015"},"content":"        if (!ifDeadlineExist) {","lastModifiedDate":"2023-01-26"},{"lineNumber":189,"author":{"gitId":"CarrieLi1015"},"content":"            System.out.println(\"No deadline found on \" + checkDeadline);","lastModifiedDate":"2023-01-26"},{"lineNumber":190,"author":{"gitId":"CarrieLi1015"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":191,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":192}},{"path":"src/main/java/duke/TimeConvertor.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":" * The TimeConvertor is to convert the user input time to a","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":" * date type.","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"public class TimeConvertor {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    private LocalDateTime realDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"     * Convert to date type.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"     * @param timing User input time.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"    public TimeConvertor(String timing) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"        this.realDate \u003d LocalDateTime.parse(timing,","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"                DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"     * Convert to date type.","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"     * @param timing Time load from the record file.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"     * @param type To indicate the time is loaded from a file instead","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"     * of user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    public TimeConvertor(String timing, String type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"        this.realDate \u003d LocalDateTime.parse(timing,","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"                DateTimeFormatter.ofPattern(type));","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"     * Get the date.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date in pattern yyyy-MM-dd.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDate() {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"                .format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"CarrieLi1015"},"content":"     * Get the date.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"CarrieLi1015"},"content":"     * @param type The pattern of date.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date in given pattern.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"CarrieLi1015"},"content":"    public String getDate(String type) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"CarrieLi1015"},"content":"                .format(DateTimeFormatter.ofPattern(type));","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"CarrieLi1015"},"content":"     * Display the date.","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"CarrieLi1015"},"content":"     * @return The date.","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"CarrieLi1015"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"CarrieLi1015"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"CarrieLi1015"},"content":"        return realDate.format(DateTimeFormatter","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"CarrieLi1015"},"content":"                .ofPattern(\"MMM dd yyyy hh:mma\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":65}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":" * The Ui class is to deal with interactions with users.","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"     * Default display.","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"    public Ui() {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        printDashes();","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"Hello! This is Esther!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"How can I help you today? ^_^\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"CarrieLi1015"},"content":"                \"Please follow the date format: yyyy-MM-dd hh:mm (e.g. 2019-10-15 18:00), \" +","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"CarrieLi1015"},"content":"                        \"otherwise your input will be invalid.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"CarrieLi1015"},"content":"        printDashes();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"CarrieLi1015"},"content":"     * Print dash line as divider.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"CarrieLi1015"},"content":"    public void printDashes() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(\"****************************************\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"CarrieLi1015"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"CarrieLi1015"},"content":"     * Print a line.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"CarrieLi1015"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"CarrieLi1015"},"content":"     * @param s Thing to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"CarrieLi1015"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"CarrieLi1015"},"content":"    public void println(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"CarrieLi1015"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"CarrieLi1015":41}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    public void testTodo(){","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        Todo todoTest \u003d new Todo(\"eat\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"[T][ ] eat\", todoTest.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":13}},{"path":"src/test/java/duke/TimeConvertorTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"public class TimeConvertorTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"CarrieLi1015"},"content":"    public void timeTest1(){","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"CarrieLi1015"},"content":"        TimeConvertor timeTest \u003d new TimeConvertor(\"2015-03-17 09:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"2015-03-17\", timeTest.getDate());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"CarrieLi1015"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"CarrieLi1015"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"CarrieLi1015"},"content":"    public void timeTest2(){","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"CarrieLi1015"},"content":"        TimeConvertor timeTest \u003d new TimeConvertor(\"2015-03-17 09:00\");","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"CarrieLi1015"},"content":"        assertEquals(\"Mar 17 2015\", timeTest.getDate(\"MMM dd yyyy\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"CarrieLi1015"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"CarrieLi1015"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"CarrieLi1015":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"CarrieLi1015"},"content":"todo eat","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"CarrieLi1015"},"content":"deadline submit /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"CarrieLi1015"},"content":"event meeting /from Monday 2pm /to Friday 5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"CarrieLi1015"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"CarrieLi1015"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"CarrieLi1015"},"content":"unmark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"CarrieLi1015"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"CarrieLi1015"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"CarrieLi1015":8}}]
