[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChangGittyHub":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    String javaFxVersion \u003d \u002711.0.2\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"checkstyle {","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"ChangGittyHub":20,"-":40}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"T | 1 | 1 |  Brush teeth | food","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"D | 1 | 1 | Submit CS2103T | 2023-02-12 | finally","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"E | 0 | 1 |  Music festival  | 2023-12-22 | 2023-12-23 | again","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"T | 0 | 0 |  work","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"T | 0 | 0 |  task","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"D | 0 | 0 | task | 2023-12-22","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChangGittyHub":6}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"# User Guide for `Duuk`","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"Muahahahh this is Duuk, Duke\u0027s evil twin brother. He might be evil but he is ironically good at whatever tasks you throw at him. A chatbot is what he is! Surprisingly, he makes himself useful by helping to make your life more organised.","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"## Installation \u003ca name\u003d\"installation\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"1. Download the JAR file.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"2. Open the JAR file by typing the command `java -jar duke.jar` on your command line interface (CLI). Make sure that on the CLI, you are in the same directory (folder) that contains the downloaded JAR file.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"3. Proceed to start a chat session with Prof Duke through the graphical user interface (GUI)!","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Add a task","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"Add a task to be recorded.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Delete a task","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"Delete an existing task.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - List","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"Displays all tasks that are recorded.","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Tag","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"Tag an existing task with a \u0027#\u0027 prefix along with the description.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Find","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"Find all tasks that include the keyword.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Mark","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"Record a task as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"### Feature - Unmark","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"Record a task as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"### `todo` - Add a todo task to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"Adds a todo task to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"`todo task`","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"A todo task will be saved and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"WHAT A BOTHER! Whatever...I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"    [T][] task","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"Boy now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"### `deadline` - Add a deadline task to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"Adds a deadline task to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"`deadline task /by 2023-03-11`","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"A task with a due date will be record and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"WHAT A BOTHER! Whatever...I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"    [D][] task (11 March 2023)","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"Boy now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"### `event` - Adds an event to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"Adds an event with a start date and an end date to the list","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"`event task /from 2023-02-17 /to 2023-02-25`","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"An event task will be saved and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ChangGittyHub"},"content":"WHAT A BOTHER! Whatever...I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ChangGittyHub"},"content":"    [E][] task (17 February 2023 to 25 February 2023)","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ChangGittyHub"},"content":"Boy now you have 1 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"ChangGittyHub"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"ChangGittyHub"},"content":"Deletes the task at a given index.","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"ChangGittyHub"},"content":"todo task","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"ChangGittyHub"},"content":"delete 1","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"ChangGittyHub"},"content":"The task will be deleted and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"ChangGittyHub"},"content":"FINE. I\u0027ve removed this task","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ChangGittyHub"},"content":"    [T][] task","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ChangGittyHub"},"content":"Boy you are not bad yourself...you have 0 tasks in the list.   ","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"ChangGittyHub"},"content":"### `mark` - Mark a task as done","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"ChangGittyHub"},"content":"Marks the task at a given index as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ChangGittyHub"},"content":"todo task","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"ChangGittyHub"},"content":"mark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"ChangGittyHub"},"content":"The task will be marked as done and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"ChangGittyHub"},"content":"MARK MY WORDS...and this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"ChangGittyHub"},"content":"    [T][X] task","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"ChangGittyHub"},"content":"### `unmark` - Marks a task as not done","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"ChangGittyHub"},"content":"Marks the task at a given index as not done.","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"ChangGittyHub"},"content":"todo task","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"ChangGittyHub"},"content":"mark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"ChangGittyHub"},"content":"unmark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"ChangGittyHub"},"content":"The task will be marked as not done and the following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"ChangGittyHub"},"content":"MARK MY WORDS...and this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"ChangGittyHub"},"content":"    [T][X] task","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"ChangGittyHub"},"content":"    ","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"ChangGittyHub"},"content":"Make up your mind! I will unmark just this once","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"ChangGittyHub"},"content":"    [T][ ] task","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"ChangGittyHub"},"content":"### `list` - Lists all tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"ChangGittyHub"},"content":"Displays all the tasks being tracked.","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"ChangGittyHub"},"content":"todo task A","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"ChangGittyHub"},"content":"deadline task B /by 2023-03-25","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"ChangGittyHub"},"content":"event task C /from 2023-03-23 /to 2023-03-28","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"ChangGittyHub"},"content":"The following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"ChangGittyHub"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"ChangGittyHub"},"content":"1. [T][ ] task A","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"ChangGittyHub"},"content":"2. [D][ ] task B (25 March 2023)","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"ChangGittyHub"},"content":"3. [E][ ] task C (23 March 2023 to 28 March 2023)","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"ChangGittyHub"},"content":"### `tag` - Lists all tasks on a given date","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"ChangGittyHub"},"content":"Tag a task with a \u0027#\u0027 prefix along with the description.","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"ChangGittyHub"},"content":"tag 1 fun","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"ChangGittyHub"},"content":"The following output will be displayed:","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"ChangGittyHub"},"content":"You want me to what? Tag? Fine.","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"ChangGittyHub"},"content":"1. [D][] task A #fun (20 February 2023)","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"ChangGittyHub"},"content":"### `find` - Finds tasks by a search keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"ChangGittyHub"},"content":"Displays all the tasks matching a given keyword","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"ChangGittyHub"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"ChangGittyHub"},"content":"todo I","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"ChangGittyHub"},"content":"todo am","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"ChangGittyHub"},"content":"todo a","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"ChangGittyHub"},"content":"todo happy","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"ChangGittyHub"},"content":"todo man","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":217,"author":{"gitId":"ChangGittyHub"},"content":"find man","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":220,"author":{"gitId":"ChangGittyHub"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"ChangGittyHub"},"content":"The following output will be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":223,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":224,"author":{"gitId":"ChangGittyHub"},"content":"I dug out the WHOLE BEDROOM and found want you wanted NOW LEAVE:","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"ChangGittyHub"},"content":"1. [T][ ] man","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"ChangGittyHub"},"content":"```","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChangGittyHub":196,"-":30}},{"path":"src/main/java/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * AddCommand class implements the Command interface and is used to add a new task to the Tasklist.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * It takes a Task object as input in its constructor.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private Task newTask;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates an AddCommand object and initializes it with the new task to be added to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * @param newTask the task to be added to the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    public AddCommand(Task newTask) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"        this.newTask \u003d newTask;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds the new task to the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui the user interface object","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the task list object","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage the storage object","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        list.add(this.newTask);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getAddReply(this.newTask, list.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":35}},{"path":"src/main/java/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * This is an interface representing a command that can be executed.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public interface Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"     * This method is called to execute the command.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui The user interface to interact with the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list The task list containing the tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage The storage where the data is stored.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage);","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":18}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * The DeleteCommand class represents a Command that implements the \"delete\" function.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * Deletes a task from the tasklist according to its index.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private int index;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructs a new DeleteCommand with the specified task index.","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * Executes the delete command by calling the Tasklist - deleteTask(int) method","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * with the specified task index.","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui the User Interface component","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage the backend storage component","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"        int oneIndex \u003d index + 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"        Task deletedTask \u003d list.getTask(oneIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"        list.deleteTask(this.index);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getDeleteReply(deletedTask, list.size());","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":39}},{"path":"src/main/java/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * The ExitCommand class implements the Command interface and represents the command to exit the Duke application.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates a new ExitCommand instance.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getExitReply();","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":21}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * A class representing a command to find tasks with a certain keyword in the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    private String keyword;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates a FindCommand with the specified keyword.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"     * @param keyword the keyword to be searched for","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"     * Executes the command to find tasks with the specified keyword in the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui the user interface to display the result of the command","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the task list to search for tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage the storage for saving the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * @return the response to the command","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist matchedList \u003d list.find(this.keyword);","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getMatchedListReply(matchedList);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChangGittyHub":33}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * The ListCommand class implements the Command interface.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" *  It is responsible for displaying the list of tasks stored in the Tasklist.","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates a new ListCommand instance.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"     * */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    public ListCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"     * * Executes the ListCommand by calling the inString() method","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     * of the Tasklist object.","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage the storage backend","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getListReply(list);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":29}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * The MarkCommand class implements the Command interface and","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * represents a command to mark a task in the task list as done.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private int index;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates a MarkCommand object with the specified task index.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to mark as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * Executes this command by marking the task with the specified index in the","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * task list as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui the user interface to use for input/output","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage the storage backend to use for persistence","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        int oneIndex \u003d this.index + 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"        Task markedTask \u003d list.getTask(oneIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"        list.markTaskAsDone(this.index);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getMarkReply(markedTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":38}},{"path":"src/main/java/command/TagCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * A class that represents a Tag Command which is used to tag a task in the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * Implements the Command interface.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class TagCommand implements Command {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private int index;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    private String tagName;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates a new TagCommand with the given task index and tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index The index of the task to be tagged.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tagName The name of the tag to be applied to the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    public TagCommand(int index, String tagName) {","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * Executes the Tag Command by tagging the task with the specified index with the specified tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui The user interface.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list The list of tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage The storage object.","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A message to be displayed to the user indicating that the task has been tagged.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"        int oneIndex \u003d index + 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"        Task taggedTask \u003d list.getTask(oneIndex);","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"        list.tagTask(this.index, this.tagName);","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getTagReply(taggedTask);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"ChangGittyHub":40}},{"path":"src/main/java/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package command;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * The UnMarkCommand class implements the Command interface and","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * represents the command for unmarking a task in the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class UnMarkCommand implements Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private int index;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates an UnMarkCommand object with the specified task index.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to unmark.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    public UnMarkCommand(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * Unmarks the task at the specified index in the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * @param ui The user interface used to display information to the user","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list The task list being operated on","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * @param storage The storage backend used to persist the task list","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    public String execute(Ui ui, Tasklist list, Storage storage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        int oneIndex \u003d this.index + 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        Task unMarkedTask \u003d list.getTask(oneIndex);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"        list.unmarkTask(this.index);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"        return ui.getUnMarkReply(unMarkedTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":37}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import command.Command;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * The main class for the Duke task management application.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class Duke {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    private Ui userInterface;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    private Storage backend;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    private Tasklist tasklist;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor for the Duke class, which takes in a file path as a parameter.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     * @param filePath The file path to the backend storage file.","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend \u003d new Storage(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"            this.tasklist \u003d new Tasklist(backend.load(), backend);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"            userInterface.displayErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"            this.tasklist \u003d new Tasklist();","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"     * Takes in a user\u0027s input by parsing it into a command and executing it.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"     * @param input the user\u0027s input to process","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     * @return the result of executing the command generated from the user\u0027s input","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"    public String start(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"            Parser parser \u003d new Parser(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"            Command command \u003d parser.parseCommand();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"            return command.execute(userInterface, tasklist, backend);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"            return userInterface.displayErrorMessage(e.getMessage());","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"     * Takes in the user\u0027s input and returns the Duke\u0027s response.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"     * @param input the user\u0027s input to process","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"     * @return Duke\u0027s reply to the user\u0027s input","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"        return this.start(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":60}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import gui.Main;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":" * The Launcher class is responsible for starting the JavaFX application","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * by calling the launch method of the Application class.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class Launcher {","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import command.AddCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"import command.FindCommand;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"import command.ListCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"import command.TagCommand;","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"import command.UnMarkCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"import task.Event;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"import task.Todo;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":" * The Parser class is responsible for parsing the user\u0027s input and returning the appropriate command.","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":" *","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"public class Parser {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    private String input;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor for the Parser class.","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     * @param input The user\u0027s input to be parsed.","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"    public Parser(String input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     * Parses the user input and returns the corresponding command object.","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"     * @return The command object corresponding to the user input.","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"     * @throws DukeException If the input is not recognized or is invalid.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"    public Command parseCommand() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"        String[] splitString \u003d input.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"        String keyword \u003d splitString[0];","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.contains(\"unmark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"            int index \u003d Integer.parseInt(splitString[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"            return new UnMarkCommand(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.contains(\"mark\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"            int index \u003d Integer.parseInt(splitString[1]) - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.contains(\"delete\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"            int zeroIndex \u003d Integer.parseInt(splitString[1]) - 1;","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"            return new DeleteCommand(zeroIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.equals(\"todo\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"            int startIndex \u003d keyword.length();","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"            if (startIndex \u003e\u003d input.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"                throw new DukeException(\"Fill in the description of a todo.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"            String taskFullDetails \u003d input.substring(startIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"            Todo todoTask \u003d new Todo(taskFullDetails);","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"            return new AddCommand(todoTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.equals(\"deadline\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"            int startIndex \u003d keyword.length();","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"            if (startIndex \u003e\u003d input.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"                throw new DukeException(\"Fill in the description of a deadline.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"            String taskFullDetails \u003d input.substring(startIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"            String[] splitDetails \u003d taskFullDetails.split(\"/by \");","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"            if (splitDetails.length \u003c 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"                throw new DukeException(\"Please specify the deadline.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"            LocalDate dateTime \u003d LocalDate.parse(splitDetails[1].trim(), formatter);","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"            Deadline deadlineTask \u003d new Deadline(splitDetails[0].trim(), dateTime);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"            return new AddCommand(deadlineTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.equals(\"event\")) {","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"            int startIndex \u003d keyword.length();","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"            if (startIndex \u003e\u003d input.length()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"                throw new DukeException(\"Fill in the description for this event .\");","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"            String taskFullDetails \u003d input.substring(startIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"            String[] splitDescriptionAndDuration \u003d taskFullDetails.split(\"/from\");","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"ChangGittyHub"},"content":"            String[] splitStartAndEnd \u003d splitDescriptionAndDuration[1].split(\"/to\");","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"ChangGittyHub"},"content":"            if (splitDescriptionAndDuration.length \u003c 2) {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"ChangGittyHub"},"content":"                throw new DukeException(\"Please specify the start and end.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"ChangGittyHub"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"ChangGittyHub"},"content":"            LocalDate startDate \u003d LocalDate.parse(splitStartAndEnd[0].trim(), formatter);","lastModifiedDate":"2023-02-13"},{"lineNumber":96,"author":{"gitId":"ChangGittyHub"},"content":"            LocalDate endDate \u003d LocalDate.parse(splitStartAndEnd[1].trim(), formatter);","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"ChangGittyHub"},"content":"            Event eventTask \u003d new Event(splitDescriptionAndDuration[0], startDate, endDate);","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ChangGittyHub"},"content":"            return new AddCommand(eventTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.equals(\"find\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"ChangGittyHub"},"content":"            return new FindCommand(splitString[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"ChangGittyHub"},"content":"        } else if (keyword.equals(\"tag\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"ChangGittyHub"},"content":"            int zeroIndex \u003d Integer.parseInt(splitString[1]) - 1;","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"ChangGittyHub"},"content":"            String tagName \u003d splitString[2];","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"ChangGittyHub"},"content":"            return new TagCommand(zeroIndex, tagName);","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"ChangGittyHub"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"ChangGittyHub"},"content":"            throw new DukeException(\"What is this? Please try again!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"ChangGittyHub"},"content":"     * This method parses a date from a string.","lastModifiedDate":"2023-02-14"},{"lineNumber":112,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":113,"author":{"gitId":"ChangGittyHub"},"content":"     * @param date The string to be parsed.","lastModifiedDate":"2023-02-14"},{"lineNumber":114,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A LocalDate object representing the parsed date.","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"ChangGittyHub"},"content":"     * @throws DukeException If the string cannot be parsed as a date.","lastModifiedDate":"2023-02-14"},{"lineNumber":116,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"ChangGittyHub"},"content":"    public static LocalDate parseFile(String date) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"ChangGittyHub"},"content":"            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"ChangGittyHub"},"content":"            return LocalDate.parse(date, formatter);","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"ChangGittyHub"},"content":"            throw new DukeException(\"An error occurred while parsing date: \" + dtpe.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"ChangGittyHub"},"content":"    public static String getPrettierDate(LocalDate date) {","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"ChangGittyHub"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMMM yyyy\");","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"ChangGittyHub"},"content":"        return date.format(formatter);","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":132}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.File;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"import task.Deadline;","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"import task.Event;","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"import task.Todo;","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":" * The `Storage` class is responsible for loading and saving tasks to/from a file.","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":" *","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"public class Storage {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    private File file;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    private String filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"     * Creates a `Storage` object with the specified file path.","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     * @param filePath the file path to be used for storage","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"     * Saves the specified `Tasklist` to the file.","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tasklist the tasklist to be saved","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"    public void save(Tasklist tasklist) {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        createOrOpenFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"            FileWriter fileWriter \u003d new FileWriter(file);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"            for (int i \u003d 1; i \u003c\u003d tasklist.size(); i++) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"                fileWriter.write(tasklist.getTask(i).toSaveFormat());","lastModifiedDate":"2023-02-13"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"                if (i \u003c tasklist.size()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"                    fileWriter.write(\u0027\\n\u0027);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"            System.out.println(\"The file is not writable.\");","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"     * Creates or opens the file specified in the `filePath` field.","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"    public void createOrOpenFile() {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"        this.file \u003d new File(\"./data/duke.txt\");","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"            try {","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"     * Loads tasks from the file and returns them in a list.","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a list of tasks loaded from the file","lastModifiedDate":"2023-02-14"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"     * @throws DukeException if there is an error reading the file","lastModifiedDate":"2023-02-14"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"            return tasks;","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"            BufferedReader fileReader \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"            String input;","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"            while ((input \u003d fileReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"ChangGittyHub"},"content":"                String[] parts \u003d input.split(\" \\\\| \");","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"ChangGittyHub"},"content":"                System.out.println(Arrays.toString(parts));","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"ChangGittyHub"},"content":"                String taskType \u003d parts[0].trim();","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"ChangGittyHub"},"content":"                Task task;","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"ChangGittyHub"},"content":"                switch (taskType) {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"ChangGittyHub"},"content":"                case \"T\":","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"ChangGittyHub"},"content":"                    task \u003d new Todo(parts[3]);","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"ChangGittyHub"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"ChangGittyHub"},"content":"                case \"D\":","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"ChangGittyHub"},"content":"                    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"ChangGittyHub"},"content":"                    LocalDate dueDate \u003d LocalDate.parse(parts[4], formatter);","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"ChangGittyHub"},"content":"                    task \u003d new Deadline(parts[3], dueDate);","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"ChangGittyHub"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"ChangGittyHub"},"content":"                case \"E\":","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"ChangGittyHub"},"content":"                    String startDate \u003d parts[4];","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"ChangGittyHub"},"content":"                    String endDate \u003d parts [5];","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"ChangGittyHub"},"content":"                    LocalDate start \u003d Parser.parseFile(startDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"ChangGittyHub"},"content":"                    LocalDate end \u003d Parser.parseFile(endDate);","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"ChangGittyHub"},"content":"                    task \u003d new Event(parts[3], start, end);","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"ChangGittyHub"},"content":"                    break;","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"ChangGittyHub"},"content":"                default:","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"ChangGittyHub"},"content":"                    throw new DukeException(\"Error parsing file, unexpected task type\");","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"ChangGittyHub"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"ChangGittyHub"},"content":"                if (Integer.parseInt(parts[1].trim()) \u003d\u003d 1) {","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"ChangGittyHub"},"content":"                    task.markDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"ChangGittyHub"},"content":"                } else if (Integer.parseInt(parts[1].trim()) \u003d\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"ChangGittyHub"},"content":"                    task.unmark();","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"ChangGittyHub"},"content":"                }","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"ChangGittyHub"},"content":"                if (Integer.parseInt(parts[2].trim()) \u003d\u003d 1) {","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"ChangGittyHub"},"content":"                    task.addTag(parts[parts.length - 1]);","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"ChangGittyHub"},"content":"                }","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"ChangGittyHub"},"content":"                tasks.add(task);","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"ChangGittyHub"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"ChangGittyHub"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"ChangGittyHub"},"content":"        return tasks;","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":134}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.animation.KeyFrame;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.animation.Timeline;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import task.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import task.Tasklist;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" * This class handles all the user interface interactions.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":" * It provides methods to show a welcome message, read user input,","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":" * show a separator line, close the Scanner, and display error messages.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"public class Ui {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that initializes the Scanner to read input from the standard input.","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    public Ui() {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     * Show the welcome message to the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * @return The welcome message to the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    public String getWelcomeReply() {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"HEY THERE YOU. I\u0027m Duuk. Duke\u0027s evil twin brother\");","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     * Displays the error message to the user.","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"     * @param message the error message to be displayed.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    public String displayErrorMessage(String message) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"        return (\"You are a PAIN, there is an error:\" + message);","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the reply for a successfully deleted task.","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"     * @param deletedTask The deleted task.","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"     * @param listSize The current size of the task list.","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A string representation of the reply.","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    public String getDeleteReply(Task deletedTask, int listSize) {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"FINE. I\u0027ve removed this task:\\n\").append(deletedTask.toString()).append(\"\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"Boy you are not bad yourself...you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the reply for a successfully added task.","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"     * @param addedTask The added task.","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A string representation of the reply.","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"    public String getAddReply(Task addedTask, int listSize) {","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"WHAT A BOTHER! Whatever...I\u0027ve added this task:\\n \" + addedTask.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"Boy now you have \" + listSize + \" tasks in the list.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the reply for a list of tasks matching a description.","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tasklist The list of tasks matching the description.","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A string representation of the reply.","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"    public String getMatchedListReply(Tasklist tasklist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"        if (tasklist.isEmpty()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"            stringBuilder.append(\"Oh boy you don\u0027t have any matching tasks.\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"            return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"I dug out the WHOLE BEDROOM and found want you wanted NOW LEAVE:\\n\");","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(tasklist);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the reply for the full list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tasklist The full list of tasks.","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A string representation of the reply.","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"    public String getListReply(Tasklist tasklist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"AGAIN? TAKE THIS LIST AND LEAVE!\\n \").append(tasklist.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the reply to be displayed after marking a task as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"ChangGittyHub"},"content":"     * @param markedTask The task that was marked as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"ChangGittyHub"},"content":"     * @return The reply to be displayed.","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"ChangGittyHub"},"content":"    public String getMarkReply(Task markedTask) {","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"MARK MY WORDS...and this task:\\n\").append(markedTask.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the reply to be displayed after unmarking a task as not done.","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ChangGittyHub"},"content":"     * @param unMarkedTask The task that was unmarked as done.","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"ChangGittyHub"},"content":"     * @return The reply to be displayed.","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"ChangGittyHub"},"content":"    public String getUnMarkReply(Task unMarkedTask) {","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"Make up your mind! I will unmark just this once\\n\").append(unMarkedTask.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the reply to be displayed before exiting the program.","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"ChangGittyHub"},"content":"     * @return The reply to be displayed.","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"ChangGittyHub"},"content":"    public String getExitReply() {","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"ChangGittyHub"},"content":"        return \"Hope I never see your face here again!\";","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string that includes a tag reply and the string representation of a Task object after execution of tag.","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ChangGittyHub"},"content":"     * @param taggedTask The Task object that has been tagged.","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"ChangGittyHub"},"content":"     * @return A string that includes a message and the string representation of the tagged task.","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"ChangGittyHub"},"content":"    public String getTagReply(Task taggedTask) {","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"ChangGittyHub"},"content":"        stringBuilder.append(\"You want me to what? Tag? Fine.\\n\").append(taggedTask.toString());","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"ChangGittyHub"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"ChangGittyHub"},"content":"     * Closes the window if the response matches user interface\u0027s exit reply.","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"ChangGittyHub"},"content":"     * @param response The response to check.","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"ChangGittyHub"},"content":"    public void closeWindow(String response) {","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"ChangGittyHub"},"content":"        if (response.equals(\"Hope I never see your face here again!\")) {","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"ChangGittyHub"},"content":"            Timeline delayExit \u003d new Timeline(new KeyFrame(Duration.seconds(1), e -\u003e {","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"ChangGittyHub"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"ChangGittyHub"},"content":"            }));","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"ChangGittyHub"},"content":"            delayExit.play();","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":146}},{"path":"src/main/java/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package exception;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":" * The DukeException class represents a exception thrown in the program unique to Duke","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":" * It extends the Exception class and provides a constructor that accepts a string as input.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructs a DukeException with the specified detail message.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"     * @param str the detail message.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    public DukeException(String str) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"        super(str);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ChangGittyHub":16}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package gui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"        configureFlexTextBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    private void flip() {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"        db.flip();","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"        return db;","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"     * Configures a flexible text box that always allows the full list to be displayed.","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"     * @param text The text to display in the text box.","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"     * @param img The image to display in the text box.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"    public void configureFlexTextBox(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"        Rectangle box \u003d new Rectangle(300, 100);","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"        Label labelText \u003d new Label(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"        box.heightProperty().bind(labelText.heightProperty());","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"        box.widthProperty().bind(labelText.widthProperty());","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"        dialog.setMinHeight(labelText.getHeight());","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":81}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package gui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"            System.out.println(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"            stage.show();","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":33}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package gui;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    private Ui userInterface;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/CaptainCTF.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duuk.png\"));","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     * This method sets up the JavaFX controller and performs the following operations:","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     * Binds the scrollPane to the dialogContainer\u0027s heightProperty.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     * Creates a new Ui instance to handle user interface interactions.","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     * Displays a welcome message from the Ui.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds the Duke dialog containing the welcome message to the dialogContainer.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"        this.userInterface \u003d new Ui();","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"        String response \u003d this.userInterface.getWelcomeReply();","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"     * Generates a pair of dialogue boxes: one box displays the user\u0027s input, while the other one shows Duke\u0027s response.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"     * These dialog boxes are then appended to the dialog container.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"     * The method clears the user input after processing.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"        userInterface.closeWindow(response);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":67}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * The Deadline class extends the Task class and represents a deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * It extends the `Task` class and contains additional information","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" * about the due date of the deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSYMBOL \u003d \"[D]\";","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSAVESYMBOL \u003d \"D\";","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    private LocalDate dueDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor for the Deadline class which takes in a name and a due date.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"     * @param name     name of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"     * @param dueDate  due date of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    public Deadline(String name, LocalDate dueDate) {","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"        super(name);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the Deadline task in the format","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     * \"[TASKSAVESYMBOL | [mark] | [tag] | [task name] | [dueDate] | [tag name]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSAVESYMBOL is a static final variable that represents a Deadline task for saving","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     * mark is \"1\" if the task is marked done, and \"0\" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"     * tag is \"1\" if the task is tagged, and \"0\" otherwise. If tag is 0, there is no tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a formatted string for deadline task that can be saved to a file","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSAVESYMBOL + super.toSaveFormat() + DIVIDER + dueDate + getSaveTag();","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"     * Method that returns the Deadline task as a string in the format","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"     * \"[TASKSYMBOL][status icon][task name][dueDate][tag name]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSYMBOL is a static final variable that represents a deadline task to display to user","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"     * status icon is \"X\" if the task is marked done, and \" \" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"     * tag is \"1\" if the task is tagged, and \"0\" otherwise. If tag is 0, there is no tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a string representation of the deadline task","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSYMBOL + super.toString() + \" (\" + Parser.getPrettierDate(dueDate) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":56}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * The `Event` class represents an event task in the to-do list.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" * It extends the `Task` class and contains additional information","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":" * about the start and end date of the event.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSYMBOL \u003d \"[E]\";","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSAVESYMBOL \u003d \"E\";","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    private LocalDate startDetails;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    private LocalDate endDetails;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor that creates an instance of the `Event` class","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"     * @param name the name of the event task","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"     * @param startDetails the start date of the event task","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     * @param endDetails the end date of the event task","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    public Event(String name, LocalDate startDetails, LocalDate endDetails) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"        super(name);","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"        this.startDetails \u003d startDetails;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"        this.endDetails \u003d endDetails;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the Todo task in the format","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     * \"[TASKSAVESYMBOL | [mark] | [tag] | [task name] | [startDetails] | [endDetails] | [tag name]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSAVESYMBOL is a static final variable that represents a Event task for saving","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"     * mark is \"1\" if the task is marked done, and \"0\" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"     * tag is \"1\" if the task is tagged, and \"0\" otherwise. If tag is 0, there is no tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a formatted string for event task that can be saved to a file","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSAVESYMBOL + super.toSaveFormat() + DIVIDER + startDetails + DIVIDER + endDetails + getSaveTag();","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the Todo task as a string in the format","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"     * \"[TASKSYMBOL][status icon][task name][tag name][startDetails][endDetails]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSYMBOL is a static final variable that represents a event task to display to user","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"     * status icon is \"X\" if the task is marked done, and \" \" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"     * tag name appears only if there is a tag","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a string representation of the event task","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSYMBOL + super.toString() + \"(\" + Parser.getPrettierDate(startDetails)","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"                + \" to \" + Parser.getPrettierDate(endDetails) + \")\";","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"ChangGittyHub":58}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":" * This class represents a task.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":" * A task has a name and a mark indicating whether it\u0027s done or not.","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"public class Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"    static final String DIVIDER \u003d \" | \";","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"    private boolean isMarked;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"    private String name;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    private boolean isTagged;","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    private String tag;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructs a new task with the given name.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * @param name the name of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        this.isTagged \u003d false;","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"        isMarked \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"     * Unmarks the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the status icon of the task, either \"X\" or \" \".","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"     * @return the status icon of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"    public String getStatusICon() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        return (isMarked ? \"[X] \" : \"[ ] \");","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    public String getTagIcon() {","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"        return isTagged ? \" #\" + this.tag : \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns whether the current Task\u0027s name contains the specified keyword.","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"     * @param keyword the keyword to search for in the task\u0027s name","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"     * @return true if the task\u0027s name contains the specified keyword, false otherwise","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"    public boolean contains(String keyword) {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"        return this.name.contains(keyword);","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the task in a format suitable for saving.","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"     * @return the task in a format suitable for saving","lastModifiedDate":"2023-02-14"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"        String markToInt \u003d this.isMarked ? \"1\" : \"0\";","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"        String tagToInt \u003d this.isTagged ? \"1\" : \"0\";","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"        return DIVIDER + markToInt + DIVIDER + tagToInt + DIVIDER + name;","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"    public String getSaveTag() {","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"        return this.isTagged ? (DIVIDER + tag) : \"\";","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a string representation of the task","lastModifiedDate":"2023-02-14"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"        return this.getStatusICon() + this.name + this.getTagIcon();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds a tag to the task by setting the isTagged flag to true and setting the tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tagName The name of the tag to be added to the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"     * */","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"    public void addTag(String tagName) {","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"        isTagged \u003d true;","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"        this.tag \u003d tagName;","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ChangGittyHub":89}},{"path":"src/main/java/task/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import duke.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":" * The `Tasklist` class manages a list of `Task` objects and their storage.","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class Tasklist {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    private Storage backend;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"     * Default constructor for the Tasklist class.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"     * Initializes a new empty ArrayList of Task and","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"     * a new Storage object with the file path \"./data/duke.txt\".","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    public Tasklist() {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend \u003d new Storage(\"./data/duke.txt\");","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor for the Tasklist class. Initializes a new Tasklist with the specified list and backend.","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     * @param list the list of tasks to initialize the Tasklist with","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"     * @param backend the storage backend to initialize the Tasklist with","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"    public Tasklist(ArrayList\u003cTask\u003e list, Storage backend) {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend \u003d backend;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds a task to the task list and saves the updated task list to the backend.","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"     * @param task the task to add to the task list","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend.save(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds a task to the task list and without saving the updated task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ChangGittyHub"},"content":"     * @param task the task to add to the task list","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ChangGittyHub"},"content":"    public void addWithoutSaving(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"ChangGittyHub"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"ChangGittyHub"},"content":"     * Marks a task in the task list as done and saves the updated task list to the backend.","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to mark as done","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"ChangGittyHub"},"content":"    public void markTaskAsDone(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"ChangGittyHub"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.list.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.get(index).markDone();","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend.save(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"ChangGittyHub"},"content":"     * Unmarks a task in the task list and saves the updated task list to the backend.","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to unmark","lastModifiedDate":"2023-02-14"},{"lineNumber":71,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":72,"author":{"gitId":"ChangGittyHub"},"content":"    public void unmarkTask(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"ChangGittyHub"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.list.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.get(index).unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend.save(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"ChangGittyHub"},"content":"     * Deletes a task from the task list and saves the updated task list to the backend.","lastModifiedDate":"2023-02-14"},{"lineNumber":80,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":81,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to delete","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"ChangGittyHub"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"ChangGittyHub"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.list.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"ChangGittyHub"},"content":"        backend.save(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"ChangGittyHub"},"content":"     * @return an integer representing the number of tasks in the list","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"ChangGittyHub"},"content":"    public int size() {","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"ChangGittyHub"},"content":"        return this.list.size();","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the task at the specified index.","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index the index of the task to retrieve","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"ChangGittyHub"},"content":"     * @return the task at the specified index","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"ChangGittyHub"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"ChangGittyHub"},"content":"        assert index \u003e\u003d 0 \u0026\u0026 index \u003c this.list.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"ChangGittyHub"},"content":"        int zeroBasedIndex \u003d index - 1;","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"ChangGittyHub"},"content":"        return this.list.get(zeroBasedIndex);","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":111,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a new Tasklist containing all tasks in the current list that contain the specified keyword.","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"ChangGittyHub"},"content":"     * @param keyword the keyword to match against task descriptions","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a new Tasklist containing all tasks that match the specified keyword","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":115,"author":{"gitId":"ChangGittyHub"},"content":"    public Tasklist find(String keyword) {","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist matchedList \u003d new Tasklist();","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"ChangGittyHub"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"ChangGittyHub"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"ChangGittyHub"},"content":"            if (task.contains(keyword)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"ChangGittyHub"},"content":"                matchedList.addWithoutSaving(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":123,"author":{"gitId":"ChangGittyHub"},"content":"        return matchedList;","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns if Tasklist is empty.","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"ChangGittyHub"},"content":"     * @return true if the Tasklist is empty, false otherwise","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"ChangGittyHub"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"ChangGittyHub"},"content":"        return this.list.isEmpty();","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns a string representation of the Tasklist.","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a string representation of the Tasklist","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"ChangGittyHub"},"content":"    public String toString() {","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"ChangGittyHub"},"content":"        String stringTasklist;","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"ChangGittyHub"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"ChangGittyHub"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"ChangGittyHub"},"content":"            stringBuilder.append(i).append(\". \").append(this.getTask(i));","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"ChangGittyHub"},"content":"            if (i !\u003d list.size()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"ChangGittyHub"},"content":"                stringBuilder.append(\"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"ChangGittyHub"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"ChangGittyHub"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"ChangGittyHub"},"content":"        stringTasklist \u003d stringBuilder.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"ChangGittyHub"},"content":"        return stringTasklist;","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"ChangGittyHub"},"content":"     * Adds a tag to the task at the given index and saves the changes to the task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"ChangGittyHub"},"content":"     * @param index The index of the task to be tagged.","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"ChangGittyHub"},"content":"     * @param tagName The name of the tag to be added to the task.","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"ChangGittyHub"},"content":"    public void tagTask(int index, String tagName) {","lastModifiedDate":"2023-02-18"},{"lineNumber":158,"author":{"gitId":"ChangGittyHub"},"content":"        this.list.get(index).addTag(tagName);","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"ChangGittyHub"},"content":"        this.backend.save(this);","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ChangGittyHub":161}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":" * Todo is a subclass of Task that adds its own implementation for the toSaveFormat() and toString() methods.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSYMBOL \u003d \"[T]\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"    static final String TASKSAVESYMBOL \u003d \"T\";","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"     * Constructor to create a new Todo instance with the specified name.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"     * @param name the name of the Todo task.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    public Todo(String name) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"        super(name);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the Todo task in the format","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"     * \"[TASKSAVESYMBOL | [mark] | [tag] | [task name] | [tag name]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSAVESYMBOL is a static final variable that represents a Todo task for saving","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"     * mark is \"1\" if the task is marked done, and \"0\" otherwise.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"     * tag is \"1\" if the task is tagged, and \"0\" otherwise. If tag is 0, there is no tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a formatted string for todo task that can be saved to a file","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-13"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSAVESYMBOL + super.toSaveFormat() + getSaveTag();","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"     * Returns the Todo task as a string in the format \"[TASKSYMBOL][status icon][task name][tag name]\" where","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"     * TASKSYMBOL is a static final variable that represents a Todo task to display to user","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"     * status icon is \"X\" if the task is marked done, and \" \" otherwise.","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"     * tag is \"1\" if the task is tagged, and \"0\" otherwise. If tag is 0, there is no tag name.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"     * @return a string representation of the todo task","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        return TASKSYMBOL + super.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ChangGittyHub":45}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" styleClass\u003d\"dialog-box\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cURL value \u003d \"@dialog-box.css\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\" styleClass\u003d \"root\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        \u003cURL value \u003d \"@main-window.css\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"ChangGittyHub":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"import command.Command;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import command.ExitCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"import exception.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    public void testParseCommand_ExitCommand() throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"        Parser parser \u003d new Parser(\"bye\");","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"        Command command \u003d parser.parseCommand();","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"        assertTrue(command instanceof ExitCommand);","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"ChangGittyHub":18}},{"path":"src/test/java/task/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"package task;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"ChangGittyHub"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"ChangGittyHub"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"ChangGittyHub"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"ChangGittyHub"},"content":"public class TasklistTest {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"ChangGittyHub"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"ChangGittyHub"},"content":"    public void testAddTodoTask() {","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"ChangGittyHub"},"content":"        Todo todo \u003d new Todo(\"Add this Task\");","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist testList \u003d new Tasklist();","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"        testList.add(todo);","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"ChangGittyHub"},"content":"        assertEquals(1, testList.size());","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"ChangGittyHub"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"ChangGittyHub"},"content":"    public void testAddDeadlineTask() {","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"ChangGittyHub"},"content":"        Deadline deadline \u003d new Deadline(\"Add this Task\", LocalDate.of(2022,12,22));","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist testList \u003d new Tasklist();","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"        testList.add(deadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"ChangGittyHub"},"content":"        assertEquals(1, testList.size());","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"ChangGittyHub"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"ChangGittyHub"},"content":"    public void testMarkAsDone() {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"ChangGittyHub"},"content":"        Todo todo \u003d new Todo(\"Add this Task\");","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist testList \u003d new Tasklist();","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"ChangGittyHub"},"content":"        testList.add(todo);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"ChangGittyHub"},"content":"        testList.markTaskAsDone(0);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"ChangGittyHub"},"content":"        assertEquals(\"X\", testList.getTask(1).getStatusICon());","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"ChangGittyHub"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"ChangGittyHub"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"ChangGittyHub"},"content":"    public void testUnMark() {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"ChangGittyHub"},"content":"        Todo todo \u003d new Todo(\"Add this Task\");","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"ChangGittyHub"},"content":"        Tasklist testList \u003d new Tasklist();","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"ChangGittyHub"},"content":"        testList.add(todo);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"ChangGittyHub"},"content":"        testList.markTaskAsDone(0);","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"ChangGittyHub"},"content":"        testList.unmarkTask(0);","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"ChangGittyHub"},"content":"        assertEquals(\" \", testList.getTask(1).getStatusICon());","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"ChangGittyHub"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"ChangGittyHub"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"ChangGittyHub":45}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChangGittyHub"},"content":"todo borrow book","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"ChangGittyHub":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ChangGittyHub"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChangGittyHub":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"ChangGittyHub"},"content":"if ! javac -cp ../src/main/java/Duke.java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"ChangGittyHub"},"content":"java -classpath ../src/main/java/Duke.java  \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChangGittyHub":2,"-":36}}]
