[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"checkstyle {","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Cheamybunny":20}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Main class of the program.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" * Contains the Storage, TaskList, Ui that will be used","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * by the Duke program.","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"public class Duke {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    private final Storage store;","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    private final Ui inter;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param path The relative file path where data will be stored into","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    public Duke(String path) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"        this.store \u003d new Storage(path);","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"        this.taskList \u003d new TaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        this.inter \u003d new Ui();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"            this.store.loadTasks(this.taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"            this.inter.loadError();","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"     * Function to run Duke","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"     * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"    public void start() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"        this.inter.greet();","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"                String fullCommand \u003d this.inter.uiRead();","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"                c.execute(this.taskList, this.inter, this.store);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"                this.inter.printError(\"Unrecognised command. Try again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"                this.inter.printError(\"Key in date and time in this format. yyyy-mm-ddThh:mm\");","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"                this.inter.printError(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"     * Main method to initialise and run the Duke program.","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"     * @param args Placeholder","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"        String path \u003d System.getProperty(\"user.home\") + \"/data/duke.txt\";","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"        Duke duke \u003d new Duke(path);","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"        duke.start();","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":71}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":" * Exception that will be thrown in the duke program","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"    private String message;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":14}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.ByeCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.DeadlineCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.DeleteCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.EventCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.FindCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.ListCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.MarkCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.ThroughCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.TodoCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"import duke.commands.UnmarkCommand;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":" * A parser that will parse the input String from the user into","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":" * the relevant Duke Commands with the necessary information required","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"public class Parser {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    private enum Word {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, THROUGH, FIND","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     * Parse function that will interpret the input by the user into","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"     * the relevant Duke command.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that was input by the user and picked up by the scanner","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"     * @return A Duke Command that will be executed by the program","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"     * @throws DukeException Throws exception when an invalid input in given","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    public static Command parse(String input) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"        String[] details \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"        Word w \u003d Word.valueOf(details[0].toUpperCase());","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"        switch (w) {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"        case BYE:","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"        case LIST:","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"        case MARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"            return new MarkCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"            return new UnmarkCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"        case TODO:","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input the necessary details.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"            return new TodoCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input the necessary details.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"            return new DeadlineCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"        case EVENT:","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input the necessary details.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"            return new EventCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Cheamybunny"},"content":"        case DELETE:","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input a number.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Cheamybunny"},"content":"            return new DeleteCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Cheamybunny"},"content":"        case THROUGH:","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input a date.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Cheamybunny"},"content":"            return new ThroughCommand(details[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Cheamybunny"},"content":"        case FIND:","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Cheamybunny"},"content":"            if (details.length \u003c 2) {","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"Cheamybunny"},"content":"                throw new DukeException(\"Please input the necessary details.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Cheamybunny"},"content":"            return new FindCommand(details[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"Cheamybunny"},"content":"        default:","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Cheamybunny"},"content":"            throw new DukeException(\"Unrecognised command. Try again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":97}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" * Storage class that in charge of loading the data from the storage file","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":" * and writing the data into the storage file.","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"public class Storage {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    private final String path;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param path Relative path to the data file.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"     * Loads the data from the data file as the respective tasks into the task list.","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that data will be loaded into.","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"     * @throws FileNotFoundException Throws exception when data file cannot be found in the system.","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    public void loadTasks(TaskList taskList) throws FileNotFoundException {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"        File toRead \u003d new File(this.path);","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"        Scanner sc \u003d new Scanner(toRead);","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"            String[] line \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"            taskList.loader(line);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"        sc.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"     * Writes the tasks into its data form into the data file.","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that data will be written from.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"    public void writeTasks(TaskList taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"            new File(this.path).getParentFile().mkdirs();","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"            FileWriter writer \u003d new FileWriter(this.path);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"                Task toSave \u003d taskList.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"                writer.write(toSave.toWrite());","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"            writer.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"            System.out.println(\"Unable to find file to write into\");","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"            System.out.println(\"Unable to save task. Try again\");","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":66}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Deadlines;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Events;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Todos;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * Stores all the task in an ArrayList. All actions to be performed","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" * to the tasks are carried out through the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"public class TaskList {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     * Gets the task based on the index in the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"     * @param i Position of the task in the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task in position i.","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"     * Return the size of the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"     * @return The Size of the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"    public int size() {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"     * Marks the task specified as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user which contains","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"     *              the position of the task in the TaskList that they want to mark.","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task that was marked by the program.","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"    public Task mark(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"        int position \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"        Task toChange \u003d this.taskList.get(position);","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"        toChange.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"        return toChange;","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"     * Unmarks the task specified as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user which contains","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"     *              the position of the task in the TaskList that they want to unmark.","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task that was unmarked by the program.","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"    public Task unmark(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"        int position \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"        Task toChange \u003d this.taskList.get(position);","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"        toChange.unmark();","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"        return toChange;","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"     * Creates a new Todos task and inserts it into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user contain the details of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"     * @return The newly created Todos task that was added into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Cheamybunny"},"content":"    public Task todo(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Cheamybunny"},"content":"        Task toAdd \u003d new Todos(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Cheamybunny"},"content":"        this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"        return toAdd;","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"Cheamybunny"},"content":"     * Creates a new Deadlines task and inserts it into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user contain the details of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"Cheamybunny"},"content":"     * @return The newly created Deadlines task that was added into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Cheamybunny"},"content":"    public Task deadline(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Cheamybunny"},"content":"        String[] split \u003d input.split(\" /by \");","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Cheamybunny"},"content":"        Task toAdd \u003d new Deadlines(split[0], split[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Cheamybunny"},"content":"        this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Cheamybunny"},"content":"        return toAdd;","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"Cheamybunny"},"content":"     * Creates a new Events task and inserts it into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user contain the details of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"Cheamybunny"},"content":"     * @return The newly created Events task that was added into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"Cheamybunny"},"content":"    public Task event(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"Cheamybunny"},"content":"        String[] split \u003d input.split(\" /from | /to \");","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Cheamybunny"},"content":"        Task toAdd \u003d new Events(split[0], split[1], split[2]);","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Cheamybunny"},"content":"        this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Cheamybunny"},"content":"        return toAdd;","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"Cheamybunny"},"content":"     * Deletes the task from the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"Cheamybunny"},"content":"     * @param input String that has been input by the user containing the details","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"Cheamybunny"},"content":"     *              of the task to be deleted.","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task that was deleted from the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"Cheamybunny"},"content":"    public Task delete(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"Cheamybunny"},"content":"        int position \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Cheamybunny"},"content":"        Task toRemove \u003d this.taskList.remove(position);","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Cheamybunny"},"content":"        return toRemove;","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"Cheamybunny"},"content":"     * Loads the data from the data file into the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"Cheamybunny"},"content":"     * @param line The String array that was generated by the storage from the data file.","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"Cheamybunny"},"content":"    public void loader(String[] line) {","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Cheamybunny"},"content":"        switch (line[0]) {","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Cheamybunny"},"content":"        case \"T\": {","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Cheamybunny"},"content":"            Todos toAdd \u003d new Todos(line[2]);","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Cheamybunny"},"content":"            if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Cheamybunny"},"content":"                toAdd.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"Cheamybunny"},"content":"            this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Cheamybunny"},"content":"        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"Cheamybunny"},"content":"        case \"D\": {","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"Cheamybunny"},"content":"            Deadlines toAdd \u003d new Deadlines(line[2], line[3]);","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"Cheamybunny"},"content":"            if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"Cheamybunny"},"content":"                toAdd.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"Cheamybunny"},"content":"            this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Cheamybunny"},"content":"        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Cheamybunny"},"content":"        case \"E\": {","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"Cheamybunny"},"content":"            Events toAdd \u003d new Events(line[2], line[3], line[4]);","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"Cheamybunny"},"content":"            if (line[1].equals(\"1\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"Cheamybunny"},"content":"                toAdd.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"Cheamybunny"},"content":"            this.taskList.add(toAdd);","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"Cheamybunny"},"content":"        break;","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"Cheamybunny"},"content":"        default:","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"Cheamybunny"},"content":"            break;","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":163}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" * Ui that interacts with the user and displays messages on the screen.","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"public class Ui {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    private static final String LINE \u003d \"__________________________________________________________\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    public Ui() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     * Reads the line of text input by the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"     * @return The line input by the user as a String.","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    public String uiRead() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"     * Message to greet the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"    public void greet() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"                + \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"                + \"What can I do for you?\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"                + Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"     * Message displayed when program exits.","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"    public void exit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"                + \"Bye. Hope to see you again soon!\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"                + Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"     * Lists out the shows the user the tasks in the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList containing the tasks to be displayed.","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"    public void list(TaskList taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"            System.out.println(i + 1 + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the task that was marked.","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"     * @param changed The task that was marked.","lastModifiedDate":"2023-01-20"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"    public void mark(Task changed) {","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Nice! I\u0027ve marked this task as done:\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"                + changed + \"\\n\" + Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the task that was unmarked.","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Cheamybunny"},"content":"     * @param changed The task that was unmarked.","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Cheamybunny"},"content":"    public void unmark(Task changed) {","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Okay. I\u0027ve unmarked the following task:\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"Cheamybunny"},"content":"                + changed + \"\\n\" + Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the task that was added and the number of tasks currently","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Cheamybunny"},"content":"     * in the TaskList after addition.","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"Cheamybunny"},"content":"     * @param added The task that was added.","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Cheamybunny"},"content":"     * @param size Number of tasks in the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"Cheamybunny"},"content":"    public void taskAdded(Task added, int size) {","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Got it. I\u0027ve added this task:\\n\" + added);","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the task that was deleted from the TaskList and the number","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"Cheamybunny"},"content":"     * of tasks remaining in the TaskList","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"Cheamybunny"},"content":"     * @param removed The task that was deleted.","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"Cheamybunny"},"content":"     * @param size Number of tasks remaining in the TaskList.","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"Cheamybunny"},"content":"    public void delete(Task removed, int size) {","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Noted. I\u0027ve removed this task:\\n\" + removed);","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the tasks that are occurring on the specified date.","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"Cheamybunny"},"content":"     * @param input The string input by the user that has the date specified.","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList containing all the tasks and dates","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"Cheamybunny"},"content":"    public void through(String input, TaskList taskList) {","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"Cheamybunny"},"content":"        LocalDateTime date \u003d LocalDateTime.parse(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Cheamybunny"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Here are the tasks occurring through \"","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Cheamybunny"},"content":"                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \":\");","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Cheamybunny"},"content":"        for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"Cheamybunny"},"content":"            Task t \u003d taskList.get(j);","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Cheamybunny"},"content":"            if (t.isWithinDate(date)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Cheamybunny"},"content":"                System.out.println(i + \".\" + t);","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"Cheamybunny"},"content":"                i++;","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the tasks that contain the specified keyword.","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"Cheamybunny"},"content":"     * @param input The keyword to find in the name of the tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList containing all the tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"Cheamybunny"},"content":"    public void find(String input, TaskList taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":140,"author":{"gitId":"Cheamybunny"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-20"},{"lineNumber":141,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + \"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"Cheamybunny"},"content":"        for (int j \u003d 0; j \u003c taskList.size(); j++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"Cheamybunny"},"content":"            Task t \u003d taskList.get(j);","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"Cheamybunny"},"content":"            if (t.doesContain(input)) {","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"Cheamybunny"},"content":"                System.out.println(i + \".\" + t);","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"Cheamybunny"},"content":"                i++;","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-20"},{"lineNumber":150,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"Cheamybunny"},"content":"     * Displays when the data file is unable to be found in the computer.","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"Cheamybunny"},"content":"    public void loadError() {","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(\"Task file does not exist\");","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"Cheamybunny"},"content":"     * Displays the error message of the exception.","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"Cheamybunny"},"content":"     * @param e Error message of the exception","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"Cheamybunny"},"content":"    public void printError(String e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE + e);","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"Cheamybunny"},"content":"        System.out.println(Ui.LINE);","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":169}},{"path":"src/main/java/duke/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when the Duke program is exited.","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"        inter.exit();","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"        return true;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":20}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * Abstract class which contains the 2 functions all classes that","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * inherit from the Command Class must have.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"     * Executes what the Command is supposed to do.","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    public abstract void execute(TaskList taskList, Ui inter, Storage store);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * Returns a boolean if the Command class is an exit command.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     * @return If command is an exit command.","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":29}},{"path":"src/main/java/duke/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when a new Deadlines task is to be added.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public DeadlineCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes the DeadlineCommand and makes a new Deadlines task.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task added \u003d taskList.deadline(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.taskAdded(added, taskList.size());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when a task is to be deleted.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public DeleteCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes the DeleteCommand and deletes the specified task.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task changed \u003d taskList.delete(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.delete(changed, taskList.size());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when an Events task is to be created.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public EventCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes the EventCommand and makes a new Events task.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task added \u003d taskList.event(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.taskAdded(added, taskList.size());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * Command to execute to find tasks containing specified keyword.","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    public FindCommand(String input) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        inter.find(input, taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Cheamybunny":26}},{"path":"src/main/java/duke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when user wants to see all the tasks to be completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"        inter.list(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":20}},{"path":"src/main/java/duke/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when user wants to mark a task as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public MarkCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes the MarkCommand and marks the task as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task changed \u003d taskList.mark(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.mark(changed);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/commands/ThroughCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when user wants to search for tasks occurring","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * through the specified date inputted.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class ThroughCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public ThroughCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"        inter.through(input, taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":27}},{"path":"src/main/java/duke/commands/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when a Todos task is to be created.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public TodoCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes the TodoCommand and makes a new Todos task.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task added \u003d taskList.todo(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.taskAdded(added, taskList.size());","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import duke.Storage;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import duke.TaskList;","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import duke.Ui;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" * Command to be executed when the user wants to unmark a task as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    private String input;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    public UnmarkCommand(String input) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        this.input \u003d input;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"     * Executes Unmark command.","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"     * @param taskList The TaskList that will be modified or accessed.","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * @param inter The Ui that will interact with the user.","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * @param store The storage that will help store the task into the data file if TaskList is modified.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    public void execute(TaskList taskList, Ui inter, Storage store) {","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"        Task changed \u003d taskList.unmark(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        inter.unmark(changed);","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        store.writeTasks(taskList);","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":36}},{"path":"src/main/java/duke/tasks/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":" * Deadlines tasks tracks when the task has to be completed by.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia wei","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for Deadlines task.","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"     * @param name Name of task.","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"     * @param end Date task has to be completed by","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    public Deadlines(String name, String end) {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"        this.end \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isWithinDate(LocalDateTime date) {","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"        return date.isBefore(end);","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"                + \" (by: \" + dateFormat(this.end) + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"        return \"D | \" + super.toWrite() + \" | \" + this.end + \"\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Cheamybunny":39}},{"path":"src/main/java/duke/tasks/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":" * Events task tracks when the task starts and ends.","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"public class Events extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for Events task.","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"     * @param start Date of when the task starts.","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"     * @param end Date of when the task ends.","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    public Events(String name, String start, String end) {","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"        this.start \u003d LocalDateTime.parse(start);","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"        this.end \u003d LocalDateTime.parse(end);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isWithinDate(LocalDateTime date) {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"        return date.isBefore(end) \u0026\u0026 date.isAfter(start);","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"                + \" (from: \" + dateFormat(this.start)","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"                + \" to: \" + dateFormat(this.end) + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"        return \"E | \" + super.toWrite() + \" | \" + this.start","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"                + \" | \" + this.end + \"\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Cheamybunny":44}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":" * Task object that has the name and completion status.","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"public class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"    private final String name;","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    private boolean isCompleted;","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"     * Constructor for the task object,","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"     * @param name Name of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"     * Checks completion status of the task and returns the","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"     * relevant string to show the status.","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"     * @return The string showing its completion status.","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    public String marking() {","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"        if (this.isCompleted) {","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"            return (\"[X] \");","lastModifiedDate":"2023-01-16"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"        } else {","lastModifiedDate":"2023-01-16"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"            return (\"[ ] \");","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":36,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":37,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Cheamybunny"},"content":"     * Marks tasks as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Cheamybunny"},"content":"    public void mark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":41,"author":{"gitId":"Cheamybunny"},"content":"        this.isCompleted \u003d true;","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":44,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Cheamybunny"},"content":"     * Unmarks task as completed.","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Cheamybunny"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-16"},{"lineNumber":48,"author":{"gitId":"Cheamybunny"},"content":"        this.isCompleted \u003d false;","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Cheamybunny"},"content":"     * Formats date of the task if present into the specified format.","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"Cheamybunny"},"content":"     * @param date Date if present in tasks","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Cheamybunny"},"content":"     * @return Date in the proper format","lastModifiedDate":"2023-01-20"},{"lineNumber":56,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Cheamybunny"},"content":"    public String dateFormat(LocalDateTime date) {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Cheamybunny"},"content":"        return date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":62,"author":{"gitId":"Cheamybunny"},"content":"     * Returns a boolean if a task occurs within the specified date.","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":64,"author":{"gitId":"Cheamybunny"},"content":"     * @param date Date task is occurring on.","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"Cheamybunny"},"content":"     * @return If task occurs on specified date.","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Cheamybunny"},"content":"    public boolean isWithinDate(LocalDateTime date) {","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"Cheamybunny"},"content":"     * Returns a boolean if a word contains in the name of the task.","lastModifiedDate":"2023-01-20"},{"lineNumber":73,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Cheamybunny"},"content":"     * @param word The specified to be searched in the task name.","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"Cheamybunny"},"content":"     * @return If the specified word is in the task name.","lastModifiedDate":"2023-01-20"},{"lineNumber":76,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":77,"author":{"gitId":"Cheamybunny"},"content":"    public boolean doesContain(String word) {","lastModifiedDate":"2023-01-20"},{"lineNumber":78,"author":{"gitId":"Cheamybunny"},"content":"        String[] split \u003d this.name.split(\" \");","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"Cheamybunny"},"content":"        for (String s : split) {","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Cheamybunny"},"content":"            String toTest \u003d s.toLowerCase();","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Cheamybunny"},"content":"            if (toTest.equals(word.toLowerCase())) {","lastModifiedDate":"2023-01-20"},{"lineNumber":82,"author":{"gitId":"Cheamybunny"},"content":"                return true;","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"Cheamybunny"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"Cheamybunny"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"Cheamybunny"},"content":"        return false;","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"Cheamybunny"},"content":"     * Returns the task in its string form to be displayed by the Ui.","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task as a string.","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":94,"author":{"gitId":"Cheamybunny"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":95,"author":{"gitId":"Cheamybunny"},"content":"        return marking() + this.name;","lastModifiedDate":"2023-01-16"},{"lineNumber":96,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":97,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"Cheamybunny"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"Cheamybunny"},"content":"     * Converts the task into a format that will be stored into","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"Cheamybunny"},"content":"     * the data file by the storage.","lastModifiedDate":"2023-01-20"},{"lineNumber":101,"author":{"gitId":"Cheamybunny"},"content":"     *","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"Cheamybunny"},"content":"     * @return The task as a string to be stored into the data file.","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"Cheamybunny"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":104,"author":{"gitId":"Cheamybunny"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"Cheamybunny"},"content":"        return (isCompleted ? 1 : 0) + \" | \" + this.name;","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Cheamybunny":107}},{"path":"src/main/java/duke/tasks/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":" * Todos task which only stores the name of the task to do.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":" *","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":" * @author Cheam Jia Wei","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"public class Todos extends Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"    public Todos(String name) {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"        super(name);","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    public String toWrite() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        return \"T | \" + super.toWrite() + \"\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Cheamybunny":22}},{"path":"src/test/java/duke/commands/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.commands;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"public class ByeCommandTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"    public void byeIsExitTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"        Command toTest \u003d new ByeCommand();","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(true, toTest.isExit());","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":13}},{"path":"src/test/java/duke/tasks/DeadlinesTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"public class DeadlinesTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    public void createDeadline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"        Deadlines created \u003d new Deadlines(\"Finish drama\", \"2023-02-15T10:30\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[D][ ] Finish drama (by: Feb 15 2023 1030)\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    public void markDeadline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"        Deadlines created \u003d new Deadlines(\"Finish drama\", \"2023-02-15T10:30\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"        created.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[D][X] Finish drama (by: Feb 15 2023 1030)\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    public void saveDeadline() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"        Deadlines created \u003d new Deadlines(\"Finish drama\", \"2023-02-15T10:30\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"D | 0 | Finish drama | 2023-02-15T10:30\\n\", created.toWrite());","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    public void isWithinTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        Deadlines created \u003d new Deadlines(\"Finish drama\", \"2023-02-15T10:30\");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(true, created.isWithinDate(LocalDateTime.parse(\"2023-01-24T00:00\")));","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":34}},{"path":"src/test/java/duke/tasks/EventsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"public class EventsTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"    public void createEvent() {","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"        Events created \u003d new Events(\"Aespa Concert\", \"2023-06-10T00:00\", \"2023-06-11T23:59\");","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[E][ ] Aespa Concert (from: Jun 10 2023 0000 to: Jun 11 2023 2359)\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"    public void markEvent() {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"        Events created \u003d new Events(\"Aespa Concert\", \"2023-06-10T00:00\", \"2023-06-11T23:59\");","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"        created.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[E][X] Aespa Concert (from: Jun 10 2023 0000 to: Jun 11 2023 2359)\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"    public void saveEvent() {","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"        Events created \u003d new Events(\"Aespa Concert\", \"2023-06-10T00:00\", \"2023-06-11T23:59\");","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"E | 0 | Aespa Concert | 2023-06-10T00:00 | 2023-06-11T23:59\\n\", created.toWrite());","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Cheamybunny"},"content":"    public void isWithinTest() {","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Cheamybunny"},"content":"        Events created \u003d new Events(\"Aespa Concert\", \"2023-06-10T00:00\", \"2023-06-11T23:59\");","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(false, created.isWithinDate(LocalDateTime.parse(\"2023-01-24T00:00\")));","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":34}},{"path":"src/test/java/duke/tasks/TodosTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"public class TodosTest {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"    public void createToDo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"        Todos created \u003d new Todos(\"Sleep\");","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[T][ ] Sleep\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"    public void markToDo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"        Todos created \u003d new Todos(\"Sleep\");","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Cheamybunny"},"content":"        created.mark();","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"[T][X] Sleep\", created.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Cheamybunny"},"content":"    @Test","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"    public void saveToDo() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Cheamybunny"},"content":"        Todos created \u003d new Todos(\"Sleep\");","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Cheamybunny"},"content":"        assertEquals(\"T | 0 | Sleep\\n\", created.toWrite());","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Cheamybunny"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Cheamybunny"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Cheamybunny"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Cheamybunny":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Cheamybunny"},"content":"delete 3","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Cheamybunny"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Cheamybunny"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Cheamybunny"},"content":"todo Karina","lastModifiedDate":"2023-01-16"},{"lineNumber":5,"author":{"gitId":"Cheamybunny"},"content":"deadline Winter /by 2023-12-18T00:00","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Cheamybunny"},"content":"event Giselle /from 2023-06-15T01:00 /to 2023-12-01T17:34","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Cheamybunny"},"content":"deadline NingNing /by 2023-06-05T12:30","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Cheamybunny"},"content":"mark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":9,"author":{"gitId":"Cheamybunny"},"content":"mark 4","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"unmark 1","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Cheamybunny"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Cheamybunny"},"content":"through 2023-09-30T14:20","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Cheamybunny"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Cheamybunny"},"content":"list","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Cheamybunny"},"content":"blah","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Cheamybunny"},"content":"bye","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Cheamybunny":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Cheamybunny"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Cheamybunny"},"content":"java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Cheamybunny":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Cheamybunny"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":37,"Cheamybunny":1}}]
