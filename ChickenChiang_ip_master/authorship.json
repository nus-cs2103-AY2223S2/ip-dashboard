[{"path":"CluckSave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"T|0|Eat Spaghette","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"D|1|Sign-up for marathon|today","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"# Cluck! üêî","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"\u003e Your task managing helper","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"### Getting started with Cluck!:","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"2. Download _Cluck!_ [here](https://github.com/ChickenChiang/ip/)","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"3. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar addressbook.jar command to run the application.A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"4. Type your commands into the command box!","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"![](https://chickenchiang.github.io/ip/Ui.png)","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ChickenChiang":8,"-":1}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"    mainClassName \u003d \"cluck.Launcher\"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"    archiveBaseName \u003d \"Cluck!\"","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChickenChiang":22,"-":39}},{"path":"data/CluckSave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"T|0|Meet Jason","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"T|1|dinner with friends","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"D|0|asdfasdf|23 Mar 20 2359","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ChickenChiang":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"# **Cluck!** User guide","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"## Table of contents:","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"- [Quick start](#quick-start)","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"- [Commands](#commands)","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"  - [View all tasks](#view-all-tasks-list)","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"  - [Add task:](#adding-tasks)","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    - [To-do](#to-do-todo-taskdescription)","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    - [Deadline](#deadline-deadline-deadlinedescription-by-datetime)","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    - [Event](#event-event-eventdescription-from-startdatetime-to-enddatetime)","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"  - [Mark task](#mark-task-mark-tasknumber)","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"  - [Un-mark task](#un-mark-task-unmark-tasknumber)","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"  - [Delete task](#delete-task-delete-tasknumber)","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"  - [Find task](#find-task-find-keyword)","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"  - [Exiting Cluck!](#exit-cluck-bye)","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"- [Date Time formatting](#date-time-formatting)","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"## Quick start","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"1. Ensure you have Java 11 or above installed in your Computer.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"2. Download _Cluck!_ [here.](https://github.com/ChickenChiang/ip/)","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"3. Open a command terminal, cd into the folder you put the jar file in, and use the java -jar addressbook.jar command to run the application.A GUI similar to the below should appear in a few seconds.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"4. Type your commands into the command box!","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"## Commands","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"- The input format of the commands are in `this format` beside the header describing each command.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"### View all tasks `list`","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"- Use this function to list all the tasks in your **_Cluck!_** task list.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"### Adding tasks","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"There are 3 types of tasks that can be added in this version of **_Cluck!_**: ","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"#### To-do `todo \u003cTASK_DESCRIPTION\u003e`","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"- Creates a simple **to-do** task, with a description an a _marked_ or _un-marked_ check box.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"#### Deadline  `deadline \u003cDEADLINE_DESCRIPTION\u003e /by \u003cDATE_TIME\u003e`","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"- Creates a task with a **deadline** at the _given date_. ","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"- Example: `deadline Homework /by 23 Mar 25 2359` creates a deadline called \"**Homework**\", with a due date at **23rd March 2025 11:59 pm** _(24-hour format for time)_","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"- _See [date time formatting](#date-time-formatting) for the right input format_.","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"#### Event `event \u003cEVENT_DESCRIPTION\u003e /from \u003cSTART_DATE_TIME\u003e /to \u003cEND_DATE_TIME\u003e`","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"- Creats an **event** with a _start date_ and _end date_.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"- Example: `event Dinner with Boss /from 24 Apr 23 2000 /to 24 Apr 23 2230` creates an **event** called \"**Dinner with Boss**\", that starts at **24th April 2023 8 pm** and ends at **24th April 2023 10:30 pm**.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"- _See [date time formatting](#date-time-formatting) for the right input format_.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"### Mark task `mark \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"- Marks the task in tasklist at the index given. ","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"- _To see the task number, use the [list](#view-all-tasks-list) command._","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"### Un-mark task `unmark \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"- Un-marks the task in tasklist at the index given.","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"- _To see the task number, use the [list](#view-all-tasks-list) command._","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"### Delete task `delete \u003cTASK_NUMBER\u003e`","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"- Deletes in tasklist at the index given. ","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"- _To see the task number, use the [list](#view-all-tasks-list) command._","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"### Find task `find \u003cKEYWORD\u003e`","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"- Displays all the tasks containing the keyword given. Note that it is not case-sensitive","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"### Exit **_Cluck!_** `bye`","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"- Closes the Cluck! program.","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"## Date-time formatting","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"- Date-time inputs should have the general format of `dd MMM yyyy HHmm`, where:","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"  - `dd` is the day of the month in numerical form; _e.g. `dd` for 3rd May would be `03`_, for 24th it would be `24`","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"  - `MMM` is the first 3 letters of the month; _e.g, August in `MMM` format is `Aug` (case-insensitive)_","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"  - `yy` is the last two digits of the year; _e.g. 2034 in `yy` format is `34`_","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"  - `HHmm` is the time in 24-hour format","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"- Additionally, users can use the numerical format of the month instead of the shorted string format","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"- Users can also omit the first two digits of the year and the minutes of the time","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"- **_Sample date time inputs:_** Both `03 Mar 2023 1200` and `03 03 23 12` are equivalent to **_3rd March 2023 12:00pm_**","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"ChickenChiang":58,"-":13}},{"path":"src/main/java/cluck/Cluck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CluckException;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.parser.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":" * Cluck class is the main Class and module for Cluck.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"public class Cluck {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Cluck with no arguments for JavaFx Application use.","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public Cluck() {","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        this.storage \u003d new Storage(\"/data/cluckSave.txt\");","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        this.taskList \u003d storage.readSave();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a Cluck class that will store the data in the given file path.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"     * @param filePath path of saved path as String.","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    public Cluck(String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        this.taskList \u003d storage.readSave();","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * Starts cluck instance such that it loads saved data and","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     * begins taking in user commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    public void run() {","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"        System.out.println(Messages.MESSAGE_WELCOME);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"        while (isRunning) {","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"            String response \u003d getResponse(scanner.nextLine());","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"            assert Objects.nonNull(response);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"            System.out.println(response);","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"        storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    private Command getCommand(String userInput) throws CluckException {","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"        assert Objects.nonNull(userInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"        return Parser.commandFactory(userInput);","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"    private String executeCommand(Command command) throws CluckException {","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"        if (command instanceof ExitCommand) {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"            isRunning \u003d false;","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"        return command.execute(taskList, storage);","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"     * Gets response from execution of the command created by parsing userInput.","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"     * @param userInput the user input.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"     * @return the response.","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"    public String getResponse(String userInput) {","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"            Command currCommand \u003d getCommand(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"            return executeCommand(currCommand);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"        } catch (CluckException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"     * The entry point of application.","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"     * Creates running instance of Cluck to handle task management.","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"     * @param args the input arguments.","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"        new Cluck(\"C:/Users/User/OneDrive - National University of Singapore/\"","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"                + \"NUS/Y2S2/ip/data/CluckSave.txt\").run();","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChickenChiang":91,"-":3}},{"path":"src/main/java/cluck/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"public class Launcher {","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":12}},{"path":"src/main/java/cluck/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.ui.MainWindow;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"public class Main extends Application {","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private final Cluck cluck \u003d new Cluck();","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCluck(cluck);","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            stage.show();","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":33}},{"path":"src/main/java/cluck/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" * Abstract class for Commands, defines the default of commands. All Command types can be executed to run operations","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * and return the response of the operation. The response will vary depending on whether operations are","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * completed successfully and the type of operations done. The response is then handed to the Ui class to be displayed","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * to the user.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"public interface Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    String execute(TaskList taskList, Storage storage);","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":14}},{"path":"src/main/java/cluck/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * Deadline command when executed successfully creates a deadline and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added deadline,","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    private final String dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline command.","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     * @param description The description.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     The due date.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public DeadlineCommand(String description, String dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"            Task deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"            storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DEADLINE_ADDED + \"\\n\" + deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"                    + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DATE_INVALID;","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":45}},{"path":"src/main/java/cluck/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * Delete task command is instantiated when user gives a command to delete a task in the correct format.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * When executed successfully the command returns a success message, the deleted task, and the new number of tasks in","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Delete task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex The task index.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"            storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DELETE_SUCCESSFUL + \"\\n\" + deletedTask + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"                    + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":37}},{"path":"src/main/java/cluck/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * EventCommand when executed successfully creates an event and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added event,","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event command.","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param description The description.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   The start time.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     The end time.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"            Task event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"            taskList.addTask(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"            storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_EVENT_ADDED + \"\\n\" + event","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"                    + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DATE_INVALID;","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":47}},{"path":"src/main/java/cluck/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * Exit command when executed will stop the Cluck instance from running.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"        return obj instanceof ExitCommand;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":20}},{"path":"src/main/java/cluck/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * The Find task command returns a list of Tasks with descriptions containing the given keyword.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"public class FindTaskCommand implements Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    private final String keyWord;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Find task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord The key word(s).","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    public FindTaskCommand(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        TaskList matchingTasks \u003d taskList.findMatches(keyWord);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        if (matchingTasks.taskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_NO_MATCHES_FOUND;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        if (matchingTasks.taskCount() \u003d\u003d 1) {","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_ONE_MATCH_FOUND + \"\\n\" + matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_MATCHES_FOUND + \"\\n\" + matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":33}},{"path":"src/main/java/cluck/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * Invalid command is created when user does not give a known command.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * It simply tells the user that their command given was invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    private final String invalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Invalid command.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * @param invalidCommand The invalid command input by the user.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public InvalidCommand(String invalidCommand) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"        this.invalidCommand \u003d invalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_INVALID_COMMAND + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"                + \"You typed: \" + invalidCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":28}},{"path":"src/main/java/cluck/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * List command when executed simply return a list of all the tasks in the task list as a single string.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_LIST_DISPLAY + \"\\n\" + taskList.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * Mark task command when executed marks the task at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * If execution successful it returns the success message and the marked task.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * If index given is out of the task list\u0027s range it returns the error message instead.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Mark task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex The task index.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public MarkTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            Task markedTask \u003d taskList.markTask(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"            storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_MARK_SUCCESSFUL + \"\\n\" + markedTask.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":36}},{"path":"src/main/java/cluck/commands/NoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * No command is separate from invalid command, rather it is a place-holder command for when the user did not give any","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * input in the command line.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class NoCommand implements Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public NoCommand() {};","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_NO_COMMAND_GIVEN;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"ChickenChiang":17}},{"path":"src/main/java/cluck/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.ToDo;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * To do command when executed creates a to-do task and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added to do,","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do command.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     * @param description The description.","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_TODO_ADDED + \"\\n\" + task","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"                + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":35}},{"path":"src/main/java/cluck/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * Un-mark task command when executed marks the task at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * If execution successful it returns the success message and the un-marked task.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * If index given is out of the task list\u0027s range it returns the error message instead.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Un-mark task command.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex The task index.","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public UnmarkTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            Task unmarkedTask \u003d taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"            storage.writetoSave(taskList);","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_UNMARK_SUCCESSFUL + \"\\n\" + unmarkedTask.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":36}},{"path":"src/main/java/cluck/exceptions/CluckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Cluck exception is the parent class of all checked exceptions regarding interactions with Cluck!.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class CluckException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Cluck exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public CluckException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/exceptions/CorruptedDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * The type Corrupted data exception is thrown when date from saved file is not in the right format.","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class CorruptedDataException extends CluckException {","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Corrupted data exception.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public CorruptedDataException(String errorMessage) {","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/exceptions/IncorrectArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Incorrect argument exception is thrown when argument given is in the wrong format.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class IncorrectArgumentException extends CluckException {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Incorrect argument exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public IncorrectArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Missing argument exception is thrown when arguments are missing from the user input and","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * Command cannot be instantiated as a result.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class MissingArgumentException extends CluckException {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Missing argument exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"src/main/java/cluck/exceptions/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * Task index out of bounds exception is thrown when the user gives an index that is outside task list\u0027s range.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class TaskIndexOutOfBoundsException extends IndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task index out of bounds exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        super(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":14}},{"path":"src/main/java/cluck/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Task not found exception is thrown when the task is not found in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class TaskNotFoundException extends CluckException {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task not found exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage The error message.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"src/main/java/cluck/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * The type Unknown command exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class UnknownCommandException {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":7}},{"path":"src/main/java/cluck/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.messages;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class Messages {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Howdy! I\u0027m Cluck!\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"            + \"What can I cluck-a-doodle-do for you?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Buh-cluck, see ya!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_MARK_SUCCESSFUL \u003d \"Marked it! Cluck-a-doodle-done!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_UNMARK_SUCCESSFUL \u003d \"Unmarked it! Cluckiddy cluck!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DELETE_SUCCESSFUL \u003d \"Buh cuck! Removed the following:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_TODO_ADDED \u003d \"Bawk bok! Added todo:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DEADLINE_ADDED \u003d \"Bawk bok! Added deadline:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_EVENT_ADDED \u003d \"Bawk bok! Added Event\";","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"That\u0027s not...? In the list...? Buh caw?\";","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_MISSING \u003d \"Which task did you wanna edit? Muckah buck!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_INVALID \u003d \"Ya gotta give me a working number, bucko!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_NO_COMMAND_GIVEN \u003d \"Say something I\u0027m giving up on you ~~~\";","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"That\u0027s not a command, you egg!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DESCRIPTION_MISSING \u003d \"Well, you gotta give it a name!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DUEDATE_FLAG_MISSING \u003d \"You\u0027re missing the \u0027/by\u0027 flag, bucko!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_START_FLAG_MISSING \u003d \" You\u0027re missing the \u0027/from\u0027 flag! Buhcawk!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_END_FLAG_MISSING \u003d \" You\u0027re missing the \u0027/to\u0027 flag! Buhcawk!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DATE_INVALID \u003d \"Your date\u0027s format is all clucked up!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DATE_MISSING \u003d \"Buh caw - You forgot to give me a date!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_KEYWORD_MISSING \u003d \"What are you looking for? Feathers?\";","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_NO_MATCHES_FOUND \u003d \"Nope, don\u0027t got it!\";","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_ONE_MATCH_FOUND \u003d \"There\u0027s only one hen in this hen house! :\";","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_MATCHES_FOUND \u003d \"Cluck! Here\u0027s what I got: \";","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_CORRUPTED_DATA \u003d \"Corrupted data found: \\n --\u003e  \";","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_LIST_DISPLAY \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_LIST_COUNT \u003d \"There are now %s items in your list!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":39}},{"path":"src/main/java/cluck/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.DeadlineCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.DeleteTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.EventCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.FindTaskCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.InvalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.MarkTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.NoCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ToDoCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.IncorrectArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.MissingArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":" * Parser class takes user input and parses it into commands","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":" * that can be executed by Cluck.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"public class Parser {","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    private static final String DUE_DATE_FLAG \u003d \"/by \";","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EVENT_START_FLAG \u003d \"/from \";","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EVENT_END_FLAG \u003d \"/to \";","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MARK_TASK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    private static final String UNMARK_TASK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    private static final String FIND_TASK_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"     * Returns true if given string is not a number in String format, false otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"     * @param strNum String of interest.","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * @return Boolean value.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"    public static boolean isNotNumeric(String strNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"            Double.parseDouble(strNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"            return true;","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"     * Takes the string input of the user and converts it into an executable command.","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"     * @param userInput takes userInput from Ui class and parses it into a command.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"     * @return Subtype of Command interface.","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     * @throws MissingArgumentException   If either flags, descriptions, or task indexes are missing.","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"     * @throws IncorrectArgumentException If index given is not a number or out of the task list range.","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"    public static Command commandFactory(String userInput)","lastModifiedDate":"2023-03-04"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException, IncorrectArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"        switch (words[0]) {","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"        case EXIT_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"        case MARK_TASK_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"            return buildMarkTaskCommand(words);","lastModifiedDate":"2023-03-04"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"        case UNMARK_TASK_COMMAND:","lastModifiedDate":"2023-03-04"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"            return buildUnmarkTaskCommand(words);","lastModifiedDate":"2023-03-04"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"        case DELETE_TASK_COMMAND:","lastModifiedDate":"2023-03-04"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"            return buildDeleteTaskCommand(words);","lastModifiedDate":"2023-03-04"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_TODO:","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"            return buildToDoCommand(words, userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_DEADLINE:","lastModifiedDate":"2023-03-04"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"            return buildDeadlineCommand(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_EVENT:","lastModifiedDate":"2023-03-04"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"            return buildEventCommand(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"        case FIND_TASK_COMMAND:","lastModifiedDate":"2023-03-04"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"            return buildFindTaskCommand(words, userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"        case \"\":","lastModifiedDate":"2023-03-04"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"            return new NoCommand();","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"        default:","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"            return new InvalidCommand(userInput);","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"    private static MarkTaskCommand buildMarkTaskCommand(String[] words)","lastModifiedDate":"2023-03-04"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException, IncorrectArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"        assert Objects.nonNull(words) : \"Error, empty user input resulted in creation of Mark Task Command.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2023-03-04"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"        if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"            throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"        int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-04"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"        return new MarkTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"    private static UnmarkTaskCommand buildUnmarkTaskCommand(String[] words)","lastModifiedDate":"2023-03-04"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException, IncorrectArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"        assert Objects.nonNull(words) : \"Error, empty user input resulted in creation of Un-mark Task Command.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"        if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"            throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":132,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"ChickenChiang"},"content":"        int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-04"},{"lineNumber":134,"author":{"gitId":"ChickenChiang"},"content":"        return new UnmarkTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":135,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":136,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":137,"author":{"gitId":"ChickenChiang"},"content":"    private static DeleteTaskCommand buildDeleteTaskCommand(String[] words)","lastModifiedDate":"2023-03-04"},{"lineNumber":138,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException, IncorrectArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":139,"author":{"gitId":"ChickenChiang"},"content":"        assert Objects.nonNull(words) : \"Error, empty user input resulted in creation of Un-mark Task Command.\";","lastModifiedDate":"2023-03-04"},{"lineNumber":140,"author":{"gitId":"ChickenChiang"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"ChickenChiang"},"content":"        if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"ChickenChiang"},"content":"            throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"ChickenChiang"},"content":"        int taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-03-04"},{"lineNumber":149,"author":{"gitId":"ChickenChiang"},"content":"        return new DeleteTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"ChickenChiang"},"content":"    private static ToDoCommand buildToDoCommand(String[] words, String userInput)","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"ChickenChiang"},"content":"        if (words.length \u003c 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":154,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DESCRIPTION_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":155,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":156,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"ChickenChiang"},"content":"        return new ToDoCommand(userInput.substring(5));","lastModifiedDate":"2023-02-19"},{"lineNumber":158,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":159,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":160,"author":{"gitId":"ChickenChiang"},"content":"    private static DeadlineCommand buildDeadlineCommand(String userInput)","lastModifiedDate":"2023-03-04"},{"lineNumber":161,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":162,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":163,"author":{"gitId":"ChickenChiang"},"content":"        String substring \u003d userInput.substring(9);","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"ChickenChiang"},"content":"        if (!substring.contains(DUE_DATE_FLAG)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":165,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DUEDATE_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"ChickenChiang"},"content":"        if (substring.indexOf(DUE_DATE_FLAG) \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":168,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DESCRIPTION_MISSING);","lastModifiedDate":"2023-03-18"},{"lineNumber":169,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":170,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"ChickenChiang"},"content":"        String[] fields \u003d substring.split(\" \" + DUE_DATE_FLAG);","lastModifiedDate":"2023-02-21"},{"lineNumber":172,"author":{"gitId":"ChickenChiang"},"content":"        if (fields.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DATE_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":175,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":176,"author":{"gitId":"ChickenChiang"},"content":"        return new DeadlineCommand(fields[0], fields[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":178,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":179,"author":{"gitId":"ChickenChiang"},"content":"    private static EventCommand buildEventCommand(String userInput)","lastModifiedDate":"2023-03-04"},{"lineNumber":180,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":181,"author":{"gitId":"ChickenChiang"},"content":"        String substring \u003d userInput.substring(6);","lastModifiedDate":"2023-03-04"},{"lineNumber":182,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":183,"author":{"gitId":"ChickenChiang"},"content":"        if (!substring.contains(EVENT_START_FLAG)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_START_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"ChickenChiang"},"content":"        if (substring.indexOf(EVENT_START_FLAG) \u003d\u003d 0) {","lastModifiedDate":"2023-03-18"},{"lineNumber":188,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DESCRIPTION_MISSING);","lastModifiedDate":"2023-03-18"},{"lineNumber":189,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":190,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":191,"author":{"gitId":"ChickenChiang"},"content":"        if (!substring.contains(EVENT_END_FLAG)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_END_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":195,"author":{"gitId":"ChickenChiang"},"content":"        String[] eventFields \u003d substring.split(\"\\\\s/\\\\w{2,4}\\\\s\");","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":197,"author":{"gitId":"ChickenChiang"},"content":"        if (eventFields.length \u003c 3) {","lastModifiedDate":"2023-03-04"},{"lineNumber":198,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_DATE_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"ChickenChiang"},"content":"        return new EventCommand(eventFields[0], eventFields[1], eventFields[2]);","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"ChickenChiang"},"content":"    private static FindTaskCommand buildFindTaskCommand(String[] words, String userInput)","lastModifiedDate":"2023-03-04"},{"lineNumber":204,"author":{"gitId":"ChickenChiang"},"content":"            throws MissingArgumentException {","lastModifiedDate":"2023-03-04"},{"lineNumber":205,"author":{"gitId":"ChickenChiang"},"content":"        if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-21"},{"lineNumber":206,"author":{"gitId":"ChickenChiang"},"content":"            throw new MissingArgumentException(Messages.MESSAGE_KEYWORD_MISSING);","lastModifiedDate":"2023-02-21"},{"lineNumber":207,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":208,"author":{"gitId":"ChickenChiang"},"content":"        String keyword \u003d userInput.substring(5);","lastModifiedDate":"2023-03-04"},{"lineNumber":209,"author":{"gitId":"ChickenChiang"},"content":"        return new FindTaskCommand(keyword);","lastModifiedDate":"2023-03-04"},{"lineNumber":210,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":211,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":211}},{"path":"src/main/java/cluck/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.io.File;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CorruptedDataException;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":" * Storage class handles the reading and writing of saved tasks in a given .txt file.","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"public class Storage {","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    private String directory;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    private File saveFile;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    private File saveDir;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Storage.","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"     * @param filePath File path of the saved tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        this.directory \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"        this.filePath \u003d Paths.get(directory, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        this.saveFile \u003d this.filePath.toFile();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        this.saveDir \u003d this.saveFile.getParentFile();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"     * Reads saved file at save location, returns a task list class containing the saved tasks.","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"     * If the file does not exist, the method returns an empty task list.","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task list containing saved tasks or empty task list.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"    public TaskList readSave() {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"            if (saveDir.mkdir()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"                saveFile.createNewFile();","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"                return new TaskList();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"            } else if (saveFile.createNewFile()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"                return new TaskList();","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"        return this.populateTaskList();","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"    private TaskList populateTaskList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"        String taskString;","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"        Task currTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"        Scanner savedFileScanner;","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"            savedFileScanner \u003d new Scanner(this.saveFile);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"            while (savedFileScanner.hasNextLine()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"                taskString \u003d savedFileScanner.nextLine();","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"                currTask \u003d Task.buildTaskFromSave(taskString);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"                taskList.addTask(currTask);","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IOException | CorruptedDataException e) {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"        return taskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"     * Saves the current list of tasks into a txt file.","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"     * This will overwrite previous saves.","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"     * There should be no missing directory error since readSave()","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"     * will create the save directory if it does not exist.","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskList TaskList instance containing tasks to be saved.","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"    public void writetoSave(TaskList taskList) {","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2023-02-19"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"            writer.write(taskList.toSaveFormat());","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"            writer.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"            System.out.println(\"Buh oh! An error occurred!!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":96}},{"path":"src/main/java/cluck/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasklist;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * TaskList contains the tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class TaskList {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * Marks the task at a given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex Index of task in ArrayList.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task at index given if mark operation successful.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException If index given is out of bounds.","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public Task markTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"            currTask.mark();","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            return currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     * Un-marks the task at a given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex Index of task in ArrayList.","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task at index given if un-mark operation successful.","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException If index given is out of bounds.","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"    public Task unmarkTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"            currTask.unmark();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"            return currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"     * Deletes a task from task list at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex Index of task to be deleted.","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"     * @return Return task if deletion successful.","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException If index out of bounds of ArrayList.","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"    public Task deleteTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"            return taskList.remove(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"     * Converts all the tasks in task list to a single String in save format.","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"     * @return String containing all the tasks in the task list.","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"        StringBuilder toWrite \u003d new StringBuilder();","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"            toWrite.append(task.makeSaveFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"        return toWrite.toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"     * @return Number of tasks in the list.","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"    public int taskCount() {","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"     * Find tasks with description containing the given key word.","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"     * This method is not case-sensitive.","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord The key word.","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task list containing only the tasks with matching description.","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"    public TaskList findMatches(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"            if (task.containsKeyWord(keyWord)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"        return matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"     * The toString method of the task list returns a String of all the tasks in order of when they were added.","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"     * @return String displaying all the tasks.","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(counter);","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(\") \");","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(task.toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(\"\\n\");","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"            counter +\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"        return allTasks.toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":130}},{"path":"src/main/java/cluck/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * Deadline is a Task that has an additional field to indicate the due date.","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Deadline description","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     The due date.","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d interpretLocalDateTime(dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    Whether task is marked.","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Deadline description.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     The task\u0027s deadline.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public Deadline(boolean isMarked, String description, String dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d interpretLocalDateTime(dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        return \"D\" + super.makeSaveFormat() + \"|\" + this.dueDate.format(DEFAULT_FORMATTER) + \"\\n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"                + this.dueDate.format(DEFAULT_FORMATTER) + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":44}},{"path":"src/main/java/cluck/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * Event is a Task with a start date-time and end date-time.","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    protected LocalDateTime startTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    protected LocalDateTime endTime;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * @param description event description","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   start date-time of event","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     end date-time of event","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d interpretLocalDateTime(startTime);","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d interpretLocalDateTime(endTime);","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    Boolean that indicates whether event is marked.","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Event description.","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   Event start date time.","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     Event end date time.","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public Event(boolean isMarked, String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d interpretLocalDateTime(startTime);","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d interpretLocalDateTime(endTime);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        return \"E\" + super.makeSaveFormat() + \"|\" + this.startTime.format(DEFAULT_FORMATTER)","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"                + \"|\" + this.endTime.format(DEFAULT_FORMATTER) + \"\\n\";","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + this.startTime.format(DEFAULT_FORMATTER)","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"                + \" to: \" + this.endTime.format(DEFAULT_FORMATTER) + \")\";","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":51}},{"path":"src/main/java/cluck/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeFormatterBuilder;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CorruptedDataException;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * The type Task is an abstract class containing .","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * The constant formatter used for dates.","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"            .parseCaseInsensitive()","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"            .appendPattern(\"dd [MM][MMM][MMMM] [yyyy][yy] HH[mm]\")","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"            .toFormatter();","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    protected static final DateTimeFormatter DEFAULT_FORMATTER \u003d new DateTimeFormatterBuilder()","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"            .appendPattern(\"dd MMM yyyy HHmm\")","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            .toFormatter();","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    protected String description;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    protected Boolean isMarked;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task. All tasks are un-marked initially.","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task, but task can be manually set to be either marked or un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    Boolean value of true if the task is marked, false otherwise.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Description of task.","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"    protected Task(boolean isMarked, String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"     * Interprets string as local date time.","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"     * @param input Date time input by user.","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"     * @return Date and time as a LocalDateTime class","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"     * @throws DateTimeParseException If input cannot be parsed using the given format.","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    protected static LocalDateTime interpretLocalDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"        return LocalDateTime.parse(input, FORMATTER);","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     * Set task to be marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"     * Set task to be un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"     * Abstract method to be overridden by child-classes to save tasks into .txt file.","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task in the save format as a String.","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"        return String.format(\"|%1$s|%2$s\", this.isMarked ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"     * Builds task from saved task format.","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"     * @param savedTask Saved task.","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"     * @return Task as a Task class.","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"    public static Task buildTaskFromSave(String savedTask) throws CorruptedDataException {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"        String[] savedTaskFields \u003d savedTask.split(\"\\\\|\");","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"        boolean isMarked;","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"        if (savedTaskFields[1].equals(\"1\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"        } else if (savedTaskFields[1].equals(\"0\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"            isMarked \u003d false;","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"            throw new CorruptedDataException(Messages.MESSAGE_CORRUPTED_DATA + savedTask + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"            switch (savedTaskFields[0]) {","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"            case \"E\":","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"                return new Event(isMarked, savedTaskFields[2], savedTaskFields[3], savedTaskFields[4]);","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"            case \"D\":","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"                return new Deadline(isMarked, savedTaskFields[2], savedTaskFields[3]);","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"            case \"T\":","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"                return new ToDo(isMarked, savedTaskFields[2]);","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"            default:","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"                throw new CorruptedDataException(Messages.MESSAGE_CORRUPTED_DATA + savedTask + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"        } catch (DateTimeParseException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"            throw new CorruptedDataException(Messages.MESSAGE_CORRUPTED_DATA + savedTask + \"\\n\");","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"     * Checks if the task description contains the keyword.","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord Keyword(s) of interest.","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"     * @return Boolean value of true if keyword(s) is found, false otherwise.","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"    public boolean containsKeyWord(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"        String lowerCaseDescription \u003d this.description.toLowerCase();","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"        String lowerCaseKeyWord \u003d keyWord.toLowerCase();","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"        return lowerCaseDescription.contains(lowerCaseKeyWord);","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"ChickenChiang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"ChickenChiang"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"ChickenChiang"},"content":"            return true;","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"ChickenChiang"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"ChickenChiang"},"content":"            return false;","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"ChickenChiang"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"ChickenChiang"},"content":"        return description.equals(task.description) \u0026\u0026 isMarked.equals(task.isMarked);","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":145,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"ChickenChiang"},"content":"        return this.isMarked","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"ChickenChiang"},"content":"                ? String.format(\"[X] %s\", this.description)","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"ChickenChiang"},"content":"                : String.format(\"[ ] %s\", this.description);","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ChickenChiang":151}},{"path":"src/main/java/cluck/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * To do class is a task that only stores the task description and whether it is checked.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Task description.","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do, but To Do is manually set to be either marked or un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    Boolean value of true if task is marked, false otherwise.","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * @param description Task description.","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    protected ToDo(boolean isMarked, String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        return \"T\" + super.makeSaveFormat() + \"\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":37}},{"path":"src/main/java/cluck/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    private static final Circle CIRCLE_CUTOUT \u003d new Circle(50, 50, 50);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    private Label dialog;","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"    private void flip() {","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"        db.flip();","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"        return db;","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":63}},{"path":"src/main/java/cluck/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.ui;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Timer;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"import java.util.TimerTask;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"import cluck.Cluck;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    private TextField userInput;","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    private Button sendButton;","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    private Cluck cluck;","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    private final Image cluckImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Cluck.png\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Monke.jpg\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    public void initialize() {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"    public void setCluck(Cluck c) {","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"        cluck \u003d c;","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"                DialogBox.getDukeDialog(Messages.MESSAGE_WELCOME, cluckImage)","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"        );","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"        String response \u003d cluck.getResponse(input);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"                DialogBox.getDukeDialog(response, cluckImage)","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"        );","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"        userInput.clear();","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"        // @@author: nate_weldon-reused","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"        // This code is adapted from:","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"        // https://stackoverflow.com/questions/15747277/how-to-make-java-program-exit-after-a-couple-of-seconds","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        // with minor modification","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"            TimerTask task \u003d new TimerTask() {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"                public void run() {","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"                    Platform.exit();","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"                    System.exit(0);","lastModifiedDate":"2023-03-18"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"                }","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"            };","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"            Timer timer \u003d new Timer(\"Delay\");","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"            timer.schedule(task, 500L);","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":77}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"cluck.ui.MainWindow\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"ChickenChiang":19}},{"path":"src/test/java/cluck/CluckTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"public class CluckTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":14}},{"path":"src/test/java/cluck/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CluckException;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.MissingArgumentException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public void exitCommandTest() {","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"            Command exitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"            Command testCommand \u003d Parser.commandFactory(\"bye\");","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"            assertEquals(exitCommand, testCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        } catch (CluckException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            fail();","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    public void missingDeadlineDescriptionThrowsError() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        CluckException exception \u003d assertThrows(MissingArgumentException.class, ()","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"                -\u003e Parser.commandFactory(\"deadline /by 23 12 2023 2359\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(Messages.MESSAGE_DESCRIPTION_MISSING, exception.getMessage());","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":37}},{"path":"src/test/java/cluck/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.task;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CorruptedDataException;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Deadline;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.ToDo;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    private static final String VALID_DATE_TIME_1 \u003d \"03 12 2023 12\";","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    private static final String VALID_DATE_TIME_2 \u003d \"03 dec 23 1200\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    private static final String VALID_DATE_TIME_3 \u003d \"03 Dec 23 12\";","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private static final String VALID_DATE_TIME_4 \u003d \"03 Jun 23 12\";","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public void todoFromSaveTest() throws Exception {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        String workingTodoSave \u003d \"T|0|Meet Jason\";","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        Task savedTask \u003d Task.buildTaskFromSave(workingTodoSave);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        Task testTask \u003d new ToDo(\"Meet Jason\");","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(savedTask, testTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    public void todoIncorrectSave() {","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        String workingTodoSave \u003d \"T|X|Meet Jason\";","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        assertThrows(CorruptedDataException.class, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"                -\u003e Task.buildTaskFromSave(workingTodoSave));","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    public void deadlineWithValidDateTime() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"        String description \u003d \"Assignment1\";","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        Deadline validDeadline1 \u003d new Deadline(description, VALID_DATE_TIME_1);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"        Deadline validDeadline2 \u003d new Deadline(description, VALID_DATE_TIME_2);","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(validDeadline1, validDeadline2);","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"        Deadline validDeadline3 \u003d new Deadline(description, VALID_DATE_TIME_3);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        Deadline validDeadline4 \u003d new Deadline(description, VALID_DATE_TIME_4);","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(validDeadline3, validDeadline4);","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":47}},{"path":"src/test/java/cluck/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class EventTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"list","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"todo Meet Jason","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"todo","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"asdf","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"deadline /by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 by 27-022023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 /by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"event Darien Wedding /from 24-03-2030 08:00 /to 24-03-2030 20:00","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"event Darien Wedding /from 24-0 08:00 /to 24-03-203 20:00","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"list","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"mark","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"mark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"unmark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"delete 2","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"javac  -cp ..\\src\\main\\java\\cluck -Xlint:none -d ..\\bin ..\\src\\main\\java\\cluck\\*.java","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChickenChiang":1,"-":20}}]
