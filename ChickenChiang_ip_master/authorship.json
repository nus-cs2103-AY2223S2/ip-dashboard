[{"path":"CluckSave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"T|0|Eat Spaghette","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"D|1|Sign-up for marathon|today","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"# cluck.Cluck project template","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"3. After that, locate the `src/main/java/cluck.Cluck.java` file, right-click it, and choose `Run cluck.Cluck.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChickenChiang":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"checkstyle {","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    mainClassName \u003d \"cluck.Cluck\"","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChickenChiang":6,"-":40}},{"path":"data/CluckSave.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"T|0|Meet Jason","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"D|0|Assignment 1|27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"E|0|Darien Wedding|24-0 08:00|24-03-203 20:00","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"T|0|dinner with friends","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":4}},{"path":"src/main/java/cluck/Cluck.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CluckException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.parser.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * Cluck class is the main Class and module for Cluck.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"public class Cluck {","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    private final TaskList taskList;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private boolean isRunning \u003d true;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * Cluck class contains and instance of TaskList, Ui, and Storage.","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     * These classes are the building blocks of Cluck.","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param filePath path of saved path as String","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public Cluck(String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        this.taskList \u003d storage.readSave();","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     * Starts cluck instance such that it loads saved data and","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"     * begins taking in user commands.","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    public void run() {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"        ui.greetUser();","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        String userInput;","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"        String response;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        Command currCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        while (isRunning) {","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"            userInput \u003d ui.readInput();","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"            try {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"                currCommand \u003d Parser.commandFactory(userInput);","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"                response \u003d currCommand.execute(taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"                if (currCommand instanceof ExitCommand) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"                    isRunning \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"            } catch (CluckException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"                response \u003d e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"            ui.printResponse(response);","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"        storage.writeSave(taskList);","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"     * The entry point of application.","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     * @param args the input arguments","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        new Cluck(\"C:/Users/User/OneDrive - National University of Singapore/NUS/Y2S2/ip/data/CluckSave.txt\").run();","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChickenChiang":64,"-":3}},{"path":"src/main/java/cluck/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * Abstract class for Commands, defines the default of commands. All Command types can be executed to run operations","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" * and return the response of the operation. The response will vary depending on whether operations are","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * completed successfully and the type of operations done. The response is then handed to the Ui class to be displayed","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * to the user.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public interface Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    String execute(TaskList taskList);","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":13}},{"path":"src/main/java/cluck/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * Deadline command when executed successfully creates a deadline and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added deadline,","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"public class DeadlineCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private final String dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline command.","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     the due date","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public DeadlineCommand(String description, String dueDate) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"            Task deadline \u003d new Deadline(description, dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DEADLINE_ADDED + \"\\n\" + deadline","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"                    + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DATE_INVALID;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":43}},{"path":"src/main/java/cluck/commands/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * Delete task command is instantiated when user gives a command to delete a task in the correct format.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * When executed successfully the command returns a success message, the deleted task, and the new number of tasks in","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Delete task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex the task index","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public DeleteTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            Task deletedTask \u003d taskList.deleteTask(taskIndex);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DELETE_SUCCESSFUL + \"\\n\" + deletedTask + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"                    + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":35}},{"path":"src/main/java/cluck/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * EventCommand when executed successfully creates an event and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added event,","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"public class EventCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    private final String startTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    private final String endTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event command.","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   the start time","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     the end time","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    public EventCommand(String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"            Task event \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"            taskList.addTask(event);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_EVENT_ADDED + \"\\n\" + event","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"                    + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_DATE_INVALID;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":45}},{"path":"src/main/java/cluck/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * Exit command when executed will stop the Cluck instance from running.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"public class ExitCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_GOODBYE;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    ","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/commands/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" * The Find task command returns a list of Tasks with descriptions containing the given keyword.","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"public class FindTaskCommand implements Command {","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    private final String keyWord;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Find task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord the key word","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public FindTaskCommand(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"        this.keyWord \u003d keyWord;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        TaskList matchingTasks \u003d taskList.findMatches(keyWord);","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        if (matchingTasks.taskCount() \u003d\u003d 0) {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_NO_MATCHES_FOUND;","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        if (matchingTasks.taskCount() \u003d\u003d 1) {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_ONE_MATCH_FOUND + \"\\n\" + matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_MATCHES_FOUND + \"\\n\" + matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":32}},{"path":"src/main/java/cluck/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" * Invalid command is created when user does not give a known command.","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" * It simply tells the user that their command given was invalid.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    private final String invalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Invalid command.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * @param invalidCommand the invalid command","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    public InvalidCommand(String invalidCommand) {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"        this.invalidCommand \u003d invalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_INVALID_COMMAND + \"\\n\"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"                + \"You typed: \" + invalidCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"ChickenChiang":27}},{"path":"src/main/java/cluck/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" * List command when executed simply return a list of all the tasks in the task list as a single string.","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_LIST_DISPLAY + \"\\n\" + taskList.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":14}},{"path":"src/main/java/cluck/commands/MarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * Mark task command when executed marks the task at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * If execution successful it returns the success message and the marked task.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * If index given is out of the task list\u0027s range it returns the error message instead.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class MarkTaskCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Mark task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex the task index","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public MarkTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            Task markedTask \u003d taskList.markTask(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_MARK_SUCCESSFUL + \"\\n\" + markedTask.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":34}},{"path":"src/main/java/cluck/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.ToDo;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * To do command when executed creates a to-do task and adds it to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * The command returns a success message, the added to do,","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * and the new number of tasks in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" * If execution is unsuccessful, the command returns the error message as to why execution failed.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public class ToDoCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    private final String description;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do command.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public ToDoCommand(String description) {","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"        taskList.addTask(task);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        return Messages.MESSAGE_TODO_ADDED + \"\\n\" + task","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"                + \"\\n\" + String.format(Messages.MESSAGE_LIST_COUNT, taskList.taskCount());","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":33}},{"path":"src/main/java/cluck/commands/UnmarkTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * Un-mark task command when executed marks the task at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * If execution successful it returns the success message and the un-marked task.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" * If index given is out of the task list\u0027s range it returns the error message instead.","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class UnmarkTaskCommand implements Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Unmark task command.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex the task index","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public UnmarkTaskCommand(int taskIndex) {","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            Task unmarkedTask \u003d taskList.unmarkTask(taskIndex);","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"            return Messages.MESSAGE_UNMARK_SUCCESSFUL + \"\\n\" + unmarkedTask.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        } catch (TaskIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":34}},{"path":"src/main/java/cluck/exceptions/CluckException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Cluck exception is the parent class of all checked exceptions regarding interactions with Cluck!.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class CluckException extends Exception {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Cluck exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public CluckException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/exceptions/IncorrectArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Incorrect argument exception is thrown when argument given is in the wrong format.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class IncorrectArgumentException extends CluckException {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Incorrect argument exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public IncorrectArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/main/java/cluck/exceptions/MissingArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Missing argument exception is thrown when arguments are missing from the user input and","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * Command cannot be instantiated as a result.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class MissingArgumentException extends CluckException {","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Missing argument exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    public MissingArgumentException(String errorMessage) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"src/main/java/cluck/exceptions/TaskIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * Task index out of bounds exception is thrown when the user gives an index that is outside task list\u0027s range.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class TaskIndexOutOfBoundsException extends IndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task index out of bounds exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    public TaskIndexOutOfBoundsException() {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"        super(Messages.MESSAGE_INDEX_OUT_OF_BOUNDS);","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":14}},{"path":"src/main/java/cluck/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Task not found exception is thrown when the task is not found in the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class TaskNotFoundException extends CluckException {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task not found exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * @param errorMessage the error message","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public TaskNotFoundException(String errorMessage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        super(errorMessage);","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"src/main/java/cluck/exceptions/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.exceptions;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * The type Unknown command exception.","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"public class UnknownCommandException {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":7}},{"path":"src/main/java/cluck/messages/Messages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.messages;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":" * Container for user visible messages.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class Messages {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_WELCOME \u003d \"Howdy! I\u0027m Cluck!\\n\"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"            + \"What can I cluck-a-doodle-do for you?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Buh-cluck, see ya!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_MARK_SUCCESSFUL \u003d \"Marked it! Cluck-a-doodle-done!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_UNMARK_SUCCESSFUL \u003d \"Unmarked it! Cluckiddy cluck!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DELETE_SUCCESSFUL \u003d \"Buh cuck! Removed the following:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_TODO_ADDED \u003d \"Bawk bok! Added todo:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DEADLINE_ADDED \u003d \"Bawk bok! Added deadline:\";","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_EVENT_ADDED \u003d \"Bawk bok! Added Event\";","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_OUT_OF_BOUNDS \u003d \"That\u0027s not...? In the list...? Buh caw?\";","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_MISSING \u003d \"Which task did you wanna edit? Muckah buck!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INDEX_INVALID \u003d \"Ya gotta give me a working number, bucko!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_INVALID_COMMAND \u003d \"That\u0027s not a command, you egg!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DESCRIPTION_MISSING \u003d \"Well, you gotta give it a name!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DUEDATE_FLAG_MISSING \u003d \"You\u0027re missing the \u0027/by\u0027 flag, bucko!\";","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_START_FLAG_MISSING \u003d \" You\u0027re missing the \u0027/from\u0027 flag! Buhcawk!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_END_FLAG_MISSING \u003d \" You\u0027re missing the \u0027/to\u0027 flag! Buhcawk!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DATE_INVALID \u003d \"Your date\u0027s format is all clucked up!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_DATE_MISSING \u003d \"Buh caw - You forgot to give me a date!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_KEYWORD_MISSING \u003d \"What are you looking for? Feathers?\";","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_NO_MATCHES_FOUND \u003d \"Nope, don\u0027t got it!\";","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_ONE_MATCH_FOUND \u003d \"There\u0027s only one hen in this hen house! :\";","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_MATCHES_FOUND \u003d \"Cluck! Here\u0027s what I got: \";","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_LIST_DISPLAY \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    public static final String MESSAGE_LIST_COUNT \u003d \"There are now %s items in your list!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":39}},{"path":"src/main/java/cluck/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.DeadlineCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.DeleteTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.EventCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.FindTaskCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.InvalidCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ListCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.MarkTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ToDoCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.UnmarkTaskCommand;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.IncorrectArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.MissingArgumentException;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":" * Parser class takes user input and parses it into commands","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":" * that can be executed by Cluck.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"public class Parser {","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_TODO \u003d \"todo\";","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MAKE_EVENT \u003d \"event\";","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    private static final String DUE_DATE_FLAG \u003d \"/by \";","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EVENT_START_FLAG \u003d \"/from \";","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EVENT_END_FLAG \u003d \"/to \";","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    private static final String EXIT_COMMAND \u003d \"bye\";","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    private static final String LIST_COMMAND \u003d \"list\";","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    private static final String MARK_TASK_COMMAND \u003d \"mark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    private static final String UNMARK_TASK_COMMAND \u003d \"unmark\";","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    private static final String DELETE_TASK_COMMAND \u003d \"delete\";","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    private static final String FIND_TASK_COMMAND \u003d \"find\";","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"     * Returns true if given string is not a number in String format, false otherwise.","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"     * @param strNum String of interest.","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"     * @return boolean value","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"    public static boolean isNotNumeric(String strNum) {","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"        if (strNum \u003d\u003d null) {","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"            Double.parseDouble(strNum);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"            return true;","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"        return false;","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"     * Takes the string input of the user and converts it into an executable command.","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"     * @param userInput takes userInput from Ui class and parses it into a command.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"     * @return subtype of Command interface.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"     * @throws MissingArgumentException   if either flags, descriptions, or task indexes are missing","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"     * @throws IncorrectArgumentException if index given is not a number or out of the task list range","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"    public static Command commandFactory(String userInput) throws MissingArgumentException, IncorrectArgumentException {","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"        String[] words \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        int taskIndex;","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"        switch (words[0]) {","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"        case EXIT_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"        case LIST_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"            return new ListCommand();","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"        case MARK_TASK_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"            if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"                throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"            taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"            return new MarkTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"        case UNMARK_TASK_COMMAND:","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"            if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"                throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-19"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"            taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-19"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"            return new UnmarkTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-19"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"        case DELETE_TASK_COMMAND:","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_INDEX_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"            if (isNotNumeric(words[1])) {","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"                throw new IncorrectArgumentException(Messages.MESSAGE_INDEX_INVALID);","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"            taskIndex \u003d Integer.parseInt(words[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"            return new DeleteTaskCommand(taskIndex - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_TODO:","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"            if (words.length \u003c 2) {","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_DESCRIPTION_MISSING);","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"            return new ToDoCommand(userInput.substring(5));","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_DEADLINE:","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"            String substring \u003d userInput.substring(9);","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"            if (!substring.contains(DUE_DATE_FLAG)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_DUEDATE_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"            String[] fields \u003d substring.split(\" \" + DUE_DATE_FLAG);","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"            if (fields.length \u003c 2) {","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_DATE_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"            return new DeadlineCommand(fields[0], fields[1]);","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"        case MAKE_EVENT:","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"            substring \u003d userInput.substring(6);","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"            if (!substring.contains(EVENT_START_FLAG)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_START_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"            if (!substring.contains(EVENT_END_FLAG)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_END_FLAG_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"            fields \u003d substring.split(\"\\\\s/\\\\w{2,4}\\\\s\");","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"            if (fields.length \u003c 3) {","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_DATE_MISSING);","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"ChickenChiang"},"content":"            return new EventCommand(fields[0], fields[1], fields[2]);","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"ChickenChiang"},"content":"        case FIND_TASK_COMMAND:","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"ChickenChiang"},"content":"            if (words.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"ChickenChiang"},"content":"                throw new MissingArgumentException(Messages.MESSAGE_KEYWORD_MISSING);","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"ChickenChiang"},"content":"            substring \u003d userInput.substring(5);","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"ChickenChiang"},"content":"            return new FindTaskCommand(substring);","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"ChickenChiang"},"content":"        default:","lastModifiedDate":"2023-02-19"},{"lineNumber":143,"author":{"gitId":"ChickenChiang"},"content":"            return new InvalidCommand(userInput);","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":146,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":146}},{"path":"src/main/java/cluck/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.io.File;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasklist.TaskList;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":" * Storage class handles the reading and writing of saved tasks in a given .txt file.","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"public class Storage {","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    private File saveFile;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Storage.","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * @param filePath the file path of the saved tasks","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        saveFile \u003d new File(filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"     * Reads the saved tasks from the file and returns a task list populated with the saved tasked.","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"     * @return the task list containing instances of Task class","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public TaskList readSave() {","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"            return new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"            saveFile.getParentFile().mkdirs();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"            TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"            Task currTask;","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"            Scanner savedFileScanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"            while (savedFileScanner.hasNextLine()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"                currTask \u003d Task.buildTaskFromSave(savedFileScanner.nextLine());","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"                taskList.addTask(currTask);","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"            return taskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"     * Saves the current list of tasks into a txt file.","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"     * This will overwrite previous saves.","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"     * There should be no missing directory error since readSave()","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"     * will create the save directory if it does not exist.","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskList list of task to be saved","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"    public void writeSave(TaskList taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"            FileWriter writer \u003d new FileWriter(saveFile);","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"            writer.write(taskList.toSaveFormat());","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"            writer.close();","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"            System.out.println(\"Buh oh! An error occurred!!\");","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"ChickenChiang":70}},{"path":"src/main/java/cluck/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasklist;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.TaskIndexOutOfBoundsException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * TaskList contains the tasks. In a list. Yea.","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class TaskList {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    private final ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * Marks the task at a given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex index of task in ArrayList","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     * @return task at index given if mark operation successful","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException if index given is out of bounds","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    public Task markTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"            currTask.mark();","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"            return currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     * Un-marks the task at a given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex index of task in ArrayList.","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"     * @return task at index given if un-mark operation successful.","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException if index given is out of bounds","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"    public Task unmarkTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"            Task currTask \u003d taskList.get(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"            currTask.unmark();","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"            return currTask;","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"    //Todo: have commands print the task added","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"     * Deletes a task from task list at the given index.","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"     * @param taskIndex index of task to be deleted.","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"     * @return return task if deletion successful.","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"     * @throws TaskIndexOutOfBoundsException if index out of bounds of ArrayList","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"    public Task deleteTask(int taskIndex) throws TaskIndexOutOfBoundsException {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"            return taskList.remove(taskIndex);","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"            throw new TaskIndexOutOfBoundsException();","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"     * Converts all the tasks in task list to a single String in save format.","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"     * @return the string","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"    public String toSaveFormat() {","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"        StringBuilder toWrite \u003d new StringBuilder();","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"            toWrite.append(task.makeSaveFormat());","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"        return toWrite.toString();","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"     * Returns the number of tasks in the list.","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"     * @return number of tasks in the list","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"    public int taskCount() {","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"     * Find tasks with description containing the given key word.","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"     * This method is not case-sensitive.","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord the key word","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"     * @return task list containing only the tasks with matching description","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"    public TaskList findMatches(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"            if (task.containsKeyWord(keyWord)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"            }","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"        return matchingTasks;","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"     * the toString method of the task list returns a String of all the tasks in order of when they were added.","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"     * @return string displaying all the tasks","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"        StringBuilder allTasks \u003d new StringBuilder();","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(counter);","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(\") \");","lastModifiedDate":"2023-02-21"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(task.toString());","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"            allTasks.append(\"\\n\");","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"            counter +\u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"        return allTasks.toString();","lastModifiedDate":"2023-02-21"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":131,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":131}},{"path":"src/main/java/cluck/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * Deadline is a Task that has an additional field to indicate the due date.","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    protected LocalDateTime dueDate;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     * @param description deadline description","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     the due date","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public Deadline(String description, String dueDate) {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d interpretLocalDateTime(dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Deadline.","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    whether task is marked","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * @param description deadline description","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     * @param dueDate     when is the tasks deadline","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public Deadline(boolean isMarked, String description, String dueDate) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"        this.dueDate \u003d interpretLocalDateTime(dueDate);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        return \"E\" + super.makeSaveFormat() + \"|\" + this.dueDate + \"\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"                + this.dueDate.format(FORMATTER) + \")\";","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":44}},{"path":"src/main/java/cluck/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" * Event is a Task with a start date-time and end date-time.","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    protected String startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"    protected String endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * @param description event description","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   start date-time of event","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     end date-time of event","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    public Event(String description, String startTime, String endTime) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Event.","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    indicates whether event is marked","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"     * @param description event description","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"     * @param startTime   when the event starts","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"     * @param endTime     when the event ends","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    public Event(boolean isMarked, String description, String startTime, String endTime) {","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"        return \"E\" + super.makeSaveFormat() + \"|\" + this.startTime + \"|\" + this.endTime + \"\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"                + String.format(\" (from: %1$s, to: %2$s)\", this.startTime, this.endTime);","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":50}},{"path":"src/main/java/cluck/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" * The type Task is an abstract class containing .","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-A-JUnit","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     * The Description.","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    protected String description; // name of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * The Is marked.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    protected Boolean isMarked; // indicates whether task is marked","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"     * The constant formatter used for dates.","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"    protected static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"            \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task. All tasks are un-marked initially.","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Task, but task can be manually set to be either marked or un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    whether task is marked","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"    protected Task(boolean isMarked, String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d isMarked;","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"ChickenChiang"},"content":"     * Interprets string as local date time.","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"ChickenChiang"},"content":"     * @param input the input","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"ChickenChiang"},"content":"     * @return date and time as a LocalDateTime class","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"ChickenChiang"},"content":"     * @throws DateTimeParseException if input is not able to be parsed using the given format","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"ChickenChiang"},"content":"    protected static LocalDateTime interpretLocalDateTime(String input) throws DateTimeParseException {","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"ChickenChiang"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"ChickenChiang"},"content":"                \"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"ChickenChiang"},"content":"        return LocalDateTime.parse(input, formatter);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"ChickenChiang"},"content":"     * Set task to be marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"ChickenChiang"},"content":"    public void mark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"ChickenChiang"},"content":"     * Set task to be un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"ChickenChiang"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ChickenChiang"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"ChickenChiang"},"content":"     * Abstract method to be overridden by child-classes to save tasks into .txt file.","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"ChickenChiang"},"content":"     * @return task in the save format as a String","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"ChickenChiang"},"content":"        return String.format(\"|%1$s|%2$s\", this.isMarked ? \"1\" : \"0\", this.description);","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"ChickenChiang"},"content":"     * Builds task from saved task format.","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"ChickenChiang"},"content":"     * @param savedTask the saved task","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"ChickenChiang"},"content":"     * @return the task as a Task class","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"ChickenChiang"},"content":"    public static Task buildTaskFromSave(String savedTask) {","lastModifiedDate":"2023-02-19"},{"lineNumber":94,"author":{"gitId":"ChickenChiang"},"content":"        String[] savedTaskFields \u003d savedTask.split(\"\\\\|\");","lastModifiedDate":"2023-02-19"},{"lineNumber":95,"author":{"gitId":"ChickenChiang"},"content":"        boolean isMarked;","lastModifiedDate":"2023-02-19"},{"lineNumber":96,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":97,"author":{"gitId":"ChickenChiang"},"content":"        if (savedTaskFields[1].equals(\"1\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":98,"author":{"gitId":"ChickenChiang"},"content":"            isMarked \u003d true;","lastModifiedDate":"2023-02-19"},{"lineNumber":99,"author":{"gitId":"ChickenChiang"},"content":"        } else if (savedTaskFields[1].equals(\"0\")) {","lastModifiedDate":"2023-02-19"},{"lineNumber":100,"author":{"gitId":"ChickenChiang"},"content":"            isMarked \u003d false;","lastModifiedDate":"2023-02-19"},{"lineNumber":101,"author":{"gitId":"ChickenChiang"},"content":"        } else {","lastModifiedDate":"2023-02-19"},{"lineNumber":102,"author":{"gitId":"ChickenChiang"},"content":"            System.out.println(\"Corrupted data found, skipping corrupted data.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"ChickenChiang"},"content":"            return null;","lastModifiedDate":"2023-02-19"},{"lineNumber":104,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":105,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":106,"author":{"gitId":"ChickenChiang"},"content":"        switch (savedTaskFields[0]) {","lastModifiedDate":"2023-02-19"},{"lineNumber":107,"author":{"gitId":"ChickenChiang"},"content":"        case \"E\":","lastModifiedDate":"2023-02-19"},{"lineNumber":108,"author":{"gitId":"ChickenChiang"},"content":"            return new Event(isMarked, savedTaskFields[2], savedTaskFields[3], savedTaskFields[4]);","lastModifiedDate":"2023-02-19"},{"lineNumber":109,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":110,"author":{"gitId":"ChickenChiang"},"content":"        case \"D\":","lastModifiedDate":"2023-02-19"},{"lineNumber":111,"author":{"gitId":"ChickenChiang"},"content":"            return new Deadline(isMarked, savedTaskFields[2], savedTaskFields[3]);","lastModifiedDate":"2023-02-19"},{"lineNumber":112,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":113,"author":{"gitId":"ChickenChiang"},"content":"        case \"T\":","lastModifiedDate":"2023-02-19"},{"lineNumber":114,"author":{"gitId":"ChickenChiang"},"content":"            return new ToDo(isMarked, savedTaskFields[2]);","lastModifiedDate":"2023-02-19"},{"lineNumber":115,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":116,"author":{"gitId":"ChickenChiang"},"content":"        default:","lastModifiedDate":"2023-02-19"},{"lineNumber":117,"author":{"gitId":"ChickenChiang"},"content":"            System.out.println(\"Corrupted data found, skipping corrupted data.\");","lastModifiedDate":"2023-02-19"},{"lineNumber":118,"author":{"gitId":"ChickenChiang"},"content":"            return null;","lastModifiedDate":"2023-02-19"},{"lineNumber":119,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":120,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":121,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":122,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"ChickenChiang"},"content":"     * Checks if the task description contains the keyword.","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"ChickenChiang"},"content":"     * @param keyWord the key word","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"ChickenChiang"},"content":"     * @return true if keyword is found, false otherwise.","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"ChickenChiang"},"content":"    public boolean containsKeyWord(String keyWord) {","lastModifiedDate":"2023-02-21"},{"lineNumber":129,"author":{"gitId":"ChickenChiang"},"content":"        String lowerCaseDescription \u003d this.description.toLowerCase();","lastModifiedDate":"2023-02-21"},{"lineNumber":130,"author":{"gitId":"ChickenChiang"},"content":"        String lowerCaseKeyWord \u003d keyWord.toLowerCase();","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"ChickenChiang"},"content":"        return lowerCaseDescription.contains(lowerCaseKeyWord);","lastModifiedDate":"2023-02-21"},{"lineNumber":132,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"ChickenChiang"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"ChickenChiang"},"content":"        if (this \u003d\u003d o) return true;","lastModifiedDate":"2023-02-21"},{"lineNumber":137,"author":{"gitId":"ChickenChiang"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) return false;","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"ChickenChiang"},"content":"        Task task \u003d (Task) o;","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"ChickenChiang"},"content":"        return description.equals(task.description) \u0026\u0026 isMarked.equals(task.isMarked);","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"ChickenChiang"},"content":"        return this.isMarked","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"ChickenChiang"},"content":"                ? String.format(\"[X] %s\", this.description)","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"ChickenChiang"},"content":"                : String.format(\"[ ] %s\", this.description);","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"ChickenChiang":149}},{"path":"src/main/java/cluck/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.tasks;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":" * To do class is a task that only stores the task description and whether it is checked.","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"        super(description);","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new To do, but To Do is manually set to be either marked or un-marked.","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     * @param isMarked    the is marked","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"     * @param description the description","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    protected ToDo(boolean isMarked, String description) {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        super(isMarked, description);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public String makeSaveFormat() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        return \"T\" + super.makeSaveFormat() + \"\\n\";","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"    public String toString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"ChickenChiang":37}},{"path":"src/main/java/cluck/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.messages.Messages;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":" * Cluck.Ui handles user commands and outputs messages from Cluck.Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"public class Ui {","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    private final Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"     * Instantiates a new Ui.","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"    public Ui() {}","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"     * Greets user.","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"    public void greetUser() {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        System.out.println(Messages.MESSAGE_WELCOME);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"     * Bids user farewell.","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"    public void farewellUser() {","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"ChickenChiang"},"content":"        System.out.println(Messages.MESSAGE_GOODBYE);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"ChickenChiang"},"content":"     * Reads a single line of user input.","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"ChickenChiang"},"content":"     * @return the string","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"ChickenChiang"},"content":"    public String readInput() {","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"ChickenChiang"},"content":"        return userInput.nextLine();","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"ChickenChiang"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"ChickenChiang"},"content":"     * Print response after executing command.","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"ChickenChiang"},"content":"     *","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"ChickenChiang"},"content":"     * @param response the response","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"ChickenChiang"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"ChickenChiang"},"content":"    public void printResponse(String response) {","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"ChickenChiang"},"content":"        System.out.println(response);","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"ChickenChiang":51}},{"path":"src/test/java/cluck/CluckTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"public class CluckTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":15}},{"path":"src/test/java/cluck/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.parser;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.Command;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"import cluck.commands.ExitCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import cluck.exceptions.CluckException;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    public void exitCommandTest() {","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"        try {","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"            Command exitCommand \u003d new ExitCommand();","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"            Command testCommand \u003d Parser.commandFactory(\"bye\");","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"            assertEquals(exitCommand, testCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"        } catch (CluckException e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"            fail();","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":27}},{"path":"src/test/java/cluck/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"package cluck.task;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Deadline;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Event;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.Task;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"import cluck.tasks.ToDo;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"    public void todoFromSaveTest() {","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"ChickenChiang"},"content":"        String workingTodoSave \u003d \"T|0|Meet Jason\";","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"ChickenChiang"},"content":"        Task savedTask \u003d Task.buildTaskFromSave(workingTodoSave);","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"ChickenChiang"},"content":"        Task testTask \u003d new ToDo(\"Meet Jason\");","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"ChickenChiang"},"content":"        assertEquals(savedTask, testTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"ChickenChiang"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"ChickenChiang"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"ChickenChiang"},"content":"    public void todoIncorrectSave() {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"ChickenChiang"},"content":"        String workingTodoSave \u003d \"T|X|Meet Jason\";","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"ChickenChiang"},"content":"        Task savedTask \u003d Task.buildTaskFromSave(workingTodoSave);","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"ChickenChiang"},"content":"        assertNull(savedTask);","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"ChickenChiang"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"ChickenChiang":29}},{"path":"src/test/java/cluck/tasks/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class EventTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class TaskTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"src/test/java/cluck/tasks/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"ChickenChiang":2}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChickenChiang"},"content":"list","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"ChickenChiang"},"content":"todo Meet Jason","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"ChickenChiang"},"content":"todo","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"ChickenChiang"},"content":"asdf","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"ChickenChiang"},"content":"deadline /by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 by 27-022023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"ChickenChiang"},"content":"deadline Assignment 1 /by 27-02-2023 23:59","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"ChickenChiang"},"content":"event Darien Wedding /from 24-03-2030 08:00 /to 24-03-2030 20:00","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"event Darien Wedding /from 24-0 08:00 /to 24-03-203 20:00","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"ChickenChiang"},"content":"list","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"ChickenChiang"},"content":"mark","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"ChickenChiang"},"content":"mark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"ChickenChiang"},"content":"unmark 1","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"ChickenChiang"},"content":"delete 2","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"ChickenChiang"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"ChickenChiang":16}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"ChickenChiang"},"content":"javac  -cp ..\\src\\main\\java\\cluck -Xlint:none -d ..\\bin ..\\src\\main\\java\\cluck\\*.java","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChickenChiang":1,"-":20}}]
