{"authorDailyContributionsMap":{"ChickenChiang":[{"date":"2023-01-19","commitResults":[{"hash":"ad0950e58a198d594dd9efc3d5a795a85804d176","messageTitle":"Greet, Echo, Exit","messageBody":"Implement a skeletal version of Cluck that starts by greeting the user, simply echos commands entered by the user, and exits when the user types bye.\n","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":6}}},{"hash":"de5b7bb8881e63ab596e9b6d8b16522b2f51a6b8","messageTitle":"Add, List","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":4}}}]},{"date":"2023-01-25","commitResults":[{"hash":"1220c06621574c944455827514f6012eecd88d7c","messageTitle":"Now you can mark tasks as done and change them back to not done","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":117,"deletions":23}}}]},{"date":"2023-01-28","commitResults":[{"hash":"07c5ecc3ec020f222a97f24135d7eec555306320","messageTitle":"Added the following types of tasks: 1. Todos, which only have description, 2. Deadlines with description and due date, 3. Events with description, start and end time","messageBody":"","tags":["Level-5","Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":157,"deletions":68}}}]},{"date":"2023-01-31","commitResults":[{"hash":"4e293cee6722f163a06fbac00c6cce382ab20049","messageTitle":"A-TextUiTesting","messageBody":"Use the input/output redirection technique to semi-automate the testing of Duke(or rather, CLUCK)\n","tags":["Level-6","A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":2,"deletions":0}}},{"hash":"6290dbd022acb486ddfee236aa901e49a8cbc981","messageTitle":"A-Exceptions","messageBody":"Adding exception classes to handle errors by Duke\n","fileTypesAndContributionMap":{"java":{"insertions":30,"deletions":2}}},{"hash":"939222290ea1dc2f8d7403d9bdeef65d88ddbb06","messageTitle":"Level-6 Delete and A-Collections","messageBody":"Now you can delete tasks from the todo list with Cluck. Tasks are also now stored in an ArrayList.\n","tags":["A-Collections"],"fileTypesAndContributionMap":{"java":{"insertions":31,"deletions":2}}}]},{"date":"2023-02-07","commitResults":[{"hash":"7a3dd94cb095a2791f95f7b9150395246e39acc1","messageTitle":"Made Task class abstract and implemented makeSaveFormat() function","messageBody":"Making the Task class abstract ensures that it cannot be instantiated.\n\nThe new makeSaveFormat() function is an abstract method in Task, and it is overridden in each child class such that it returns a string that is formatted with respect to the child class for saving tasks.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":1}}},{"hash":"e4ce66a0de7b5c355647f3a6cd9f7e90ecf8f66b","messageTitle":"Added save functionality","messageBody":"Now the tasks in the todo list are saved into a txt file with consistent formmating with respect to the type of task.\nIt also captures the status of the task, whether or not it is marked or unmarked.\n","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":74}}},{"hash":"be7a1ad6d4dc6d185298f52a006cb21c7b77cf49","messageTitle":"Level-7. Save","messageBody":"Save the tasks in the hard disk automatically whenever the task list changes. Load the data from the hard disk when Cluck starts up.\n","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":78,"deletions":11}}}]},{"date":"2023-02-08","commitResults":[{"hash":"58a086155001626759eb85370f0a693298ac1652","messageTitle":"Level-8. Added functionality for deadlines to understand date and time and restructure of package","messageBody":"Instead of saving the due dates of deadlines as strings they are now LocalDateTime objects which uses the java.time.LocalDateTime package\n","tags":["Level-8"],"fileTypesAndContributionMap":{"java":{"insertions":49,"deletions":16}}},{"hash":"d1feb10c81df2c4a6ad9e4a9b98a49354b2a9670","messageTitle":"Using Gradle to automate building and testing for Cluck","messageBody":"Added support for gradle to the project as well as denpendencies and tests\n","tags":["A-Gradle"],"fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0}}}]},{"date":"2023-02-09","commitResults":[{"hash":"452abdb2406e8a63fa866ff7fc3c761d4a1578bc","messageTitle":"Changes to checkstyle and addition of JUnit test classes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":0}}}]},{"date":"2023-02-15","commitResults":[{"hash":"e54f110bf99e52f1bc7968602251489b6897f30c","messageTitle":"Reformatting for files and adding messages as a class","messageBody":"To allow for better OOP and more packages down the line, the files have been renamed and restructured.\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":19},"md":{"insertions":2,"deletions":2}}},{"hash":"52729dcae9321f41215751ad9b8afa857a90121a","messageTitle":"Replaced text with strings from Messages package","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":37,"deletions":32}}},{"hash":"2512bc2179dd9d2d46b237abb952453e9277c3a1","messageTitle":"Created TaskList class and its related exceptions","messageBody":"TaskList is created to handle task operations.\n\nTaskIndexOutOfBoundsException is thrown when a given index is out of the range of the taskList\nTaskNotFoundException is thrown when a task is not found within a taskList (function that throws this is yet to be implemented)\n","fileTypesAndContributionMap":{"java":{"insertions":84,"deletions":0}}}]},{"date":"2023-02-16","commitResults":[{"hash":"cd6068a4cc0c4280734e00efa8fe6d39f7032991","messageTitle":"Restructure of file to fit OOP standard","messageBody":"TaskList related functions are moved from Cluck to TaskList class instead.\nNow functions such as populating tasklist by reading saved file are under TaskList\n\nSimilarly Task related functions are moved from Cluck to Task class instead.\n","fileTypesAndContributionMap":{"java":{"insertions":85,"deletions":82}}}]},{"date":"2023-02-18","commitResults":[{"hash":"1fca158e3f2785435adaf51296b3d7e852d58760","messageTitle":"Added functions for UI","messageBody":"Added greetUser and farewellUser functions for Ui to display start and end messages for Cluck, using the messages package\n","fileTypesAndContributionMap":{"java":{"insertions":23,"deletions":1}}}]},{"date":"2023-02-19","commitResults":[{"hash":"9bdc21c04ac44bb5307c58e141771bb64a906642","messageTitle":"Created commands package and Command class","messageBody":"Command class is a abstract class from which all commands will extend from.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":0}}},{"hash":"c8ed20598025dc3d6ba4cdb4f6cc9fbaf99f92bb","messageTitle":"Created parser package and Parser class","messageBody":"Parser class will take user input in string format and convert it into its respective executable commands\n","fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":0}}},{"hash":"cad3c2d687ab61328a11249b105af1d7f4d0ef74","messageTitle":"Command abstract class added to commands package","messageBody":"Command class is the parent class of all command classes, and contains abstract method execute().\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"3e877f7fc580f97e717c022674a1128dc061e51f","messageTitle":"Changed Command class into and interface instead","messageBody":"It seems to make more sense for Command to be an interface that commands implement\n","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":4}}},{"hash":"74f91872667a5e04083aabfa667d61ee3d1403e4","messageTitle":"Refactoring of TaskList and Ui class to their respective packages","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":10}}},{"hash":"e01bc3b4aea0cb619736c3e5fb73db463fc7ed21","messageTitle":"Cluck class now concrete","messageBody":"An instantiated Cluck class now contains a Ui instance and a TaskList instance.\nAlso added start() and stop() functions to start and stop the Cluck instance\n","fileTypesAndContributionMap":{"java":{"insertions":29,"deletions":7}}},{"hash":"a653274eea9cbaaf92a8d92f6af4cf5983e53bcc","messageTitle":"Parser class now builds commands instead of Cluck","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":133}}},{"hash":"365ab55651e95ec5ce1a1d43e78b3a458a57a447","messageTitle":"Minor fix to Ui class","messageBody":"Ui class\u0027 readCommand() now waits for user input by using Scanner.nextLine()\n","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":2}}},{"hash":"924c90e856dbacda67699ab3b9d7ecc5f9344a61","messageTitle":"Minor fixes to Command interface and MissingArgumentException","messageBody":"Now the interface method execute() takes in a TaskList and returns a String containing the response\n","fileTypesAndContributionMap":{"java":{"insertions":4,"deletions":2}}},{"hash":"eb8fe8de2a2c226776a31b0754b5a01395ab91ae","messageTitle":"Storage class added","messageBody":"Storage class added under package cluck.storage; Storage class will handle the reading and writing of saved files for cluck\n","fileTypesAndContributionMap":{"java":{"insertions":61,"deletions":46}}},{"hash":"450c3cf56de300f0c5246da6c107340b12c63e67","messageTitle":"Storage class improvements","messageBody":"readSave() and writeSave() are now the only functions in storage. buildTaskFromSave() is now under Task class instead (to better follow OOP standards).\nTaskList also now supports its own toSave() function so as to not violate OOP standards.\n","fileTypesAndContributionMap":{"java":{"insertions":70,"deletions":61}}},{"hash":"e51bf46e79cdb38f4976ea41f6817e990a67c855","messageTitle":"Reformatted cluck to fit OOP principles","messageBody":"Minor fixes to cluck and reformatted to improve readability and abstraction.\n","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":38}}},{"hash":"a13eaefc1d4f663130082300baa541bc635e0f16","messageTitle":"Added toString() method for TaskList class","messageBody":"TaskList now can return its tasks in String format\n","fileTypesAndContributionMap":{"java":{"insertions":12,"deletions":4}}},{"hash":"46c2c308287297dd2fd451d1ea07edc2b3cdba9b","messageTitle":"Created ExitCommand and ListCommand classes","messageBody":"ExitCommand and ListCommand both implements the Command interface. Parser has also be edited to return ExitCommand or ListCommand based on user input\n","fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":12}}},{"hash":"6548a4a525149931be756afb436f209cd35716b9","messageTitle":"MarkTaskCommand, UnmarkTaskCommand, ToDoCommand added","messageBody":"Minor fixes between files as well.\nNow Parser creates the commands added based on switch case.\n","fileTypesAndContributionMap":{"java":{"insertions":158,"deletions":100}}}]},{"date":"2023-02-20","commitResults":[{"hash":"0669b8b5b5a68f163688fbfef6159ee8b4646c06","messageTitle":"Additional Commands created","messageBody":"DeadlineCommand, DeleteTaskCommand and EventCommand have been created and Parser now uses them to create commands\n","fileTypesAndContributionMap":{"java":{"insertions":151,"deletions":56}}},{"hash":"ea7a14ca351fe0a96cde3c0bf67fe266793e8c2c","messageTitle":"Invalid Command and IsNotNumeric","messageBody":"Invalid Command added for when user input does not match any known command.\n\nIsNumeric is replaced by IsNotNumeric for better readability\n","fileTypesAndContributionMap":{"java":{"insertions":105,"deletions":84}}},{"hash":"76cfd9465a43a70bfb84de3512d836f2f50ca7cc","messageTitle":"Minor fixes","messageBody":"Cluck is now running as intended\n","tags":["A-Packages"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"txt":{"insertions":22,"deletions":2},"java":{"insertions":21,"deletions":14},"bat":{"insertions":1,"deletions":1}}},{"hash":"95c408bd2a25c387bb09c9d674ee7755bc824392","messageTitle":"Minor fixes","messageBody":"Fields in instance of Cluck classare now final.\nAdded @throw for commandFactory function in Parser class.\n","fileTypesAndContributionMap":{"java":{"insertions":10,"deletions":5}}}]},{"date":"2023-02-21","commitResults":[{"hash":"0fccbdaf4dddedde9e4ba81207a76ac52c353b51","messageTitle":"Added test files for gradle and minor fixes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"40fb43f46cf9a4134adb59dacee1d5afc24ad199","messageTitle":"Added serach by keyword method for TaskList and Task","messageBody":"containsKeyword() function in Task class returns a boolean value, true if the description of the taks contains the keywrod given in the argument.\n\nfindMatches function in TaskList class iterates through its tasks and calls containsKeywords() on the task. If true, it is added to a temp list. The function findMatches then returns a string format of all the tasks that contains the keyword, stored in the temp list\n","fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":5}}},{"hash":"1c17d2a411768c52d78cdc58ea8efdd707c9c5ff","messageTitle":"Created and Implemented FindTaskCommand","messageBody":"FindTaskCommand contains one field which is the key wrod the user is looking for. It then calls the findMatches() method on the Cluck task list and puts the key word as an argument.\nAs of now it is not case-sensitive.\n","fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":23}}},{"hash":"7df236a27a3191f5fb2f91c252c50ea4137575f6","messageTitle":"Modified find Command to be not case-sensitive.","messageBody":"This is done by converting both the keyword and description in to lower case.\n","tags":["Level-9"],"fileTypesAndContributionMap":{"java":{"insertions":15,"deletions":7}}},{"hash":"40fa05e4bfa705ef798c63824aaa713bafa2bd5e","messageTitle":"Added JUnit test for task checking","messageBody":"Tests if savedTasks is properly converted to Tasks by buildTaskFromSave Method in Task class.\nCurrently only tests on todo.\n","fileTypesAndContributionMap":{"java":{"insertions":48,"deletions":2}}},{"hash":"66a099d12dd25e32a83f9ffe08438117ed5dbac1","messageTitle":"Added exitCommandTest for Parser","messageBody":"Tests if given user input \"bye\", commandFactory produces an ExitCommand.\n","tags":["A-JUnit"],"fileTypesAndContributionMap":{"java":{"insertions":36,"deletions":12}}},{"hash":"27afa017b679be3784b4a4991f33e4d2a916715b","messageTitle":"Added JavaDocs","messageBody":"JavaDocs added to the commited class files.\n","fileTypesAndContributionMap":{"java":{"insertions":135,"deletions":15}}},{"hash":"84c82e3611a6d0045f0860cf76e2f1609547c18e","messageTitle":"Added JavDocs for TaskList class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":8}}},{"hash":"44afac8c73e0e58ffc6a473b749ea7127c177576","messageTitle":"JavaDoc for Storage class added","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":0}}},{"hash":"459d5995c1fc9804364cb4067f63acfa4bac585e","messageTitle":"JavaDocs for Parser class added","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"f247b9ff7121e48e5eff6f9abb6a4f60899e66e2","messageTitle":"Minor fix for Messages","messageBody":"Removed excessive whitespaces in welcome message.\n","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":6}}},{"hash":"b625d1efd5874ab77e19c7e7b7b886db06aea55a","messageTitle":"JavaDocs for classes in commands package and exceptions package","messageBody":"","tags":["A-JavaDoc"],"fileTypesAndContributionMap":{"java":{"insertions":150,"deletions":10}}}]},{"date":"2023-02-22","commitResults":[{"hash":"e821f98adf8190d79d75905bb927becfb45c42ef","messageTitle":"Rename taskList package to tasklist","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":16}}}]},{"date":"2023-02-24","commitResults":[{"hash":"f8bf2182c8d978ad68dad2927deb1c229b6b08b1","messageTitle":"Added dependencies for JavaFX to Gradle","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0}}}]},{"date":"2023-03-02","commitResults":[{"hash":"30c2484ba6a3723124a282910dfe220a86e5e973","messageTitle":"Fix Exit command and merge conflicts in Task class","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":5,"deletions":5}}},{"hash":"3c17451a17b9eb4474d7a3e030c79a54b2ea694c","messageTitle":"Make Cluck class extend JavaFx\u0027s Application class and created Launcher class","messageBody":"Cluck class also has a new constructor with no arguments for JavaFx to work properly.\n","fileTypesAndContributionMap":{"java":{"insertions":39,"deletions":2}}},{"hash":"3c7623237d84855540e9cdde1e86cc437e4e6c56","messageTitle":"Creating a GUI for Duke","messageBody":"Follows everything up to tutorial 2 of [](https://se-education.org/guides/tutorials/javaFxPart2.html)\n","fileTypesAndContributionMap":{"java":{"insertions":53,"deletions":2}}},{"hash":"d80c1d1e7b6dcafddfd59cc888f6584f60a613e4","messageTitle":"Created DialogBox class for custom controls","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":33,"deletions":0}}},{"hash":"556ebf7a9bccdd2ba6522875fdfabfffd0c756b1","messageTitle":"Implemented features for Cluck\u0027s dialog box to be interactable","messageBody":"- added sendButton.setOnMouseClicked(event) and userInput.setOnAction(event) to trigger handleUserInput() function\n- getDialogLabel() function adds text label beside image of dialog box.\n- handleUserInput() function controls actions taken after user input.\n","fileTypesAndContributionMap":{"java":{"insertions":52,"deletions":1}}},{"hash":"ff2676b02d08b60c148f91d6d84f648ddc51de47","messageTitle":"Add custom behavior to DialogBox","messageBody":"Cluck\u0027s dialog box is now on the left side of the GUI while the user is on the right. This is done by implementing a flip() function in the custom dialog box class\n","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":5}}},{"hash":"d6dd838e56e67fe0e4b6e2031c8f23a5e62806ab","messageTitle":"Added XML files and restructured the code for better  OOP","messageBody":"Classes that make up the Ui are now packages in the Ui package, namely DialogBox and MainWindow\n\nXML files have also been added such that scenebuilder can be used to format JavaFx objects\n","fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":150,"deletions":168}}},{"hash":"5e4993e8eb3a9f136b50e04637d0e8a655a0ce66","messageTitle":"CheckStyle fixes","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":27,"deletions":25}}},{"hash":"7a7ce5c86e711bd524af1fcff54058023d8d0dcf","messageTitle":"Currently the jar file created with gradle using the shadow plugin is named \u0027duke.jar\u0027 hich is not the Jar file now correctly named","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":2,"deletions":2}}}]},{"date":"2023-03-03","commitResults":[{"hash":"85405b0d7def18f2204c77aefb582aa9aef5c7e3","messageTitle":"Created CorruptedDataException","messageBody":"Currently if the saved file contains a task that is saved in the wrong format, cluck handles it by printing out a statement and the saved task.\n\nTo better handle such cases I added a CorruptedDataException which extends cluck exception. Here are the sequence of events after the changes:\n1) task build fails in buildTaskFromSave() method in Task class,\n2) exceptions are caught\n3) CorruptedDataException is thrown containing the error statement and the incorrectly formatted save\n","fileTypesAndContributionMap":{"java":{"insertions":16,"deletions":1}}},{"hash":"6dccea892697b89987fa88169f44e1a368e36fb3","messageTitle":"Fix Task class errors","messageBody":"There was an additional date time formatter left in the Task class, perhaps a vestige conflict merges.\nNow there is only one protected static final DateTimeFormatter which all task related child-classes refer to\n\nChanges were also made to the date time format of the formatter,  changed from \"dd-MM-yyyy HH:mm\" to \"dd-MMM-yy HHmm\"\n","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":22}}},{"hash":"f4e2c43752f68ec53c501b59c310f56f13c0c6e3","messageTitle":"Fixes to Storage, Deadline, and Event classes","messageBody":"Minor fixes to ensure that Cluck operates normally.\n\nStorage now has a try and catch clause to catch any exceptions when attempting to build a task from save. it catches any cluck exceptions and displays the error message to the user\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":2},"java":{"insertions":18,"deletions":12}}},{"hash":"69b9fdf2b608739f33712ee73981f715d6e2fe47","messageTitle":"Cluck! now working in GUI","messageBody":"Previously Cluck!\u0027s GUI merely repeated the user input, now it has been fixed such that Cluck! actually takes in the user input and returns a response after executing the command.\n\nThis was done by changing the getResponse method in Cluck class which takes in the user input as a String argument and parses it into a command, which is then executed and returns the response from executing the command.\n","fileTypesAndContributionMap":{"java":{"insertions":20,"deletions":7}}},{"hash":"55c0bd290ede78d95c1e7b78f67a4bf4c54a6394","messageTitle":"Edit to improve code quality in Cluck class","messageBody":"Previously Cluck contained high levels of nesting.\n\nAdditional methods have been added to improve readability and overall quality of code in the run() method in cluck.\ngetResponse() is called to get the response from a userInput. getResponse calls two other methods:\ngetCommand - takes in user input and parses it into a command\nexecuteCommand - takes in a command and executes it, returning the response after executing the command\n","tags":["A-CodeQuality"],"fileTypesAndContributionMap":{"java":{"insertions":25,"deletions":13}}},{"hash":"943a3085febcb2d4d3b961870cb29273cfc6959f","messageTitle":"Fixed accidental removal of import statement","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":1,"deletions":1}}},{"hash":"6c270713ef9ee25d3459ee7d74a59744332de864","messageTitle":"Added assertions in private methods for Cluck","messageBody":"Ensure that response obtained after calling getResponse() within run() method is not null.\nEnsure that getCommand method in Cluck should not have nuill as an argument.\n","tags":["A-Assertions"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":1}}},{"hash":"a7827326e342329b210fbba014c916a4d364f33b","messageTitle":"Updated user guide for Cluck!","messageBody":"","fileTypesAndContributionMap":{"md":{"insertions":30,"deletions":21}}}]}]},"authorFileTypeContributionMap":{"ChickenChiang":{"java":1482,"md":30,"fxml":35,"sh":0,"bat":1,"gradle":22,"txt":21}},"authorContributionVariance":{"ChickenChiang":38158.164},"authorDisplayNameMap":{"ChickenChiang":"CS2103T-T17-1 CHIA..SHUA"}}
