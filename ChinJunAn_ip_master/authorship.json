[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ChinJunAn":1,"-":40}},{"path":"src/main/java/duke/Art.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class Art {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"     * Represents the ASCII artwork on the start of the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    String logo;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for an instance of Art","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    public Art() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"        this.logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display ASCII artwork","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"    public void show() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":27}},{"path":"src/main/java/duke/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class Deadlines extends TimedTask {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"     * Represents Deadline Task for the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"     * Empty constructor for a Deadline instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    public Deadlines() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for a Deadline instance.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"     * @param status Indicate if task is done or not","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"     * @param des    Description of task. Includes deadline of task","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"    public Deadlines(boolean status, String des) {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"        setStatus(status);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d des.split(\" /by \");","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"        setDes(s);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"     * Method to print out status of task onto the console.","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"    public void printStatus() {","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"[D][\" + s + \"] \" + getDes() + \" (by: \" + toStringConsoleEnd() + \")\");","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     * Methods to print out status of task onto file.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"     * @return","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"        return \"D | \" + s + \" | \" + getDes() + \" | \" + super.toStringFileEnd();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":47}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":" * \u003ch1\u003eDuke task checklist\u003c/h1\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":" * The Duke program helps keep track of your ongoin task.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":" *","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":" * @author Chin Jun An","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":" * @version 1.0","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":" * @since 2023","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     * Represents a Duke program.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    private Art ar;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"    private Storage st;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    private Functions fn;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"    private UI ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for a Duke instance. Load tasks previously saved.","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"     * @param fp Indicate the file path to save task scheduled","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    public Duke(String fp) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"        this.ar \u003d new Art();","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"        try {","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"            st \u003d new Storage(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"            TaskList tl \u003d st.load();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"            this.fn \u003d new Functions(tl, st);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"        this.ui \u003d new UI(fn);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     * Main method to run Duke from the console","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"     * @param args","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"        new Duke(\"tasks.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"     * Method to run the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"    public void run() {","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"        ar.show();","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"        while (flag) {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"            ui.getInput();","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"            //could use enums here to check user input before going into switch case","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"                flag \u003d ui.action();","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"                System.out.println(\"Invalid input...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"ChinJunAn":63,"-":2}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"     * General Duke exception. Used for testing.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"     * @param message Print out any message entered","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"        super(message);","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"class markException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used by marking function to indicate that user input is invalid","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    public markException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"        super(\"I don\u0027t know which task to mark...\");","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"class taskNotFoundException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used to indicate user input was invalid and/or task was not found in TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"    public taskNotFoundException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"        super(\"Task not found...\");","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"class deleteException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used by delete function to indicate invalid user input","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"    public deleteException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"        super(\"I don\u0027t know which task to delete...\");","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"class todoException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used by todo task to indicate invalid user input when creating todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"    public todoException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"        super(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"class deadlineException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used by deadline task to indicate invalid user input when creating deadline task","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"    public deadlineException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"        super(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"class eventException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"     * Exception used by event task to indicate invalid user input when creating event task","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"    public eventException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"        super(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":74}},{"path":"src/main/java/duke/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"public class Events extends TimedTask {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"     * Represent Event tasks. Event tasks have both start date time and end date time.","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"    LocalDateTime start;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    String consoleStartString;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    String fileStartString;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     * Empty constructor for an instance of an Event.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    public Events() {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for an instance of an Event. Sets the status, description, start time and end time.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"    public Events(boolean status, String des) {","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"        setStatus(status);","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"        String[] d \u003d new String[3];","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d des.split(\" /from \");","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"        d[0] \u003d s[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"        String[] x \u003d s[1].split(\" /to \");","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"        d[1] \u003d x[1];","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"        setDes(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"        setStart(x[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"     * Method used to load saved Event task in file into Duke program. Read file inputs and create appropriate definitions","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     * @param des Description of task. Includes start date time and end date time.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"    public void configure(String[] des) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"        String[] d \u003d new String[2];","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"        d[0] \u003d des[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"        String[] temp \u003d des[1].split(\" to \");","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"        d[1] \u003d dateTimeFileInParse(temp[1]).format(isoFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"        setDes(d);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"        setStart(dateTimeFileInParse(temp[0]).format(isoFormat));","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"     * Method to set start date time of event.","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"     * @param s String representation of start date time","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"    public void setStart(String s) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"        this.start \u003d dateTimeConsoleInParse(s);","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"        this.consoleStartString \u003d start.format(super.consoleFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"        this.fileStartString \u003d start.format(super.fileFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display start date time onto console","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"     * @return String represention of display","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"    public String toStringConsoleStart() {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"        return this.consoleStartString;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display start date time onto file","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"     * @return String represention of display","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"    public String toStringFileStart() {","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"        return this.fileStartString;","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display status of task onto console","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"ChinJunAn"},"content":"    public void printStatus() {","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-14"},{"lineNumber":85,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"[E][\" + s + \"] \" + getDes() + \" (from: \" + toStringConsoleStart() + \" to: \" + toStringConsoleEnd() + \")\");","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display status of task onto file","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representaion of display","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"ChinJunAn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"ChinJunAn"},"content":"        return \"E | \" + s + \" | \" + getDes() + \" | \" + toStringFileStart() + \" to \" + toStringFileEnd();","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":98}},{"path":"src/main/java/duke/Functions.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"public class Functions {","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"     * Represents the available functions of the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"    TaskList tl;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    Storage st;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for an instance of Function.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"     * @param tl TaskList object that stores all defined tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"     * @param st Storage object that controls writing and loading onto/from file","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    public Functions(TaskList tl, Storage st) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"        this.tl \u003d tl;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"        this.st \u003d st;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of list command","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"    public void list() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"        for (int i \u003d 0; i \u003c tl.count(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"            System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"            tl.getTask(i).printStatus();","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     * Method to allow user to search for task by description.","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     * @param s User input","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"    public void find(String s) {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"        String query \u003d s.split(\" \")[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"        boolean flag \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"        boolean printed \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"        int i \u003d 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"        for (Task t : tl.iterable()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"            if (t.getDes().contains(query)) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"                flag \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"                if (flag \u0026\u0026 !printed) {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"                    System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"                    printed \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"                System.out.print(i + \".\");","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"                t.printStatus();","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"                i++;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"        if (!flag) {","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(\"No matching tasks are found in your list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(\"Search done!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of bye command","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"     * @return boolean flag to indicate when program should stop","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"    public boolean bye() {","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-14"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"        return false;","lastModifiedDate":"2023-01-14"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of mark command","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Index of task specified","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"    public void mark(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"ChinJunAn"},"content":"            throw new markException();","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"ChinJunAn"},"content":"        int index \u003d Integer.parseInt(s[1]) - 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"ChinJunAn"},"content":"        Task t \u003d tl.getTask(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"ChinJunAn"},"content":"        t.setStatus(true);","lastModifiedDate":"2023-01-14"},{"lineNumber":89,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":90,"author":{"gitId":"ChinJunAn"},"content":"        t.printStatus();","lastModifiedDate":"2023-01-14"},{"lineNumber":91,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":93,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":94,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of unmark command","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Index of task specified","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"ChinJunAn"},"content":"    public void unmark(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":101,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":103,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":104,"author":{"gitId":"ChinJunAn"},"content":"            throw new markException();","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":106,"author":{"gitId":"ChinJunAn"},"content":"        int index \u003d Integer.parseInt(s[1]) - 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":107,"author":{"gitId":"ChinJunAn"},"content":"        Task t \u003d tl.getTask(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"ChinJunAn"},"content":"        t.setStatus(false);","lastModifiedDate":"2023-01-14"},{"lineNumber":109,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":110,"author":{"gitId":"ChinJunAn"},"content":"        t.printStatus();","lastModifiedDate":"2023-01-14"},{"lineNumber":111,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":113,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":114,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of delete command","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Index of task specified","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"ChinJunAn"},"content":"    public void delete(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":121,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":122,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":123,"author":{"gitId":"ChinJunAn"},"content":"            throw new deleteException();","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"ChinJunAn"},"content":"        int index \u003d Integer.parseInt(s[1]) - 1;","lastModifiedDate":"2023-01-14"},{"lineNumber":126,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-14"},{"lineNumber":127,"author":{"gitId":"ChinJunAn"},"content":"        tl.getTask(index).printStatus();","lastModifiedDate":"2023-01-21"},{"lineNumber":128,"author":{"gitId":"ChinJunAn"},"content":"        tl.removeTask(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":129,"author":{"gitId":"ChinJunAn"},"content":"        tl.printCount();","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":132,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":133,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of todo command. Creates todo task","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Description of todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"ChinJunAn"},"content":"    public void todo(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":140,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":141,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":142,"author":{"gitId":"ChinJunAn"},"content":"            throw new todoException();","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":144,"author":{"gitId":"ChinJunAn"},"content":"        String[] temp \u003d Arrays.copyOfRange(s, 1, s.length);","lastModifiedDate":"2023-01-14"},{"lineNumber":145,"author":{"gitId":"ChinJunAn"},"content":"        String taskDes \u003d String.join(\" \", temp);","lastModifiedDate":"2023-01-14"},{"lineNumber":146,"author":{"gitId":"ChinJunAn"},"content":"        ToDos td \u003d new ToDos(false, taskDes);","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"ChinJunAn"},"content":"        tl.addTask(td);","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":151,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of deadline command. Create deadline task","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Description of deadline task. Define deadline after \"/by\".","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"ChinJunAn"},"content":"     *            Example: deadline task1 /by 12/12/2023 12:12","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"ChinJunAn"},"content":"    public void deadline(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":159,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":160,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":161,"author":{"gitId":"ChinJunAn"},"content":"            throw new deadlineException();","lastModifiedDate":"2023-01-21"},{"lineNumber":162,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":163,"author":{"gitId":"ChinJunAn"},"content":"        String[] temp \u003d Arrays.copyOfRange(s, 1, s.length);","lastModifiedDate":"2023-01-14"},{"lineNumber":164,"author":{"gitId":"ChinJunAn"},"content":"        String taskDes \u003d String.join(\" \", temp);","lastModifiedDate":"2023-01-14"},{"lineNumber":165,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(taskDes);","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"ChinJunAn"},"content":"        Deadlines dl \u003d new Deadlines(false, taskDes);","lastModifiedDate":"2023-01-14"},{"lineNumber":167,"author":{"gitId":"ChinJunAn"},"content":"        tl.addTask(dl);","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":170,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":171,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define function of event command. Create event task","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":174,"author":{"gitId":"ChinJunAn"},"content":"     * @param inp Descript of event task. Define event with \"/from ... /to ...\".","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"ChinJunAn"},"content":"     *            Example: deadline task1 /from 12/12/2023 12:12 /to 12/12/2023 23:59","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"ChinJunAn"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"ChinJunAn"},"content":"    public void events(String inp) throws DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":179,"author":{"gitId":"ChinJunAn"},"content":"        String[] s \u003d inp.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":180,"author":{"gitId":"ChinJunAn"},"content":"        if (s.length \u003c 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":181,"author":{"gitId":"ChinJunAn"},"content":"            throw new eventException();","lastModifiedDate":"2023-01-21"},{"lineNumber":182,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":183,"author":{"gitId":"ChinJunAn"},"content":"        String[] temp \u003d Arrays.copyOfRange(s, 1, s.length);","lastModifiedDate":"2023-01-14"},{"lineNumber":184,"author":{"gitId":"ChinJunAn"},"content":"        String taskDes \u003d String.join(\" \", temp);","lastModifiedDate":"2023-01-14"},{"lineNumber":185,"author":{"gitId":"ChinJunAn"},"content":"        Events ev \u003d new Events(false, taskDes);","lastModifiedDate":"2023-01-14"},{"lineNumber":186,"author":{"gitId":"ChinJunAn"},"content":"        tl.addTask(ev);","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"ChinJunAn"},"content":"        this.st.save(tl);","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":189,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":189}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"public class Storage {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     * Represent a Storage object that controls writing and loading function of the Duke program.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    String fp;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"    File f;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    Map\u003cString, Task\u003e taskMap;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for an instance of Storage.","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"     * @param fp file path to save/load file","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"     * @throws IOException","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    public Storage(String fp) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"        this.fp \u003d fp;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"        this.f \u003d new File(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"        if (f.createNewFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"        this.taskMap \u003d TaskMap.tm;","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"     * Method to load information from previously saved task defined in file","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     * @return TaskList object for Function to manipulate","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"    public TaskList load() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"            Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"                String l \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"                String[] line \u003d l.split(\" \\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"                Task t \u003d taskMap.get(line[0]);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"                t.setStatus(line[1].equals(\"X\") ? true : false);","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"                t.configure(Arrays.copyOfRange(line, 2, line.length));","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"                tl.loadTask(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"            sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(\"Task file corrupted\");","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"        return tl;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"     * Method to write onto file tasks that have been scheduled.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"     * @param tl Tasklist object to determine task to write onto file.","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"    public void save(TaskList tl) {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"        //overwrite all in tasklist into file","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"            FileWriter fw \u003d new FileWriter(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"            for (int i \u003d 0; i \u003c tl.count(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"                fw.write(tl.getTask(i).toString() + \"\\n\");","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"            fw.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":82}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"     * Represent a general Task.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    boolean status;","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    String des;","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor to create a generic Task.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"     * @param status","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     * @param des","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    public Task(boolean status, String des) {","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"        this.des \u003d des;","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     * Empty constructor to create a generic Task","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"    public Task() {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"     * Method to configure information read from file, into Task objects for TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"     * @param des","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"    public void configure(String[] des) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"        setDes(des);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     * Method to return description of Task.","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representation of description of Task","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"    public String getDes() {","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"        return this.des;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define the description of the Task","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"     * @param des Description of task","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"    public void setDes(String[] des) {","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"        this.des \u003d des[0];","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"     * Method to return status of Task","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"     * @return Boolean to represent status of task. True for done, false for not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"    public boolean getStatus() {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"        return status;","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"     * Method to define the status of the Task","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     * @param status boolean. True for done, false for not done","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"    public void setStatus(boolean status) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display status of task on console","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"    public void printStatus() {","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"[\" + s + \"] \" + this.des);","lastModifiedDate":"2023-01-14"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"     * Method to return string representation of task","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representation of task","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"ChinJunAn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"ChinJunAn"},"content":"        return \"  | \" + s + this.des;","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":90}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import java.util.List;","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"public class TaskList {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     * Represents the list of task user has created, or loaded from file.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    List\u003cTask\u003e list;","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor to create an instance of Tasklist","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"     * Method to add task into the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"     * @param t Task object representating task created","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"        this.list.add(t);","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \");","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"        t.printStatus();","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"        printCount();","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"     * Method to assist loading task from file","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"     * @param t Task object read from file","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"    public void loadTask(Task t) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"        list.add(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"     * Method to remove task from the Duke program","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"     * @param index Index of task in TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"    public void removeTask(int index) {","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"        this.list.remove(index);","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"     * Method to retrieve task from the TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"     * @param index Index of task in TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"     * @return Task Object","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"     * @throws taskNotFoundException","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"    public Task getTask(int index) throws taskNotFoundException {","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"            return this.list.get(index);","lastModifiedDate":"2023-01-14"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"            throw new taskNotFoundException();","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"     * Method to return an iterable list from TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     * @return List\u003cTask\u003e\u003c/Task\u003e","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"    public List\u003cTask\u003e iterable() {","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"        return this.list;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"     * Method to calculate number of task in TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"     * @return Int representation of count of Tasks in TaskList","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"    public int count() {","lastModifiedDate":"2023-01-14"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display count","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"ChinJunAn"},"content":"    public void printCount() {","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"Now you have \" + count() + \" task(s) in the list.\");","lastModifiedDate":"2023-01-14"},{"lineNumber":87,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":88,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":88}},{"path":"src/main/java/duke/TaskMap.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Map;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"public class TaskMap {","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"     * Assists in loading from file","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"    static Map\u003cString, Task\u003e tm \u003d Map.of(","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"            \"T\", new ToDos(),","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"            \"E\", new Events(),","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"            \"D\", new Deadlines()","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    );","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"ChinJunAn":14}},{"path":"src/main/java/duke/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"public abstract class TimedTask extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"     * Represent a Timed task. Includes Deadline and Event tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    DateTimeFormatter isoFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    DateTimeFormatter consoleFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    DateTimeFormatter fileFormat \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    LocalDateTime end;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"    String consoleEndString;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"    String fileEndString;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"     * Empty constructor for TimedTask. Note that TimedTask is abstract","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    public TimedTask() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"     * Method to convert user input into ISO date time input format","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"     * @param s String representation of date time","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"     * @return LocalDateTime object to be used","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"    public LocalDateTime dateTimeConsoleInParse(String s) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"        return LocalDateTime.parse(s, isoFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"     * Method to convert user input into File date time input format","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     * @param s String representation of date time","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     * @return LocalDateTime object to be used","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"    public LocalDateTime dateTimeFileInParse(String s) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"        return LocalDateTime.parse(s, fileFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"     * Method to set description of timed tasks. Includes setting end date","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"     * @param des Description of task","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"    public void setDes(String[] des) {","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"        super.des \u003d des[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"        setEnd(des[1]);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"ChinJunAn"},"content":"     * Method to assist with laoding from file.","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"ChinJunAn"},"content":"     * @param des String representation loaded from file","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"ChinJunAn"},"content":"    public void configure(String[] des) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"ChinJunAn"},"content":"        des[1] \u003d dateTimeFileInParse(des[1]).format(isoFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"ChinJunAn"},"content":"        setDes(des);","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"ChinJunAn"},"content":"     * Method to set end time for timed tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"ChinJunAn"},"content":"     * @param s String representation of end date time","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"ChinJunAn"},"content":"    public void setEnd(String s) {","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"ChinJunAn"},"content":"        this.end \u003d dateTimeConsoleInParse(s);","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"ChinJunAn"},"content":"        this.consoleEndString \u003d end.format(consoleFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"ChinJunAn"},"content":"        this.fileEndString \u003d end.format(fileFormat);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display end date time onto console","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representation of end date time","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"ChinJunAn"},"content":"    public String toStringConsoleEnd() {","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"ChinJunAn"},"content":"        return this.consoleEndString;","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display end date time onto file","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representation of end date time","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"ChinJunAn"},"content":"    public String toStringFileEnd() {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"ChinJunAn"},"content":"        return this.fileEndString;","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":94}},{"path":"src/main/java/duke/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"     * Represenation of todo tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"     * Empty constructor for an instance of a todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    public ToDos() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"        super();","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"     * Constructor for an instance of a todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"     * @param status","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"     * @param des","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"    public ToDos(boolean status, String des) {","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"        super(status, des);","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"     * Method to display status of todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"    public void printStatus() {","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"        System.out.println(\"[T][\" + s + \"] \" + this.des);","lastModifiedDate":"2023-01-14"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"     * Method to return string representation of status of todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"     * @return String representation of status of todo task","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"        String s \u003d (status) ? \"X\" : \" \";","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"        return \"T | \" + s + \" | \" + getDes();","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":44}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"public class UI {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    String inp;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    String[] inpLine;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    Functions fn;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    public UI(Functions fn) {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"        this.fn \u003d fn;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"    public void getInput() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"        this.inp \u003d sc.nextLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"        this.inpLine \u003d inp.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"ChinJunAn"},"content":"    public boolean action() throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"ChinJunAn"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"ChinJunAn"},"content":"        switch (inpLine[0]) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"ChinJunAn"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"ChinJunAn"},"content":"            flag \u003d fn.bye();","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"ChinJunAn"},"content":"        case \"list\":","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"ChinJunAn"},"content":"            fn.list();","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"ChinJunAn"},"content":"        case \"find\":","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"ChinJunAn"},"content":"            fn.find(inp);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"ChinJunAn"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"ChinJunAn"},"content":"            fn.mark(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"ChinJunAn"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"ChinJunAn"},"content":"            fn.unmark(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"ChinJunAn"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"ChinJunAn"},"content":"            fn.delete(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"ChinJunAn"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"ChinJunAn"},"content":"            fn.todo(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"ChinJunAn"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"ChinJunAn"},"content":"            fn.deadline(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"ChinJunAn"},"content":"        case \"event\":","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"ChinJunAn"},"content":"            fn.events(inp);","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"ChinJunAn"},"content":"            break;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"ChinJunAn"},"content":"        default:","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"ChinJunAn"},"content":"            System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"ChinJunAn"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"ChinJunAn"},"content":"        return flag;","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":55}},{"path":"src/test/java/duke/FunctionStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class FunctionStub extends Functions{","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"    public FunctionStub(TaskList ls, Storage st) {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"        super(ls, st);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":8}},{"path":"src/test/java/duke/StorageStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"public class StorageStub extends Storage{","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    public StorageStub(String fp) throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"        super(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":9}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    @Test","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"    public void fileCreationTest() throws IOException {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"        String fp \u003d \"fileCreationTest.txt\";","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"        File f \u003d new File(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"        new Storage(fp);","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":19}},{"path":"src/test/java/duke/TaskListStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import java.util.List;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"public class TaskListStub extends TaskList{","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    List\u003cTaskStub\u003e list;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    public TaskListStub(){","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"        List\u003cTaskStub\u003e ls \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"        TaskStub ts \u003d new TaskStub(false, \"test des\");","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"        ls.add(ts);","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"        this.list \u003d ls;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":14}},{"path":"src/test/java/duke/TaskStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class TaskStub extends Task{","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"    public TaskStub(boolean status, String des) {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"        super(status, des);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":8}},{"path":"src/test/java/duke/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"    @Test","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"    public void getStatusTest() {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"        Task ts \u003d new Task(true, \"test\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"        assertEquals(false, ts.getStatus());","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":14}},{"path":"src/test/java/duke/UiStub.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"public class UiStub extends UI{","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"    public UiStub(Functions fn) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"        super(fn);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":7}},{"path":"src/test/java/duke/UiTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"ChinJunAn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"ChinJunAn"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"ChinJunAn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"ChinJunAn"},"content":"public class UiTest {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"ChinJunAn"},"content":"    @Test","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"ChinJunAn"},"content":"    public void getStatusTest() throws IOException, DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"ChinJunAn"},"content":"        UiStub ui \u003d new UiStub(new FunctionStub(new TaskListStub(), new StorageStub(\"test.txt\")));","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"ChinJunAn"},"content":"        String[] temp \u003d {\"bye\"};","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"ChinJunAn"},"content":"        ui.inpLine \u003d temp;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"ChinJunAn"},"content":"        assertEquals(false, ui.action());","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"ChinJunAn"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"ChinJunAn"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"ChinJunAn":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ChinJunAn"},"content":"todo borrow book","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"ChinJunAn"},"content":"","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"ChinJunAn":2}}]
