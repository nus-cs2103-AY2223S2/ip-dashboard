[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"# duke project template","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Creationsv2":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"checkstyle {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Creationsv2":6,"-":41}},{"path":"data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"T/0/testTodo","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"D/1/testDeadline/2023-01-24 1800","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"E/1/testEvent/2019-10-10 1900/2019-10-11 1900","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import duke.parser.Parser.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":" * A chatbot with functionality to add or remove different","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":" * types of Tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"public class Duke {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    // Duke.Storage component handling loading and writing tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    // Task list with operations.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    // Deals with interactions.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the Duke class.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     * @param filePath The location to load or save data from/to.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"        tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"     * Runs the main logic of the chatbot.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"     * Supports 3 tasks: Todo, Event and Deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"     * Supports commands: adding, deletion, marking,","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"     * unmarking, listing.","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"        // Scanner for user input.","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"        while (true) {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"            Command inputType \u003d Parser.parse(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"                switch (inputType) {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"                case LIST:","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"                    tasks.listTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"                case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"                    tasks.markTask(Parser.contents(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"                    tasks.unmarkTask(Parser.contents(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"                case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"                    tasks.deleteTask(Parser.contents(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"                case UNKNOWN:","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"                    throw new DukeException(\"unknown\");","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"                case BYE:","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"                    ui.showGoodbye();","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"                default:","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"                    tasks.addTask(inputType, Parser.contents(input));","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"                    break;","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"                if (e.getMessage().equals(\"index\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! Index out of range.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"                } else if (e.getMessage().equals(\"unknown\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a \" + e.getMessage() + \" cannot be empty.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(\"Incorrect format detected.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(\"Please enter date/time in the following format:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(\"    yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"            storage.writeData();","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"            if (inputType \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"Creationsv2"},"content":"        userInput.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"Creationsv2"},"content":"        new Duke(\"data/list.txt\").run();","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":104}},{"path":"src/main/java/duke/dukeException/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.dukeexception;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":" * A special exception used by the Duke class.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the Duke.DukeException class.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     * @param error The string to be passed into","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"     *              the parent class\u0027 constructor.","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"        super(error);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":" * A parser object that makes sense of user commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     * Commands that can be used.","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public enum Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"        TODO, DEADLINE, EVENT, LIST,","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"        MARK, UNMARK, DELETE, BYE, UNKNOWN","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     * Parses the user input string into a set list of commands.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     * @param input The string input by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     * @return The respective Command.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    public static Command parse(String input) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"            return Command.BYE;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"todo(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"            return Command.TODO;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"deadline(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"            return Command.DEADLINE;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"event(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"            return Command.EVENT;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"            return Command.LIST;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"mark(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"            return Command.MARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"unmark(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"            return Command.UNMARK;","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        } else if (input.matches(\"delete(.*)\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"            return Command.DELETE;","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"            return Command.UNKNOWN;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"     * Returns the contents of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"     * @param input The String input by the user.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"     * @return A string array with the contents of the command.","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"     * @throws DukeException If command is empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"    public static String[] contents(String input) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"        Command type \u003d parse(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"        switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"            input \u003d input.replace(\"deadline \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"            if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"                // Checks if deadline is empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"                throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"                return input.split(\" /by \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"            input \u003d input.replace(\"event \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"            if (input.equals(\"event\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"                // Checks if event is empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"                throw new DukeException(\"event\");","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"                String[] inputs \u003d input.split(\" /\", 3);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"                inputs[1] \u003d inputs[1].replace(\"from \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"                inputs[2] \u003d inputs[2].replace(\"to \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"                return inputs;","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"        case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"            input \u003d input.replace(\"todo \", \"\");","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"            if (input.equals(\"todo\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"                // Checks if todo is empty.","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"                throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"                return new String[]{input};","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"        case MARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"        case DELETE:","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"            return input.split(\" \", 2);","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"            return new String[]{\"\"};","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":91}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":" * Storage object that handles the loading and unloading","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":" * of tasks from/to the hard disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    // The file used to write/load data.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    private File list;","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    // The ArrayList used to store the loaded data.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    private ArrayList\u003cTask\u003e outputList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the storage class.","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     * Also checks and initialises the folder and file","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     * if they are not present.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"     * @param filepath the path to the file.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    public Storage(String filepath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        // File object representing the data folder.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        File folder \u003d new File(\"data\");","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"Initialising data dependencies:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"    Checking for data directory...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"            if (folder.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(\"    Data directory exists.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"            } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(\"    Data directory does not exist. Creating directory.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"                if (folder.mkdir()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"    Data directory created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"                    throw new DukeException(\"    Data directory cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"        // File object representing the list file.","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"        this.list \u003d new File(filepath);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"    Checking for saved file...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        if (list.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    Saved list exists.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    Saved list does not exist. Creating list file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"                if (list.createNewFile()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"    List file created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"                    throw new DukeException(\"    List file cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"     * Loads the data from hard disk to the ArrayList.","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"    public ArrayList\u003cTask\u003e load() {","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"    Loading data from file...\");","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"            Scanner input \u003d new Scanner(list);","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"            while (input.hasNext()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"                String task \u003d input.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"                String[] items \u003d task.split(\"/\", 5);","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"                if (items[0].equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"                    outputList.add(new Todo(items[2]));","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"                } else if (items[0].equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"                    outputList.add(new Deadline(items[2], items[3]));","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"                } else if (items[0].equals(\"E\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"                    outputList.add(new Event(items[2], items[3], items[4]));","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"Creationsv2"},"content":"                    throw new DukeException(\"Unknown task type detected.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"Creationsv2"},"content":"                if (items[1].equals(\"1\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"Creationsv2"},"content":"                    outputList.get(outputList.size() - 1).markAsDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"Creationsv2"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"File not found.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"    Loading complete.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"Creationsv2"},"content":"        return outputList;","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"Creationsv2"},"content":"     * Writes the data provided into the hard disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"Creationsv2"},"content":"    public void writeData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"Creationsv2"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"Creationsv2"},"content":"            FileWriter writer \u003d new FileWriter(\"data/list.txt\");","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"Creationsv2"},"content":"            for (int i \u003d 0; i \u003c outputList.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"Creationsv2"},"content":"                writer.write(outputList.get(i).printData() + System.lineSeparator());","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"            writer.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"Creationsv2"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Write to list file failed. (\"","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"Creationsv2"},"content":"                    + e.getMessage() + \")\");","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":124}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":" * A type of task with a single deadline.","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    // Deadline for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the deadline class.","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     * @param by Deadline for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the printData method of the Task class.","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the deadline task in data form.","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"    public String printData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"        return \"D\" + \"/\" + (isDone ? \"1\" : \"0\") + \"/\"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"                + description + \"/\" + by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":48}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":" * A type of Task with a specific window for","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":" * completion.","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    // Start date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    // End date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the event class.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     * @param from Start date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"     * @param to End date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        boolean saved \u003d false;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"                + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy h:mm a\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the printData method of the Task class.","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the Event task in data form.","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"    public String printData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"        return \"E\" + \"/\" + (isDone ? \"1\" : \"0\") + \"/\" + description","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"                + \"/\" + from.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"                + \"/\" + to.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":58}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":" * Represents a task entry with a description","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":" * and a boolean representing its status.","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    // Stores the description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"    // Stores the status of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"     * Returns the status of task represented with a String.","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"     * \"X\" if the task is done, \"\" if it is not done.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of task status.","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        // Marks the finished task with \"X\".","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Object class.","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"     * Returns the data representation for the task","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"     * to be written to the hard disk.","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the task in data form.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"    public String printData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"        return \"Task\" + \"/\" + (isDone ? \"1\" : \"0\") + \"/\" + description;","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":68}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.task;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":" * A type of Task with no timeframe.","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the todo class.","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the printData method of the Task class.","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the todo task in data form.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    public String printData() {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        return \"T\" + \"/\" + (isDone ? \"1\" : \"0\") + \"/\" + description;","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":36}},{"path":"src/main/java/duke/taskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import duke.dukeexception.DukeException;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import duke.parser.Parser.Command;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":" * TaskList object that contains all the tasks currently","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":" * in the task list.","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    // Arraylist to store the tasks.","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the Duke.TaskList class.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"     * @param list the list that will be used.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     * Adds the task to the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"     * @param type The type of task to be added.","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"     * @param contents The details of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"     * @throws DukeException","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"    public void addTask(Command type, String[] contents) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        case TODO:","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"            list.add(new Todo(contents[0]));","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"            list.add(new Deadline(contents[0], contents[1]));","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"        case EVENT:","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"            list.add(new Event(contents[0], contents[1], contents[2]));","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"     * Deletes a task at a specified index.","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"     * @param contents The index provided.","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"     * @throws DukeException If the index is out of bounds, an exception is thrown.","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"    public void deleteTask(String[] contents) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"        int index \u003d Integer.parseInt(contents[1].replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        if ((index \u003c 0) | (index \u003e (list.size() - 1))) {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"            // Checks if provided index is in range.","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"            throw new DukeException(\"index\");","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"            list.remove(index);","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"     * Marks a task at a specified index as done.","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"     * @param contents The index provided.","lastModifiedDate":"2023-01-24"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"     * @throws DukeException If the index is out of bounds, an exception is thrown.","lastModifiedDate":"2023-01-24"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"    public void markTask(String[] contents) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"        // User input: mark x","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"        // Extracts the numbered item from the user input string","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"        int index \u003d Integer.parseInt(contents[1].replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"        if ((index \u003c 0) | (index \u003e (list.size() - 1))) {","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"            // Checks if provided index is in range.","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"            throw new DukeException(\"index\");","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"Creationsv2"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"            list.get(index).markAsDone();","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"Creationsv2"},"content":"     * Marks a task at a specified index as undone.","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-24"},{"lineNumber":102,"author":{"gitId":"Creationsv2"},"content":"     * @param contents The index provided.","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"Creationsv2"},"content":"     * @throws DukeException If the index is out of bounds, an exception is thrown.","lastModifiedDate":"2023-01-24"},{"lineNumber":104,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"Creationsv2"},"content":"    public void unmarkTask(String[] contents) throws DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"Creationsv2"},"content":"        int index \u003d Integer.parseInt(contents[1].replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"Creationsv2"},"content":"        if ((index \u003c 0) | (index \u003e (list.size() - 1))) {","lastModifiedDate":"2023-01-24"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"            // Checks if provided index is in range.","lastModifiedDate":"2023-01-24"},{"lineNumber":109,"author":{"gitId":"Creationsv2"},"content":"            throw new DukeException(\"index\");","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"Creationsv2"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":111,"author":{"gitId":"Creationsv2"},"content":"            list.get(index).markAsUndone();","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"     * Lists all the tasks currently in the list.","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"Creationsv2"},"content":"    public void listTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":123,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(i + 1 + \". \" + list.get(i).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":124,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":125,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":126,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":126}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package duke.ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":" * UI that deals with interactions.","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     * Prints a line separator.","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     * Prints the welcome message.","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"        showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    public void showGoodbye() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Creationsv2":30}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"java -classpath c:\\Users\\jonlo\\OneDrive\\NUS\\Y2S2\\CS2103T\\IP\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"pause","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":3,"-":20}}]
