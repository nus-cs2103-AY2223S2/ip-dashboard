[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"    // Deadline for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"    protected String by;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the deadline class.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     * @param by Deadline for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the deadline task.","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":25}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-16"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"    // Enums for the different commands","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"    private enum Command {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"        TODO, DEADLINE, EVENT, LIST,","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"        MARK, UNMARK, DELETE, BYE, UNKNOWN","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"     * Adds user input to a list.","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"     * Supports several tasks, such as todo,","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"     * deadline and event.","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     * Operations: todo, deadline, event, list,","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     * mark, unmark, delete.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"    public static void greet() {","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        while (true) {","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"            // Stores the user input.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"            String input \u003d userInput.nextLine();","lastModifiedDate":"2023-01-16"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"            Command inputType;","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.BYE;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"todo(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.TODO;","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"deadline(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.DEADLINE;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"event(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.EVENT;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.equals(\"list\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.LIST;","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"mark(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.MARK;","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"unmark(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.UNMARK;","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"            } else if (input.matches(\"delete(.*)\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.DELETE;","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"                inputType \u003d Command.UNKNOWN;","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"                if (inputType \u003d\u003d Command.BYE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"                    // User input: bye","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"Bye. Hope to see you soon!\");","lastModifiedDate":"2023-01-16"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.TODO) {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"                    // User input: todo x","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"                    input \u003d input.replace(\"todo \", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"                    if (input.equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if todo is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"todo\");","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"                        list.add(new Todo(input));","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.DEADLINE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"                    // User input: deadline x","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"                    input \u003d input.replace(\"deadline \", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"                    if (input.equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if deadline is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"deadline\");","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"                        String[] inputs \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"                        list.add(new Deadline(inputs[0], inputs[1]));","lastModifiedDate":"2023-01-17"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.EVENT) {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"                    // User input: event x","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"                    input \u003d input.replace(\"event \", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"                    if (input.equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if event is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"event\");","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"                        String[] inputs \u003d input.split(\" /\", 3);","lastModifiedDate":"2023-01-17"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"                        inputs[1] \u003d inputs[1].replace(\"from \", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"                        inputs[2] \u003d inputs[2].replace(\"to \", \"\");","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"                        list.add(new Event(inputs[0], inputs[1], inputs[2]));","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(list.size() - 1).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-17"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.LIST) {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Creationsv2"},"content":"                    // User input: list","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"Creationsv2"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-16"},{"lineNumber":99,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(i + 1 + \". \" + list.get(i).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-16"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.MARK) {","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"Creationsv2"},"content":"                    // User input: mark x","lastModifiedDate":"2023-01-17"},{"lineNumber":103,"author":{"gitId":"Creationsv2"},"content":"                    // Extracts the numbered item from the user input string","lastModifiedDate":"2023-01-17"},{"lineNumber":104,"author":{"gitId":"Creationsv2"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"Creationsv2"},"content":"                    if ((index \u003c 0) | (index \u003e (list.size() - 1)) ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if provided index is in range.","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"index\");","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Creationsv2"},"content":"                        list.get(index).markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":110,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":111,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":112,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.UNMARK) {","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"Creationsv2"},"content":"                    // User input: unmark x","lastModifiedDate":"2023-01-17"},{"lineNumber":115,"author":{"gitId":"Creationsv2"},"content":"                    // Extracts the numbered item from the user input string","lastModifiedDate":"2023-01-17"},{"lineNumber":116,"author":{"gitId":"Creationsv2"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"                    if ((index \u003c 0) | (index \u003e (list.size() - 1)) ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if provided index is in range.","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"index\");","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Creationsv2"},"content":"                        list.get(index).markAsUndone();","lastModifiedDate":"2023-01-17"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-17"},{"lineNumber":123,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":124,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.DELETE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"Creationsv2"},"content":"                    // User input: delete x","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"Creationsv2"},"content":"                    int index \u003d Integer.parseInt(input.replaceAll(\"[^0-9]\", \"\")) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Creationsv2"},"content":"                    if ((index \u003c 0) | (index \u003e (list.size() - 1)) ) {","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Creationsv2"},"content":"                        // Checks if provided index is in range.","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Creationsv2"},"content":"                        throw new DukeException(\"index\");","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Creationsv2"},"content":"                    } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"    \" + list.get(index).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Creationsv2"},"content":"                        list.remove(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Creationsv2"},"content":"                        System.out.println(\"Now you have \" + list.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"Creationsv2"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Creationsv2"},"content":"                } else if (inputType \u003d\u003d Command.UNKNOWN){","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Creationsv2"},"content":"                    // Unknown command.","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"Creationsv2"},"content":"                    throw new DukeException(\"unknown\");","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"Creationsv2"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"Creationsv2"},"content":"                if (e.getMessage().equals(\"index\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! Index out of range.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Creationsv2"},"content":"                } else if (e.getMessage().equals(\"unknown\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"Creationsv2"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Creationsv2"},"content":"                    System.out.println(\"☹ OOPS!!! The description of a \" + e.getMessage() + \" cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Creationsv2"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":150,"author":{"gitId":"Creationsv2"},"content":"            System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":151,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":152,"author":{"gitId":"Creationsv2"},"content":"            if (input.equals(\"bye\")) {","lastModifiedDate":"2023-01-16"},{"lineNumber":153,"author":{"gitId":"Creationsv2"},"content":"                break;","lastModifiedDate":"2023-01-16"},{"lineNumber":154,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":155,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-01-16"},{"lineNumber":156,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":157,"author":{"gitId":"Creationsv2"},"content":"        userInput.close();","lastModifiedDate":"2023-01-16"},{"lineNumber":158,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":159,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":162,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":163,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-16"},{"lineNumber":164,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-16"},{"lineNumber":165,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-16"},{"lineNumber":166,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":167,"author":{"gitId":"Creationsv2"},"content":"        greet();","lastModifiedDate":"2023-01-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Creationsv2":165,"-":4}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"     * @param error The string to be passed into","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"     *              the parent class\u0027 constructor.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"        super(error);","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":11}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"    // Start date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"    protected String from;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"    // End date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"    protected String to;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the event class.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"     * @param from Start date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"     * @param to End date for the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the event task.","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"                + \" (from: \" + from + \" to: \" + to + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":30}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"    // Stores the description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"    // Stores the status of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     * Return the status of task represented with a String.","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     * \"X\" if the task is done, \"\" if it is not done.","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of task status.","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        // Marks the finished task with \"X\".","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Object class.","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the task.","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":52}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"     * Constructor for the todo class.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"     * @param description Description of the todo task.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"        super(description);","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"     * Overrides the toString method of the Task class.","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"     * @return String representation of the todo task.","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Creationsv2":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":10}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"java -classpath c:\\Users\\jonlo\\OneDrive\\NUS\\Y2S2\\CS2103T\\IP\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"pause","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Creationsv2":3,"-":20}}]
