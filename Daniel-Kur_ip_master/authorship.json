[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daniel-Kur":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"checkstyle {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daniel-Kur":8,"-":39}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / aa","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"E / 1 / asasda / from 2121-04-12 / to 2021-04-15","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / asdasd","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / ada","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / makan ada","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"D / 0 / ini ada kok  / by 2021-12-12","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":6}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a command and the execution action","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"public class Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    private String command;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    public Command(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * Returns boolean value that representing a command of exit or not","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @return false for all instance of Commands except for ExitCommand","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        return false;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"     * A getter function to get the command","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"     * @return the String representation of the command","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"        return command;","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"     * Implements the execution action of the command","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"        return;","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":47}},{"path":"src/main/java/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for adding a Deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public DeadlineCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute deadline command","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            String[] request \u003d super.getCommand().split(\"/\", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"            String task \u003d request[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            String date \u003d request[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            Deadline deadline \u003d new Deadline(task, date);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            storage.deadline(task, date);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.add(deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            ui.addTaskMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printListSize(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"            ui.taskErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":41}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for deleting a task","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    public DeleteCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute Delete command","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"            int idx \u003d Integer.parseInt(super.getCommand()) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.delete(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            storage.delete(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            ui.removeMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printListSize(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            ui.idxErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":38}},{"path":"src/main/java/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for adding an event","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    public EventCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute adding Event command","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"            String[] request \u003d super.getCommand().split(\"/\", 3);","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            String task \u003d request[0];","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"            String from \u003d request[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            String to \u003d request[2];","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            storage.event(task, from, to);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.add(event);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            ui.addTaskMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(event);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printListSize(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"            ui.taskErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":41}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for exiting the program","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    public ExitCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        super(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute exit command","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        ui.bye();","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        storage.bye();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"        return true;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":34}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for finding a certain keyword that match the content of Task","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public FindCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        super(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        tasks.find(super.getCommand());","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":18}},{"path":"src/main/java/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" * Represents a command when user make a mistake when inputting the fields","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"public class InvalidCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public InvalidCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        super(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        ui.invalidCmdMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":18}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for printing the current list of tasks in the TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public ListCommand(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        super(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        tasks.print();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":18}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for marking a task","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public MarkCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * Exucute mark command","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            int idx \u003d Integer.parseInt(super.getCommand()) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"            Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            task.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            storage.mark(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            ui.markMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.set(idx, task);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"            ui.idxErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":39}},{"path":"src/main/java/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import exceptions.EmptyTaskException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for adding a ToDO","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public ToDoCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute adding a ToDo command","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            if (super.getCommand().equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"                throw new EmptyTaskException(\"The task cant be empty\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            ToDo todo \u003d new ToDo(super.getCommand());","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.add(todo);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            storage.todo(super.getCommand());","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            ui.addTaskMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(todo);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printListSize(tasks);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"            ui.taskErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":41}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":" * Represents command for un-marking a task","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    public UnmarkCommand(String string) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        super(string);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute unmark command","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * @param tasks the current list of tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     * @param ui the user interface","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * @param storage the storage where the changes done by command action stored","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"            int idx \u003d Integer.parseInt(super.getCommand()) - 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            Task task \u003d tasks.get(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"            task.unmark();","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            storage.unmark(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"            ui.unmarkMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printTask(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.set(idx, task);","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"            ui.idxErrorMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":38}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import commands.Command;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import parser.Parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"import ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":" * The main class to run the program","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"public class Duke {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"     * Duke constructor","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"     * @param filePath","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public Duke(String filePath) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to start the program","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"        ui.greet();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"        if (tasks.getSize() \u003e 0) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"            ui.saveTaskMsg();","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"            tasks.print();","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"            String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"            isExit \u003d c.isExit();","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"            ui.printLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":61}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Custom duke exception","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public DukeException(String err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":10}},{"path":"src/main/java/exceptions/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Duke exception when the users did not enter all required fields for the command","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public EmptyTaskException(String err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":10}},{"path":"src/main/java/exceptions/InvalidRequestException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package exceptions;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Duke Exception for users error when inputing command","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"public class InvalidRequestException extends ArrayIndexOutOfBoundsException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public InvalidRequestException(String err) {","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":10}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package parser;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import commands.*;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":" * Provide parsing mechanism for the user inputs","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"     * Parse user input and returning a Command","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"     * @param command user input","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"     * @return Command object","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    public static Command parse(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        String[] splittedCmd \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        switch (splittedCmd[0]) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"            return new ExitCommand(splittedCmd[0]);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"        case \"list\":","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"            return new ListCommand(splittedCmd[0]);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"            return new MarkCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"            return new UnmarkCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"            return new DeleteCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"            return new ToDoCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"            return new DeadlineCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"        case \"event\":","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"            return new EventCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"        case \"find\":","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            return new FindCommand(splittedCmd[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        default:","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"            return new InvalidCommand(splittedCmd[0]);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":39}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Event;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":" * Deals with loading tasks from the file and saving tasks in the file","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    private static final String TEMP_PATH \u003d \"./data/temp.txt\";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    private File file;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"    private BufferedWriter bw;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"    private String path;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"     * Constructor for Storage","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"     * @param path","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"        file \u003d new File(path);","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"        boolean isFileExist \u003d file.exists();","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"        if (!isFileExist) {","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"            makeFile(file);","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to make the directory and the file based on the file path","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"     * @param file the file that wants to be created","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"    public void makeFile(File file) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"        file.mkdirs();","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"        file.delete();","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"        file.createNewFile();","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"     * Loading the previous user data","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"     * @return ArrayList that contains tasks from previous session","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"    public ArrayList\u003cTask\u003e load() throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"            BufferedReader bf \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"            String savedTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"            while ((savedTask \u003d bf.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Daniel-Kur"},"content":"                String[] taskFragment \u003d savedTask.split(\" / \", 5);","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"                if (taskFragment[0].equals(\"T\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Daniel-Kur"},"content":"                    ToDo toDo \u003d new ToDo(taskFragment[2]);","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Daniel-Kur"},"content":"                        toDo.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"                    arr.add(toDo);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Daniel-Kur"},"content":"                } else if (taskFragment[0].equals(\"D\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"                    Deadline deadline \u003d new Deadline(taskFragment[2], taskFragment[3]);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"                        deadline.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"                    arr.add(deadline);","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Daniel-Kur"},"content":"                } else if (taskFragment[0].equals(\"E\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"                    Event event \u003d new Event(taskFragment[2], taskFragment[3], taskFragment[4]);","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"                        event.mark();","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Daniel-Kur"},"content":"                    arr.add(event);","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Daniel-Kur"},"content":"            bf.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Daniel-Kur"},"content":"            return arr;","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"            return new ArrayList\u003cTask\u003e(100);","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the user data when marking a task","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx the index of task","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"Daniel-Kur"},"content":"    public void mark(int idx) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"Daniel-Kur"},"content":"        File fileTemp \u003d new File(TEMP_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"Daniel-Kur"},"content":"        if (!fileTemp.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"Daniel-Kur"},"content":"            makeFile(fileTemp);","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMP_PATH));","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"Daniel-Kur"},"content":"        int idx2 \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"Daniel-Kur"},"content":"        String currentLine;","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"Daniel-Kur"},"content":"        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"Daniel-Kur"},"content":"            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-17"},{"lineNumber":109,"author":{"gitId":"Daniel-Kur"},"content":"                currentLine \u003d currentLine.replaceFirst(\"0\", \"1\");","lastModifiedDate":"2023-02-17"},{"lineNumber":110,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":111,"author":{"gitId":"Daniel-Kur"},"content":"            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":112,"author":{"gitId":"Daniel-Kur"},"content":"            idx2++;","lastModifiedDate":"2023-02-17"},{"lineNumber":113,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":114,"author":{"gitId":"Daniel-Kur"},"content":"        bw2.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":115,"author":{"gitId":"Daniel-Kur"},"content":"        br.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":116,"author":{"gitId":"Daniel-Kur"},"content":"        bw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":117,"author":{"gitId":"Daniel-Kur"},"content":"        file.delete();","lastModifiedDate":"2023-02-17"},{"lineNumber":118,"author":{"gitId":"Daniel-Kur"},"content":"        boolean successful \u003d fileTemp.renameTo(file);","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"Daniel-Kur"},"content":"        bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the data when user un-marking a task","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx the index of task","lastModifiedDate":"2023-02-17"},{"lineNumber":126,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":127,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":128,"author":{"gitId":"Daniel-Kur"},"content":"    public void unmark(int idx) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"Daniel-Kur"},"content":"        File fileTemp \u003d new File(TEMP_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":130,"author":{"gitId":"Daniel-Kur"},"content":"        if (!fileTemp.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"Daniel-Kur"},"content":"            makeFile(fileTemp);","lastModifiedDate":"2023-02-17"},{"lineNumber":132,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMP_PATH));","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2023-02-17"},{"lineNumber":135,"author":{"gitId":"Daniel-Kur"},"content":"        int idx2 \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":136,"author":{"gitId":"Daniel-Kur"},"content":"        String currentLine;","lastModifiedDate":"2023-02-17"},{"lineNumber":137,"author":{"gitId":"Daniel-Kur"},"content":"        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":138,"author":{"gitId":"Daniel-Kur"},"content":"            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-17"},{"lineNumber":139,"author":{"gitId":"Daniel-Kur"},"content":"                currentLine \u003d currentLine.replaceFirst(\"1\", \"0\");","lastModifiedDate":"2023-02-17"},{"lineNumber":140,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"Daniel-Kur"},"content":"            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"Daniel-Kur"},"content":"            idx2++;","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"Daniel-Kur"},"content":"        bw2.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"Daniel-Kur"},"content":"        br.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"Daniel-Kur"},"content":"        bw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"Daniel-Kur"},"content":"        file.delete();","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"Daniel-Kur"},"content":"        boolean successful \u003d fileTemp.renameTo(file);","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"Daniel-Kur"},"content":"        bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the data when user deleting a task","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx the index of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":157,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":158,"author":{"gitId":"Daniel-Kur"},"content":"    public void delete(int idx) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":159,"author":{"gitId":"Daniel-Kur"},"content":"        File fileTemp \u003d new File(TEMP_PATH);","lastModifiedDate":"2023-02-17"},{"lineNumber":160,"author":{"gitId":"Daniel-Kur"},"content":"        if (!fileTemp.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":161,"author":{"gitId":"Daniel-Kur"},"content":"            makeFile(fileTemp);","lastModifiedDate":"2023-02-17"},{"lineNumber":162,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":163,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMP_PATH));","lastModifiedDate":"2023-02-17"},{"lineNumber":164,"author":{"gitId":"Daniel-Kur"},"content":"        BufferedReader br \u003d new BufferedReader(new FileReader(path));","lastModifiedDate":"2023-02-17"},{"lineNumber":165,"author":{"gitId":"Daniel-Kur"},"content":"        int idx2 \u003d 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":166,"author":{"gitId":"Daniel-Kur"},"content":"        String currentLine;","lastModifiedDate":"2023-02-17"},{"lineNumber":167,"author":{"gitId":"Daniel-Kur"},"content":"        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-17"},{"lineNumber":168,"author":{"gitId":"Daniel-Kur"},"content":"            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-17"},{"lineNumber":169,"author":{"gitId":"Daniel-Kur"},"content":"                idx2++;","lastModifiedDate":"2023-02-17"},{"lineNumber":170,"author":{"gitId":"Daniel-Kur"},"content":"                continue;","lastModifiedDate":"2023-02-17"},{"lineNumber":171,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":172,"author":{"gitId":"Daniel-Kur"},"content":"            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":173,"author":{"gitId":"Daniel-Kur"},"content":"            idx2++;","lastModifiedDate":"2023-02-17"},{"lineNumber":174,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":175,"author":{"gitId":"Daniel-Kur"},"content":"        bw2.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":176,"author":{"gitId":"Daniel-Kur"},"content":"        br.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":177,"author":{"gitId":"Daniel-Kur"},"content":"        bw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":178,"author":{"gitId":"Daniel-Kur"},"content":"        file.delete();","lastModifiedDate":"2023-02-17"},{"lineNumber":179,"author":{"gitId":"Daniel-Kur"},"content":"        boolean successful \u003d fileTemp.renameTo(file);","lastModifiedDate":"2023-02-17"},{"lineNumber":180,"author":{"gitId":"Daniel-Kur"},"content":"        bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-17"},{"lineNumber":181,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":182,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":183,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":184,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the data when adding a ToDo","lastModifiedDate":"2023-02-17"},{"lineNumber":185,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":186,"author":{"gitId":"Daniel-Kur"},"content":"     * @param task the name of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":187,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":188,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":189,"author":{"gitId":"Daniel-Kur"},"content":"    public void todo(String task) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":190,"author":{"gitId":"Daniel-Kur"},"content":"        bw.write(\"T / 0 / \" + task + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":191,"author":{"gitId":"Daniel-Kur"},"content":"        bw.flush();","lastModifiedDate":"2023-02-17"},{"lineNumber":192,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":193,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":194,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":195,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the data when user adding a deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":196,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":197,"author":{"gitId":"Daniel-Kur"},"content":"     * @param task the name of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":198,"author":{"gitId":"Daniel-Kur"},"content":"     * @param date the date of task with format (yyyy-mm-dd)","lastModifiedDate":"2023-02-17"},{"lineNumber":199,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":200,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":201,"author":{"gitId":"Daniel-Kur"},"content":"    public void deadline(String task, String date) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":202,"author":{"gitId":"Daniel-Kur"},"content":"        bw.write(\"D / 0 / \" + task + \" / \" + date + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":203,"author":{"gitId":"Daniel-Kur"},"content":"        bw.flush();","lastModifiedDate":"2023-02-17"},{"lineNumber":204,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":205,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":206,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":207,"author":{"gitId":"Daniel-Kur"},"content":"     * Modifying the data when user adding an event","lastModifiedDate":"2023-02-17"},{"lineNumber":208,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":209,"author":{"gitId":"Daniel-Kur"},"content":"     * @param task the name of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"Daniel-Kur"},"content":"     * @param from the beginning date of event with format (yyyy-mm-dd)","lastModifiedDate":"2023-02-17"},{"lineNumber":211,"author":{"gitId":"Daniel-Kur"},"content":"     * @param to   the end date of event with format (yyyy-mm-dd)","lastModifiedDate":"2023-02-17"},{"lineNumber":212,"author":{"gitId":"Daniel-Kur"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-17"},{"lineNumber":213,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":214,"author":{"gitId":"Daniel-Kur"},"content":"    public void event(String task, String from, String to) throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"Daniel-Kur"},"content":"        bw.write(\"E / 0 / \" + task + \"/ \" + from + \"/ \" + to + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"Daniel-Kur"},"content":"        bw.flush();","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":218,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"Daniel-Kur"},"content":"    public void bye() throws IOException {","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"Daniel-Kur"},"content":"        bw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":222,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":222}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Class that represents Deadline Task","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    private LocalDate deadline;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute adding a Deadline command","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"     * @param taskName","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"     * @param deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"    public Deadline(String taskName, String deadline) {","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"        String[] fromDate \u003d deadline.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"        LocalDate ld \u003d LocalDate.parse(fromDate[1].replace(\" \", \"\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"        this.deadline \u003d ld;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[D]\" + super.toString() + \"(by \" + deadline.format(FORMATTER) + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":29}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" * Class that represents Event Task","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    private final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM uuuu\");","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"     * Execute adding an Event command","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"     * @param eventName","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"     * @param from","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"     * @param to","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"    public Event(String eventName, String from, String to) {","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"        super(eventName);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"        String[] fromDate \u003d from.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        LocalDate ld1 \u003d LocalDate.parse(fromDate[1].replace(\" \", \"\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"        String[] toDate \u003d to.split(\" \", 2);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"        LocalDate ld2 \u003d LocalDate.parse(toDate[1].replace(\" \", \"\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        this.from \u003d ld1;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        this.to \u003d ld2;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[E]\" + super.toString() + \" (from \" + from.format(FORMATTER) + \" to \" + to.format(FORMATTER) + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":34}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Represents task that can be inserted to the program","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    private static String UNMARKED \u003d \"[ ]\";","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"    private static String MARKED \u003d \"[X]\";","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    private String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    public Task(String taskName) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"     * Marking the task as done","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    public void mark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"     * Un-Marking the task as not yet done","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"     * String representation of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"     * @return task string representation","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        if (isMarked) {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"            return MARKED + \" \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"            return UNMARKED + \" \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":43}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":" * Container for the tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"public class TaskList {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public TaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * Prints all the contents in the TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"    public void print() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"            System.out.println(\"\\t\" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to add task to the list","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"     * @param task the task","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"        list.add(task);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"     * Getter to get a task in the specific index","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx the index of task","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"     * @return the task pointed ny the index","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"    public Task get(int idx) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"        return list.get(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to delete a specific task on an index","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx the index","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"    public void delete(int idx) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"        list.remove(idx);","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to get the size of current TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"     * @return the number of Tasks contained in the TaskList","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"        return list.size();","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Daniel-Kur"},"content":"     * Function to replace a task in a specific index with another task","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"     * @param idx  the index","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"     * @param task the new task that will replace the old task","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"    public void set(int idx, Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"        list.set(idx, task);","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Daniel-Kur"},"content":"     * Find the tasks in hte list that matched with a certain keyword","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Daniel-Kur"},"content":"     * @param key the keyword","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Daniel-Kur"},"content":"    public void find(String key) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Daniel-Kur"},"content":"        int idx \u003d 1;","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Daniel-Kur"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"            Task task \u003d list.get(i);","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"Daniel-Kur"},"content":"            if (task.toString().contains(key)) {","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"Daniel-Kur"},"content":"                System.out.println(\"\\t\" + (idx) + \". \" + task.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"                idx++;","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":91}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":" * Class that represents ToDo Task","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public ToDo(String toDo) {","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        super(toDo);","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":15}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":" * Deals with interactions with the user","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    private static final String LINE \u003d \"-----------------------------------------------------------------------------\";","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"    private Scanner sc;","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"    public Ui() {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"     * Print the greeting message when booting the program","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"    public void greet() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tHello! I\u0027m duke.Duke\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    public void taskErrorMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tOOPS!!! Make sure insert all required input.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"    public void idxErrorMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tOOPS!!! Please input the right index.\");","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"    public void printLine() {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"    public void bye() {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    public void addTaskMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"    public void markMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tOK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"    public void unmarkMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tNice! I\u0027ve unmarked this task as not done yet:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"    public void printTask(Task task) {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Daniel-Kur"},"content":"    public void removeMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Daniel-Kur"},"content":"    public void invalidCmdMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"    public void printListSize(TaskList taskList) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\t\" + \"Now you have \" + taskList.getSize() + \" tasks in the list\");","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Daniel-Kur"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"     * Message that popped if previous session have data","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Daniel-Kur"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"    public void saveTaskMsg() {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tSaved Tasks From Last Session\");","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":84}},{"path":"src/test/java/tasks/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"package tasks;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public void test1() {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new ToDo(\"item1\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Deadline(\"item2\", \" 2021-12-12\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Event(\"item3\", \" 2021-12-12\", \" 2021-12-13\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"        int size \u003d input.getSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"        int expected \u003d 3;","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"        assertEquals(expected, size);","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"    public void test2() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new ToDo(\"item1\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Deadline(\"item2\", \" 2021-12-12\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Event(\"item3\", \" 2021-12-12\", \" 2021-12-13\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new ToDo(\"item4\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"        Task newItem \u003d new ToDo(\"item5\");","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"        input.set(2, newItem);","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"        Task in \u003d input.get(2);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"        Task expected \u003d newItem;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"        assertEquals(expected, in);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"    @Test","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"    public void test3() {","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"        TaskList input \u003d new TaskList();","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new ToDo(\"item1\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Deadline(\"item2\", \" 2021-12-12\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new Event(\"item3\", \" 2021-12-12\", \" 2021-12-13\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"        input.add(new ToDo(\"item4\"));","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"        Task newItem \u003d new ToDo(\"item5\");","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"        input.set(2, newItem);","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"        input.delete(1);","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"        int actualSize \u003d input.getSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"        int expected \u003d 3;","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"        assertEquals(expected, actualSize);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Daniel-Kur":49}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"todo read book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"mark 1","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"deadline return book /by: June 6th","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"event project meeting /from: Aug 6th 2pm /to: 4pm","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"todo join sports club","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"mark 4","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"todo borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"if not exist C:\\Users\\USER\\Downloads\\cs2103T\\bin mkdir C:\\Users\\USER\\Downloads\\cs2103T\\bin","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"javac -cp C:\\Users\\USER\\Downloads\\cs2103T\\src\\main\\java -Xlint:none -d C:\\Users\\USER\\Downloads\\cs2103T\\bin C:\\Users\\USER\\Downloads\\cs2103T\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"java -classpath C:\\Users\\USER\\Downloads\\cs2103T\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daniel-Kur":3,"-":18}}]
