[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"T / 1 / aa","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / as","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"T / 1 / asdsa","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / sadas","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"T / 0 / asd","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Daniel-Kur":5}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    private String deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    public Deadline(String taskName, String deadline){","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"        super(taskName);","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString(){","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[D]\" + super.toString() + \"(\" + deadline + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"import java.io.*;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"import java.nio.file.StandardOpenOption;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"    private static final String LINE \u003d \"----------------------------------------------\";","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    private static final String PATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"    private static final String TEMPPATH \u003d \"./data/temp.txt\";","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    public static void main(String[] args) throws EmptyTaskException, InvalidRequestException, IOException {","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"        File file \u003d new File(PATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        boolean isFileExist \u003d file.exists();","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"        if (!isFileExist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"            file.mkdirs();","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"            file.delete();","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"            file.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"            BufferedReader bf \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"            String savedTask;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"            while ((savedTask \u003d bf.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"                String[] taskFragment \u003d savedTask.split(\" / \", 5);","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"                if (taskFragment[0].equals(\"T\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"                    ToDo toDo \u003d new ToDo(taskFragment[2]);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"                        toDo.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Daniel-Kur"},"content":"                    list.add(toDo);","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Daniel-Kur"},"content":"                } else if (taskFragment[0].equals(\"D\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Daniel-Kur"},"content":"                    Deadline deadline \u003d new Deadline(taskFragment[2], taskFragment[3]);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Daniel-Kur"},"content":"                        deadline.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Daniel-Kur"},"content":"                    list.add(deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Daniel-Kur"},"content":"                } else if (taskFragment[0].equals(\"E\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Daniel-Kur"},"content":"                    Event event \u003d new Event(taskFragment[2], taskFragment[3], taskFragment[4]);","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Daniel-Kur"},"content":"                    if (taskFragment[1].equals(\"1\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Daniel-Kur"},"content":"                        event.mark();","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Daniel-Kur"},"content":"                    list.add(event);","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Daniel-Kur"},"content":"            bf.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Daniel-Kur"},"content":"        }catch (Exception e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"Daniel-Kur"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(\"\\tHello! I\u0027m Duke\\n\\tWhat can I do for you?\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Daniel-Kur"},"content":"        System.out.println(LINE+\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Daniel-Kur"},"content":"        try {","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Daniel-Kur"},"content":"            boolean isReWrite \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"Daniel-Kur"},"content":"            BufferedWriter bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"Daniel-Kur"},"content":"            if(!list.isEmpty()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"Daniel-Kur"},"content":"                System.out.println(LINE);","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"Daniel-Kur"},"content":"                System.out.println(\"\\tSaved Tasks From Last Session\");","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"Daniel-Kur"},"content":"                for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"Daniel-Kur"},"content":"                    Task task \u003d list.get(i);","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(\"\\t\" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"Daniel-Kur"},"content":"                System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"Daniel-Kur"},"content":"            while (true){","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Daniel-Kur"},"content":"                if (isReWrite) {","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"Daniel-Kur"},"content":"                    bw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"Daniel-Kur"},"content":"                    isReWrite \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"Daniel-Kur"},"content":"                String command \u003d scanner.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Daniel-Kur"},"content":"                String[] splittedCmd \u003d command.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Daniel-Kur"},"content":"                if (command.equals(\"bye\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Daniel-Kur"},"content":"                    bw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(\"\\tBye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(LINE+\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Daniel-Kur"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Daniel-Kur"},"content":"                else if (command.equals(\"list\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Daniel-Kur"},"content":"                    for (int i \u003d 0; i \u003c list.size(); i++){","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Daniel-Kur"},"content":"                        Task task \u003d list.get(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + (i + 1) + \". \" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(LINE+\"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx \u003d Integer.parseInt(splittedCmd[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Daniel-Kur"},"content":"                        Task task \u003d list.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOK, I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Daniel-Kur"},"content":"                        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Daniel-Kur"},"content":"                        list.set(idx, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Daniel-Kur"},"content":"                        File file2 \u003d new File(TEMPPATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":98,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean isTempExist \u003d file.exists();","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"Daniel-Kur"},"content":"                        if (!isTempExist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"Daniel-Kur"},"content":"                            file2.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMPPATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedReader br \u003d new BufferedReader(new FileReader(PATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx2 \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"Daniel-Kur"},"content":"                        String currentLine;","lastModifiedDate":"2023-02-16"},{"lineNumber":106,"author":{"gitId":"Daniel-Kur"},"content":"                        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"Daniel-Kur"},"content":"                            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"Daniel-Kur"},"content":"                                currentLine \u003d currentLine.replaceFirst(\"0\", \"1\");","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"Daniel-Kur"},"content":"                            }","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"Daniel-Kur"},"content":"                            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"Daniel-Kur"},"content":"                            idx2++;","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"Daniel-Kur"},"content":"                        bw2.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"Daniel-Kur"},"content":"                        br.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"Daniel-Kur"},"content":"                        isReWrite \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"Daniel-Kur"},"content":"                        file.delete();","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean successful \u003d file2.renameTo(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"Daniel-Kur"},"content":"                    }catch (Exception e){","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! Please input the index.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":121,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx \u003d Integer.parseInt(splittedCmd[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"Daniel-Kur"},"content":"                        Task task \u003d list.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tNice! I\u0027ve unmarked this task as not done yet:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"Daniel-Kur"},"content":"                        task.unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":131,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":132,"author":{"gitId":"Daniel-Kur"},"content":"                        list.set(idx, task);","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"Daniel-Kur"},"content":"                        File file2 \u003d new File(TEMPPATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean isTempExist \u003d file.exists();","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"Daniel-Kur"},"content":"                        if (!isTempExist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"Daniel-Kur"},"content":"                            file2.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMPPATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedReader br \u003d new BufferedReader(new FileReader(PATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx2 \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":141,"author":{"gitId":"Daniel-Kur"},"content":"                        String currentLine;","lastModifiedDate":"2023-02-16"},{"lineNumber":142,"author":{"gitId":"Daniel-Kur"},"content":"                        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":143,"author":{"gitId":"Daniel-Kur"},"content":"                            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-16"},{"lineNumber":144,"author":{"gitId":"Daniel-Kur"},"content":"                                currentLine \u003d currentLine.replaceFirst(\"1\", \"0\");","lastModifiedDate":"2023-02-16"},{"lineNumber":145,"author":{"gitId":"Daniel-Kur"},"content":"                            }","lastModifiedDate":"2023-02-16"},{"lineNumber":146,"author":{"gitId":"Daniel-Kur"},"content":"                            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":147,"author":{"gitId":"Daniel-Kur"},"content":"                            idx2++;","lastModifiedDate":"2023-02-16"},{"lineNumber":148,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":149,"author":{"gitId":"Daniel-Kur"},"content":"                        bw2.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":150,"author":{"gitId":"Daniel-Kur"},"content":"                        br.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":151,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":152,"author":{"gitId":"Daniel-Kur"},"content":"                        isReWrite \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":153,"author":{"gitId":"Daniel-Kur"},"content":"                        file.delete();","lastModifiedDate":"2023-02-16"},{"lineNumber":154,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean successful \u003d file2.renameTo(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"Daniel-Kur"},"content":"                    } catch (Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":156,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! Please input the index.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":157,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"delete\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":160,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx \u003d Integer.parseInt(splittedCmd[1]) - 1;","lastModifiedDate":"2023-01-26"},{"lineNumber":163,"author":{"gitId":"Daniel-Kur"},"content":"                        Task task \u003d list.get(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":164,"author":{"gitId":"Daniel-Kur"},"content":"                        list.remove(idx);","lastModifiedDate":"2023-01-26"},{"lineNumber":165,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + \"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"Daniel-Kur"},"content":"                        File file2 \u003d new File(TEMPPATH);","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean isTempExist \u003d file.exists();","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"Daniel-Kur"},"content":"                        if (!isTempExist) {","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"Daniel-Kur"},"content":"                            file2.createNewFile();","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedWriter bw2 \u003d new BufferedWriter(new FileWriter(TEMPPATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"Daniel-Kur"},"content":"                        BufferedReader br \u003d new BufferedReader(new FileReader(PATH));","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"Daniel-Kur"},"content":"                        int idx2 \u003d 0;","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"Daniel-Kur"},"content":"                        String currentLine;","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"Daniel-Kur"},"content":"                        while ((currentLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"Daniel-Kur"},"content":"                            if (idx2 \u003d\u003d idx) {","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"Daniel-Kur"},"content":"                                idx2++;","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"Daniel-Kur"},"content":"                                continue;","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"Daniel-Kur"},"content":"                            }","lastModifiedDate":"2023-02-16"},{"lineNumber":183,"author":{"gitId":"Daniel-Kur"},"content":"                            bw2.write(currentLine + System.getProperty(\"line.separator\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"Daniel-Kur"},"content":"                            idx2++;","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"Daniel-Kur"},"content":"                        }","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"Daniel-Kur"},"content":"                        bw2.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"Daniel-Kur"},"content":"                        br.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.close();","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"Daniel-Kur"},"content":"                        isReWrite \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"Daniel-Kur"},"content":"                        file.delete();","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"Daniel-Kur"},"content":"                        boolean successful \u003d file2.renameTo(file);","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"Daniel-Kur"},"content":"                    }catch (Exception e){","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! Please input the index.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":194,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":195,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":196,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"todo\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":197,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":198,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":199,"author":{"gitId":"Daniel-Kur"},"content":"                        ToDo todos \u003d new ToDo(splittedCmd[1]);","lastModifiedDate":"2023-02-16"},{"lineNumber":200,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.write(\"T / 0 / \" + splittedCmd[1] + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":201,"author":{"gitId":"Daniel-Kur"},"content":"                        list.add(todos);","lastModifiedDate":"2023-01-26"},{"lineNumber":202,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-26"},{"lineNumber":203,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + todos.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + \"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.flush();","lastModifiedDate":"2023-02-16"},{"lineNumber":207,"author":{"gitId":"Daniel-Kur"},"content":"                    }catch(Exception e){","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! The description of a todo cannot be empty.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":211,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"deadline\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":213,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":214,"author":{"gitId":"Daniel-Kur"},"content":"                        String[] request \u003d splittedCmd[1].split(\"/\", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":215,"author":{"gitId":"Daniel-Kur"},"content":"                        String task \u003d request[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"Daniel-Kur"},"content":"                        String date \u003d request[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"Daniel-Kur"},"content":"                        Deadline deadline \u003d new Deadline(task, date);","lastModifiedDate":"2023-02-16"},{"lineNumber":218,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.write(\"D / 0 / \" + task + \" / \" + date + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":219,"author":{"gitId":"Daniel-Kur"},"content":"                        list.add(deadline);","lastModifiedDate":"2023-02-16"},{"lineNumber":220,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + deadline.toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":221,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + \"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":223,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.flush();","lastModifiedDate":"2023-02-16"},{"lineNumber":224,"author":{"gitId":"Daniel-Kur"},"content":"                    }catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":225,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! Make sure insert all required input.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":226,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":227,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":228,"author":{"gitId":"Daniel-Kur"},"content":"                else if (splittedCmd[0].equals(\"event\")){","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"Daniel-Kur"},"content":"                    try {","lastModifiedDate":"2023-01-26"},{"lineNumber":230,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"Daniel-Kur"},"content":"                        String[] request \u003d splittedCmd[1].split(\"/\", 3);","lastModifiedDate":"2023-01-26"},{"lineNumber":232,"author":{"gitId":"Daniel-Kur"},"content":"                        String task \u003d request[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":233,"author":{"gitId":"Daniel-Kur"},"content":"                        String from \u003d request[1];","lastModifiedDate":"2023-01-26"},{"lineNumber":234,"author":{"gitId":"Daniel-Kur"},"content":"                        String to \u003d request[2];","lastModifiedDate":"2023-01-26"},{"lineNumber":235,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.write(\"E / 0 / \" + task + \"/ \" + from + \"/ \" + to + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":236,"author":{"gitId":"Daniel-Kur"},"content":"                        Event event \u003d new Event(task, from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":237,"author":{"gitId":"Daniel-Kur"},"content":"                        list.add(event);","lastModifiedDate":"2023-01-26"},{"lineNumber":238,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + event.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":239,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\t\" + \"Now you have \" + list.size() + \" tasks in the list\");","lastModifiedDate":"2023-01-26"},{"lineNumber":240,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":241,"author":{"gitId":"Daniel-Kur"},"content":"                        bw.flush();","lastModifiedDate":"2023-02-16"},{"lineNumber":242,"author":{"gitId":"Daniel-Kur"},"content":"                    }catch(Exception e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":243,"author":{"gitId":"Daniel-Kur"},"content":"                        System.out.println(\"\\tOOPS!!! Make sure insert all required input.\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":244,"author":{"gitId":"Daniel-Kur"},"content":"                    }","lastModifiedDate":"2023-01-26"},{"lineNumber":245,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":246,"author":{"gitId":"Daniel-Kur"},"content":"                else {","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(LINE);","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"Daniel-Kur"},"content":"                    System.out.println(\"\\tOOPS!!! I\u0027m sorry, but I don\u0027t know what that means\\n\" + LINE + \"\\n\");","lastModifiedDate":"2023-01-26"},{"lineNumber":249,"author":{"gitId":"Daniel-Kur"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"Daniel-Kur"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":251,"author":{"gitId":"Daniel-Kur"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-16"},{"lineNumber":252,"author":{"gitId":"Daniel-Kur"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":253,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":254,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Daniel-Kur":253,"-":3}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    public DukeException(String err){","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":5}},{"path":"src/main/java/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class EmptyTaskException extends DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    public EmptyTaskException(String err){","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    private String from;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"    private String to;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"    public Event(String eventName, String from, String to){","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"        super(eventName);","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString(){","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[E]\" + super.toString() + \"(\" + from + to + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":15}},{"path":"src/main/java/InvalidRequestException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class InvalidRequestException extends DukeException{","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    public InvalidRequestException(String err){","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"        super(err);","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    private boolean isMarked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"    private String taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    private static String MARKED \u003d \"[X]\";","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"    private static String UNMARKED \u003d \"[ ]\";","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public Task(String taskName){","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Daniel-Kur"},"content":"    //Marking the task as done","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Daniel-Kur"},"content":"    public void mark(){","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d true;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Daniel-Kur"},"content":"    //Unmark the task","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Daniel-Kur"},"content":"    public void unmark(){","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"        this.isMarked \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString(){","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Daniel-Kur"},"content":"        if (isMarked){","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Daniel-Kur"},"content":"            return MARKED + \" \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Daniel-Kur"},"content":"        }else{","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Daniel-Kur"},"content":"            return UNMARKED + \" \" + taskName;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Daniel-Kur"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":29}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"    public ToDo(String toDo){","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"        super(toDo);","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"    public String toString(){","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Daniel-Kur"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":10}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Daniel-Kur"},"content":"todo read book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Daniel-Kur"},"content":"mark 1","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Daniel-Kur"},"content":"deadline return book /by: June 6th","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"event project meeting /from: Aug 6th 2pm /to: 4pm","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Daniel-Kur"},"content":"todo join sports club","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Daniel-Kur"},"content":"mark 4","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Daniel-Kur"},"content":"todo borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Daniel-Kur"},"content":"bye","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Daniel-Kur":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Daniel-Kur"},"content":"if not exist C:\\Users\\USER\\Downloads\\cs2103T\\bin mkdir C:\\Users\\USER\\Downloads\\cs2103T\\bin","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Daniel-Kur"},"content":"javac -cp C:\\Users\\USER\\Downloads\\cs2103T\\src\\main\\java -Xlint:none -d C:\\Users\\USER\\Downloads\\cs2103T\\bin C:\\Users\\USER\\Downloads\\cs2103T\\src\\main\\java\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Daniel-Kur"},"content":"java -classpath C:\\Users\\USER\\Downloads\\cs2103T\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Daniel-Kur":3,"-":18}}]
