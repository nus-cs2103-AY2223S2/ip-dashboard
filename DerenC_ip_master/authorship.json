[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"    mainClassName \u003d \"wessy.Launcher\"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"    archiveBaseName \u003d \"wessy\"","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DerenC":16,"-":39}},{"path":"data/Wessy.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"T~%~0~%~Chicken","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"D~%~1~%~essay~%~2030","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"E~%~0~%~meeting~%~2pm~%~5pm","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"DerenC":3}},{"path":"src/main/java/wessy/CmdType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.util.Map;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * CmdType is an enumeration that represents all the different types of commands","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * \"Wessy\" takes in.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"public enum CmdType {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    CLEAR(\"clear\");","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    private static final Map\u003cString, CmdType\u003e COMMANDS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    static {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"bye\", CmdType.BYE);","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"list\", CmdType.LIST);","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"todo\", CmdType.TODO);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"deadline\", CmdType.DEADLINE);","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"event\", CmdType.EVENT);","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"mark\", CmdType.MARK);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"unmark\", CmdType.UNMARK);","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"delete\", CmdType.DELETE);","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"find\", CmdType.FIND);","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"        COMMANDS.put(\"clear\", CmdType.CLEAR);","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"    private final String cmd;","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"    /** Constructs an instance of CmdType that corresponds to the different","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     * types of commands, along with the command in its text form.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    CmdType(String str) {","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"        this.cmd \u003d str;","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"     * Converts a command (if valid) from its text form to the corresponding","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     * CmdType.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * @param str Specified command in its text form.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     * @return A CmdType that corresponds to str.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"    public static CmdType getCmdType(String str) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"        return COMMANDS.get(str);","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"     * Converts CmdType to command in its text form.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"     * @return The text form of the command when it is of CmdType type.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"        return cmd;","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"     * Gets the length of the string when the command is in its text form.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"     * @return The length of string when the command is in its text form.","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"    public int getStrLength() {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"        return cmd.length();","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"DerenC":73}},{"path":"src/main/java/wessy/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"public class Launcher {","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":12}},{"path":"src/main/java/wessy/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import wessy.javafxnodes.MainWindow;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":" * A GUI for Wessy using FXML.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    private Wessy wessy \u003d new Wessy();","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(wessy.Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWessy(wessy);","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"            stage.show();","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":34}},{"path":"src/main/java/wessy/Wessy.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import wessy.components.*;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.TimeSpecifierException;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.UnspecifiedTimeException;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.EmptyListException;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.InvalidIntegerException;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.NotPositiveIntegerException;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"import wessy.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.CommandNotFoundException;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.numofinput.MissingInputException;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.numofinput.TooManyInputException;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.NotAnIntegerException;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"public class Wessy {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    private static final String CORRECT_FORMAT_MSG \u003d \"Please enter the date (and time, if any) in the correct format.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    private static final String PERMISSION_MSG \u003d \"You do not have the permission to access the file.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    private static final String IO_MSG \u003d \"There is some issue in the input-output operation.\";","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Wessy.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"     * @param filePath","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"    public Wessy(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"        TaskList loadedTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"            loadedTasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"        } catch (IOException | SecurityException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"            System.err.println(ex.getMessage());","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"            ex.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"            loadedTasks \u003d new TaskList();","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"        tasks \u003d loadedTasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"    public Wessy() {","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        this(\"data/savedTasks.txt\");","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"    public String startsUp() {","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"        return ui.getWelcomeMessage(tasks.printAsStr());","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"     * @param userInput","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"     * @param cmd","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"     * @throws MissingInputException","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"     * @throws NotAnIntegerException","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"     * @throws TooManyInputException","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"    void checkBeforeParse(String userInput, CmdType cmd) throws MissingInputException, NotAnIntegerException,","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"            TooManyInputException {","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"        UserInputChecker.checkMissingInput(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"        UserInputChecker.checkNotNumerical(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"        UserInputChecker.checkTooManyInputs(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"    void saveToStorage() throws IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"        storage.save(tasks.saveAsStr());","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"    public String respond(String userInput) {","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"            int oldSize \u003d tasks.getSize();","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"            CmdType cmd \u003d Parser.getCmd(userInput);","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"            checkForUnknownCmd(cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"            UserInputChecker.checkSpacingAftCmd(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"            assert cmd !\u003d null;","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"            assert cmd \u003d\u003d CmdType.BYE || cmd \u003d\u003d CmdType.LIST || cmd \u003d\u003d CmdType.TODO ||","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"                    cmd \u003d\u003d CmdType.DEADLINE || cmd \u003d\u003d CmdType.EVENT || cmd \u003d\u003d CmdType.MARK ||","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"                    cmd \u003d\u003d CmdType.UNMARK || cmd \u003d\u003d CmdType.DELETE || cmd \u003d\u003d CmdType.CLEAR;","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"            return triage(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"        } catch (DateTimeParseException dtpe) {","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"            return ui.handleException(CORRECT_FORMAT_MSG);","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"        } catch (SecurityException se) {","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"            se.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"            return ui.handleException(PERMISSION_MSG);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"            ioe.printStackTrace();","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"            return ui.handleException(IO_MSG);","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"        } catch (WessyException we) {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"            return ui.getMessage(we.toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"            return ui.getMessage(ex.getMessage());","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":123,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"DerenC"},"content":"    private String triage(String userInput, CmdType cmd) throws MissingInputException, TimeSpecifierException,","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"DerenC"},"content":"            UnspecifiedTimeException, IOException, TooManyInputException, NotAnIntegerException,","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"DerenC"},"content":"            NotPositiveIntegerException, InvalidIntegerException, EmptyListException {","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"DerenC"},"content":"        switch (cmd) {","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"DerenC"},"content":"            // Commands that do not require any argument","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"DerenC"},"content":"            case BYE:","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"DerenC"},"content":"                return ui.getByeMessage();","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"DerenC"},"content":"            case LIST:","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"DerenC"},"content":"                return ui.getListOrFindMessage(tasks.printAsStr(), true);","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"DerenC"},"content":"            // Task-creating commands","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"DerenC"},"content":"            case TODO:","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"DerenC"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"DerenC"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"DerenC"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"DerenC"},"content":"            case EVENT:","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"DerenC"},"content":"                UserInputChecker.checkMissingInput(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"DerenC"},"content":"                UserInputChecker.checkMissingKeyword(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"DerenC"},"content":"                if (cmd \u003d\u003d CmdType.DEADLINE) {","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"DerenC"},"content":"                    UserInputChecker.checkDeadlineMissingInput(userInput);","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"DerenC"},"content":"                } else if (cmd \u003d\u003d CmdType.EVENT) {","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"DerenC"},"content":"                    UserInputChecker.checkEventMissingInput(userInput);","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"DerenC"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"DerenC"},"content":"                String[] taskComponents \u003d Parser.getTaskComponents(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"DerenC"},"content":"                Task newTask \u003d tasks.add(taskComponents);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"DerenC"},"content":"                saveToStorage();","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"DerenC"},"content":"                return ui.getAddedMessage(newTask, tasks.getSize());","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"DerenC"},"content":"            // Task\u0027s status manipulating commands","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"DerenC"},"content":"            case MARK:","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"DerenC"},"content":"                // Fallthrough","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"DerenC"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"DerenC"},"content":"                checkBeforeParse(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"DerenC"},"content":"                boolean isMark \u003d cmd \u003d\u003d CmdType.MARK;","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"DerenC"},"content":"                Task updatedTask \u003d tasks.markOrUnmark(Parser.parseInt(userInput, cmd), isMark);","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"DerenC"},"content":"                saveToStorage();","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"DerenC"},"content":"                return ui.getMarkUnmarkMessage(updatedTask, isMark);","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"DerenC"},"content":"            case DELETE:","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"DerenC"},"content":"                checkBeforeParse(userInput, cmd);","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"DerenC"},"content":"                Task deletedTask \u003d tasks.delete(Parser.parseInt(userInput, cmd));","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"DerenC"},"content":"                saveToStorage();","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"DerenC"},"content":"                return ui.getDeleteMessage(deletedTask, tasks.getSize());","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"DerenC"},"content":"            case FIND:","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"DerenC"},"content":"                String target \u003d userInput.substring(cmd.getStrLength() + 1);","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"DerenC"},"content":"                return ui.getListOrFindMessage(tasks.find(target), false);","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"DerenC"},"content":"            // Not covered in deliverables. Might be useful for debugging or future extended features.","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"DerenC"},"content":"            case CLEAR:","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"DerenC"},"content":"                tasks.clear();","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"DerenC"},"content":"                saveToStorage();","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"DerenC"},"content":"                return ui.getClearMessage();","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"DerenC"},"content":"        return handleOtherCases();","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"DerenC"},"content":"    private String handleOtherCases() {","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"DerenC"},"content":"        return ui.getMessage(new CommandNotFoundException().toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"DerenC"},"content":"    private void checkForUnknownCmd(CmdType cmd) throws CommandNotFoundException {","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"DerenC"},"content":"        if (cmd \u003d\u003d null) {","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"DerenC"},"content":"            throw new CommandNotFoundException();","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"DerenC":197,"-":1}},{"path":"src/main/java/wessy/components/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.components;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import wessy.CmdType;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.NotPositiveIntegerException;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":" * Parser is a utility class that mainly processes the user input when \"Wessy\"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":" * first receives it. While it checks for some formats of the String, it","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":" * delegates checking of the other formatting issues to UserInputChecker class.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"public class Parser {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    private static final int START \u003d 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    private static final char SPACE \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    private static final String DUMMY_TIME \u003d \"T12:34:56\";","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    private static final String TIME_ZERO_PADDING \u003d \":00\";","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    private static final String DATE_SEPARATOR \u003d \"-\";","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    private static final String UNDESIRED_DATE_SEPARATOR \u003d \"/\";","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"    private static final char TIME_SEPARATOR \u003d \u0027:\u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    private static final char UNDESIRED_TIME_SEPARATOR \u003d \u0027.\u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    private static final String DATETIME_SEPARATOR \u003d \"T\";","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"     * Converts the first word in the line of user input, to the corresponding","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     * CmdType, if it is a valid command type.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line which the user inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     * @return The corresponding CmdType, if the first word is a valid command.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"    public static CmdType getCmd(String userInput) {","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"        String spaceAsStr \u003d Character.toString(SPACE);","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"        int idx \u003d userInput.contains(spaceAsStr) ? userInput.indexOf(SPACE) : userInput.length();","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"        return CmdType.getCmdType(userInput.substring(START, idx));","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"     * Parses the line of user input and chunks it into the different components","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"     * required to initialise a ToDo, Deadline or Event object. The components","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"     * are possibly the task description, and the timings specified for the","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"     * deadline task or the event.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line which the user inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command specified, in the form of CmdType. It only accepts","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     *           CmdType.TODO, CmdType.DEADLINE and CmdType.EVENT.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     * @return An array of Strings consisting of the components required to","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"     * initialise a task.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    public static String[] getTaskComponents(String userInput, CmdType cmd) {","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"        assert cmd \u003d\u003d CmdType.TODO || cmd \u003d\u003d CmdType.DEADLINE || cmd \u003d\u003d CmdType.EVENT;","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        String byStr \u003d \"/by\";","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"        String fromStr \u003d \"/from\";","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"        String toStr \u003d \"/to\";","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"        int firstIdx;","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"        int secondIdx;","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"        String description \u003d userInput.substring(cmd.getStrLength() + 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"        switch (cmd) {","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        case TODO:","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"            return new String[]{description};","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"            firstIdx \u003d description.indexOf(byStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"            return new String[]{removeSpacePadding(description.substring(START, firstIdx)),","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"                    removeSpacePadding(description.substring(firstIdx + byStr.length()))};","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"        case EVENT:","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"            firstIdx \u003d description.indexOf(fromStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"            secondIdx \u003d description.indexOf(toStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"            return new String[]{removeSpacePadding(description.substring(START, firstIdx)),","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"                    removeSpacePadding(description.substring(firstIdx + fromStr.length(), secondIdx)),","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"                    removeSpacePadding(description.substring(secondIdx + toStr.length()))};","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"        return new String[0];","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"     * Parses the input str and converts it into a LocalDateTime object.","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"     * @param str The specified date and time as a String.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"     * @return A LocalDateTime object that is represented by str, in its String","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"     * form.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"     * @throws DateTimeParseException If the format of str is wrong and thus","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"     * cannot be parsed into a LocalDateTime object.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"    public static LocalDateTime parseDateTime(String str) throws DateTimeParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"        str \u003d removeSpacePadding(str);","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"        if (count(str, TIME_SEPARATOR) \u003d\u003d 2) {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"            return LocalDateTime.parse(str);","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"        if (str.length() \u003c\u003d 10) {","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"            return LocalDateTime.parse(standardiseDateFormat(str) + DUMMY_TIME);","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"        int idx \u003d 10;","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"        if (str.charAt(9) \u003d\u003d SPACE) {","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"            idx \u003d 9;","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"        } else if (str.charAt(8) \u003d\u003d SPACE) {","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"            idx \u003d 8;","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"        if (str.charAt(idx + 3) \u003d\u003d TIME_SEPARATOR) {","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"            return LocalDateTime.parse(standardiseDateFormat(str.substring(0, idx)) + DATETIME_SEPARATOR","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"                    + str.substring(idx + 1) + TIME_ZERO_PADDING);","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"        if (str.charAt(idx + 3) \u003d\u003d UNDESIRED_TIME_SEPARATOR) {","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"            return LocalDateTime.parse(standardiseDateFormat(str.substring(0, idx)) + DATETIME_SEPARATOR","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"                    + str.substring(idx + 1, idx + 3) + TIME_SEPARATOR + str.substring(idx + 4)","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"                    + TIME_ZERO_PADDING);","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"        return LocalDateTime.parse(standardiseDateFormat(str.substring(0, idx)) + DATETIME_SEPARATOR","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"                + str.substring(idx + 1, idx + 3) + TIME_SEPARATOR + str.substring(idx + 3)","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"                + TIME_ZERO_PADDING);","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"DerenC"},"content":"     * Counts the number of occurrence \"target\" appears in str.","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"DerenC"},"content":"     * @param str The String we scan through while counting the number of","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"DerenC"},"content":"     *            occurrence.","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"DerenC"},"content":"     * @param target The character we look out for when scanning through str.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"DerenC"},"content":"     * @return The number of occurrence \"target\" appears in str.","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"DerenC"},"content":"    private static int count(String str, char target) {","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"DerenC"},"content":"        int targetAsInt \u003d (int) target;","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"DerenC"},"content":"        long count \u003d str.chars().filter(c -\u003e c \u003d\u003d targetAsInt).count();","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"DerenC"},"content":"        return (int) count;","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"DerenC"},"content":"     * Standardises format of date and time in str, by say making sure that the","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"DerenC"},"content":"     * separator in the date is \"-\" instead of \"/\", making sure the date has 8","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"DerenC"},"content":"     * digits. This is to prepare for the execution of parseDateTime(...).","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"DerenC"},"content":"     * @param str The specified date and time in String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"DerenC"},"content":"     * @return A standardised String format of the specified date and time.","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"DerenC"},"content":"     * @throws DateTimeParseException If str does not represent any date and time.","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"DerenC"},"content":"    private static String standardiseDateFormat(String str) throws DateTimeParseException {","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"DerenC"},"content":"        try {","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"DerenC"},"content":"            String[] components \u003d str.split(DATE_SEPARATOR, 3);","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"DerenC"},"content":"            if (str.contains(UNDESIRED_DATE_SEPARATOR)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"DerenC"},"content":"                components \u003d str.split(UNDESIRED_DATE_SEPARATOR, 3);","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"DerenC"},"content":"            components \u003d Arrays.stream(components)","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"DerenC"},"content":"                    .map( component -\u003e component.length() \u003d\u003d 1 ? \"0\" + component : component)","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"DerenC"},"content":"                    .toArray(String[]::new);","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"DerenC"},"content":"            if (components[0].length() \u003d\u003d 4) {","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"DerenC"},"content":"                return components[0] + DATE_SEPARATOR + components[1] + DATE_SEPARATOR + components[2];","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"DerenC"},"content":"            return components[2] + DATE_SEPARATOR + components[1] + DATE_SEPARATOR + components[0];","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"DerenC"},"content":"        } catch (ArrayIndexOutOfBoundsException ex) {","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"DerenC"},"content":"            throw new DateTimeParseException(\"\", str, 0);","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"DerenC"},"content":"     * Removes the command word from the user input and then the space paddings","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"DerenC"},"content":"     * on the 2 sides. Afterwards, converts the processed String into a integer","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"DerenC"},"content":"     * using Integer.parseInt(...).","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"DerenC"},"content":"     * @param userInput The String to be parsed to an integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command.","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"DerenC"},"content":"     * @return The integer to which the String is converted.","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"DerenC"},"content":"     * @throws NotPositiveIntegerException If the output integer is not positive.","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"DerenC"},"content":"    public static int parseInt(String userInput, CmdType cmd) throws NotPositiveIntegerException {","lastModifiedDate":"2023-02-09"},{"lineNumber":181,"author":{"gitId":"DerenC"},"content":"        int num \u003d Integer.parseInt(removeSpacePadding(userInput.substring(cmd.getStrLength())));","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"DerenC"},"content":"        if (num \u003c\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"DerenC"},"content":"            throw new NotPositiveIntegerException();","lastModifiedDate":"2023-02-09"},{"lineNumber":184,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":185,"author":{"gitId":"DerenC"},"content":"        assert num \u003e 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"DerenC"},"content":"        return num;","lastModifiedDate":"2023-02-09"},{"lineNumber":187,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"DerenC"},"content":"     * A helper function that removes the space paddings on the two ends of str.","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"DerenC"},"content":"     * @param str The String to be processed.","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"DerenC"},"content":"     * @return The shorter String after removing the space paddings on the two ends.","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"DerenC"},"content":"    public static String removeSpacePadding(String str) {","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"DerenC"},"content":"        int start \u003d 0;","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"DerenC"},"content":"        while (str.charAt(start) \u003d\u003d SPACE) {","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"DerenC"},"content":"            start++;","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"DerenC"},"content":"        int end \u003d str.length() - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"DerenC"},"content":"        while (str.charAt(end) \u003d\u003d SPACE) {","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"DerenC"},"content":"            end--;","lastModifiedDate":"2023-02-09"},{"lineNumber":203,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":204,"author":{"gitId":"DerenC"},"content":"        assert str.charAt(start) !\u003d \u0027 \u0027 \u0026\u0026 str.charAt(end) !\u003d \u0027 \u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"DerenC"},"content":"        return str.substring(start, end + 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":206,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":207,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":207}},{"path":"src/main/java/wessy/components/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.components;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.util.List;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import java.io.File;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"import wessy.components.Parser;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"import wessy.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"import wessy.task.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"import wessy.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"import wessy.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"public class Storage {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    private final String folderPath;","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    private final String fileName;","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * @param filePath","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"        int lastIdx \u003d filePath.lastIndexOf(\u0027/\u0027);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"        if (lastIdx \u003d\u003d -1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"            this.folderPath \u003d \"\";","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"            this.fileName \u003d filePath;","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"            this.folderPath \u003d filePath.substring(0, lastIdx);","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"            this.fileName \u003d filePath.substring(lastIdx + 1); // Need to add a slash","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"    public Storage() {","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"        this(\"data/savedTasks.txt\");","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"    String getFullPath() {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"        return folderPath + \"/\" + fileName;","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"     * @throws SecurityException","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"    public List\u003cTask\u003e load() throws SecurityException, IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"        File savedFile \u003d new File(folderPath + \"/\" + fileName);","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"        if (savedFile.exists()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"            Scanner sc \u003d new Scanner(savedFile);","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"                String[] taskComponents \u003d sc.nextLine().split(\"~%~\");","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"                int numOfComponents \u003d taskComponents.length;","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"                boolean isDone \u003d taskComponents[1].charAt(0) \u003d\u003d \u00271\u0027;","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"                switch (taskComponents[0].charAt(0)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"                case \u0027T\u0027:","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"                    assert numOfComponents \u003d\u003d 3;","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"                    tasks.add(new ToDo(taskComponents[2], isDone));","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"                case \u0027D\u0027:","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"                    assert numOfComponents \u003d\u003d 4;","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"                    tasks.add(new Deadline(taskComponents[2], Parser.parseDateTime(taskComponents[3]), isDone));","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"                case \u0027E\u0027:","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"                    assert numOfComponents \u003d\u003d 5;","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"                    tasks.add(new Event(taskComponents[2], Parser.parseDateTime(taskComponents[3]),","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"                            Parser.parseDateTime(taskComponents[4]), isDone));","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"                    break;","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"                }","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"        return tasks;","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"     * @param tasksAsStr","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"     * @throws IOException","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"     * @throws SecurityException","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"    public void save(String tasksAsStr) throws IOException, SecurityException {","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"        // CREATE FOLDERS","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"        Path path \u003d Paths.get(folderPath);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"        Files.createDirectories(path);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"        // CREATE FILE","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"        File file \u003d new File(getFullPath());","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"        file.createNewFile();","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"        // WRITE FILE","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"        FileWriter fw \u003d new FileWriter(getFullPath());","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"        fw.write(tasksAsStr);","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"        fw.close();","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":122}},{"path":"src/main/java/wessy/components/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.components;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import java.util.function.BiFunction;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import java.util.function.BinaryOperator;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"import wessy.CmdType;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"import wessy.components.Parser;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"import wessy.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"import wessy.task.ToDo;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"import wessy.task.Deadline;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"import wessy.task.Event;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.EmptyListException;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.InvalidIntegerException;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"public class TaskList {","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    private static final String SEPARATOR \u003d \"~%~\";","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    private final List\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of TaskList.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"     * @param taskList","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * Add a new task (either todo, deadline or event) into the current list of","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     * @param strings","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"     * @throws DateTimeParseException","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"    public Task add(String[] strings) throws DateTimeParseException {","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        int oldSize \u003d tasks.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"        int len \u003d strings.length;","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"        if (len \u003d\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"            tasks.add(new ToDo(Parser.removeSpacePadding(strings[0])));","lastModifiedDate":"2023-02-09"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"        } else if (len \u003d\u003d 2) {","lastModifiedDate":"2023-02-09"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"            tasks.add(new Deadline(Parser.removeSpacePadding(strings[0]), Parser.parseDateTime(strings[1])));","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"        } else if (len \u003d\u003d 3) {","lastModifiedDate":"2023-02-09"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"            tasks.add(new Event(Parser.removeSpacePadding(strings[0]), Parser.parseDateTime(strings[1]),","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"                    Parser.parseDateTime(strings[2])));","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        assert tasks.size() \u003d\u003d oldSize + 1;","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"        return tasks.get(getSize() - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"     * Marks or unmarks a task on the list, based on the specified task number.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"     * @param taskNum","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"     * @param isMark","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"     * @throws EmptyListException","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"     * @throws InvalidIntegerException","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"    // For \"mark\" \u0026 \"unmark\"","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"    public Task markOrUnmark(int taskNum, boolean isMark) throws EmptyListException, InvalidIntegerException {","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"        CmdType cmd \u003d isMark ? CmdType.MARK : CmdType.UNMARK;","lastModifiedDate":"2023-02-09"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"        checkEmptyList(cmd);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"        assert tasks.size() \u003e 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"        assert !tasks.isEmpty();","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"        checkOutOfUppBound(taskNum, cmd);","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"        assert taskNum \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"        int idx \u003d taskNum - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"        if (isMark) {","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"            tasks.get(idx).mark();","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"            tasks.get(idx).unmark();","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"        assert tasks.get(idx).checkIsDone() \u003d\u003d isMark;","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"        return tasks.get(idx);","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"     * Delete a task on the list, based on the specified task number.","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"     * @param taskNum","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"     * @throws EmptyListException","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"     * @throws InvalidIntegerException","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"    public Task delete(int taskNum) throws EmptyListException, InvalidIntegerException {","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"        checkEmptyList(CmdType.DELETE);","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"        assert tasks.size() \u003e 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"        assert !tasks.isEmpty();","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"        checkOutOfUppBound(taskNum, CmdType.DELETE);","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"        assert taskNum \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"        return tasks.remove(taskNum - 1);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"     * Delete all the tasks on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"    public void clear() {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"        tasks.clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"        assert tasks.size() \u003d\u003d 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"        assert tasks.isEmpty();","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"DerenC"},"content":"    public String[] find(String target) {","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"DerenC"},"content":"        String finalTarget \u003d Parser.removeSpacePadding(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"DerenC"},"content":"        return printAsStr(tasks.stream().filter(task -\u003e task.toString().contains(finalTarget)));","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"DerenC"},"content":"     * Checks is the current task list empty.","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"DerenC"},"content":"     * @param cmd","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"DerenC"},"content":"     * @throws EmptyListException","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"DerenC"},"content":"    public void checkEmptyList(CmdType cmd) throws EmptyListException {","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"DerenC"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"DerenC"},"content":"            throw new EmptyListException(cmd.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"DerenC"},"content":"        assert tasks.size() \u003e 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"DerenC"},"content":"        assert !tasks.isEmpty();","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"DerenC"},"content":"     * Checks is the specified task number more than the total number of tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"DerenC"},"content":"     * on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"DerenC"},"content":"     * @param taskNum","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"DerenC"},"content":"     * @param cmd","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"DerenC"},"content":"     * @throws InvalidIntegerException","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"DerenC"},"content":"    public void checkOutOfUppBound(int taskNum, CmdType cmd) throws InvalidIntegerException {","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"DerenC"},"content":"        int n \u003d getSize();","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"DerenC"},"content":"        assert n \u003d\u003d tasks.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"DerenC"},"content":"        if (taskNum - 1 \u003e\u003d n) {","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"DerenC"},"content":"            throw new InvalidIntegerException(cmd.toString(), taskNum, n);","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"DerenC"},"content":"        assert taskNum \u003c\u003d tasks.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"DerenC"},"content":"     * Gets the total number of tasks on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"DerenC"},"content":"     * @return Total number of tasks on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"DerenC"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"DerenC"},"content":"        return tasks.size();","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"DerenC"},"content":"     * Saves all the tasks on the list to Wessy\u0027s storage, by passing a suitable","lastModifiedDate":"2023-02-12"},{"lineNumber":172,"author":{"gitId":"DerenC"},"content":"     * String format of the task list.","lastModifiedDate":"2023-02-12"},{"lineNumber":173,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":174,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":176,"author":{"gitId":"DerenC"},"content":"    // For interaction with Storage","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"DerenC"},"content":"    public String saveAsStr() {","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"DerenC"},"content":"        BiFunction\u003cStringBuilder, Task, StringBuilder\u003e appender \u003d (curr, task) -\u003e curr.append(task.saveAsStr(SEPARATOR));","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"DerenC"},"content":"        BinaryOperator\u003cStringBuilder\u003e combiner \u003d (sb1, sb2) -\u003e sb1.append(sb2.toString());","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"DerenC"},"content":"        return tasks.stream().reduce(new StringBuilder(), appender, combiner).toString();","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":182,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":183,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"DerenC"},"content":"     * Passes all the tasks on the list to Wessy\u0027s ui to print them out in","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"DerenC"},"content":"     * \"list\" message.","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"DerenC"},"content":"    public String[] printAsStr() {","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"DerenC"},"content":"        return printAsStr(tasks);","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":192,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"DerenC"},"content":"    // HELPER FUNCTION","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"DerenC"},"content":"    private static String[] printAsStr(List\u003cTask\u003e foundResults) {","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"DerenC"},"content":"        return printToStream(foundResults).toArray(String[]::new);","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"DerenC"},"content":"    private static String[] printAsStr(Stream\u003cTask\u003e foundResults) {","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"DerenC"},"content":"        return printAsStr(foundResults.collect(Collectors.toList()));","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"DerenC"},"content":"    private static Stream\u003cString\u003e printToStream(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"DerenC"},"content":"        int n \u003d taskList.size();","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"DerenC"},"content":"        return IntStream.range(0, n)","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"DerenC"},"content":"                .mapToObj(i -\u003e \"\" + (i + 1) + \".\" + taskList.get(i));","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":207,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":207}},{"path":"src/main/java/wessy/components/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.components;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import wessy.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" *","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"public class Ui {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    private final static String OPENING \u003d \"Wessy:\\n\";","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Ui.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    public Ui() {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"     * Handles inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"     * @return A boolean value","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    public boolean hasNextLine() {","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"        return sc.hasNextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * Handles inputs.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"    public String readNextLine() {","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"bye\" command.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"    public String getByeMessage() {","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"        return getMessage(\"Bye. Hope to see you again soon!\\n\");","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"list\" command.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     * @param tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"     * @param isList","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    public String getListOrFindMessage(String[] tasks, boolean isList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"        return getMessage(getListOrFindContent(tasks, isList));","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"     * A helper function used in pritnListMessage(...).","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"     * @param tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"     * @param isList","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"    private String getListOrFindContent(String[] tasks, boolean isList) {","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"        String extraWord \u003d isList ? \"\" : \"matching \";","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        if (tasks.length \u003d\u003d 0) {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"            if (isList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"                return \"WOOHOO! You do not have any task on the list.\\n\";","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"            } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"                return \"Sorry. We did not find any task that matches the text you entered.\\n\";","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"            return \"Here are the \" + extraWord + \"tasks in your list:\\n\" + getMultiln(tasks);","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"todo\", \"deadline\" and \"event\" commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"     * @param task","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"     * @param size","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"    public String getAddedMessage(Task task, int size) {","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"        String numOfTasks \u003d \" \" + size + \" task\";","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"        if (size \u003e 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"            numOfTasks +\u003d \"s\";","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"        return getMessage(\"Got it. I\u0027ve added this task:\", \"  \" + task, \"Now you have\" + numOfTasks","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"                + \" in the list.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"mark\" and \"unmark\" commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"     * @param chosenTask","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"     * @param isMark","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"    public String getMarkUnmarkMessage(Task chosenTask, boolean isMark) {","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"        String start \u003d isMark ? \"Nice! I\u0027ve\" : \"OK, I\u0027ve\";","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"        if (isMark \u003d\u003d chosenTask.checkIsDone()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"            start \u003d \"You have already\";","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"        String end \u003d isMark ? \"done:\" : \"not done yet:\";","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"        return getMessage(start + \" marked this task as \" + end, \"  \" + chosenTask);","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"delete\" command.","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"     * @param chosenTask","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"     * @param totalNumOfTasks","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"    public String getDeleteMessage(Task chosenTask, int totalNumOfTasks) {","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"        return getMessage(\"Noted. I\u0027ve removed this task:\", \"  \" + chosenTask, String.format(","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"                \"Now you have %d task%s in the list.\", totalNumOfTasks, totalNumOfTasks \u003d\u003d 1 ? \"\" : \"s\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"     * Prints output message for \"clear\" command.","lastModifiedDate":"2023-02-12"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"    public String getClearMessage() {","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"        return getMessage(\"You have cleared your task list. The list is empty now.\");","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"DerenC"},"content":"     * Prints output message when starting up Wessy.","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"DerenC"},"content":"     * @param tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"DerenC"},"content":"    public String getWelcomeMessage(String[] tasks) {","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"DerenC"},"content":"//        printOpening();","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"DerenC"},"content":"        return \"Hi, I am Wessy, your personal assistant chatbot.\\n\\n\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"DerenC"},"content":"        getListOrFindContent(tasks, true);","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"DerenC"},"content":"//        printClosing();","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"DerenC"},"content":"//    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"DerenC"},"content":"//     * A helper function","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"DerenC"},"content":"//     */","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"DerenC"},"content":"//    private static void printOpening() {","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"DerenC"},"content":"//        System.out.println(\"    -Wessy------------------------------\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"DerenC"},"content":"//                \"---------------------------------- \");","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"DerenC"},"content":"//    }","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"DerenC"},"content":"//","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"DerenC"},"content":"//    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"DerenC"},"content":"//     * A helper function","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"DerenC"},"content":"//     */","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"DerenC"},"content":"//    private static void printClosing() {","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"DerenC"},"content":"//        System.out.println(\"    -----------------------------------\" +","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"DerenC"},"content":"//                \"----------------------------------- \");","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"DerenC"},"content":"//    }","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"DerenC"},"content":"     * @param str","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"DerenC"},"content":"    private void println(String str) {","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"DerenC"},"content":"        int length \u003d str.length();","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"DerenC"},"content":"        if (length \u003c\u003d 64) {","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"DerenC"},"content":"            String message \u003d \"   |   \" + str;","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"DerenC"},"content":"            message +\u003d \" \".repeat(67 - length) + \"|\";","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"DerenC"},"content":"            System.out.println(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"DerenC"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"DerenC"},"content":"            System.out.println(\"   |   \" + str.substring(0, 64) + \"   |\");","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":167,"author":{"gitId":"DerenC"},"content":"            int remainingLength \u003d length - 64;","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"DerenC"},"content":"            int leftover \u003d remainingLength % 62;","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"DerenC"},"content":"            int n \u003d (int) Math.floor(remainingLength/62);","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"DerenC"},"content":"            for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"DerenC"},"content":"                System.out.println(\"   |     \" + str.substring(62 * i, 62 * (i + 1)) + \"   |\");","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":175,"author":{"gitId":"DerenC"},"content":"            String message \u003d \"   |     \" + str.substring(length - leftover);","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"DerenC"},"content":"            message +\u003d \" \".repeat(65 - leftover) + \"|\";","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"DerenC"},"content":"            System.out.println(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":180,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":181,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"DerenC"},"content":"     * @param str","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"DerenC"},"content":"    private void printErr(String str) {","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"DerenC"},"content":"        int length \u003d str.length();","lastModifiedDate":"2023-02-09"},{"lineNumber":188,"author":{"gitId":"DerenC"},"content":"        if (length \u003c\u003d 64) {","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"DerenC"},"content":"            String message \u003d \"   |   \" + str;","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"DerenC"},"content":"            message +\u003d \" \".repeat(68 - length) + \"|\";","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"DerenC"},"content":"            System.err.println(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":192,"author":{"gitId":"DerenC"},"content":"        } else {","lastModifiedDate":"2023-02-09"},{"lineNumber":193,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"DerenC"},"content":"            System.err.println(\"   |   \" + str.substring(0, 64) + \"    |\");","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":196,"author":{"gitId":"DerenC"},"content":"            int remainingLength \u003d length - 64;","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"DerenC"},"content":"            int leftover \u003d remainingLength % 62;","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"DerenC"},"content":"            int n \u003d (int) Math.floor(remainingLength/62);","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":200,"author":{"gitId":"DerenC"},"content":"            for (int i \u003d 0; i \u003c n; i++) {","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"DerenC"},"content":"                System.err.println(\"   |     \" + str.substring(62 * i, 62 * (i + 1)) + \"    |\");","lastModifiedDate":"2023-02-09"},{"lineNumber":202,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":203,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"DerenC"},"content":"            String message \u003d \"   |     \" + str.substring(length - leftover);","lastModifiedDate":"2023-02-09"},{"lineNumber":205,"author":{"gitId":"DerenC"},"content":"            message +\u003d \" \".repeat(65 - leftover) + \"|\";","lastModifiedDate":"2023-02-09"},{"lineNumber":206,"author":{"gitId":"DerenC"},"content":"            System.err.println(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":207,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":208,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":209,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":210,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"DerenC"},"content":"     * @param linesOfString","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"DerenC"},"content":"    private String getMultiln(String... linesOfString) {","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"DerenC"},"content":"        return Arrays.stream(linesOfString).reduce(\"\", (curr, next) -\u003e curr + next + \"\\n\");","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":218,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":219,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"DerenC"},"content":"     * A helper function","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"DerenC"},"content":"     * @param linesOfString","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"DerenC"},"content":"    public String getMessage(String... linesOfString) {","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"DerenC"},"content":"        return OPENING + getMultiln(linesOfString);","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":227,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":228,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"DerenC"},"content":"     * @param message","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"DerenC"},"content":"     * @return","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"DerenC"},"content":"    public String handleException(String message) {","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"DerenC"},"content":"//        System.err.println(\"    -Wessy---------------------------------------------------------------- \");","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"DerenC"},"content":"        return getMessage(\"ERROR! \" + message);","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"DerenC"},"content":"//        System.err.println(\"    ---------------------------------------------------------------------- \");","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":237,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":237}},{"path":"src/main/java/wessy/components/UserInputChecker.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.components;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.util.stream.IntStream;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"import wessy.CmdType;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.MissingSpacingException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.TimeSpecifierException;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.UnspecifiedTimeException;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.numofinput.MissingInputException;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.numofinput.TooManyInputException;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.integer.NotAnIntegerException;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":" * UserInputChecker is a utility class that checks for all the formatting issues","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":" * that could be possibly found in user input (except for the date time related","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":" * one which will be checked by the Parser class).","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"public class UserInputChecker {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    private static final int START \u003d 0;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    private static final char SPACE \u003d \u0027 \u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    private static final String SPACE_AS_STR \u003d Character.toString(SPACE);","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"    private static final char DATE_SEPARATOR \u003d \u0027-\u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    private static final String BY_SPECIFIER \u003d \"/by\";","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    private static final String FROM_SPECIFIER \u003d \"/from\";","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    private static final String TO_SPECIFIER \u003d \"/to\";","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     * Throws MissingSpaceException when there is a missing space after the","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     * first word, which is usually the command word, in the user input line.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * This method is only used for the \"mark\", \"unmark\", \"delete\", \"todo\",","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     * \"deadline\" and \"event\" commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command. Only accepts CmdType.TODO,","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"     *            CmdType.DEADLINE, CmdType.EVENT, CmdType.MARK, CmdType.UNMARK,","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     *            and CmdType.DELETE.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"     * @throws MissingSpacingException If the space is missing after the command word.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"    public static void checkSpacingAftCmd(String userInput, CmdType cmd) throws MissingSpacingException {","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"        if (isCmdThatNeedsInput(cmd)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"            assert cmd \u003d\u003d CmdType.TODO || cmd \u003d\u003d CmdType.DEADLINE || cmd \u003d\u003d CmdType.EVENT ||","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"                    cmd \u003d\u003d CmdType.MARK || cmd \u003d\u003d CmdType.UNMARK || cmd \u003d\u003d CmdType.DELETE;","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"                    ","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"            boolean noSpacing \u003d userInput.equals(cmd.toString()) || userInput.charAt(cmd.getStrLength()) !\u003d SPACE;","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"            if (noSpacing) {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"                throw new MissingSpacingException(cmd.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"     * Throws MissingInputException if the commands that require some inputs","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"     * (namely \"todo\", \"deadline\", \"event\", \"mark\", \"unmark\" and \"delete\") have","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"     * missing input.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command. Only accepts CmdType.TODO,","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"     *            CmdType.DEADLINE, CmdType.EVENT, CmdType.MARK, CmdType.UNMARK,","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"     *            and CmdType.DELETE.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"     * @throws MissingInputException If the input after the command word is missing.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"    public static void checkMissingInput(String userInput, CmdType cmd) throws MissingInputException {","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        String remainingStr \u003d userInput.substring(cmd.getStrLength());","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"        if (isCmdThatNeedsInput(cmd) \u0026\u0026 isAllSpaces(remainingStr)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"        ","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"            assert cmd \u003d\u003d CmdType.TODO || cmd \u003d\u003d CmdType.DEADLINE || cmd \u003d\u003d CmdType.EVENT ||","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"                    cmd \u003d\u003d CmdType.MARK || cmd \u003d\u003d CmdType.UNMARK || cmd \u003d\u003d CmdType.DELETE;","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"            throw new MissingInputException(cmd.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"     * Throws TimeSpecifierException if the substring \" /by\" is missing for","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"     * deadline command, or if the substring \" /from\" or \" /to\" is missing for event command.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command. Only accepts CmdType.DEADLINE and","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"     *            CmdType.EVENT.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"     * @throws TimeSpecifierException If the required time specifier keyword is missing.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"    public static void checkMissingKeyword(String userInput, CmdType cmd) throws TimeSpecifierException {","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"        String timeSpecifier \u003d null;","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"        if (cmd \u003d\u003d CmdType.DEADLINE \u0026\u0026 !userInput.contains(SPACE_AS_STR + BY_SPECIFIER)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"            timeSpecifier \u003d BY_SPECIFIER;","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"        } else if (cmd \u003d\u003d CmdType.EVENT) {","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"            if (!userInput.contains(SPACE_AS_STR + FROM_SPECIFIER)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"                timeSpecifier \u003d FROM_SPECIFIER;","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"            } else if (!userInput.contains(SPACE_AS_STR + TO_SPECIFIER)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"                timeSpecifier \u003d TO_SPECIFIER;","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"            }","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"        if (timeSpecifier !\u003d null) {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"            throw new TimeSpecifierException(timeSpecifier);","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":99,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":100,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"DerenC"},"content":"     * Throws UnspecifiedTimeException if the \"/by\" time is not specified for","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"DerenC"},"content":"     * the deadline command.","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"DerenC"},"content":"     * @throws UnspecifiedTimeException if the \"/by\" time input is missing for","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"DerenC"},"content":"     * the deadline command.","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"DerenC"},"content":"    public static void checkDeadlineMissingInput(String userInput) throws UnspecifiedTimeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"DerenC"},"content":"        int pos \u003d userInput.indexOf(BY_SPECIFIER);","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"DerenC"},"content":"        UnspecifiedTimeException ex \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"DerenC"},"content":"        if (isAllSpaces(userInput.substring(CmdType.DEADLINE.getStrLength(), pos))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"DerenC"},"content":"            ex \u003d new UnspecifiedTimeException(BY_SPECIFIER, true);","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"DerenC"},"content":"        } else if (isAllSpaces(userInput.substring(pos + BY_SPECIFIER.length()))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"DerenC"},"content":"            ex \u003d new UnspecifiedTimeException(BY_SPECIFIER, false);","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"DerenC"},"content":"        if (ex !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"DerenC"},"content":"            throw ex;","lastModifiedDate":"2023-02-09"},{"lineNumber":121,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":123,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":124,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"DerenC"},"content":"     * Throws UnspecifiedTimeException if the \"/from\" or \"/to\" time is not","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"DerenC"},"content":"     * specified for the event command.","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"DerenC"},"content":"     * @throws UnspecifiedTimeException if any of the time input is missing for","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"DerenC"},"content":"     * the event command.","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"DerenC"},"content":"    public static void checkEventMissingInput(String userInput) throws UnspecifiedTimeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"DerenC"},"content":"        int fPos \u003d userInput.indexOf(FROM_SPECIFIER);","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"DerenC"},"content":"        int tPos \u003d userInput.indexOf(TO_SPECIFIER);","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"DerenC"},"content":"        UnspecifiedTimeException ex \u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"DerenC"},"content":"        if (isAllSpaces(userInput.substring(CmdType.EVENT.getStrLength(), fPos))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"DerenC"},"content":"            ex \u003d new UnspecifiedTimeException(FROM_SPECIFIER, true);","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"DerenC"},"content":"        } else if (isAllSpaces(userInput.substring(fPos + FROM_SPECIFIER.length(), tPos))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"DerenC"},"content":"            ex \u003d new UnspecifiedTimeException(FROM_SPECIFIER, false);","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"DerenC"},"content":"        } else if (isAllSpaces(userInput.substring(tPos + TO_SPECIFIER.length()))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"DerenC"},"content":"            ex \u003d new UnspecifiedTimeException(TO_SPECIFIER, false);","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"DerenC"},"content":"        if (ex !\u003d null) {","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"DerenC"},"content":"            throw ex;","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"DerenC"},"content":"     * Throws NotAnIntegerException when there are character in the String that","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"DerenC"},"content":"     * is not a digit nor a space (\" \").","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command. Only accepts CmdType.MARK,","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"DerenC"},"content":"     *            CmdType.UNMARK and CmdType.DELETE.","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"DerenC"},"content":"     * @throws NotAnIntegerException If any invalid character is found in the String.","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"DerenC"},"content":"    public static void checkNotNumerical(String userInput, CmdType cmd) throws NotAnIntegerException {","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"DerenC"},"content":"        String str \u003d userInput.substring(cmd.getStrLength());","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"DerenC"},"content":"        ","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"DerenC"},"content":"        boolean isNumerical \u003d str.chars().allMatch(UserInputChecker::isValidChar);","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"DerenC"},"content":"        if (!isNumerical) {","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"DerenC"},"content":"            throw new NotAnIntegerException();","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"DerenC"},"content":"    private static boolean isValidChar(int target) {","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"DerenC"},"content":"        int numOfDigits \u003d 10;","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"DerenC"},"content":"        int[] extras \u003d new int[]{(int) \u0027 \u0027, (int) \u0027-\u0027};","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"DerenC"},"content":"        ","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"DerenC"},"content":"        return IntStream.concat(IntStream.range(START, numOfDigits).map(i -\u003e i + \u00270\u0027), IntStream.of(extras))","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"DerenC"},"content":"                .anyMatch(c -\u003e target \u003d\u003d c);","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":177,"author":{"gitId":"DerenC"},"content":"     * Throws TooManyInputException when there are too many inputs after the","lastModifiedDate":"2023-02-12"},{"lineNumber":178,"author":{"gitId":"DerenC"},"content":"     * first word (the command word). This method does so by checking is there","lastModifiedDate":"2023-02-12"},{"lineNumber":179,"author":{"gitId":"DerenC"},"content":"     * any spacing in the rest of the user input line. Remember that the \"mark\",","lastModifiedDate":"2023-02-12"},{"lineNumber":180,"author":{"gitId":"DerenC"},"content":"     * \"unmark\" and \"delete\" commands only accept one input.","lastModifiedDate":"2023-02-12"},{"lineNumber":181,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":182,"author":{"gitId":"DerenC"},"content":"     * @param userInput The line of user input to be checked.","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command. Only accepts CmdType.MARK,","lastModifiedDate":"2023-02-12"},{"lineNumber":184,"author":{"gitId":"DerenC"},"content":"     *            CmdType.UNMARK and CmdType.DELETE.","lastModifiedDate":"2023-02-12"},{"lineNumber":185,"author":{"gitId":"DerenC"},"content":"     * @throws TooManyInputException If there are too many inputs after the","lastModifiedDate":"2023-02-12"},{"lineNumber":186,"author":{"gitId":"DerenC"},"content":"     * command word.","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"DerenC"},"content":"    public static void checkTooManyInputs(String userInput, CmdType cmd) throws TooManyInputException {","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"DerenC"},"content":"        String str \u003d Parser.removeSpacePadding(userInput.substring(cmd.getStrLength()));","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"DerenC"},"content":"        ","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"DerenC"},"content":"        if (str.chars().anyMatch(UserInputChecker::isSpace)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"DerenC"},"content":"            throw new TooManyInputException(cmd.toString());","lastModifiedDate":"2023-02-09"},{"lineNumber":193,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"DerenC"},"content":"     * A helper function to check does str only consist of space (\" \").","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"DerenC"},"content":"     * @param str A String to be checked.","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"DerenC"},"content":"     * @return A boolean value indicating does str only consist of space (\" \").","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"DerenC"},"content":"    private static boolean isAllSpaces(String str) {","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"DerenC"},"content":"        return str.chars().allMatch(UserInputChecker::isSpace);","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"DerenC"},"content":"    private static boolean isSpace(int c) {","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"DerenC"},"content":"        return c \u003d\u003d (int) \u0027 \u0027;","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":209,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":210,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"DerenC"},"content":"     * A helper function to check is cmd CmdType.TODO, CmdType.DEADLINE,","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"DerenC"},"content":"     * CmdType.EVENT, CmdType.MARK, CmdType.UNMARK or CmdType.DELETE.","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"DerenC"},"content":"     * @param cmd The specified command.","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"DerenC"},"content":"     * @return A boolean value indicating is the command todo, deadline, event,","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"DerenC"},"content":"     * mark, unmark or delete.","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"DerenC"},"content":"    private static boolean isCmdThatNeedsInput(CmdType cmd) {","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"DerenC"},"content":"        return (cmd \u003d\u003d CmdType.TODO || cmd \u003d\u003d CmdType.DEADLINE || cmd \u003d\u003d CmdType.EVENT || cmd \u003d\u003d CmdType.MARK","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"DerenC"},"content":"                || cmd \u003d\u003d  CmdType.UNMARK || cmd \u003d\u003d CmdType.DELETE);","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":222,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":222}},{"path":"src/main/java/wessy/exceptions/CommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * CommandNotFoundException is an exception that should be thrown when the user","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * inputs some text that could not be recognised as a command.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"public class CommandNotFoundException extends WessyException {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of CommandNotFoundException.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    public CommandNotFoundException() {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"DerenC":14}},{"path":"src/main/java/wessy/exceptions/MissingSpacingException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * MissingSpacingException is an exception that should be thrown when the user","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * does not enter a space after the commands he inputs, for commands that","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * require some arguments (todo, event, deadline, mark, unmark).","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"public class MissingSpacingException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of MissingSpacingException.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command requested by the user, in its String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"    public MissingSpacingException(String cmd) {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"        super(String.format(\"The spacing after \u0027%s\u0027 is missing.\", cmd));","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":17}},{"path":"src/main/java/wessy/exceptions/TimeSpecifierException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * TimeSpecifierException is an exception that summarises all other wrong ways","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * of inputting and using \"/by\", \"/from\" and \"/to\" keywords, that are not","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * covered by other exceptions.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"public class TimeSpecifierException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of TimeSpecifierException.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * @param keyword The keyword the user uses wrongly. It is either \"/by\",","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     *                  \"from\" or \"to\".","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    public TimeSpecifierException(String keyword) {","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"        super(\"Either \u0027\" + keyword + \"\u0027 is missing, or it is used in the \" +","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"                \"wrong format.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":19}},{"path":"src/main/java/wessy/exceptions/UnspecifiedTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * UnspecifiedTimeException is an exception that should be thrown when some","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * arguments for \"deadline\" or \"event\" commands are missing, such as the task","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * description, the specified time after \"/by\", \"/from\" and \"/to\".","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"public class UnspecifiedTimeException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of UnspecifiedTimeException","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * @param keyword The keyword where the user has missed out the argument","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     *                before or after it.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * @param isBefore A boolean value to indicate the argument is missing","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     *                 before or after the said keyword.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    public UnspecifiedTimeException(String keyword, boolean isBefore) {","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"        super(\"The input \" + (isBefore ? \"before \u0027\" : \"after \u0027\") + keyword +","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"                \"\u0027 is missing.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":21}},{"path":"src/main/java/wessy/exceptions/WessyException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * WessyException is an abstract base class that serves as the parent for all the","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * exceptions that might occur when the programme, \"Wessy\" is running.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"public abstract class WessyException extends Exception {","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"    private static final String OPENING \u003d \"ERROR! \";","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    private final String message;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * Serves as a constructor for all the child classes to initialise. The","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     * error message is specified in str","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     * @param str The text where the child class input, to specify the error","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     *            message.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    protected WessyException(String str) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"        this.message \u003d OPENING + str;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    /** Returns the String representation of the child exceptions, unless","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"     * otherwise overridden.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"     * @return The string representation of the child exceptions.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"        return message;","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"DerenC":31}},{"path":"src/main/java/wessy/exceptions/integer/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.integer;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * EmptyListException is an exception that should be thrown when the task list","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * is empty and yet the user requests for a task to be marked, unmarked or","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * deleted.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"public class EmptyListException extends WessyException {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of EmptyListException.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command requested by the user, in its String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    public EmptyListException(String cmd) {","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"        super(\"You do not have any task on the list for you to \" + cmd + \".\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"DerenC":19}},{"path":"src/main/java/wessy/exceptions/integer/InvalidIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.integer;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * InvalidIntegerException is an exception that should be thrown when the user","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * wants to mark, unmark or delete a task and the task number he specifies is","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * out of the upper bounds, given the total number of tasks on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"public class InvalidIntegerException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of InvalidIntegerException.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command requested by the user, in its String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     * @param taskNum The task number specified by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     * @param total Total number of tasks on the list.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    public InvalidIntegerException(String cmd, int taskNum, int total) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"        super(String.format(\"You can\u0027t %s Task %d as you only have %d tasks on\"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"                + \" the list\", cmd, taskNum, total));","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":22}},{"path":"src/main/java/wessy/exceptions/integer/NotAnIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.integer;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * NotAnIntegerException is an exception that should be thrown when the user","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * wants to mark, unmark or delete a task, and he inputs some strings that could","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * not be parsed into an integer.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"public class NotAnIntegerException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of NotAnIntegerException.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"    public NotAnIntegerException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"        super(\"What you just input is not an integer. Please input an integer.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":17}},{"path":"src/main/java/wessy/exceptions/integer/NotPositiveIntegerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.integer;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * NotPositiveIntegerException is an exception that should be thrown when the","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * user wants to mark, unmark or delete a task, and he specifies a non-positive","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * integer. Remember that the task list starts from 1 instead of 0, in terms of","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" * user\u0027s input.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"public class NotPositiveIntegerException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of NotPositiveIntegerException.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    public NotPositiveIntegerException() {","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"        super(\"The number you just input is not a positive integer. Please \" +","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"                \"input a positive integer.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":19}},{"path":"src/main/java/wessy/exceptions/numofinput/MissingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.numofinput;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * MissingInputException is an exception that should be thrown when the task","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * description is missing for the \"event\", \"deadline\" or \"todo\" commands, or","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * when the task number is missing for the \"mark\", \"unmark\" or \"delete\"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" * commands.","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"public class MissingInputException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    private static final String ENDING \u003d \" is missing.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    private final String cmd;","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of MissingInputException.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command requested by the user, in its String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    public MissingInputException(String cmd) {","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"        super((cmd.equals(\"mark\") || cmd.equals(\"unmark\"))","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"                ? \"The chosen task number of the \u0027\"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"                : \"The task description of the \u0027\");","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"        this.cmd \u003d cmd;","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    /** Overrides the toString() method of the parent class, WessyException.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"     * Returns the String representation of this exception, by adding more","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"     * details to the result returned by the parent\u0027s method.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     * @return The String representation of this exception.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"        String addStr \u003d \"\u0027\";","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"        if (cmd.equals(\"mark\") || cmd.equals(\"unmark\")) {","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"            addStr +\u003d \" command\";","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"        return super.toString() + cmd + addStr + ENDING;","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":41}},{"path":"src/main/java/wessy/exceptions/numofinput/TooManyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.exceptions.numofinput;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import wessy.exceptions.WessyException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * TooManyInputException is an exception that should be thrown when the user","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * wants to mark, unmark or delete a task, and he enters more than one integer","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" * to specify the task numbers.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"public class TooManyInputException extends WessyException {","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of TooManyInputException.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * @param cmd The command requested by the user, in its String form.","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    public TooManyInputException(String cmd) {","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"        super(String.format(\"The \u0027%s\u0027 command only takes in 1 input.\", cmd));","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":19}},{"path":"src/main/java/wessy/javafxnodes/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.javafxnodes;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.Pane;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"    private static final double TEXT_PADDING \u003d 10.0;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    private static final double CIRCLE_CLIP_RADIUS \u003d 50.0;","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"    private static final double BORDER_WIDTH \u003d 15.0;","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"    private Pane displayPicture;","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"                    wessy.javafxnodes.MainWindow.class.getResource(\"/view/DialogBox.fxml\")","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"            );","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"        dialog.setPadding(new Insets(TEXT_PADDING));","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        ImageView iv \u003d (ImageView) displayPicture.lookup(\"#iv\");","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"        iv.setImage(img);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"        displayPicture.setClip(new Circle(CIRCLE_CLIP_RADIUS, CIRCLE_CLIP_RADIUS, CIRCLE_CLIP_RADIUS));","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"        double halfWidthReduction \u003d BORDER_WIDTH * (-1) / 2;","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"        this.setBorder(new Border(new BorderStroke(Color.WHITE,","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"                BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"                CornerRadii.EMPTY,","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"                new BorderWidths(BORDER_WIDTH),","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"                new Insets(halfWidthReduction, 0, halfWidthReduction, 0)","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"        )));","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"    private void flip() {","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"    public static DialogBox getUserDialogBox(String text, Image img) {","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"    public static DialogBox getWessyDialogBox(String text, Image img) {","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"        db.flip();","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"        return db;","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":97}},{"path":"src/main/java/wessy/javafxnodes/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.javafxnodes;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"import wessy.Wessy;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    private Wessy wessy \u003d new Wessy();","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dummy_user.jpeg\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"    private Image wessyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/water walley.jpg\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"        String opening \u003d wessy.startsUp();","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"                DialogBox.getWessyDialogBox(opening, wessyImage)","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"    public void setWessy(Wessy w) {","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"        wessy \u003d w;","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"    @FXML","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"        String response \u003d wessy.respond(input);","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"                DialogBox.getUserDialogBox(input, userImage),","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"                DialogBox.getWessyDialogBox(response, wessyImage)","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"        );","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":62}},{"path":"src/main/java/wessy/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * This Deadline class inherits from its parent class, Task, and it encapsulates","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * the information and operations required while handling a \"deadline\" task.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Deadline by specifying the task description,","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * the specified time by that this Deadline task needs to be done and","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     * whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"     * @param by The specified time by that this Deadline task needs to be done.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"     * @param isDone The status of whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    public Deadline(String description, LocalDateTime by, boolean isDone){","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"        this.by\u003dby;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Deadline by specifying only the task","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"     * description and the specified time by that this Deadline task needs to be","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"     * done. The status of this Deadline task is by default set as not done when","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     * initialised.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     * @param by The specified time by that this Deadline task needs to be done.","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"        this(description, by, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"     * Overrides the toString method of the parent class, Task. Returns the","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"     * String representation of this Deadline object by providing more details","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"     * on the specified time by that this Deadline task needs to be done, on top","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"     * of the String representation returned by its parent\u0027s toString method.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"     * @return The String representation of this Deadline object.","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + toString(by) + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"     * A helper function that takes in a LocalDateTime object and converts it","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"     * into a useful String representation.","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"     * @param dateTime The LocalDateTime object that this method takes in.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"     * @return A useful String representation of the inputted LocalDateTime","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"     * object.","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"    public static String toString(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"        String str \u003d dateTime.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"        if (str.substring(11).equals(\"12:34:56\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"            return str.substring(0, 10);","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"        return str.substring(0, 10) + \" \" + str.substring(11, 16);","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"     * Converts this Deadline object into a String representation that will be","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"     * used while saving this task in a .txt file to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"     * @param separator A string that indicates the partition between the","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"     *                  different fields of a Deadline object.","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"     * @return A String representation that will be used while saving this task","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"     * to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"    public String saveAsStr(String separator) {","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"        return \"D\" + super.saveAsStr(separator) + separator + by + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"DerenC":81}},{"path":"src/main/java/wessy/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * This Event class inherits from its parent class, Task, and it encapsulates","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" * the information and operations required while handling an event.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Event by specifying the task description, the","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     * specified time from which the Event starts, the specified time til which","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     * the Event ends and whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"     * @param from The specified time from which the Event starts.","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"     * @param to The specified time til which the Event ends.","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"     * @param isDone The status of whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to,","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"                 boolean isDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of Event by specifying the task description, the","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * specified time from which the Event starts and the specified time til","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     * which the Event ends. The status of this Deadline is by default set as","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     * not done when initialised.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"     * @param from The specified time from which the Event starts.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     * @param to The specified time til which the Event ends.","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"        this(description, from, to, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"     * Overrides the toString method of the parent class, Task. Returns the","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     * String representation of this Event object by providing more details on","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * the specified time from that this Event starts and the specified time til","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * which this Event ends, on top of the String representation returned by","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     * its parent\u0027s toString method.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"     * @return The String representation of this Event object.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + toString(from) + \" to: \" + toString(to) + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     * A helper function that takes in a LocalDateTime object and converts it","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"     * into a useful String representation.","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"     * @param dateTime The LocalDateTime object that this method takes in.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"     * @return A useful String representation of the inputted LocalDateTime","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"     * object.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"    public static String toString(LocalDateTime dateTime) {","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"        String str \u003d dateTime.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"        if (str.substring(11).equals(\"12:34:56\")) {","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"            return str.substring(0, 10);","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"        return str.substring(0, 10) + \" \" + str.substring(11, 16);","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"     * Converts this Event object into a String representation that will be","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"     * used while saving this task in a .txt file to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"     * @param separator A string that indicates the partition between the","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"     *                  different fields of an Event object.","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"     * @return A String representation that will be used while saving this task","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"     * to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"    public String saveAsStr(String separator) {","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"        return \"E\" + super.saveAsStr(separator) + separator + from + separator + to + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"DerenC":87}},{"path":"src/main/java/wessy/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * Task is an abstract base class that serves as the parent class for ToDo,","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * Deadline and Event classes. It abstracts the common fields like the task","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" * description and the status of whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"    protected final String description;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     * Serves as a constructor for all the child classes to initialise. The task","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     * description and the status of whether the task has been done need to be","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"     * specified.","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"     * @param isDone The status of whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"     * Serves as a constructor for all the child classes to initialise. Only the","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"     * task description needs to be specified.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"        this(description, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"     * Represents the status of whether this Task has been done in a form of a","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"     * String, with \"[X]\" indicating done and \"[ ]\" indicating not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"     * @return An indication showing whether this Task has been done, in the","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"     * form of \"[ ]\".","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"    String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * Provides the common component of the String representation of all kinds","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * of Task, so that the respective child classes can use it to come up with","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     * their String representation.","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"     * @return The common component of the children\u0027s String representation.","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"DerenC"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"DerenC"},"content":"     * Provides the common component for the child classes to converts into a","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"DerenC"},"content":"     * String representation that will be used while saving this task in a .txt","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"DerenC"},"content":"     * file to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"DerenC"},"content":"     * @param separator A string that indicates the partition between the","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"DerenC"},"content":"     *      *                  different fields of a Task object.","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"DerenC"},"content":"     * @return The common component of the String representation used while","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"DerenC"},"content":"     * saving the task to the Wessy\u0027s storage","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"DerenC"},"content":"    public String saveAsStr(String separator) {","lastModifiedDate":"2023-02-09"},{"lineNumber":69,"author":{"gitId":"DerenC"},"content":"        String mark \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"DerenC"},"content":"        return separator + mark + separator + description;","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"DerenC"},"content":"     * Marks this task as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"DerenC"},"content":"    public void mark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"DerenC"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"DerenC"},"content":"     * Marks this task as \"not done\".","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"DerenC"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"DerenC"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"DerenC"},"content":"     * Checks whether this task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"DerenC"},"content":"     * @return A boolean value indicating whether this task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"DerenC"},"content":"    public boolean checkIsDone() {","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"DerenC"},"content":"        return isDone;","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"DerenC":95}},{"path":"src/main/java/wessy/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy.task;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":" * This ToDo class inherits from its parent class, Task, and it encapsulates","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":" * the information and operations required while handling a \"todo\" task.","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of ToDo by specifying the task description and","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"     * whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"     * @param isDone The status of whether the task has been done.","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"     * Constructs an instance of ToDo by specifying the task description. The","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"     * status of this ToDo is by default set as not done when initialised.","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"     * @param description The specified task description.","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"        this(description, false);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"     * Overrides the toString method of the parent class, Task. Returns the","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"     * String representation of this ToDo object by adding \"[T]\" in front of the","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"     * String representation returned by the parent\u0027s toString method.","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"     * @return The String representation of this ToDo object.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"DerenC"},"content":"    public String toString() {","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"DerenC"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"DerenC"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"DerenC"},"content":"     * Converts this ToDo object into a String representation that will be","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"DerenC"},"content":"     * used while saving this task in a .txt file to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"DerenC"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"DerenC"},"content":"     * @param separator A string that indicates the partition between the","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"DerenC"},"content":"     *                  different fields of a ToDo object.","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"DerenC"},"content":"     * @return A String representation that will be used while saving this task","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"DerenC"},"content":"     * to the Wessy\u0027s storage.","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"DerenC"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"DerenC"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"DerenC"},"content":"    public String saveAsStr(String separator) {","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"DerenC"},"content":"        return \"T\" + super.saveAsStr(separator) + \"\\n\";","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"DerenC":54}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.layout.Pane?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" minHeight\u003d\"150.0\"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"         style\u003d\"-fx-background-color:rgb(182, 252, 213);-fx-padding: 10 10 10 10\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxWidth\u003d\"220\" alignment\u003d\"CENTER_LEFT\" style\u003d\"-fx-padding: 10 10 10 10;\"/\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"        \u003cPane fx:id\u003d\"displayPicture\" style\u003d\"-fx-padding: 5 5 5 5;\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"            \u003cImageView fx:id\u003d\"iv\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"        \u003c/Pane\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"wessy.javafxnodes.MainWindow\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vbarPolicy\u003d\"ALWAYS\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"DerenC":19}},{"path":"src/test/java/wessy/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"package wessy;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"import wessy.components.Parser;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"    public void getCmd() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.getCmd(\"bye\"), CmdType.BYE);","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"DerenC"},"content":"        assertNull(Parser.getCmd(\"listkjcbjdfvb\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.getCmd(\"event     \"), CmdType.EVENT);","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.getCmd(\"todo jsvdjnv\"), CmdType.TODO);","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"        assertNull(Parser.getCmd(\"dEaDlIne bjb\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"DerenC"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"DerenC"},"content":"    public void parseDateTime() {","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.parseDateTime(\" 2023/3/2  \"), LocalDateTime.parse(\"2023-03-02T12:34:56\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.parseDateTime(\"10-3-2022 1700    \"), LocalDateTime.parse(\"2022-03-10T17:00:00\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.parseDateTime(\"2023-11-5 13:45\"), LocalDateTime.parse(\"2023-11-05T13:45:00\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.parseDateTime(\"  3/12/2022 04.25\"), LocalDateTime.parse(\"2022-12-03T04:25:00\"));","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"DerenC"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"DerenC"},"content":"    @Test","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"DerenC"},"content":"    public void removeSpacePadding() {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.removeSpacePadding(\"FEGW\"), \"FEGW\");","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.removeSpacePadding(\"A BCD\"), \"A BCD\");","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"DerenC"},"content":"        assertEquals(Parser.removeSpacePadding(\"    fkjv efb d jhbdjkdf          \"), \"fkjv efb d jhbdjkdf\");","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"DerenC"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"DerenC"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"DerenC":35}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"DerenC"},"content":"todo borrow book","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"DerenC"},"content":"unmark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"DerenC"},"content":"mark 1","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"DerenC"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"DerenC"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"DerenC"},"content":"delete 2","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"DerenC"},"content":"list","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"DerenC"},"content":"bye","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"DerenC":13}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"DerenC"},"content":"java -classpath ..\\bin Wessy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DerenC":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"DerenC"},"content":"java -classpath ../bin Wessy \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"DerenC":1,"-":37}}]
