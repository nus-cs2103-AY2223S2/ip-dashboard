[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"    id(\"org.openjfx.javafxplugin\") version \"0.0.13\"","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-text\u0027, version: \u00271.10.0\u0027","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    implementation group: \u0027org.ocpsoft.prettytime\u0027, name: \u0027prettytime-nlp\u0027, version: \u00275.0.0.Final\u0027","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    mainClassName \u003d \"catbot.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"    archiveBaseName \u003d \"catbot\"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"checkstyle {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":39,"Diamondroxxx":28}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"CatBot is a simple CLI interface for keeping track of your tasks!","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"* Todo Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"* Deadline Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"* Event Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"* Recurring Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"* Listing all tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"* Deleting Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"* Marking tasks as done","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"* Finding tasks which match a given keyword","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"* Making CatBot repeat a message","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"* Understand dates in natural language","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"* Store Tasks persistently","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"### Todo Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"Todo Tasks are tasks which need to be completed by an unspecified time.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"Format: `todo \u003cdescription\u003e` \\","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"Example: `todo Do the laundry.`","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"### Deadline Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"Deadline tasks are tasks which need to be completed by a set deadline.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"Format: `deadline \u003cdescription\u003e \\by \u003ctime\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"Example: `deadline Do the laundry \\by Friday 6pm`","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"### Event Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"Events are tasks which take place over a specified period of time.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"Format: `event \u003cdescription\u003e \\from \u003ctime\u003e \\to \u003ctime\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"Example: `event Do the laundry \\from Friday 6pm \\to Friday 7pm`","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"Note: The day must be repeated even if it is the same.","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"### Recurring Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"Recurring tasks are tasks which repeat at a set interval.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"Format: `recurring \u003cdescription\u003e \\at \u003ctime\u003e \\every \u003cduration\u003e` \\","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"or `recurring \u003cdescription\u003e \\on \u003ctime\u003e \\every \u003cduration\u003e` \\","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"Example: `recurring Practice Japanese \\at 6pm \\every 1 day`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"Note: 1 is required for single units of time eg. `1 day`, `1 week`, `1 hour`, etc.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"### Listing Tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"Get a list of all the tasks in the order they were added in.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"### Deleting tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"Delete tasks by their position in the list.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"Format: `delete \u003cposition\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"Example: `delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"### Marking tasks as done","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"Mark tasks as done so that they display with a checkmark.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"Format: `mark \u003cposition\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"Example: `mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"Unmark tasks which were previously marked as done.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"Format: `unmark \u003cposition\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"Example: `unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"### Finding tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"Search for tasks which contain a given keyword.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"Format: `find \u003ckeyword\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"Example: `find laundry`","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"### Making CatBot repeat a message","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"Echo a given message just for fun.\\","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"Format: `echo \u003cmessage\u003e`\\","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"Example: `echo meow!`","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"-":26,"Diamondroxxx":53}},{"path":"src/main/java/catbot/CatBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.SaveCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.ButtonType;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":" * Entry point of the CatBot application.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":" * Initiates all the required components and begins interaction with the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"public class CatBot {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    private String logo \u003d","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"            \"Welcome from: \\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"            + \" ____ ____ ____ ____ ____ ____\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"            + \"||C |||a |||t |||B |||o |||t ||\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"            + \"||__|||__|||__|||__|||__|||__||\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"            + \"|/__\\\\|/__\\\\|/__\\\\|/__\\\\|/__\\\\|/__\\\\|\\n\";","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a new CatBot instance and loads from the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"     * @param saveFile is the path to the save file for persistent task storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"    public CatBot(String saveFile) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"            storage \u003d new Storage(saveFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (CatBotException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"            logo +\u003d \"\\n Error loading from save file. A new task list will be initiated for this session.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"            tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"    public String getLogo() {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        return logo;","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"     * Gets CatBot\u0027s response for a given input command.","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"     * @param input is the command the user input","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"     * @return CatBot\u0027s output","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"    public Text getResponse(String input) {","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"            return ui.getNextOutput();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (CatBotException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"            return ui.getError(e.getMessage());","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"     * Saves data to the file when the program is closed.","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"    public void close() {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"            new SaveCommand().execute(tasks, ui, storage);","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (CatBotException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"            Alert alert \u003d new Alert(Alert.AlertType.ERROR,","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"                    \"There was an error while saving:\\n\" + e.getMessage(), ButtonType.CLOSE);","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"            alert.showAndWait();","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":80}},{"path":"src/main/java/catbot/CatBotException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":" * Custom exception class used whenever an error message needs to be communicated to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"public class CatBotException extends Exception {","lastModifiedDate":"2023-01-16"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a CatBotException.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"     * @param message is the message to show the user","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"    public CatBotException(String message) {","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"        super(message + \" \u003e@w@\u003c\");","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Diamondroxxx":15}},{"path":"src/main/java/catbot/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"public class Launcher {","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Diamondroxxx":12}},{"path":"src/main/java/catbot/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.MainWindow;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" * A GUI for CatBot using FXML.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    private final CatBot catbot \u003d new CatBot(\"./data/tasklist.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"            BorderPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setCatBot(catbot);","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().showWelcome();","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"            stage.show();","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    public void stop() {","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        catbot.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":38}},{"path":"src/main/java/catbot/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.DeadlineTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.EventTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task.TaskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.ToDoTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":" * Handles adding a new task to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    private final TaskType taskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    private final String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    /* Used to store date for Deadline and Event */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    private LocalDateTime date1;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    /* Used to store date for Event */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    private LocalDateTime date2;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddCommand} for a {@code ToDoTask}.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    public AddCommand(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"        taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddCommand} for a {@code DeadlineTask}.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"     * @param dueBy is the date and time by which the task is due.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    public AddCommand(String description, LocalDateTime dueBy) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"        date1 \u003d dueBy;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddCommand} for a {@code EventTask}.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"     * @param startsAt is the time at which the event starts.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"     * @param endsAt is the time at which the event ends.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    public AddCommand(String description, LocalDateTime startsAt, LocalDateTime endsAt) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"        taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"        date1 \u003d startsAt;","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"        date2 \u003d endsAt;","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"        case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new ToDoTask(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new DeadlineTask(description, date1);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new EventTask(description, date1, date2);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"This should be impossible to reach but I have to add this because Java™\");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Diamondroxxx"},"content":"                \"Added new task!\\n    \"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Diamondroxxx"},"content":"                + newTask","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Diamondroxxx"},"content":"                + \"\\nYou have \" + tasks.size()","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Diamondroxxx"},"content":"                + (tasks.size() \u003e 1 ? \" tasks now.\" : \" task now.\")","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(newTask.toCommand() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask;","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Diamondroxxx"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Diamondroxxx"},"content":"        case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new ToDoTask(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Diamondroxxx"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new DeadlineTask(description, date1);","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Diamondroxxx"},"content":"        case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Diamondroxxx"},"content":"            newTask \u003d new EventTask(description, date1, date2);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Diamondroxxx"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Diamondroxxx"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"This should be impossible to reach but I have to add this because Java™\");","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":108}},{"path":"src/main/java/catbot/commands/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.DeadlineTask;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":" * Handles adding a new deadline task to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"public class AddDeadlineCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime dueBy;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddDeadlineCommand} for a {@code DeadlineTask}.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"     * @param dueBy       is the date and time by which the task is due.","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    public AddDeadlineCommand(String description, LocalDateTime dueBy) {","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"        this.dueBy \u003d dueBy;","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new DeadlineTask(description, dueBy);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Added new task!\\n    \"","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"                + newTask","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"                + \"\\nYou have \" + tasks.size()","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"                + (tasks.size() \u003e 1 ? \" tasks now.\" : \" task now.\")","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(newTask.toCommand() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new DeadlineTask(description, dueBy);","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Diamondroxxx":47}},{"path":"src/main/java/catbot/commands/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.EventTask;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":" * Handles adding a new event task to the list.","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime startsAt;","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime endsAt;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddEventCommand} for a {@code EventTask}.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     * @param startsAt    is the time at which the event starts.","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"     * @param endsAt      is the time at which the event ends.","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    public AddEventCommand(String description, LocalDateTime startsAt, LocalDateTime endsAt) {","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        this.startsAt \u003d startsAt;","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        this.endsAt \u003d endsAt;","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new EventTask(description, startsAt, endsAt);","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Added new task!\\n    \"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"                + newTask","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"                + \"\\nYou have \" + tasks.size()","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"                + (tasks.size() \u003e 1 ? \" tasks now.\" : \" task now.\")","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(newTask.toCommand() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new EventTask(description, startsAt, endsAt);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Diamondroxxx":51}},{"path":"src/main/java/catbot/commands/AddRecurringCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.Duration;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.RecurringTask;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":" * Handles adding a new recurring task to the list","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"public class AddRecurringCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    private final String description;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime nextOccurrence;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    private final Duration repeatsEvery;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddReoccurringCommand} for a {@code DeadlineTask}.","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description    is the description of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"     * @param nextOccurrence is when the task will happen next","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"     * @param repeatsEvery   is the time between each occurrence","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    public AddRecurringCommand(String description, LocalDateTime nextOccurrence, Duration repeatsEvery) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        this.nextOccurrence \u003d nextOccurrence;","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        this.repeatsEvery \u003d repeatsEvery;","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new RecurringTask(description, nextOccurrence, repeatsEvery);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Added new task!\\n    \"","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"                + newTask","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"                + \"\\nYou have \" + tasks.size()","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"                + (tasks.size() \u003e 1 ? \" tasks now.\" : \" task now.\")","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(newTask.toCommand() + \"\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new RecurringTask(description, nextOccurrence, repeatsEvery);","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Diamondroxxx":53}},{"path":"src/main/java/catbot/commands/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.ToDoTask;","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" * Handles adding a new todo task to the task list.","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"public class AddTodoCommand extends Command {","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    private final String description;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new {@code AddTodoCommand} for a {@code ToDoTask}.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task.","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    public AddTodoCommand(String description) {","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new ToDoTask(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"                \"Added new task!\\n    \"","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"                        + newTask","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"                        + \"\\nYou have \" + tasks.size()","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"                        + (tasks.size() \u003e 1 ? \" tasks now.\" : \" task now.\")","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(newTask.toCommand() + \"\\n\");","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        Task newTask \u003d new ToDoTask(description);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"Diamondroxxx":44}},{"path":"src/main/java/catbot/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":" * Parent class for all commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    private boolean isExit \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"        return isExit;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    protected void setExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) throws CatBotException {}","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":28}},{"path":"src/main/java/catbot/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":" * Handles deleting a task from the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    private final int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a new instance of DeleteCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"     * @param index is the zero-indexed index of the item to delete form the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.delete(index);","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Deleted task.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(\"delete \" + (index + 1) + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":36}},{"path":"src/main/java/catbot/commands/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":" * Handles echoing a message back to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"public class EchoCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    private final String message;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    public EchoCommand(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":21}},{"path":"src/main/java/catbot/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":" * Handles searching for tasks which match a certain keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    private final String keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        StringBuilder taskList \u003d new StringBuilder(\"Found these tasks: \\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"                taskList.append(\"  \").append(index).append(\".\").append(task).append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"            index++;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":32}},{"path":"src/main/java/catbot/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":" * Handles listing the entire task list to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"        StringBuilder taskList \u003d new StringBuilder(\"List of tasks: \\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"            taskList.append(String.format(\"  %02d.%s\\n\", index++, task.toString()));","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(taskList.toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":23}},{"path":"src/main/java/catbot/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":" * Handles marking and unmarking tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    private final int index;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a MarkCommand instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"     * @param index is the zero-indexed index of the task to mark or unmark.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"     * @param isDone is true if marking and untrue if unmarking.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    public MarkCommand(int index, boolean isDone) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.mark(index, isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Marked the task as done!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        storage.writeToSaveFile(\"mark \" + (index + 1) + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"    public void loadCommand(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"        assert index \u003e\u003d -1 \u0026\u0026 index \u003c tasks.size(); // Values set during writing to file shouldn\u0027t be out of range","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.get(Math.floorMod(index, tasks.size())).setDone(true); // Using floorMod handles -1 case for last index","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":40}},{"path":"src/main/java/catbot/commands/SaveCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":" * Handles saving the entire task list while exiting the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"public class SaveCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    public SaveCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"        super.setExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        ui.setNextOutput(\"Nice to meet mew!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"        storage.saveToFile(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":22}},{"path":"src/main/java/catbot/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.Duration;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Date;","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Locale;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import org.ocpsoft.prettytime.nlp.PrettyTimeParser;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import org.ocpsoft.prettytime.nlp.parse.DateGroup;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.AddDeadlineCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.AddEventCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.AddRecurringCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.AddTodoCommand;","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.DeleteCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.EchoCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.FindCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.ListCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.commands.MarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":" * Handles parsing user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"     * Parses an input string to figure out the command.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"     * @param command is the user input for a command.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"     * @return a {@code Command} object for the user command.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"     * @throws CatBotException if the user input is malformed.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    public static Command parse(String command) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        assert !Objects.equals(command, \"\");","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        String[] commandComponents \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"        String[] temp;","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"        switch (commandComponents[0].toLowerCase(Locale.ROOT)) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"                return new AddTodoCommand(commandComponents[1].strip());","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"                temp \u003d commandComponents[1].split(\"/by\", 2);","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"                Date parsedBy \u003d new PrettyTimeParser().parse(temp[1].strip()).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"                LocalDateTime by \u003d parsedBy.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"                return new AddDeadlineCommand(temp[0].strip(), by);","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"Dates should be in the format yyyy-MM-ddTHH:mm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"        case \"event\":","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"                temp \u003d commandComponents[1].split(\"/from|/to\", 3);","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"                Date parsedFrom \u003d new PrettyTimeParser().parse(temp[1].strip()).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"                LocalDateTime from \u003d parsedFrom.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"                Date parsedTo \u003d new PrettyTimeParser().parse(temp[2].strip()).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"                LocalDateTime to \u003d parsedTo.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"                return new AddEventCommand(temp[0].strip(), from, to);","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"Dates should be in the format yyyy-MM-ddTHH:mm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"        case \"recurring\":","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"                temp \u003d commandComponents[1].split(\"/on|/at|/every\", 3);","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"                Date parsedOn \u003d new PrettyTimeParser().parse(temp[1].strip()).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"Diamondroxxx"},"content":"                LocalDateTime on \u003d parsedOn.toInstant().atZone(ZoneId.systemDefault()).toLocalDateTime();","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"Diamondroxxx"},"content":"                DateGroup parsedEvery \u003d new PrettyTimeParser().parseSyntax(\"every \" + temp[2].strip()).get(0);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"Diamondroxxx"},"content":"                Duration every \u003d Duration.ofMillis(","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Diamondroxxx"},"content":"                        parsedEvery.getRecurInterval()).plusMillis(500).truncatedTo(ChronoUnit.SECONDS","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Diamondroxxx"},"content":"                );","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"Diamondroxxx"},"content":"                if (every.isNegative() || every.isZero()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"Diamondroxxx"},"content":"                    throw new CatBotException(\"I can\u0027t travel back in time ... yet!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"Diamondroxxx"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"Diamondroxxx"},"content":"                return new AddRecurringCommand(temp[0].strip(), on, every);","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"Diamondroxxx"},"content":"                if (e.toString().contains(\"Duration\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"Diamondroxxx"},"content":"                    throw new CatBotException(\"Durations should be in the format P#DT#H#M#S\");","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"Diamondroxxx"},"content":"                }","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"Dates should be in the format yyyy-MM-ddTHH:mm\");","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Diamondroxxx"},"content":"        case \"list\":","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Diamondroxxx"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Diamondroxxx"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Diamondroxxx"},"content":"                int index \u003d Integer.parseInt(commandComponents[1].strip());","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"Diamondroxxx"},"content":"                return new MarkCommand(index - 1, true);","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(e + \" isn\u0027t a number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Diamondroxxx"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Diamondroxxx"},"content":"                int index \u003d Integer.parseInt(commandComponents[1].strip());","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"Diamondroxxx"},"content":"                return new MarkCommand(index - 1, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(e + \" isn\u0027t a number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Diamondroxxx"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Diamondroxxx"},"content":"                int index \u003d Integer.parseInt(commandComponents[1].strip());","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"Diamondroxxx"},"content":"                return new DeleteCommand(index - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(e + \" isn\u0027t a number!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Diamondroxxx"},"content":"        case \"find\":","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"Diamondroxxx"},"content":"            return new FindCommand(commandComponents[1].strip());","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"Diamondroxxx"},"content":"        case \"echo\":","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Diamondroxxx"},"content":"                return new EchoCommand(commandComponents[1].strip());","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"That\u0027s the wrong format!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"Diamondroxxx"},"content":"        default:","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"I don\u0027t know what you mean.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":147}},{"path":"src/main/java/catbot/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":" * Handles all operations relating to saving and loading from disk.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    private final File saveFile;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a new Storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"     * @param saveFilePath is the path for the save file to use.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"     * @throws CatBotException if there is an error while trying to create possibly required directories.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    public Storage(String saveFilePath) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        Path path \u003d Paths.get(saveFilePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        if (Files.notExists(path)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"                if (!path.toFile().createNewFile()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"                    throw new CatBotException(\"Error while creating new save file.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"                throw new CatBotException(\"Error while loading storage.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        saveFile \u003d path.toFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"     * Loads from a save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"     * @return an {@code ArrayList} containing all the tasks loaded in from the file.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"     * @throws CatBotException if there was an error while parsing the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"    public ArrayList\u003cTask\u003e load() throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        assert saveFile.exists() : saveFile.getPath();","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"            Scanner scanner \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"                Parser.parse(scanner.nextLine()).loadCommand(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"            scanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"     * Appends a given message to the save file","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"     * @param message is the string to append to the save file","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"    public void writeToSaveFile(String message) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        assert saveFile.exists() : saveFile.getPath();","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"        try (FileWriter writer \u003d new FileWriter(saveFile, true)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"            writer.write(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"Error while accessing save file.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Diamondroxxx"},"content":"     * Writes the contents of the task list to the save file.","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Diamondroxxx"},"content":"     * @param tasks is the TaskList to write to disk","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Diamondroxxx"},"content":"    public void saveToFile(TaskList tasks) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Diamondroxxx"},"content":"        assert saveFile.exists() : saveFile.getPath();","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"Diamondroxxx"},"content":"        try (FileWriter writer \u003d new FileWriter(saveFile, false)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Diamondroxxx"},"content":"            for (Task task: tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Diamondroxxx"},"content":"                writer.write(task.toCommand() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"Error while accessing save file.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":95}},{"path":"src/main/java/catbot/tasklist/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":" * Stores a deadline task which is to be completed by a certain time.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime dueAt;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a new DeadlineTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"     * @param task is the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"     * @param dueAt is the date and time of the deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    public DeadlineTask(String task, LocalDateTime dueAt) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        super(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"        this.dueAt \u003d dueAt;","lastModifiedDate":"2023-01-16"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        return \"[D]\" + super.toString() + \" by \" + formatDate(dueAt);","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    public String toCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        return \"deadline \" + super.description + \" /by \" + dueAt + (super.isDone ? \"\\nmark 0\" : \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Diamondroxxx":30}},{"path":"src/main/java/catbot/tasklist/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":" * Stores an event task which happens from a certain time to a certain time.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime startsAt;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"    private final LocalDateTime endsAt;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a new EventTask.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"     * @param task is the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"     * @param from is when the task starts.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"     * @param to is when the task ends.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    public EventTask(String task, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        super(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"        startsAt \u003d from;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        endsAt \u003d to;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"                + \" (\" + formatDate(startsAt)","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"                + \" – \" + formatDate(endsAt) + \")\";","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    public String toCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        return \"event \" + super.description","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"                + \" /from \" + startsAt","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"                + \" /to \" + endsAt","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"                + (super.isDone ? \"\\nmark 0\" : \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Diamondroxxx":38}},{"path":"src/main/java/catbot/tasklist/RecurringTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.Duration;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" * Handles tasks which occur repeatedly at regular intervals","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"public class RecurringTask extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"    private LocalDateTime nextOccurrence;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    private final Duration repeatsEvery;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructs a new RecurringTask which handles repeating tasks","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description    is the description of the task","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"     * @param nextOccurrence is when the task will happen next","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"     * @param repeatsEvery   is the time between each occurrence","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    public RecurringTask(String description, LocalDateTime nextOccurrence, Duration repeatsEvery) {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"        this.nextOccurrence \u003d nextOccurrence;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        this.repeatsEvery \u003d repeatsEvery;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    // from https://stackoverflow.com/questions/3471397/how-can-i-pretty-print-a-duration-in-java","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    private static String formatDuration(Duration duration) {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        long days \u003d duration.toDays();","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        return ((days !\u003d 0 ? days + \" Days \" : 0)","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"                + duration.minusDays(days).toString()","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"                .substring(2))","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"(\\\\d[HMS])(?!$)\", \"$1 \")","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"                .replace(\"H\", \" Hours\")","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"                .replace(\"M\", \" Minutes\")","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"                .replace(\"S\", \" Seconds\")","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"\\\\b1 Days\", \"1 Day\")","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"\\\\b1 Hours\", \"1 Hour\")","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"\\\\b1 Minutes\", \"1 Minute\")","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"\\\\b1 Seconds\", \"1 Second\")","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"                .replaceAll(\"\\\\b0 Seconds\", \"\");","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        while (Duration.between(LocalDateTime.now(), nextOccurrence).isNegative()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"            nextOccurrence \u003d nextOccurrence.plus(repeatsEvery);","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"            this.setDone(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        String formattedDate \u003d formatDate(nextOccurrence);","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"        return \"[R]\" + super.toString() + (formattedDate.charAt(2) \u003d\u003d \u0027:\u0027 ? \" at \" : \" on \") + formattedDate","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"                + \" every \" + formatDuration(repeatsEvery);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    public String toCommand() {","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"        return \"recurring \" + super.description + \" /on \" + nextOccurrence + \" /every \" + formatDuration(repeatsEvery)","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"                + (super.isDone ? \"\\nmark 0\" : \"\");","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Diamondroxxx":60}},{"path":"src/main/java/catbot/tasklist/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" * The parent class of all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    final String description;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"     * Enum to express the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    public enum TaskType {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        TODO,","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        EVENT","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"     * Constructor for a CatBot.TaskList.Task","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"     * @param description is the description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        return description;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"     * Setter for done","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"     * @param done is whether the task is marked as done","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-01-16"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"     * Gets the mark icon for a task","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"     * @return a string that should be placed in the slot indicating whether this task is marked","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    protected String getStatusIcon() {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"        return isDone ? \"✓\" : \" \";","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"    protected String formatDate(LocalDateTime date) {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"        String formatPattern;","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"        if (date.getYear() \u003d\u003d LocalDateTime.now().getYear()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"            formatPattern \u003d \"d MMM, hh:mm a\";","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"            if (date.getDayOfYear() \u003d\u003d LocalDateTime.now().getDayOfYear()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"                formatPattern \u003d \"hh:mm a\";","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"            formatPattern \u003d \"d MMM yyyy, hh:mm a\";","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"        return date.format(DateTimeFormatter.ofPattern(formatPattern));","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"    public abstract String toCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Diamondroxxx":73}},{"path":"src/main/java/catbot/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":" * Stores the task list and handles associated operations on it.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"public class TaskList implements Iterable\u003cTask\u003e, Iterator\u003cTask\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    private int iteratorIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    public void add(Task newTask) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"        tasks.add(newTask);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"     * Deletes a task from the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"     * @param index is the index of the task in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"     * @throws CatBotException if the index is out of bounds.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"    public void delete(int index) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"            tasks.remove(index);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"Invalid task number.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"     * Sets whether a task is done or not.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"     * @param index is the index of the task in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"     * @param isDone is whether the task is done.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"     * @throws CatBotException when the index is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    public void mark(int index, boolean isDone) throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"            tasks.get(index).setDone(isDone);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"            throw new CatBotException(\"Invalid task number.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    public int size() {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"        return tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    public boolean hasNext() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"        return iteratorIndex \u003c tasks.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"    public Task next() {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        return tasks.get(iteratorIndex++);","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"        iteratorIndex \u003d 0;","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"        return this;","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":70}},{"path":"src/main/java/catbot/tasklist/ToDoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":" * Stores a task which just has a description.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"public class ToDoTask extends Task {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"    public ToDoTask(String task) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"        super(task);","lastModifiedDate":"2023-01-16"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-16"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    public String toString() {","lastModifiedDate":"2023-01-16"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-16"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-16"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    public String toCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"        return \"todo \" + super.description + (super.isDone ? \"\\nmark 0\" : \"\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-16"}],"authorContributionMap":{"Diamondroxxx":21}},{"path":"src/main/java/catbot/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    private Circle displayPicture;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    private DialogBox(Text text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"        try {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        dialog.setText(text.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        dialog.setStyle(text.getStyle());","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"    private void flip() {","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"    public static DialogBox getUserDialog(Text text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"    public static DialogBox getDukeDialog(Text text, Image img) {","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"        db.flip();","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"        return db;","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Diamondroxxx":64}},{"path":"src/main/java/catbot/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBot;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.BorderPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.Priority;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"public class MainWindow extends BorderPane {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    private HBox inputBox;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"    private CatBot catbot;","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    private final Image catbotImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaCatBot.png\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises the Main Window","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"        HBox.setHgrow(userInput, Priority.ALWAYS);","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"     * Show the welcome message for CatBot to greet the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        Text logo \u003d new Text(catbot.getLogo());","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"        logo.setStyle(\"-fx-text-fill: \"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"                + \"linear-gradient(from 0.0% 100.0% to 100.0% 100.0%, \"","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"                        + \"#f5a9b8 0%, #f5a9b8 50%, #5bcefa 50%, #5bcefa 100%);\"","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"                + \"-fx-font-family: Monospaced;\");","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"                DialogBox.getDukeDialog(logo, catbotImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"    public void setCatBot(CatBot c) {","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"        catbot \u003d c;","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing CatBot\u0027s reply and then appends them to","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Diamondroxxx"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"Diamondroxxx"},"content":"    @FXML","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"Diamondroxxx"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"Diamondroxxx"},"content":"        Text input \u003d new Text(userInput.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"Diamondroxxx"},"content":"        Text response \u003d catbot.getResponse(input.getText());","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Diamondroxxx"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"Diamondroxxx"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Diamondroxxx"},"content":"                DialogBox.getDukeDialog(response, catbotImage)","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Diamondroxxx"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Diamondroxxx"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Diamondroxxx":76}},{"path":"src/main/java/catbot/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import javafx.scene.text.Text;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":" * Handles all UI features.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"    private Text nextOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"     * Initialises a Ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    public Ui() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"        nextOutput \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"     * Sets the next line buffer for {@code showNext}.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"     * @param message is the message to show.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    public void setNextOutput(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        nextOutput \u003d new Text(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"        nextOutput.setStyle(\"-fx-text-fill: snow; -fx-font-family: Monospaced\");","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"     * Returns a Text object containing errors to be shown to the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"     * @param message is the error message.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    public Text getError(String message) {","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"        Text error \u003d new Text(message);","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        error.setStyle(\"-fx-text-fill: firebrick; -fx-font-family: Monospaced\");","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"        return error;","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"     * Returns CatBot\u0027s next response.","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"     * Requires {@code setNextOutput} to be called first.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"    public Text getNextOutput() {","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"        Text temp \u003d nextOutput;","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"        nextOutput \u003d null;","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"        return temp;","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.shape.Rectangle?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textFill\u003d\"SNOW\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"      \u003cRectangle arcHeight\u003d\"5.0\" arcWidth\u003d\"5.0\" fill\u003d\"#ffffff00\" stroke\u003d\"#ffffff00\" strokeType\u003d\"INSIDE\" width\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"DODGERBLUE\" radius\u003d\"22.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Diamondroxxx":18}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"\u003cBorderPane prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"            fx:controller\u003d\"catbot.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    \u003cbottom\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cHBox fx:id\u003d\"inputBox\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"/\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"                        prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    \u003c/bottom\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"    \u003ccenter\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"                    BorderPane.alignment\u003d\"CENTER\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"                \u003cBorderPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"                    \u003ccenter\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"                        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"558.0\" prefWidth\u003d\"388.0\"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"                              style\u003d\"-fx-background-color: #03001C;\"/\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"                    \u003c/center\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"                \u003c/BorderPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    \u003c/center\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"\u003c/BorderPane\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"Diamondroxxx":35}},{"path":"src/test/java/catbot/CatBotTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"public class CatBotTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":17}},{"path":"src/test/java/catbot/commands/AddCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"package catbot.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.CatBotException;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"import catbot.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Diamondroxxx"},"content":"public class AddCommandTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Diamondroxxx"},"content":"    private TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Diamondroxxx"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Diamondroxxx"},"content":"    private final Storage storage \u003d new Storage(\"./test/tasklist.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"    public AddCommandTest() throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Diamondroxxx"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Diamondroxxx"},"content":"    public void reset() throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Diamondroxxx"},"content":"        tasks \u003d new TaskList(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Diamondroxxx"},"content":"        boolean temp \u003d new File(\"./test/tasklist.txt\").delete();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Diamondroxxx"},"content":"        boolean temp2 \u003d new File(\"./test/tasklist.txt\").createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Diamondroxxx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Diamondroxxx"},"content":"    public void todoTest() throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Diamondroxxx"},"content":"        Command testCommand \u003d new AddCommand(\"This is a test\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Diamondroxxx"},"content":"        testCommand.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(\"Added new task!\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"Diamondroxxx"},"content":"                + \"    [T][ ] This is a test\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"Diamondroxxx"},"content":"                + \"You have 1 task now.\", ui.getNextOutput().getText());","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Diamondroxxx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Diamondroxxx"},"content":"    public void deadlineTest() throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Diamondroxxx"},"content":"        Command testCommand \u003d new AddCommand(\"This is a test\", LocalDateTime.parse(\"2023-01-29T20:00\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Diamondroxxx"},"content":"        testCommand.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(\"Added new task!\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"Diamondroxxx"},"content":"                + \"    [D][ ] This is a test by 29 Jan, 08:00 PM\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Diamondroxxx"},"content":"                + \"You have 1 task now.\", ui.getNextOutput().getText());","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Diamondroxxx"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Diamondroxxx"},"content":"    public void eventTest() throws CatBotException {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Diamondroxxx"},"content":"        Command testCommand \u003d new AddCommand(\"This is a test\",","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Diamondroxxx"},"content":"                LocalDateTime.parse(\"2023-01-29T20:00\"), LocalDateTime.parse(\"2023-01-29T20:00\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Diamondroxxx"},"content":"        testCommand.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(1, tasks.size());","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Diamondroxxx"},"content":"        assertEquals(\"Added new task!\\n\"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"Diamondroxxx"},"content":"                + \"    [E][ ] This is a test (29 Jan, 08:00 PM – 29 Jan, 08:00 PM)\\n\"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Diamondroxxx"},"content":"                + \"You have 1 task now.\", ui.getNextOutput().getText());","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"Diamondroxxx"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Diamondroxxx"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Diamondroxxx":63}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"todo clean room","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Diamondroxxx"},"content":"deadline homework /by Friday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Diamondroxxx"},"content":"event sleep /from 10pm /to 6am","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Diamondroxxx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Diamondroxxx"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Diamondroxxx"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Diamondroxxx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Diamondroxxx"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Diamondroxxx"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Diamondroxxx"},"content":"echo meow!","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Diamondroxxx"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Diamondroxxx"},"content":"deadline /from tomorrow /to yesterday","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Diamondroxxx"},"content":"event whatever /to tomorrow","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Diamondroxxx"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Diamondroxxx":14}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"Diamondroxxx"},"content":"#!/usr/bin/env zsh","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Diamondroxxx"},"content":"if ! javac -cp ../src/main/java:/Users/duck/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/Users/duck/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Diamondroxxx"},"content":"echo \"********** BUILD SUCCESS **********\"","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Diamondroxxx"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"Diamondroxxx"},"content":"java -classpath ../bin:/Users/duck/.m2/repository/org/apache/commons/commons-text/1.10.0/commons-text-1.10.0.jar:/Users/duck/.m2/repository/org/apache/commons/commons-lang3/3.12.0/commons-lang3-3.12.0.jar CatBot.CatBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":35,"Diamondroxxx":5}}]
