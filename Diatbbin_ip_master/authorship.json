[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"3. After that, locate the `src/main/java/duke/Duke.java` file, right-click it, and choose `Run duke/Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Diatbbin":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"        showStandardStreams false","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Diatbbin":7,"-":39}},{"path":"data/dukeTasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"[D][ ] return book (by: 2023-01-24 14:00)","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"[E][ ] project meeting (from: 2023-01-25 14:00 to: 2023-01-25 14:00)","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"[T][X] borrow book","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Diatbbin":3}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import duke.storage.FileSystem;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":" * Main class of the project","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    private FileSystem db;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"     * Constructor for Duke class","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"     * @param filePath path of the storage file","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-16"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"            db \u003d new FileSystem(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"            this.tasks \u003d new TaskList(db.loadFromFile());","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"            this.parser \u003d new Parser(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"            System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"     * Runs the Duke program","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"    public void run() {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        String[] splitStr \u003d ui.getNextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"        while (!splitStr[0].equals(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"                this.parser.parseInputs(splitStr);","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"                ui.showErrorMsg(splitStr[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"                ui.showErrorMsg(tasks.getTasks().size());","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"            } finally {","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"                splitStr \u003d ui.getNextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-01-16"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"        db.updateFile(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        ui.showExit();","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"     * Main method to execute Duke program","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"     * @param arg Command line argument","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"    public static void main(String[] arg) {","lastModifiedDate":"2023-01-24"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        new Duke(\"data/dukeTasks.txt\").run();","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Diatbbin":66,"-":3}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * DukeException class that handles unique exceptions created by the Duke program","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"     * Creates string representation of a DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"     * @return the string representation of a DukeException","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"        return \"OOPS!!! \" + getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Diatbbin":20}},{"path":"src/main/java/duke/exception/EmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * EmptyTaskException class handles empty task descriptions","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class EmptyTaskException extends DukeException {","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    public EmptyTaskException(String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"        super(String.format(\"The description of a %s task cannot be empty.\", taskType));","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Diatbbin":10}},{"path":"src/main/java/duke/exception/InvalidDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * InvalidDateTimeException handles incorrect dateTime inputs","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class InvalidDateTimeException extends DukeException {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    public InvalidDateTimeException() {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"        super(\"Invalid DateTime inputs!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Diatbbin":10}},{"path":"src/main/java/duke/exception/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * InvalidTaskException class handles task that are invalid","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"        super(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Diatbbin":10}},{"path":"src/main/java/duke/helper/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.helper;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidTaskException;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":" * Parser class to parse inputs","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"public class Parser {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    public Parser(TaskList tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"     * Handles the input according to the type of the task","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    public void parseInputs(String[] inputs) throws DukeException, IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"        String type \u003d inputs[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"        switch (type) {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"        case \"list\":","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"            tasks.outputList();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"            tasks.mark(true, inputs[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"            tasks.mark(false, inputs[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"            checkTaskDesc(inputs);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"            Task toDoTask \u003d new ToDo(inputs[1], false);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"            tasks.addToTasks(toDoTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"            Ui.showTaskOutput(toDoTask, tasks.getTasks().size());","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"            checkTaskDesc(inputs);","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"            String[] deadlineDesc \u003d inputs[1].split(\" /by \");","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"            Task deadlineTask \u003d new Deadline(deadlineDesc[0], deadlineDesc[1], false);","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"            tasks.addToTasks(deadlineTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"            Ui.showTaskOutput(deadlineTask, tasks.getTasks().size());","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        case \"event\":","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"            checkTaskDesc(inputs);","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"            String[] eventDesc \u003d parseEventDesc(inputs[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"            Task eventTask \u003d new Event(eventDesc[0], eventDesc[1], eventDesc[2], false);","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"            tasks.addToTasks(eventTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"            Ui.showTaskOutput(eventTask, tasks.getTasks().size());","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"            int taskNo \u003d Integer.parseInt(inputs[1]) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"            tasks.deleteTask(taskNo);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"        case \"find\":","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"            ArrayList\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"            for (Task task : taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"                if (task.toString().contains(inputs[1])) {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"                    output.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"            Ui.filter(output);","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"            break;","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"            throw new InvalidTaskException();","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"     * Checks if the task desc is not empty","lastModifiedDate":"2023-02-01"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"     * @param taskDesc Desc of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"     * @return true if the task desc is not empty","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"     * @throws EmptyTaskException If task desc is empty","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"    public static boolean checkTaskDesc(String[] taskDesc) throws EmptyTaskException {","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"        if (taskDesc.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"            throw new EmptyTaskException(taskDesc[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"     * Parse the dateTime description into a LocalDateTime object","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"     * @param dateTime dateTime description","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"     * @return a LocalDateTime object","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"     * @throws InvalidDateTimeException If incorrect dateTime values are given","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"    public static LocalDateTime handleDateTime(String dateTime) throws InvalidDateTimeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"            String[] period \u003d dateTime.split(\"/\", 3);","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"            String[] yearTime \u003d period[2].split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"            int year \u003d Integer.parseInt(yearTime[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"            int month \u003d Integer.parseInt(period[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"            int day \u003d Integer.parseInt(period[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"            int hour \u003d Integer.parseInt(yearTime[1].substring(0, 2));","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Diatbbin"},"content":"            int min \u003d Integer.parseInt(yearTime[1].substring(2));","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"            return LocalDateTime.of(year, month, day, hour, min);","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException | DateTimeException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"            throw new InvalidDateTimeException();","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"     * Split the event desc","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"     * @param desc the desc of an event task","lastModifiedDate":"2023-01-30"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"     * @return a string array with all the parts of an event desc","lastModifiedDate":"2023-01-30"},{"lineNumber":131,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"    public static String[] parseEventDesc(String desc) {","lastModifiedDate":"2023-01-30"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"        String[] eventDesc \u003d new String[3];","lastModifiedDate":"2023-01-30"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        eventDesc[0] \u003d desc.split(\" /from \")[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"        eventDesc[1] \u003d desc.split(\" /from \")[1].split(\" /to \")[0];","lastModifiedDate":"2023-01-30"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        eventDesc[2] \u003d desc.split(\" /from \")[1].split(\" /to \")[1];","lastModifiedDate":"2023-01-30"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"        return eventDesc;","lastModifiedDate":"2023-01-30"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Diatbbin":140}},{"path":"src/main/java/duke/helper/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.helper;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":" * TaskList class that handles all the tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     * Constructor of the TaskList class","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"     * @param tasks tasks to be stored","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"     * Adds the task to the task list","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"     * @param task task to be added","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    public void addToTasks(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"     * Prints all the tasks stored in the list","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    public void outputList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"            System.out.println((i + 1) + \".\" + tasks.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"     * Deletes the task from the tasklist","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     * @param taskNo Task number to be deleted","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     * @return task that has been deleted","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    public Task deleteTask(int taskNo) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        Task task \u003d tasks.get(taskNo);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"        tasks.remove(taskNo);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"        ui.showDelete(task, tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"     * Mark or unmark a task","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"     * @param taskId id of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"    public void mark(boolean isDone, String taskId) {","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"        int taskNo \u003d Integer.parseInt(taskId) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        Task taskToMark \u003d tasks.get(taskNo);","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        taskToMark.setIsDone(isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"        ui.showMark(isDone, taskToMark);","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"     * Outputs the tasklist stored","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"     * @return tasklist stored","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"        return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Diatbbin":77}},{"path":"src/main/java/duke/helper/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.helper;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":" * Ui class that handles all the interactions with the users","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class Ui {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    private final String line \u003d \"_______________________________________________________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"    public Ui() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    public static void showErrorMsg(String type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(String.format(\"%s commands need to be followed by an integer!\", type));","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    public static void showErrorMsg(int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(String.format(\"Sorry but there are only %d tasks stored!\", size));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    public String[] getNextLine() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        String[] splitStr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"        return splitStr;","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"     * Prints the welcome message when the program starts running","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * Prints a horizontal line","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"     * Prints the exit message and close the scanner","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    public void showExit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"        scanner.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"        this.showLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"     * Prints the delete message when a task is removed","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"     * @param task task to be removed","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"     * @param size number of remaining tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"    public static void showDelete(Task task, int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(String.format(\"Now you have %d tasks in the list.\", size));","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"     * Prints the message for mark and unmark commands","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone whether a task will be marked or unmarked","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"     * @param taskToMark task to be marked or unmarked","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"    public void showMark(boolean isDone, Task taskToMark) {","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(taskToMark);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"     * Prints the message when a task is added","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"     * @param task task to be added","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"     * @param size the number of tasks after the task is added","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"    public static void showTaskOutput(Task task, int size) {","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"     * prints the message for searching a file","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"     * @param taskList List of all the tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"    public static void filter(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"            System.out.println(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Diatbbin":110}},{"path":"src/main/java/duke/storage/FileSystem.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Parser;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":" * FileSystem class that handles the saving and loading of tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"public class FileSystem {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    private File file;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"     * Constructor for FileSystem class","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"     * @param relFilePath files\u0027s location","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"     * @throws IOException If file cannot be created","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    public FileSystem(String relFilePath) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"        String dirPath \u003d relFilePath.split(\"/\")[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"        File dir \u003d new File(dirPath);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"        file \u003d new File(relFilePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"            dir.mkdirs();","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     * Updates the file according to the tasks stored on the list","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     * @param taskList the TaskList that contains all the tasks that will be stored in the file","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    public void updateFile(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"            file.delete();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"            file.createNewFile();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"            ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"                appendToFile(t.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"            e.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"     * Loads the tasks from the file into the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"     * @return an ArrayList that contains all the tasks from the file","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"     * @throws FileNotFoundException If the file cannot be found","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"    public ArrayList\u003cTask\u003e loadFromFile() throws FileNotFoundException, InvalidDateTimeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"        Scanner scanner \u003d new Scanner(file);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"        while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"            String task \u003d scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"            char taskType \u003d task.charAt(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"            boolean isMark \u003d task.charAt(4) \u003d\u003d \u0027X\u0027;","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"            switch (taskType) {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"                tasks.add(new ToDo(task.substring(7), isMark));","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"                String[] deadlineDesc \u003d task.substring(7).split(\" /by \");","lastModifiedDate":"2023-01-30"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"                tasks.add(new Deadline(deadlineDesc[0], deadlineDesc[1], isMark));","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"                String[] eventDesc \u003d Parser.parseEventDesc(task.substring(7));","lastModifiedDate":"2023-01-30"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"                tasks.add(new Event(eventDesc[0], eventDesc[1], eventDesc[2], isMark));","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"                if (isMark) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"                    tasks.get(tasks.size() - 1).setIsDone(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        return tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"     * Adds task to the file storage","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"     * @param textToAppend task to be added to file storage","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"     * @throws IOException if file cannot be created or accessed","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"    public void appendToFile(String textToAppend) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"        BufferedWriter fw \u003d new BufferedWriter(new FileWriter(file, true));","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"        fw.write(textToAppend);","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"        fw.newLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"        fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Diatbbin":116}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":" * Subclass of task representing a deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     * Constructor for Deadline Class","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"     * @param description desc of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"     * @param by task\u0027s deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"     * @throws InvalidDateTimeException If the dateTime input is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    public Deadline(String description, String by, boolean isDone) throws InvalidDateTimeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"        super(description, isDone, \"D\");","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"        this.dueDateTime \u003d Parser.handleDateTime(by);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"     * Returns the string representation of a deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"     * @return string representation of a deadline task","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"        return String.format(\"%s (by: %s %s)\", super.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"                dueDateTime.toLocalDate(), dueDateTime.toLocalTime());","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Diatbbin":37}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":" * Subclass of tasks representing an event task","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    private LocalDateTime startDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    private LocalDateTime dueDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"     * Constructor for the Event class","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"     * @param description task\u0027s desc","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"     * @param from starting date and time of event","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"     * @param to ending date and time of event","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone whether the task is done","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"     * @throws InvalidDateTimeException If the dateTime input is invalid","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    public Event(String description, String from, String to, boolean isDone) throws InvalidDateTimeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"        super(description, isDone, \"E\");","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"        startDateTime \u003d Parser.handleDateTime(from);","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"        dueDateTime \u003d Parser.handleDateTime(to);","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"     * Returns the string representation of an event task","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"     * @return string representation of an event task","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        return String.format(\"%s (from: %s %s to: %s %s)\", super.toString(),","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"                startDateTime.toLocalDate(), startDateTime.toLocalTime(),","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"                dueDateTime.toLocalDate(), startDateTime.toLocalTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Diatbbin":42}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * Task class that represents a task","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    private String description;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"    private boolean isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    private String type;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"     * Constructor for Task class","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"     * @param description desc of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone whether a task is done","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"     * @param type type of the task","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"    public Task(String description, boolean isDone, String type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"        this.type \u003d type;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"     * Returns the string representation of the task\u0027s current status","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"     * @return string representation of the task\u0027s status icon","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"     * Set whether the task is done","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"     * @param isDone represents whether a task is done","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"     * String representation of a task object","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * @return string representation of a task","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        return String.format(\"[%s][%s] %s\", this.type, this.getStatusIcon(), this.description);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Diatbbin":51}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":" * Subclass of task representing a ToDo class","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"    public ToDo(String description, boolean isDone) {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"        super(description, isDone, \"T\");","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"     * Prints the string representation of a ToDo class","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"     * @return string representation of a ToDo class","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"        return String.format(\"%s\", super.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Diatbbin":20}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    public void deadlineDesc_correctDesc_noExceptionThrown() throws InvalidDateTimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(\"[D][ ] do homework (by: 2023-01-26 15:00)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"                new Deadline(\"deadline do homework\", \"26/1/2023 1500\", false).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    public void deadlineDesc_wrongTime_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"        InvalidDateTimeException thrown \u003d assertThrows(InvalidDateTimeException.class, ()","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"                -\u003e new Deadline(\"deadline do homework\", \"26/1/2023 1500\", false));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(\"OOPS!!! Invalid DateTime inputs!\",","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"                thrown.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Diatbbin":25}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.InvalidDateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    public void eventDesc_correctDesc_noExceptionThrown() throws InvalidDateTimeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(\"[E][ ] project meeting (from: 2023-01-25 14:00 to: 2023-01-25 14:00)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"            new Event(\"project meeting\",","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"                \"25/1/2023 1400\", \"25/1/2023 1600\", false).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    public void eventDesc_wrongDay_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"        InvalidDateTimeException thrown \u003d assertThrows(InvalidDateTimeException.class, ()","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"                -\u003e new Event(\"project meeting\", \"25/1/2023 1400\",","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"                    \"25/1/2023 1600\", false));","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(\"OOPS!!! Invalid DateTime inputs!\",","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"                thrown.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Diatbbin":27}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import duke.exception.EmptyTaskException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import duke.helper.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    public void checkTaskDesc_emptyTodo_exceptionThrown() {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"        EmptyTaskException thrown \u003d assertThrows(EmptyTaskException.class, ()","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"                -\u003e Parser.checkTaskDesc(new String[]{\"todo\"}));","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(\"OOPS!!! The description of a todo task cannot be empty.\",","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"                thrown.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    public void checkTaskDesc_normalTodo_noExceptionThrown() throws EmptyTaskException {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"        boolean success \u003d Parser.checkTaskDesc(new String[]{\"todo\", \"ip\"});","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(success);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Diatbbin":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"deadline return book /by 24/1/2023 1400","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"event project meeting /from 25/1/2023 1400 /to 25/1/2023 1600","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"deadline do homework /by 26/1/2023 1500","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"todo borrow book","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"mark 4","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"list","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"blah","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"delete 3","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"mark test","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"delete test","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"deadline do homework /by 26/1/2023 2500","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"find book","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"bye","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Diatbbin":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"# run the program, feed commands from input.txt file and redirect the output to the EXPECTED.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"java -classpath ../bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Diatbbin":3,"-":35}}]
