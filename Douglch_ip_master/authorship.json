[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"# duke.duke project template","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"3. After that, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Douglch":2}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke.command could be found in your PATH.","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":":init","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"@rem Get duke.command-line arguments, handling Windows variants","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":":win9xME_args","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"@rem Slurp the duke.command line arguments.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"set _SKIP\u003d2","lastModifiedDate":"2020-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":win9xME_args_slurp","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"@rem Setup the duke.command line","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":99,"Douglch":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.exception.EmptyStorageException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" * The main class that represents the chatbot, Duke, which helps","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":" * to build a checklist consisting of todos, deadlines, events.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"public class Duke {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     * Constructor for Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * @param filePath For Duke to find the path to an existing data.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        } catch (EmptyStorageException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     * The function that handles the parsing, storage","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * and ui of Duke. Also handles the exceptions coming","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * from Command.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        this.ui.welcome();","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"            } finally {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * The main method. Initialises a Duke instance and","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * starts up the cogwheel.","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     * @param args Takes in the command line argument.","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"        new Duke(\"./data/duke.txt\").run();","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":73}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * For handling the actions to take","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * when exiting the application.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * For executing the actions taken for exiting","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * the app.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        ui.printBye();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * To close the loop in the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @return true, so that program terminates.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * An abstract class to enforce a structure","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * for command classes.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"            throws DukeException, IOException;","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":21}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handles the actions taken for a","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * request to create a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the deadline instance passed from","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * another class.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     * @param deadline Deadline instance created from another","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     *                 class.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * Adds task to task list, updates the storage and","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * finally prints the task added to command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"            taskList.addTasks(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"            ui.printAddTask(taskList, deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        } catch  (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     * Does not exit immediately after command.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     * @return False, so that loop does not terminate.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":58}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * Handles actions to take when user requests","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * for a task to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    private final int inputIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task in the","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param inputIndex Location of the task to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     *                  in the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public DeleteCommand(int inputIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        this.inputIndex \u003d inputIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Deletes task from task list, updates the storage then","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * printing to the command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with writing to the file.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        Task t \u003d taskList.deleteTasks(inputIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        ui.printDelete(taskList, t);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * Deleting the task will not terminate the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":52}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handles actions taken when user requests","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * an event to be created.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Event event;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the event instance passed from another class.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param event Event instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * Adds task to task list, updates the storage","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * and finally prints the task added to command","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * line.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"            taskList.addTasks(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"            ui.printAddTask(taskList, event);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        } catch  (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     * Adding an event task does not terminate program.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":55}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    String regex;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    public FindCommand(String regex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"        ui.printFind(taskList, this.regex);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Douglch":23}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * Handles action to be taken when a user","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * queries their list.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     * @param taskList","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param ui","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * @param storage","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        ui.printTaskList(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * List query will not terminate the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":36}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" * Handles the response for a status","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * marked as done by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param index Location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * Prints the marked task and updates the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * writing to the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"            ui.printMarkStatus(taskList, index);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * Task marked as done will not terminate","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":51}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handless actions taken when user","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * creates a to-do task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Todo todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the to-do instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * @param todo","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Adds the to-do task to task list, updates the storage,","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * then printing to the command line the added task.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @throws IOException An error with writing to storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"            taskList.addTasks(todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"            ui.printAddTask(taskList, todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * Adding to-do task does not terminate program.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":52}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.command;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" * Handles the response for a status","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * marked as not done by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task to be unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param index Location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * Prints the unmarked task and updates the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * writing to the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"            ui.printUnMarkStatus(taskList, index);","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * Task marked as undone will not terminate","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":51}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Main class to handle the exceptions thrown by Duke.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":12}},{"path":"src/main/java/duke/exception/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * An exception when a valid user command does not","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" * contain a description.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class EmptyDescException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    String taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    public EmptyDescException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":12}},{"path":"src/main/java/duke/exception/EmptyStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Command when there isn\u0027t an existing data.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class EmptyStorageException extends DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public EmptyStorageException (String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":12}},{"path":"src/main/java/duke/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * An exception when a command isn\u0027t valid.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class UnknownCommandException extends DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":10}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.command.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.exception.EmptyDescException;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import duke.exception.UnknownCommandException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * Parses the user\u0027s commands into a readable","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * format for the other classes.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Represents all the valid commands that the user can input.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    enum Commands {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        FIND,","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        TODO,","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        EVENT,","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        MARK,","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        UNMARK,","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        DELETE,","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        LIST,","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        BYE","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * Matches the appropriate enum to the input converted","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * into a string, then creates the relevant command to be","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * executed. When an input is gibberish, an exception is","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     * also thrown.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * @param fullCommand String representation of user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * @return A command to be executed.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * @throws UnknownCommandException Error when input does not match","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * any of the commands allowed.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @throws EmptyDescException Input does not contain a description.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    public static Command parse(String fullCommand) throws UnknownCommandException, EmptyDescException {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            String[] inputArr \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"            Commands command \u003d Commands.valueOf(inputArr[0].toUpperCase());","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"            String desc \u003d \"variable not initialised\";","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"            switch (command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"                case TODO:","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"                        throw new EmptyDescException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"                    for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                        sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"                        if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"                            sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"                    Todo todo \u003d new Todo(sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"                    return new TodoCommand(todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"                        throw new EmptyDescException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"                    for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"                        if (inputArr[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"                            desc \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"                            sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"                            continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"                        sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"                        if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"                            sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"                    String[] dateTime \u003d sb.toString().split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"                    Deadline deadline \u003d new Deadline(desc, dateTime[0], dateTime[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"                    return new DeadlineCommand(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"                case EVENT:","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"                        throw new EmptyDescException(\"☹ OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"                    String from \u003d \"local variable not initialised\";","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"                    for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"                        if (inputArr[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"                            desc \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"                            sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"                            continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"                        } else if (inputArr[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"                            from \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"                            sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"                            continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"                        sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"                        if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"                            sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"                        }","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"                    Event event \u003d new Event(desc, from, sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"                    return new EventCommand(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"                case MARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"                    return new MarkCommand(Integer.parseInt(inputArr[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"                    return new UnmarkCommand(Integer.parseInt(inputArr[1]));","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"                case DELETE:","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"                    int inputIndex \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"                    return new DeleteCommand(inputIndex);","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"                case LIST:","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"                case BYE:","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"                case FIND:","lastModifiedDate":"2023-01-30"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"                    if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"                        throw new EmptyDescException(\"☹ OOPS!!! You need to specify what you want to find!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"                    return new FindCommand(inputArr[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"                default:","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"                    throw new UnknownCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"            throw new UnknownCommandException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":130}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.exception.EmptyStorageException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * Handles user data by creating, loading, updating the task list","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" * in the user\u0027s hard drive.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * Constructor to instantiate the file path","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     * and array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * @param filePath","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * Loads data from the user\u0027s storage to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * If there isn\u0027t existing data, a data directory and","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * duke.txt will be created.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @return A task list for instantiating a TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * @throws EmptyStorageException Thrown when no existing data found.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public ArrayList\u003cTask\u003e load() throws EmptyStorageException {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"            File dir \u003d f.getParentFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"            if (!dir.exists() \u0026\u0026 !f.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"//                System.out.println(\"d and f don\u0027t exist\");","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"//                if(dir.mkdir()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"//                    System.out.println(\"Directory Created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"//                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"//                    System.out.println(\"Directory is not created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"//                }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"//                if(f.createNewFile()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"//                    System.out.println(\"File Created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"//                } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"//                    System.out.println(\"File is not created\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"//                }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"                dir.mkdir(); f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"                throw new EmptyStorageException(\"No existing data, creating a new file now\");","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"            else if (!f.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"            else if (!dir.exists() \u0026\u0026 f.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"                // TODO: move file to data directory if file exists but not directory","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"            else {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"//              Dir + file exists, update taskList arr","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"                    String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"                    String[] inputArr;","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"                    inputArr \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"                    this.loadTasks(inputArr, inputArr[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"            System.out.println(\"Error occurred, can\u0027t open file or something else happened\");","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"        return this.list;","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"     * Creates the relevant task type for loading","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"     * into the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"     * @param inputArr Input received from parser.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     * @param taskType The type of task received.","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"    public void loadTasks(String[] inputArr, String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"            case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"                Todo todo \u003d new Todo(inputArr[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"                this.list.add(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"                todo.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"            case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"                String[] dateTime \u003d inputArr[3].split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"                Deadline deadline \u003d new Deadline(inputArr[2], dateTime[0], dateTime[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"                this.list.add(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"                deadline.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"            case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"                Event ev \u003d new Event(inputArr[2], inputArr[3], inputArr[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"                this.list.add(ev);","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"                ev.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"     * Updates duke.txt with the appropriate format.","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"     * E.g T|1|This is a to-do task, represents a to-do task","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"     * with done status and description of \"This is a to-do task\".","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"     * @param tasklist The current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"     * @throws IOException An error when there\u0027s an issue with file writing.","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"    public void updateStorage(TaskList tasklist) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"//        System.out.println(\"entered update storage\");","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"        Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"        for (Task value : tasklist.getList()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"            task \u003d value;","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"//            System.out.println(\"taskName: \" + taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"            sb.append(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"            sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"            if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"                sb.append(\"1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"                sb.append(\"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"            sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"            sb.append(task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"            if (taskName.equals(\"D\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"                sb.append(d.getDateTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"            } else if (taskName.equals(\"E\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"                Event ev \u003d (Event) task;","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"                sb.append(ev.getFrom());","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"                sb.append(ev.getTo());","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"        fw.write(sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"        fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":149}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":" * The task to be completed with a set end date.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * Date provided must abide by M/dd/yyyy format (e.g 2/12/2019),","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * which will then be converted to MMM d yyyy (e.g Feb 12 2019).","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    protected String unFormatted;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    protected String byDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    protected String byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Instantiates the description, date and time provided.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param byDate The due date.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * @param byTime The due time.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public Deadline(String description, String byDate, String byTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        this.unFormatted \u003d byDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"M/dd/yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        LocalDate d \u003d LocalDate.parse(byDate, parseFormatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        this.byDate \u003d d.format(formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        return \"D\";","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * The date and time of the deadline, to be","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     * stored in the user\u0027s data.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of the date","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     * and time of the deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        return this.unFormatted + \" \" + this.byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * Prepends the task type and appends the due date nad time of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.byDate + \" \" + this.byTime + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":64}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * A task to be completed, set with a duration.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"     * Instantiates parent Task, the date and starting time,","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     * and the time due.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * @param from The time and date from.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     * @param to The time due.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        return \"E\";","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * The starting date and time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * @return String representation of the starting date and time set.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        return this.from;","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * The ending time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return String representation of the ending time.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return this.to;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Prepends the task type, and the duration set at","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     * the back.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     * @return The string representation of event.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":62}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * The parent for all the types of task available","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" * for the user to create.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     * Creates a task instance, usually stemming","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"     * from its child instances.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     * Gives the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * @return Returns the string of the task status.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        return (isDone ? \"X\" : \" \"); // mark done Duke.task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * For its child classes to instantiate and override,","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * not to be run by Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @return A string to indicate that this shouldn\u0027t be run","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * by Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        return \"You should not be getting this output here\";","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * Provides the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * Mainly for passing to other methods.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return Description of the task in string.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Marks the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * @param status The status to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    public void markStatus(boolean status) {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * Marks the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * This is mainly for the purpose of loading","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * the data of the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"     * @param s String indicating its status.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    public void markStatus(String s) {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d !s.equals(\"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"     * To be overridden and appended by its child classes.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Douglch":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":" * The place to store all the user\u0027s task, and perform","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * operations on.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    protected ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * Loads the task list provided from storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param taskList Loaded with tasks from storage","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        this.list \u003d taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * If the user does not have existing date, a new task list is created.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * Thus, this constructor will be used instead of the previous one.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    public void printList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"            System.out.println((i+1) + \".\" + this.list.get(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * Finds the tasks where their description matches","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * the regex of the query.","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @param regex The description to find.","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    public void findTasks(String regex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"            if (this.list.get(i).getDescription().contains(regex)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"                System.out.println((i + 1) + \".\" + task);","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     * The size of the task list, to be used by","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"     * other internal methods for calculations.","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"     * @return The size of the current task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    public int listSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"     * A specific task to be returned from a query.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"     * @return The task queried.","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"     * Returns the list of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     * @return List of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"        return this.list;","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"     * Marks the specific task specified by the query.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"    public void markStatus(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"        list.get(index - 1).markStatus(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"     * Unmarks the specific task specified by the query.","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    public void unMarkStatus(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"        list.get(index - 1).markStatus(false);","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"    public void addTasks(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"     * Deletes a task to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"     * @param inputIndex The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"    public Task deleteTasks(int inputIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"        Task task \u003d this.list.get(inputIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"        this.list.remove(inputIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":123}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * A task to be completed without a set date.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"     * Instantiates the parent instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        return \"T\";","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * Prepends a todo type of","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * its parent\u0027s string result.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @return The string result of todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":38}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" *  Handles what to show to the user in response","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" *  to their commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    private final String separator;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Constructor to instantiate a String separator","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * and a Scanner instance to receive inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public Ui () {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        this.separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     *  Displays a welcome message on","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     *  startup of the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    public void welcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        String dog \u003d \"⠀⠀⠀⠀⠀⠀⠀⢀⣀⣀⠀⣀⣀⣀⣀⢀⣀⣀⣀⣀⣀⣀⣀⣀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⣀⣰⣿⣿⡻⠟⠋⠉⠉⣻⠟⠉⠉⠉⠛⢯⡛⢿⣿⣷⣤⣀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"                \"⠀⣠⣴⠾⠛⢋⣿⠟⠋⠀⠀⠀⠀⢀⡟⠀⠀⠀⠀⠀⠀⠈⠂⣹⣿⡈⠙⠻⢶⣄⡀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"                \"⣸⠏⠀⠀⠀⣾⣋⣀⣀⡀⠀⠀⠀⢸⠁⠀⠀⢀⣀⣀⣀⡀⠀⠈⠻⣧⠀⠀⠀⠉⠻⣦\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"                \"⢿⡀⠀⣿⣿⠟⣫⣽⣿⣿⣿⣿⣶⣶⣶⡶⠛⣻⣿⣿⣿⣿⣿⣿⣿⣿⡇⠀⠀⠀⢀⣿\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"                \"⠸⣧⠀⠈⣿⢸⣿⣿⣿⣿⣿⣿⣿⠁⢹⡇⣼⣿⣿⣿⣿⣿⣿⣿⠁⣼⡇⠀⠀⠀⣼⠇\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"                \"⠀⠹⣷⡀⢹⣿⣿⣿⣿⣿⣿⣿⠏⠀⠀⢻⣿⣿⣿⣿⣿⣿⣿⠏⠀⣿⡇⠀⣠⡾⠋⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠈⢿⣿⢿⡿⠿⠿⣿⠟⠉⠀⠀⠀⠀⠙⠛⢿⡿⠿⠛⠉⠀⠀⡿⣷⣾⠏⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠈⠋⠘⣷⠀⢀⡿⢰⣾⣟⣛⣿⣿⣷⡄⠀⢻⣆⠀⠀⠀⢰⡇⠘⠋⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠹⣧⣼⠃⠈⣧⣼⣿⣇⣈⣿⠃⠀⠀⣿⣀⣀⣴⠟⠁⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠙⢿⣆⠀⠈⠙⢿⡛⠉⠁⠀⠀⣠⡿⣿⣿⠁⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠀⠈⣿⡿⢶⣶⣾⣿⣶⣤⣤⣶⢿⣼⣿⠃⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⢹⣧⡼⠁⠉⠏⠁⠈⢹⣠⣾⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⢿⣧⠀⠀⠀⠀⠀⣸⣿⣿⠏⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⣷⣤⣤⣤⡾⣿⡿⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\\n\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"                \"⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠘⠿⢶⣾⣶⠾⠛⠁⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀\";","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Good ta see yer dawg, Duke\u0027s at yer service.\\n\" + dog);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     * Ignores empty lines inputted by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * @param inputLine Line that the user has inputted.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     * @return Returns a boolean indicating whether the line","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * is empty.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    private boolean shouldIgnore(String inputLine) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        return inputLine.trim().isEmpty();","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * Takes in the user\u0027s input (excluding empty lines).","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * @return The string containing the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        while (shouldIgnore(command)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"        return command;","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line the separator line.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"        System.out.println(this.separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"     * Displays a message when the user does not have an","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"     * existing data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"No existing data, creating new files now\");","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line the error message","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * received from the user\u0027s commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     * @param message Receives the string from exception.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        System.out.println(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line a message when the user inputs","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"     * bye.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"    public void printBye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"See yer again RUFF!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"     * Prints the list of tasks created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList instance created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"    public void printTaskList(TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Here are the tasks in your list dawg:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"        taskList.printList();","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"     * Prints the message when a user marks a","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"     * task in the checklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"     * @param index The index of the task marked by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"    public void printMarkStatus(TaskList taskList, int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"        taskList.markStatus(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"The task is marked, dawg\");","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"        System.out.println(taskList.getTask(index - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"     * Prints the message when a user unmarks a","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"     * task in the checklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"     * @param index The index of the task unmarked by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"    public void printUnMarkStatus(TaskList taskList, int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"        taskList.unMarkStatus(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Gotcha dawg, unmarked\");","lastModifiedDate":"2023-01-25"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"        System.out.println(taskList.getTask(index - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"     * Prints the message for when a user adds a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"     * @param task The task to be added","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"    public void printAddTask(TaskList taskList, Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Gotcha, I\u0027ve added:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Now you have \" + taskList.listSize() + \" in the list!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"     * Prints the message for when a user deletes a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"Douglch"},"content":"    public void printDelete(TaskList taskList, Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Removing your task? It\u0027s gone now RUFF:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"  \" + task);","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Now you have \" + taskList.listSize() + \" in the list!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"    public void printFind(TaskList taskList, String regex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"        taskList.findTasks(regex);","lastModifiedDate":"2023-01-30"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":175}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":4}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    public void correctDateFormatTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        Deadline deadline \u003d new Deadline(\"This is a deadline test\", \"2/12/2019\", \"1800\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        assertEquals(\"[D][ ] This is a deadline test(by: Feb 12 2019 1800)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":13}},{"path":"src/test/java/duke/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package duke.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    public void correctDescriptionTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        Todo todo \u003d new Todo(\"This is a todo test\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        assertEquals(\"[T][ ] This is a todo test\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"mark 1","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"event","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"gibberish stuff this should throw an error","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"list","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"bye","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Douglch":1}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Douglch":2}}]
