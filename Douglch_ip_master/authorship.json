[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"# lele.lele project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"3. After that, locate the `src/main/java/lele.lele.java` file, right-click it, and choose `Run lele.lele.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":22,"Douglch":2}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    mainClassName \u003d \"lele.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    archiveBaseName \u003d \"lele\"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"-":39,"Douglch":25}},{"path":"src/main/java/lele/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Douglch":62}},{"path":"src/main/java/lele/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"public class Launcher {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Douglch":13}},{"path":"src/main/java/lele/Lele.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.exception.LeleException;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" * The main class that represents the chatbot, Lele, which helps","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":" * to build a checklist consisting of todos, deadlines, events.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"public class Lele {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * Constructor for Lele.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * @param filePath For Duke to find the path to an existing data.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    public Lele(String filePath) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"            taskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        } catch (LeleException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * Handles running the program with the respective components.","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * This function will catch checked exceptions thrown by the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        this.ui.welcome();","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            try {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"                String output \u003d c.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"                System.out.println(output);","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"            } catch (LeleException | IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"                assert ui.showError(e.getMessage()) instanceof String : \"Function should return a string\";","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"                System.out.println(ui.showError(e.getMessage()));","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"            } finally {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"     * The main method, initialises the program instance.","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"     * @param args Takes in the command line argument.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"        new Lele(\"./data/lele.txt\").run();","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"     * Receives user input from GUI and responds","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"     * accordingly with commands.","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     * @param input Query from user.","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"     * @return Response for user\u0027s query.","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"            Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"            return c.execute(taskList, ui, storage);","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        } catch (LeleException | IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"            return ui.showError(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":92}},{"path":"src/main/java/lele/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * Credits to @SPWwj for the idea of creating a separate class","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" * to handle the GUI.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    private final Lele lele \u003d new Lele(\"./data/lele.txt\");","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public Main() {}","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setLele(lele);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Douglch":33}},{"path":"src/main/java/lele/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    private Lele lele;","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    public void setLele(Lele d) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        lele \u003d d;","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    @FXML","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        String response \u003d lele.getResponse(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        );","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Douglch":50}},{"path":"src/main/java/lele/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * For handling the actions to take","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * when exiting the application.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * For executing the actions taken for exiting","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * the app.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        return ui.printBye();","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * To close the loop in the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @return true, so that program terminates.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        return true;","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":36}},{"path":"src/main/java/lele/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.exception.LeleException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * An abstract class to enforce a structure","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * for command classes.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"            throws LeleException, IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":22}},{"path":"src/main/java/lele/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handles the actions taken for a","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * request to create a deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Deadline deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the deadline instance passed from","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * another class.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     * @param deadline Deadline instance created from another","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     *                 class.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    public DeadlineCommand(Deadline deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * Adds task to task list, updates the storage and","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * finally prints the task added to command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"            taskList.addTask(deadline);","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"            return ui.printAddTask(taskList, deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     * Does not exit immediately after command.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"     * @return False, so that loop does not terminate.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":59}},{"path":"src/main/java/lele/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handles actions to take when user requests","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * for a task to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final int inputIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task in the","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * @param inputIndex Location of the task to be deleted","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     *                  in the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    public DeleteCommand(int inputIndex) {","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        this.inputIndex \u003d inputIndex;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * Deletes task from task list, updates the storage then","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * printing to the command line.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with writing to the file.","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        Task t \u003d taskList.deleteTask(inputIndex);","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        return ui.printDelete(taskList, t);","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * Deleting the task will not terminate the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":54}},{"path":"src/main/java/lele/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handles actions taken when user requests","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * an event to be created.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Event event;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the event instance passed from another class.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param event Event instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public EventCommand(Event event) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * Adds task to task list, updates the storage","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * and finally prints the task added to command","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * line.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"            taskList.addTask(event);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"            storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"            return ui.printAddTask(taskList, event);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     * Adding an event task does not terminate program.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":56}},{"path":"src/main/java/lele/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * Given a regex,","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * executes the actions to take upon a find command.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    private final String regex;","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * Instantiates the regex queried by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param regex Input taken from user.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"    public FindCommand(String regex) {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        this.regex \u003d regex;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * Executes printing of tasks queried by user.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"        return ui.printFind(taskList, this.regex);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * Find query will not terminate the program.","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Douglch":44}},{"path":"src/main/java/lele/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * Handles action to be taken when a user","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * queries their list.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        return ui.printTaskList(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * List query will not terminate the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":36}},{"path":"src/main/java/lele/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" * Handles the response for a status","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * marked as done by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param index Location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     * Prints the marked task and updates the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with writing to the storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        taskList.markStatus(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        return ui.printMarkStatus(taskList, index);","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * Task marked as done will not terminate","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":52}},{"path":"src/main/java/lele/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * Handless actions taken when user","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * creates a to-do task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final Todo todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * Instantiates the to-do instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * @param todo Instantiates the to-do created by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public TodoCommand(Todo todo) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        this.todo \u003d todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Adds the to-do task to task list, updates the storage,","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * then printing to the command line the added task.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @throws IOException An error with writing to storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        taskList.addTask(todo);","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"        return ui.printAddTask(taskList, todo);","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     * Adding to-do task does not terminate program.","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":53}},{"path":"src/main/java/lele/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.exception.NoPreviousCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.task.Task;","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" * Undo the previous commands by x number of versions (Only for CRUD commands)","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private int index;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public UndoCommand(int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     * Undo the previous command, updates the storage","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * and prints to user.","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException, NoPreviousCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        taskList.restorePreviousList(this.index);","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"        return ui.printUndo(taskList, index);","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * Does not exit immediately after command.","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * @return False, so that loop does not terminate.","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Douglch":49}},{"path":"src/main/java/lele/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * Handles the response for a status","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * marked as not done by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    private final int index;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Instantiates the index of the task to be unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param index Location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * Prints the unmarked task and updates the storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param ui Current ui instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @param storage Current storage instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * @return Output to user","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * @throws IOException When there is a problem with writing to the storage.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws IOException {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"        taskList.unMarkStatus(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        storage.updateStorage(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        return ui.printUnMarkStatus(taskList, index);","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * Task marked as undone will not terminate","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return False.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"        return false;","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":53}},{"path":"src/main/java/lele/exception/EmptyDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * An exception when a valid user command does not","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" * contain a description.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class EmptyDescException extends LeleException {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public EmptyDescException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":11}},{"path":"src/main/java/lele/exception/EmptyStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Command when there isn\u0027t an existing data.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class EmptyStorageException extends LeleException {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public EmptyStorageException(String message) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":12}},{"path":"src/main/java/lele/exception/LeleException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * Main class to handle the exceptions thrown by Duke.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class LeleException extends Exception {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    public LeleException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Douglch":12}},{"path":"src/main/java/lele/exception/LoadingFailureException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * For when files fail to load due to something that happened with the system","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class LoadingFailureException extends LeleException {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"    public LoadingFailureException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Douglch":10}},{"path":"src/main/java/lele/exception/NoPreviousCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-09"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"public class NoPreviousCommandException extends LeleException {","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"    public NoPreviousCommandException(String message) {","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"Douglch":7}},{"path":"src/main/java/lele/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * An exception when a command isn\u0027t valid.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class UnknownCommandException extends LeleException {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"    public UnknownCommandException(String message) {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"        super(message);","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":10}},{"path":"src/main/java/lele/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import lele.command.*;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import lele.exception.EmptyDescException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.exception.UnknownCommandException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import lele.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"import lele.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" * Parses the user\u0027s commands into a readable","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" * format for the other classes.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    private static int index;","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Represents all the valid commands that the user can input.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    enum Commands {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        FIND,","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"        TODO,","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        DEADLINE,","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        EVENT,","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        MARK,","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        UNMARK,","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        DELETE,","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        LIST,","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        BYE,","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        UNDO,","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * Matches the appropriate enum to the input converted","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * into a string, then creates the relevant command to be","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * executed. When an input is gibberish, an exception is","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * also thrown.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     * @param fullCommand String representation of user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * @return A command to be executed.","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * @throws UnknownCommandException Error when input does not match any of the commands allowed.","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     * @throws EmptyDescException Input does not contain a description.","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    public static Command parse(String fullCommand) throws UnknownCommandException, EmptyDescException {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"            String[] inputArr \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"            Commands command \u003d Commands.valueOf(inputArr[0].toUpperCase());","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            String desc \u003d \"variable not initialised\";","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"            switch (command) {","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"            case TODO:","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"                    throw new EmptyDescException(\"OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"                for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"                    sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"                    if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"                        sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"                Todo todo \u003d new Todo(sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"                return new TodoCommand(todo);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"                    throw new EmptyDescException(\"OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"                for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"                    if (inputArr[i].equals(\"/by\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"                        desc \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"                        sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"                        continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"                    sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"                    if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"                        sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"                String[] dateTime \u003d sb.toString().split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"                assert !desc.isEmpty() : \"desc (deadline description) should be filled, otherwise caught by exception\";","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"                Deadline deadline \u003d new Deadline(desc, dateTime[0], dateTime[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"                return new DeadlineCommand(deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"            case EVENT:","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"                    throw new EmptyDescException(\"OOPS!!! The description of an event cannot be empty.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"                String from \u003d \"local variable not initialised\";","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"                for (int i \u003d 1; i \u003c inputArr.length; i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"                    if (inputArr[i].equals(\"/from\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"                        desc \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"                        sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"                        continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"                    } else if (inputArr[i].equals(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"                        from \u003d sb.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"                        sb.setLength(0);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"                        continue;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"                    sb.append(inputArr[i]);","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"                    if (i !\u003d inputArr.length - 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"                        sb.append(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"                    }","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"                assert !desc.isEmpty() : \"desc (event description) should be filled, otherwise caught by exception\";","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"                assert !from.isEmpty() : \"from (event starting date) should be filled\";","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"                Event event \u003d new Event(desc, from, sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"                return new EventCommand(event);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"            case MARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"                index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"                return new MarkCommand(index);","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"                index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"                return new UnmarkCommand(index);","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"            case DELETE:","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"                index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"                return new DeleteCommand(index);","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"            case LIST:","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"            case BYE:","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"            case FIND:","lastModifiedDate":"2023-01-30"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"                if (inputArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-30"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"                    throw new EmptyDescException(\"OOPS!!! You need to specify what you want to find!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-30"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"                return new FindCommand(inputArr[1]);","lastModifiedDate":"2023-01-30"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"            case UNDO:","lastModifiedDate":"2023-02-08"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"                int index \u003d Integer.parseInt(inputArr[1]);","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"                return new UndoCommand(index);","lastModifiedDate":"2023-02-09"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"            default:","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"                assert false; // Execution should never reach this point!","lastModifiedDate":"2023-02-06"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"                throw new UnknownCommandException(\"OOPS!!! You need to give me an input :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"            throw new UnknownCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":136}},{"path":"src/main/java/lele/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.io.File;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"import lele.exception.EmptyStorageException;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"import lele.exception.LoadingFailureException;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"import lele.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"import lele.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"import lele.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"import lele.task.Todo;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":" * Handles user data by creating, loading, updating the task list","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":" * in the user\u0027s hard drive.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    private final String filePath;","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    private final ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * Constructor to instantiate the file path","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * and array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     * @param filePath Receives the file path from Lele.java","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        assert filePath.equals(\"./data/lele.txt\") : \"Filepath invalid\";","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     * Loads data from the user\u0027s storage to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * If there isn\u0027t existing data, a data directory and","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     * duke.txt will be created.","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * @return A task list for instantiating a TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * @throws EmptyStorageException Thrown when no existing data found.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    public ArrayList\u003cTask\u003e load() throws EmptyStorageException, LoadingFailureException {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"            File f \u003d new File(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"            File dir \u003d f.getParentFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"            if (!dir.exists() \u0026\u0026 !f.exists()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"                dir.mkdir();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"                f.createNewFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"                throw new EmptyStorageException(\"No existing data, creating a new file now\");","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"            } else if (!f.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"                f.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"            } else if (!dir.exists() \u0026\u0026 f.exists()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"                // TODO: move file to data directory if file exists but not directory","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"                // Dir + file exists, update taskList arr","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"                Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"                while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"                    String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"                    String[] inputArr;","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"                    inputArr \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"                    this.loadTasks(inputArr, inputArr[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"            System.out.println(\"Error occurred, can\u0027t open file or something else happened\");","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"        return this.list;","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"     * Creates the relevant task type for loading","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"     * into the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"     * @param inputArr Input received from parser.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     * @param taskType The type of task received.","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"    public void loadTasks(String[] inputArr, String taskType) throws LoadingFailureException {","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"            Todo todo \u003d new Todo(inputArr[2]);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"            this.list.add(todo);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"            todo.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"        case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"            String[] dateTime \u003d inputArr[3].split(\" \");","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"            Deadline deadline \u003d new Deadline(inputArr[2], dateTime[0], dateTime[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"            this.list.add(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"            deadline.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"            break;","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"        case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"            Event ev \u003d new Event(inputArr[2], inputArr[3], inputArr[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"            this.list.add(ev);","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"            ev.markStatus(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"            throw new LoadingFailureException(\"File couldn\u0027t be loaded: Possibly due to wrong format\");","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     * Updates lele.txt with the appropriate format.","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"     * E.g T|1|This is a to-do task, represents a to-do task","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"     * with done status and description of \"This is a to-do task\".","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"     * @param tasklist The current task list instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"     * @throws IOException An error when there\u0027s an issue with file writing.","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"    public void updateStorage(TaskList tasklist) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"        Task task;","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"        FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"        for (Task value : tasklist.getList()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"            task \u003d value;","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"            assert task !\u003d null : \"The current task list in storage shouldn\u0027t be empty\";","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"            String taskName \u003d task.getName();","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"            sb.append(taskName);","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"            sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"            if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"                sb.append(\"1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"                sb.append(\"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"            sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"            sb.append(task.getDescription());","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"            if (taskName.equals(\"D\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"                Deadline d \u003d (Deadline) task;","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"                sb.append(d.getDateTime());","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"            } else if (taskName.equals(\"E\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"                Event ev \u003d (Event) task;","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"                sb.append(ev.getFrom());","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"                sb.append(\"|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"                sb.append(ev.getTo());","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"            sb.append(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"        fw.write(sb.toString().trim());","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"        fw.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":145}},{"path":"src/main/java/lele/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":" * The task to be completed with a set end date.","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * Date provided must abide by M/dd/yyyy format (e.g 2/12/2019),","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * which will then be converted to MMM d yyyy (e.g Feb 12 2019).","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    protected String unFormatted;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    protected String byDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    protected String byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Instantiates the description, date and time provided.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * @param description Description of Deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @param byDate The due date.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     * @param byTime The due time.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public Deadline(String description, String byDate, String byTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        this.unFormatted \u003d byDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"        DateTimeFormatter parseFormatter \u003d DateTimeFormatter.ofPattern(\"M/dd/yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        LocalDate d \u003d LocalDate.parse(byDate, parseFormatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        this.byDate \u003d d.format(formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"        this.byTime \u003d byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        return \"D\";","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * The date and time of the deadline, to be stored in the user\u0027s data.","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of the date and time of the deadline.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public String getDateTime() {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return this.unFormatted + \" \" + this.byTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Prepends the task type and appends the due date nad time of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of the deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + this.byDate + \" \" + this.byTime + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":62}},{"path":"src/main/java/lele/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * A task to be completed, set with a duration.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"     * Instantiates parent Task, the date and starting time,","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     * and the time due.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     * @param description Description of Event.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * @param from The time and date from.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     * @param to The time due.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task for storage.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"        return \"E\";","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * The starting date and time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * @return String representation of the starting date and time set.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"    public String getFrom() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        return this.from;","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * The ending time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return String representation of the ending time.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public String getTo() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return this.to;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Prepends the task type, and the duration set at","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     * the back.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     * @return The string representation of event.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":62}},{"path":"src/main/java/lele/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * The parent for all the types of task available","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" * for the user to create.","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     * Creates a task instance, usually stemming","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"     * from its child instances.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"     * Gives the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"     * @return Returns the string of the task status.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        return (isDone ? \"X\" : \" \"); // mark done Duke.task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     * For its child classes to instantiate and override,","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * not to be run by Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @return A string to indicate that this shouldn\u0027t be run by Task.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"        assert false : \"Method should not be called on the parent class\"; // Should not reach here","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        return \"Should not be returned\";","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"     * Provides the description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"     * Mainly for passing to other methods.","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"     * @return Description of the task in string.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        return this.description;","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"     * Marks the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"     * @param status The status to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    public void markStatus(boolean status) {","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d status;","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * Marks the status of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * This is mainly for the purpose of loading","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * the data of the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"     * @param s String indicating its status.","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    public void markStatus(String s) {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"        this.isDone \u003d !s.equals(\"0\");","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"     * To be overridden and appended by its child classes.","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"     * @return A string representation of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Douglch":82}},{"path":"src/main/java/lele/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import lele.exception.NoPreviousCommandException;","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":" * The place to store all the user\u0027s task, and perform","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":" * operations on.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    protected ArrayList\u003cTask\u003e list; // Always contain the most updated list","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private ArrayList\u003cArrayList\u003cTask\u003e\u003e cache;","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"     * Important note: Cache the list FIRST before committing to any","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * operations on this.list. THis is so that the original cache","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * does not get overridden by the operations, then caching that","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * wrong version!","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public void cacheList() {","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        ArrayList\u003cTask\u003e toBeStored \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        for (Task task: this.list) {","lastModifiedDate":"2023-02-09"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"            toBeStored.add(task);","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"        this.list \u003d toBeStored;","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"        this.cache.add(toBeStored);","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"     * Restores previous cache by index number of version.","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"     * @param index number of versions to backtrack by.","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"     * @throws NoPreviousCommandException Thrown if exceeded version","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"    public void restorePreviousList(int index) throws NoPreviousCommandException {","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"        // Don\u0027t do anything if number of versions to undo is 0","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"        if (index \u003d\u003d 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"            return;","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        // Need to add 1 to account for the original list at index 0","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"        int versionToBeRestoredTo \u003d this.cache.size() - index - 1;","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"        if (versionToBeRestoredTo \u003c 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"            throw new NoPreviousCommandException(\"Not possible, that\u0027s too far back into history!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"        this.list \u003d this.cache.get(versionToBeRestoredTo);","lastModifiedDate":"2023-02-09"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"        /*  Clears all versions in the cache after the calculated index.","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"            If cache size is equals to 1, it\u0027ll mean that the cache has","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"            only 1 item, which implies that it is at its original version.","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"         */","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"        if (this.cache.size() \u003e 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"            this.cache.subList(versionToBeRestoredTo + 1, this.cache.size()).clear();","lastModifiedDate":"2023-02-09"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"     * Loads the task list provided from storage.","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"     * @param storageList Loaded with tasks from storage","lastModifiedDate":"2023-02-09"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"    public TaskList(ArrayList\u003cTask\u003e storageList) {","lastModifiedDate":"2023-02-09"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"        this.list \u003d storageList;","lastModifiedDate":"2023-02-09"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"        this.cache \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"        // Adds the original task list in the storage to the cache","lastModifiedDate":"2023-02-09"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"        this.cache.add(storageList);","lastModifiedDate":"2023-02-09"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"     * If the user does not have existing date, a new task list is created.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"     * Thus, this constructor will be used instead of the previous one.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"        this.cache \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"        this.cache.add(new ArrayList\u003c\u003e());","lastModifiedDate":"2023-02-09"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"    public String printList() {","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"            sb.append((i + 1) + \".\" + this.list.get(i) + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-30"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"     * Finds the tasks where their description matches","lastModifiedDate":"2023-01-30"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"     * the regex of the query.","lastModifiedDate":"2023-01-30"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"     * @param regex The description to find.","lastModifiedDate":"2023-01-30"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"     * @return Output tasks to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-30"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"    public String findTask(String regex) {","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"        for (int i \u003d 0; i \u003c this.list.size(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"            Task task \u003d this.list.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"            if (this.list.get(i).getDescription().contains(regex)) {","lastModifiedDate":"2023-01-30"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"                sb.append((i + 1) + \".\" + task + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"     * The size of the task list, to be used by","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"     * other internal methods for calculations.","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"     * @return The size of the current task list.","lastModifiedDate":"2023-01-30"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"    public int listSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"     * A specific task to be returned from a query.","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"     * @return The task queried.","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"     * Returns the list of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"     * @return List of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"        return this.list;","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"     * Marks the specific task specified by the query.","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"    public void markStatus(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"        assert list.get(index - 1) \u003d\u003d null : \"Object called should be of type task.\";","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"        cacheList();","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"        list.get(index - 1).markStatus(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"     * Unmarks the specific task specified by the query.","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"     * @param index The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"    public void unMarkStatus(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"        cacheList();","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"        list.get(index - 1).markStatus(false);","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"     * Adds a task to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Douglch"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"Douglch"},"content":"        cacheList();","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"        this.list.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"     * Deletes a task to the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"     * @param inputIndex The location of the task in the array list.","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"    public Task deleteTask(int inputIndex) {","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"        // Use an exception instead of assert to handle the code below","lastModifiedDate":"2023-02-06"},{"lineNumber":176,"author":{"gitId":"Douglch"},"content":"        // assert this.listSize() \u003e\u003d inputIndex : \"Index parameter queried should be within the task size\";","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"Douglch"},"content":"        cacheList();","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"Douglch"},"content":"        Task task \u003d this.list.get(inputIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"Douglch"},"content":"        this.list.remove(inputIndex - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"Douglch"},"content":"        return task;","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":183,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":183}},{"path":"src/main/java/lele/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":" * A task to be completed without a set date.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"     * Instantiates the parent instance.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"     * @param description Description of the todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Identifier of the type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     * @return The type of task in a string.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"    public String getName() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        return \"T\";","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"     * Prepends a todo type of","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     * its parent\u0027s string result.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     * @return The string result of todo.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Douglch":37}},{"path":"src/main/java/lele/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import lele.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"import lele.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":" *  Handles what to show to the user in response","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":" *  to their commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"    private final String separator;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"    private final StringBuilder sb;","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"     * Constructor to instantiate a String separator","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"     * and a Scanner instance to receive inputs.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Douglch"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"        this.separator \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"Douglch"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Douglch"},"content":"        this.sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Douglch"},"content":"     *  Displays a welcome message on","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Douglch"},"content":"     *  startup of the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Douglch"},"content":"    public void welcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"Good ta see yer dawg, Lele\u0027s at yer service.\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Douglch"},"content":"     * Ignores empty lines inputted by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Douglch"},"content":"     * @param inputLine Line that the user has inputted.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Douglch"},"content":"     * @return Returns a boolean indicating whether the line is empty.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Douglch"},"content":"    private boolean shouldIgnore(String inputLine) {","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Douglch"},"content":"        return inputLine.trim().isEmpty();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Douglch"},"content":"     * Takes in the user\u0027s input (excluding empty lines).","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Douglch"},"content":"     * @return The string containing the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Douglch"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Douglch"},"content":"        String command \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Douglch"},"content":"        while (shouldIgnore(command)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Douglch"},"content":"            command \u003d sc.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Douglch"},"content":"        return command;","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"Douglch"},"content":"     * Helps to clear the strings contained in StringBuilder.","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"Douglch"},"content":"     * More efficient compared to creating a new instance of string builder","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"Douglch"},"content":"     * each time a function is called.","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":66,"author":{"gitId":"Douglch"},"content":"    public void clearBuffer() {","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"Douglch"},"content":"        this.sb.setLength(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line the separator line.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Douglch"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"Douglch"},"content":"        System.out.println(this.separator);","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Douglch"},"content":"     * Displays a message when the user does not have an","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Douglch"},"content":"     * existing data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Douglch"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"Douglch"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Douglch"},"content":"        System.out.println(\"No existing data, creating new files now\");","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Douglch"},"content":"        showLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line the error message","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Douglch"},"content":"     * received from the user\u0027s commands.","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Douglch"},"content":"     * @param message Receives the string from exception.","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Douglch"},"content":"    public String showError(String message) {","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"Douglch"},"content":"        return message;","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Douglch"},"content":"     * Prints to the command line a message when the user inputs","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Douglch"},"content":"     * bye.","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Douglch"},"content":"    public String printBye() {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"Douglch"},"content":"        return \"See yer again RUFF!\";","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Douglch"},"content":"     * Prints the list of tasks created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList instance created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Douglch"},"content":"    public String printTaskList(TaskList taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":113,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Here are the tasks in your list dawg:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"Douglch"},"content":"        sb.append(taskList.printList());","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Douglch"},"content":"     * Prints the message when a user marks a","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Douglch"},"content":"     * task in the checklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Douglch"},"content":"     * @param index The index of the task marked by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Douglch"},"content":"    public String printMarkStatus(TaskList taskList, int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"Douglch"},"content":"        sb.append(\"The task is marked, dawg\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":129,"author":{"gitId":"Douglch"},"content":"        sb.append(taskList.getTask(index - 1));","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"Douglch"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":131,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"Douglch"},"content":"     * Prints the message when a user unmarks a","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Douglch"},"content":"     * task in the checklist.","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Douglch"},"content":"     * @param index The index of the task unmarked by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"Douglch"},"content":"    public String printUnMarkStatus(TaskList taskList, int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":144,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Gotcha dawg, unmarked\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"Douglch"},"content":"        sb.append(taskList.getTask(index - 1));","lastModifiedDate":"2023-02-03"},{"lineNumber":146,"author":{"gitId":"Douglch"},"content":"        sb.append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":148,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Douglch"},"content":"     * Prints the message for when a user adds a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Douglch"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":155,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":156,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"Douglch"},"content":"    public String printAddTask(TaskList taskList, Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":158,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":159,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Gotcha, I\u0027ve added:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":160,"author":{"gitId":"Douglch"},"content":"        sb.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":161,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Now you have \" + taskList.listSize() + \" in the list!\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":162,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":163,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":166,"author":{"gitId":"Douglch"},"content":"     * Prints the message for when a user deletes a task.","lastModifiedDate":"2023-01-29"},{"lineNumber":167,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"Douglch"},"content":"     * @param taskList TaskList created by the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"Douglch"},"content":"     * @param task The task to be deleted.","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"Douglch"},"content":"     * @return Output to user.","lastModifiedDate":"2023-02-03"},{"lineNumber":171,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"Douglch"},"content":"    public String printDelete(TaskList taskList, Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":173,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":174,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Removing your task? It\u0027s gone now RUFF:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":175,"author":{"gitId":"Douglch"},"content":"        sb.append(\"  \" + task + \"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":176,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Now you have \" + taskList.listSize() + \" in the list!\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":177,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":178,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":180,"author":{"gitId":"Douglch"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"Douglch"},"content":"     * Prints the response to the command line when user inputs","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"Douglch"},"content":"     * a find command, with the tasks matching the regex.","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"Douglch"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"Douglch"},"content":"     * @param taskList Current task list created by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"Douglch"},"content":"     * @param regex Regex queried by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"Douglch"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"Douglch"},"content":"    public String printFind(TaskList taskList, String regex) {","lastModifiedDate":"2023-02-03"},{"lineNumber":188,"author":{"gitId":"Douglch"},"content":"        clearBuffer();","lastModifiedDate":"2023-02-03"},{"lineNumber":189,"author":{"gitId":"Douglch"},"content":"        sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":190,"author":{"gitId":"Douglch"},"content":"        sb.append(taskList.findTask(regex));","lastModifiedDate":"2023-02-07"},{"lineNumber":191,"author":{"gitId":"Douglch"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":192,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":193,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"Douglch"},"content":"    public String printUndo(TaskList taskList, int index) {","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"Douglch"},"content":"        if (index \u003c\u003d 1) {","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"Douglch"},"content":"            return \"Your list has been undone by 1 version :)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"Douglch"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"Douglch"},"content":"        return \"Your list has been undone by \" + index + \" versions :)\";","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"Douglch":200}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Douglch":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"lele.MainWindow\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"Douglch"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"Douglch"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"Douglch"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"Douglch"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"Douglch":19}},{"path":"src/test/java/lele/LeleTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"public class LeleTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Douglch":4}},{"path":"src/test/java/lele/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    public void correctDateFormatTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        Deadline deadline \u003d new Deadline(\"This is a deadline test\", \"2/12/2019\", \"1800\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        assertEquals(\"[D][ ] This is a deadline test(by: Feb 12 2019 1800)\", deadline.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":13}},{"path":"src/test/java/lele/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"package lele.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Douglch"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Douglch"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Douglch"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Douglch"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Douglch"},"content":"    public void correctDescriptionTest() {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"        Todo todo \u003d new Todo(\"This is a todo test\");","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Douglch"},"content":"        assertEquals(\"[T][ ] This is a todo test\", todo.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Douglch"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Douglch"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Douglch":13}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Douglch"},"content":"todo borrow book","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Douglch"},"content":"list","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Douglch"},"content":"bye","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Douglch":3}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Douglch"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\lele\\*.java","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Douglch"},"content":"java -classpath ..\\bin lele.lele \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"Douglch":2}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Douglch"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/lele/*.java","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Douglch"},"content":"java -classpath ../bin lele.Lele \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":36,"Douglch":2}}]
