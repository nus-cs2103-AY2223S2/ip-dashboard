[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"EksdeeeX":16,"-":40}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":" * Class for Deadline object.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" * Stores task and deadline.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    private LocalDateTime deadline; ","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter acceptingFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for Deadline object.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"     * @param task task description","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"     * @param deadline String format of the deadline of the task","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"     * @return a Deadline object.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    public Deadline(String task, String deadline) {","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"            LocalDateTime temp \u003d LocalDateTime.parse(deadline, acceptingFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"            this.deadline \u003d LocalDateTime.parse(temp.format(displayFormat), displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"            throw new DateTimeParseException(deadline, deadline, 0);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        return this.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"        return this.deadline.format(displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"    ","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"    @Override ","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        return \"[D] \" + super.toString() + \" (by: \" + this.deadline.format(displayFormat) + \"Hrs\" + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"EksdeeeX":49}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"    private void flip() {","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"        db.flip();","lastModifiedDate":"2023-02-10"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"        return db;","lastModifiedDate":"2023-02-10"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * Duke is Personal Assistant Chatbot that helps a person to keep track of various tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"public class Duke {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * Main method for Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"     * @param args String arguments that are passed in by user upon start up of Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when file path not found, IOException is thrown.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"EksdeeeX":24,"-":1}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke; ","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" * Class for Event object.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * Stores task, start and end deadline of an event.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    private LocalDateTime start;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    private LocalDateTime end;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter acceptingFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter displayFormat \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for Event object.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"     * @param task Description of the Event.","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"     * @param start Starting date and time of the Event.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"     * @param end Ending date and time of the Event.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"     * @return an Event object.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    public Event(String task, String start, String end) {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"            LocalDateTime temp \u003d LocalDateTime.parse(start, acceptingFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"            this.start \u003d LocalDateTime.parse(temp.format(displayFormat), displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"            this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"            throw new DateTimeParseException(end, end, 0);","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"            } try {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime temp \u003d LocalDateTime.parse(end, acceptingFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"                this.end \u003d LocalDateTime.parse(temp.format(displayFormat), displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"            throw new DateTimeParseException(end, end, 0);","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"            ","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        return this.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    public String getStart() {","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"        return this.start.format(displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    public String getEnd() {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"        return this.end.format(displayFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"        return \"[E] \" + super.toString() + \" (from: \" + this.start.format(displayFormat) + ","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"            \" to: \" + this.end.format(displayFormat) + \"Hrs\" + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"EksdeeeX":63}},{"path":"src/main/java/duke/GUI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"public class GUI {","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"    public GUI() {","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    public String getResponse(String input) throws Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"        return this.parser.parseInput(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    private GUI gui \u003d new GUI();","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    public void start(Stage stage) throws Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"            stage.setTitle(\"DukeProMax99\");","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"            stage.setResizable(false);","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setGui(gui);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"            stage.show();","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":34}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    private GUI gui;","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpeg\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.jpeg\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    public void initialize() throws Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    public void setGui(GUI g) throws Exception {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        gui \u003d g;","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        String startMsg \u003d gui.getResponse(\"initialise\");","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(startMsg, dukeImage));","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    @FXML","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"    private void handleUserInput() throws Exception{","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"        String response \u003d gui.getResponse(input);","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"                DialogBox.getUserDialog(\"\\n\" + input + \"      \" , userImage),","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"                DialogBox.getDukeDialog(\"\\n\" + \"      \" + response, dukeImage)","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"        );","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-10"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":55}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":" * Class for Parser object.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" * Parser parses the input from user and extracts information to perform the respective actions.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"public class Parser {","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    //private String rawUnsplit;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    //private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    private String input;","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    private String[] raw;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public Parser() {","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    public String parseInput(String s) throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"        this.raw \u003d s.split(\" \");","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"        this.input \u003d raw[0];","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"        switch (input.toUpperCase()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"            case \"INITIALISE\":","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"                return ui.initialise();","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"            case \"LIST\":","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"                return ui.viewList();","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"            case \"MARK\":","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"                return ui.markTask(getTaskNum());","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"            case \"UNMARK\":","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"                return ui.unmarkTask(getTaskNum());","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"            case \"TODO\":","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"                return ui.makeToDo(raw);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"            case \"EVENT\":","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"                return ui.makeEvent(raw);","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"            case \"DEADLINE\":","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"                return ui.makeDeadline(raw);","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"            case \"DELETE\":","lastModifiedDate":"2023-02-10"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"                return ui.delete(getTaskNum());","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"            case \"FIND\":","lastModifiedDate":"2023-02-10"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"                return ui.find(findTaskParsed());","lastModifiedDate":"2023-02-10"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"            case \"CLEAR\":","lastModifiedDate":"2023-02-10"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"                return ui.clearList();","lastModifiedDate":"2023-02-10"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"            case \"BYE\" :","lastModifiedDate":"2023-02-10"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"                return ui.end();","lastModifiedDate":"2023-02-10"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"            default:","lastModifiedDate":"2023-02-10"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"                return ui.wrongInput();","lastModifiedDate":"2023-02-10"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"    public int getTaskNum() {","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"        return Integer.parseInt(raw[1]) - 1;","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"     * Creates String of keyword to be searched with.","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"     * @return Keyword or phrase.","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"    public String findTaskParsed() {","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 1; i \u003c this.raw.length; i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"EksdeeeX"},"content":"            sb.append(this.raw[i] + \" \");","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"EksdeeeX":72}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":" * Class for Storage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":" * Saves list of tasks of current session in hard disk.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":" * Loads pre-existing list of tasks upon startup if any.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"public class Storage {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter savedFormat \u003d DateTimeFormatter.ofPattern(\"dd/MMM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    private DateTimeFormatter loadFormat \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"    private boolean exist;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    private File saved;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    private String path;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for Storage class.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"     * @param path path of file to load (if exists).","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when path is invalid.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"     * @return A Storage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    public Storage(String path) throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        this.saved \u003d new File(path);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        if(this.saved.createNewFile()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"            this.exist \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"            this.exist \u003d true;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"     * Checks if a pre-existing saved list of tasks is available.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"     * @return true if file is available, false otherwise.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    public boolean isSaved() {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"        return this.exist;","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"     * Saves list of tasks in current session into same file path and file name.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"     * @param list List of tasks to be saved.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when file path is invalid.","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"    public void save(ArrayList\u003cTask\u003e list) throws IOException {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"        FileWriter fw \u003d new FileWriter(path, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"            Task curr \u003d list.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"            boolean currMarked \u003d curr.isMarked();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"            if (curr instanceof Deadline) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"                Deadline newCurr \u003d (Deadline) curr;","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"                if (currMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"                    fw.write(\"D\" + \"|\" + \"1\" + \"|\" + newCurr.getTask() + \"|\" + newCurr.getDeadline() ","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"EksdeeeX"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"EksdeeeX"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"                    fw.write(\"D\" + \"|\" + \"0\" + \"|\" + newCurr.getTask() + \"|\" + newCurr.getDeadline()","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"EksdeeeX"},"content":"                        + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"EksdeeeX"},"content":"            } else if (curr instanceof Event) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"EksdeeeX"},"content":"                Event newCurr \u003d (Event) curr;","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"EksdeeeX"},"content":"                if (currMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"EksdeeeX"},"content":"                    fw.write(\"E\" + \"|\" + \"1\"  + \"|\" + newCurr.getTask() + \"|\" + ","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"EksdeeeX"},"content":"                            newCurr.getStart() + \"|\" + newCurr.getEnd() + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"EksdeeeX"},"content":"                } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"EksdeeeX"},"content":"                    fw.write(\"E\" + \"|\" + \"0\"  + \"|\" + newCurr.getTask() + \"|\" + ","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"EksdeeeX"},"content":"                            newCurr.getStart() + \"|\" + newCurr.getEnd() + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"EksdeeeX"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"EksdeeeX"},"content":"            } else if (curr instanceof ToDo) {","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"EksdeeeX"},"content":"                ToDo newCurr \u003d (ToDo) curr;","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"EksdeeeX"},"content":"                    if (currMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"                        fw.write(\"T\" + \"|\" + \"1\" + \"|\" + newCurr.getTask() + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"EksdeeeX"},"content":"                    } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"                        fw.write(\"T\" + \"|\" + \"0\" + \"|\" + newCurr.getTask() + System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"EksdeeeX"},"content":"                    }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"        fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"     * Loads pre-existing saved list of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"EksdeeeX"},"content":"     * @return Arraylist containing tasks created from previous session.","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"EksdeeeX"},"content":"     * @throws FileNotFoundException when file is not found.","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"EksdeeeX"},"content":"        Scanner sc \u003d new Scanner(this.saved);","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"EksdeeeX"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"EksdeeeX"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"EksdeeeX"},"content":"            String curr \u003d sc.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"            String[] parsed \u003d curr.split(\"\\\\|\");","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"EksdeeeX"},"content":"            String type \u003d parsed[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"EksdeeeX"},"content":"            boolean isMarked \u003d parsed[1].equals(\"1\");","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"EksdeeeX"},"content":"            if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime savedDateTime \u003d LocalDateTime.parse(parsed[3], savedFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime loadDateTime \u003d LocalDateTime.parse(savedDateTime.format(loadFormat), loadFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"                Deadline temp \u003d new Deadline(parsed[2], loadDateTime.format(loadFormat));","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"EksdeeeX"},"content":"                if (isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"EksdeeeX"},"content":"                    temp.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"EksdeeeX"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"EksdeeeX"},"content":"                list.add(temp);","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"EksdeeeX"},"content":"            } else if (type.equals(\"E\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime savedStartTime \u003d LocalDateTime.parse(parsed[3], savedFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime loadStartTime \u003d LocalDateTime.parse(savedStartTime.format(loadFormat), loadFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime savedEndTime \u003d LocalDateTime.parse(parsed[4], savedFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"EksdeeeX"},"content":"                LocalDateTime loadEndTime \u003d LocalDateTime.parse(savedEndTime.format(loadFormat), loadFormat);","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"EksdeeeX"},"content":"                Event temp \u003d new Event(parsed[2], ","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"EksdeeeX"},"content":"                    loadStartTime.format(loadFormat),","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"EksdeeeX"},"content":"                    loadEndTime.format(loadFormat));","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"EksdeeeX"},"content":"                if (isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"EksdeeeX"},"content":"                    temp.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"EksdeeeX"},"content":"                } ","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"EksdeeeX"},"content":"                list.add(temp);","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"EksdeeeX"},"content":"            } else if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"EksdeeeX"},"content":"                ToDo temp \u003d new ToDo(parsed[2]);","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"EksdeeeX"},"content":"                if (isMarked) {","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"EksdeeeX"},"content":"                    temp.mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"EksdeeeX"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"EksdeeeX"},"content":"                list.add(temp);","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"EksdeeeX"},"content":"        sc.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"EksdeeeX"},"content":"        return list;","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"EksdeeeX":141}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke; ","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":" * Class for Task object.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":" * Contains task desciptions.","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"    private boolean done;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for Task object.","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * @param name Description of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     * @return Task object.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"        return this.name;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"     * Marks task as done and set boolean value of current task to true.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"     * Marks task as undone and set boolean value of current task to false.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"     * Checks if current task is done.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"     * @return true if task is done, false otherwise.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"        return this.done;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"        return this.done ? \"[X] \" + this.name : \"[ ] \" + this.name; ","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"EksdeeeX":55}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":" * Class for TaskList object.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":" * Contains arraylist of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"public class TaskList {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for TaskList object.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     * @return TaskList object","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    public void setList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    ","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"    public int size() {","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"        return this.list.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"     * Adds specified task into the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"        this.list.add(t);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        return this.list.get(i);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"     * Removes specified task from the list.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"     * @param i Task to be removed.","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"    public void remove(int i) {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"        this.list.remove(i);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"        return this.list;","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"EksdeeeX":56}},{"path":"src/main/java/duke/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":" * Class for ToDo object.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":" * Contains description of task to be done.","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    private String task;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"     * Constructor for ToDo object.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"     * @param task Description of task.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * @return ToDo object.","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    public ToDo(String task) {","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"        super(task);","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    public String getTask() {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"        return this.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"    ","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        return \"[T] \" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"EksdeeeX":32}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":" * Class for Ui object.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":" * This class handles the interface that the user interacts with.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * ","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" * @author Bryan Tan","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"public class Ui {","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    private static final String errMsg \u003d \"Sorry I don\u0027t recognise that command :( Please try again.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"    private static final String intro \u003d \"Hi! I\u0027m Duke! :)\\nHow may I help?\";","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    private static final String outro \u003d \"Goodbye!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    private TaskList tList;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    private Storage savedList;","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"     * Initialise parameters.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"     * @return String on whether previously saved list is available.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when file path is invalid","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    public String initialise() throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"        Storage saved \u003d new Storage(\"./dukeSaved.txt\");","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"        this.savedList \u003d saved;","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"        this.tList \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"        if (saved.isSaved()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"            this.tList.setList(saved.load());","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"            if (this.tList.size() \u003e 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"                return (this.intro + \"\\n\" + \"Previously saved list available!\");","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"                return (this.intro + \"\\n\" + \"No previously saved list found.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"            return (this.intro + \"\\n\" + \"No previously saved list found.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"     * Saves list of tasks in current session to hard drive.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when file to write to is not found.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    public void save() throws IOException {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"        savedList.save(this.tList.getList());","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"    public static String getIntro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"        return intro;","lastModifiedDate":"2023-02-10"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"    public static String getOutro() {","lastModifiedDate":"2023-02-10"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"        return outro;","lastModifiedDate":"2023-02-10"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"     * Signify end of session","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"     * @return goodbye message.","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"     * @throws IOException when file path invalid.","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"    public String end() throws IOException {","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"        save();","lastModifiedDate":"2023-02-10"},{"lineNumber":68,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":69,"author":{"gitId":"EksdeeeX"},"content":"        return outro;","lastModifiedDate":"2023-02-10"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"EksdeeeX"},"content":"     * Obtain list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"EksdeeeX"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"EksdeeeX"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"EksdeeeX"},"content":"        return this.tList.getList();","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"EksdeeeX"},"content":"     * Adds a task to the current list of tasks.","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":84,"author":{"gitId":"EksdeeeX"},"content":"     * @return Message of succesful addition of specified task to list.","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-02-06"},{"lineNumber":86,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"    public String addToList(Task t) {","lastModifiedDate":"2023-02-10"},{"lineNumber":88,"author":{"gitId":"EksdeeeX"},"content":"        this.tList.add(t);","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"        return \"Added \" + t.getTask() + \"!\" + \"\\n\" + \"Now you have \" + tList.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":90,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"     * Handles the exception when access or manipulation of an empty is attempted.","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"     * @return Empty list error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"EksdeeeX"},"content":"    public String emptyErr() {","lastModifiedDate":"2023-02-10"},{"lineNumber":98,"author":{"gitId":"EksdeeeX"},"content":"        return \"Error!! List empty! Try again.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":99,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"EksdeeeX"},"content":"     * Prints out all tasks created so far.","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"EksdeeeX"},"content":"     * @return String format of list of tasks currently stored.","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"    public String viewList() {","lastModifiedDate":"2023-02-10"},{"lineNumber":107,"author":{"gitId":"EksdeeeX"},"content":"        if (this.getList().isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":108,"author":{"gitId":"EksdeeeX"},"content":"            return emptyErr();","lastModifiedDate":"2023-02-10"},{"lineNumber":109,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":110,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":111,"author":{"gitId":"EksdeeeX"},"content":"//        System.out.println(\"Here\u0027s your list of tasks:\");","lastModifiedDate":"2023-02-10"},{"lineNumber":112,"author":{"gitId":"EksdeeeX"},"content":"//        System.out.println();","lastModifiedDate":"2023-02-10"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"        sb.append(\"Heres your list of tasks: \" + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":114,"author":{"gitId":"EksdeeeX"},"content":"        for (int i  \u003d 0; i \u003c this.tList.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":115,"author":{"gitId":"EksdeeeX"},"content":"        sb.append(i + 1 + \". \" + this.tList.get(i) + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":116,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":117,"author":{"gitId":"EksdeeeX"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":118,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":119,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":120,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"EksdeeeX"},"content":"     * Marks specified task as done and informs user.","lastModifiedDate":"2023-02-06"},{"lineNumber":122,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":123,"author":{"gitId":"EksdeeeX"},"content":"     * @return Message of successful marking of task.","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"EksdeeeX"},"content":"     * @param num Index no. of task in the list to be marked as done","lastModifiedDate":"2023-02-06"},{"lineNumber":125,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":126,"author":{"gitId":"EksdeeeX"},"content":"    public String markTask(int num) {","lastModifiedDate":"2023-02-10"},{"lineNumber":127,"author":{"gitId":"EksdeeeX"},"content":"        assert num \u003e 0: \"Wrong num!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":128,"author":{"gitId":"EksdeeeX"},"content":"        if (this.getList().isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":129,"author":{"gitId":"EksdeeeX"},"content":"            return emptyErr();","lastModifiedDate":"2023-02-10"},{"lineNumber":130,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":131,"author":{"gitId":"EksdeeeX"},"content":"        if (num \u003e\u003d this.tList.size()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"EksdeeeX"},"content":"           return (\"Task no.\" + (num + 1) + \" not found. Try again.\");","lastModifiedDate":"2023-02-10"},{"lineNumber":133,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":134,"author":{"gitId":"EksdeeeX"},"content":"            this.tList.get(num).mark();","lastModifiedDate":"2023-02-04"},{"lineNumber":135,"author":{"gitId":"EksdeeeX"},"content":"            return \"Nice It\u0027s marked!\" + \"\\n\" + this.tList.get(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":136,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":137,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":138,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":139,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":140,"author":{"gitId":"EksdeeeX"},"content":"     * Unmarks specified task as undone and informs user.","lastModifiedDate":"2023-02-06"},{"lineNumber":141,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"EksdeeeX"},"content":"     * @return Message upon successful unmarking of task.","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"EksdeeeX"},"content":"     * @param num Index no. of task in the list to be marked as undone.","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":145,"author":{"gitId":"EksdeeeX"},"content":"    public String unmarkTask(int num) {","lastModifiedDate":"2023-02-10"},{"lineNumber":146,"author":{"gitId":"EksdeeeX"},"content":"        assert num \u003e 0: \"Wrong num!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":147,"author":{"gitId":"EksdeeeX"},"content":"        if (this.getList().isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":148,"author":{"gitId":"EksdeeeX"},"content":"            return emptyErr();","lastModifiedDate":"2023-02-10"},{"lineNumber":149,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":150,"author":{"gitId":"EksdeeeX"},"content":"        if (num \u003e\u003d this.tList.size()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":151,"author":{"gitId":"EksdeeeX"},"content":"            return \"Task no.\" + (num + 1) + \" not found. Try again.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":152,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":153,"author":{"gitId":"EksdeeeX"},"content":"            this.tList.get(num).unmark();","lastModifiedDate":"2023-02-04"},{"lineNumber":154,"author":{"gitId":"EksdeeeX"},"content":"            return \"Ok! It\u0027s unmarked!\" + \"\\n\" + this.tList.get(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":155,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":156,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":157,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":158,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":159,"author":{"gitId":"EksdeeeX"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":161,"author":{"gitId":"EksdeeeX"},"content":"     * @param task String array containing descriptions of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":162,"author":{"gitId":"EksdeeeX"},"content":"     * @return String format of ToDo object.","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":164,"author":{"gitId":"EksdeeeX"},"content":"    public String makeToDo(String[] task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":165,"author":{"gitId":"EksdeeeX"},"content":"        assert task[0].equalsIgnoreCase(\"todo\") \u0026\u0026 task.length \u003e 1: \"Wrong format!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":167,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 1; i \u003c task.length; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":168,"author":{"gitId":"EksdeeeX"},"content":"            sb.append(task[i] + \" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":169,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":170,"author":{"gitId":"EksdeeeX"},"content":"        return addToList(new ToDo(sb.toString()));","lastModifiedDate":"2023-02-10"},{"lineNumber":171,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":172,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":173,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":174,"author":{"gitId":"EksdeeeX"},"content":"     * Creates Event object.","lastModifiedDate":"2023-02-06"},{"lineNumber":175,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":176,"author":{"gitId":"EksdeeeX"},"content":"     * @param task String array containing descriptions of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":177,"author":{"gitId":"EksdeeeX"},"content":"     * @return String format of Event object.","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"EksdeeeX"},"content":"     * @throws DateTimeParseException if user inputs date and time in the wrong format.","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":180,"author":{"gitId":"EksdeeeX"},"content":"    public Event createEvent(String[] task) throws DateTimeParseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":181,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder start \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":182,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder end \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":183,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder desc \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":184,"author":{"gitId":"EksdeeeX"},"content":"        boolean isDescripton \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":185,"author":{"gitId":"EksdeeeX"},"content":"        boolean first \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":186,"author":{"gitId":"EksdeeeX"},"content":"        boolean second \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":187,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":188,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 1; i \u003c task.length; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":189,"author":{"gitId":"EksdeeeX"},"content":"            if (task[i].equalsIgnoreCase(\"/from\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":190,"author":{"gitId":"EksdeeeX"},"content":"                first \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":191,"author":{"gitId":"EksdeeeX"},"content":"                isDescripton \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":192,"author":{"gitId":"EksdeeeX"},"content":"                continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":193,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":194,"author":{"gitId":"EksdeeeX"},"content":"            if (task[i].equalsIgnoreCase(\"/to\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":195,"author":{"gitId":"EksdeeeX"},"content":"                second \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":196,"author":{"gitId":"EksdeeeX"},"content":"                first \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":197,"author":{"gitId":"EksdeeeX"},"content":"                continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":198,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":199,"author":{"gitId":"EksdeeeX"},"content":"            if (first) {","lastModifiedDate":"2023-02-04"},{"lineNumber":200,"author":{"gitId":"EksdeeeX"},"content":"                start.append(task[i] + \" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":201,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":202,"author":{"gitId":"EksdeeeX"},"content":"            if (second) {","lastModifiedDate":"2023-02-04"},{"lineNumber":203,"author":{"gitId":"EksdeeeX"},"content":"                end.append(task[i] + \" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":204,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":205,"author":{"gitId":"EksdeeeX"},"content":"            if (isDescripton) {","lastModifiedDate":"2023-02-04"},{"lineNumber":206,"author":{"gitId":"EksdeeeX"},"content":"                desc.append(task[i] + \" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":207,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":208,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":209,"author":{"gitId":"EksdeeeX"},"content":"        return new Event(desc.toString(), start.toString(), end.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":210,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":211,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":212,"author":{"gitId":"EksdeeeX"},"content":"    public String makeEvent(String[] task) throws DateTimeParseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":213,"author":{"gitId":"EksdeeeX"},"content":"        assert task[0].equalsIgnoreCase(\"event\") \u0026\u0026 task.length \u003e 1: \"Wrong format!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":214,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":215,"author":{"gitId":"EksdeeeX"},"content":"            Event temp \u003d createEvent(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":216,"author":{"gitId":"EksdeeeX"},"content":"            return addToList(temp);","lastModifiedDate":"2023-02-10"},{"lineNumber":217,"author":{"gitId":"EksdeeeX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":218,"author":{"gitId":"EksdeeeX"},"content":"            return \"Wrong date/time format!\" + \"\\n\" + \"Please enter correct format (yyyy/MM/dd HHmm)!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":219,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":220,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":221,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":222,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":223,"author":{"gitId":"EksdeeeX"},"content":"     * Creates a task with given deadline.","lastModifiedDate":"2023-02-06"},{"lineNumber":224,"author":{"gitId":"EksdeeeX"},"content":"     * ","lastModifiedDate":"2023-02-06"},{"lineNumber":225,"author":{"gitId":"EksdeeeX"},"content":"     * @param task String array containing descriptions of the event.","lastModifiedDate":"2023-02-06"},{"lineNumber":226,"author":{"gitId":"EksdeeeX"},"content":"     * @return String format of Deadline object.","lastModifiedDate":"2023-02-11"},{"lineNumber":227,"author":{"gitId":"EksdeeeX"},"content":"     * @throws DateTimeParseException if user inputs date and time in the wrong format.","lastModifiedDate":"2023-02-06"},{"lineNumber":228,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":229,"author":{"gitId":"EksdeeeX"},"content":"    public Deadline createDeadline(String[] task) throws DateTimeParseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":230,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder desc \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":231,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder by \u003d new StringBuilder();","lastModifiedDate":"2023-02-04"},{"lineNumber":232,"author":{"gitId":"EksdeeeX"},"content":"        boolean isDesc \u003d true;","lastModifiedDate":"2023-02-04"},{"lineNumber":233,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":234,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 1; i \u003c task.length; i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":235,"author":{"gitId":"EksdeeeX"},"content":"            if (task[i].equalsIgnoreCase(\"/by\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":236,"author":{"gitId":"EksdeeeX"},"content":"                isDesc \u003d false;","lastModifiedDate":"2023-02-04"},{"lineNumber":237,"author":{"gitId":"EksdeeeX"},"content":"                continue;","lastModifiedDate":"2023-02-04"},{"lineNumber":238,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":239,"author":{"gitId":"EksdeeeX"},"content":"            if( isDesc) {","lastModifiedDate":"2023-02-04"},{"lineNumber":240,"author":{"gitId":"EksdeeeX"},"content":"                desc.append(task[i] + \" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":241,"author":{"gitId":"EksdeeeX"},"content":"            } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":242,"author":{"gitId":"EksdeeeX"},"content":"                by.append(task[i]);","lastModifiedDate":"2023-02-04"},{"lineNumber":243,"author":{"gitId":"EksdeeeX"},"content":"                if (i !\u003d task.length - 1) {","lastModifiedDate":"2023-02-04"},{"lineNumber":244,"author":{"gitId":"EksdeeeX"},"content":"                    by.append(\" \");","lastModifiedDate":"2023-02-04"},{"lineNumber":245,"author":{"gitId":"EksdeeeX"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":246,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":247,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":248,"author":{"gitId":"EksdeeeX"},"content":"        return new Deadline(desc.toString(), by.toString());","lastModifiedDate":"2023-02-04"},{"lineNumber":249,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":250,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":251,"author":{"gitId":"EksdeeeX"},"content":"    public String makeDeadline(String[] task) throws  DateTimeParseException {","lastModifiedDate":"2023-02-10"},{"lineNumber":252,"author":{"gitId":"EksdeeeX"},"content":"        assert task[0].equalsIgnoreCase(\"deadline\") \u0026\u0026 task.length \u003e 1: \"Wrong format!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":253,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-02-10"},{"lineNumber":254,"author":{"gitId":"EksdeeeX"},"content":"            Deadline temp \u003d createDeadline(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":255,"author":{"gitId":"EksdeeeX"},"content":"            return addToList(temp);","lastModifiedDate":"2023-02-10"},{"lineNumber":256,"author":{"gitId":"EksdeeeX"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":257,"author":{"gitId":"EksdeeeX"},"content":"            return \"Wrong date/time format!\" + \"\\n\" + \"Please enter correct format (yyyy/MM/dd HHmm)!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":258,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":259,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":260,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":261,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":262,"author":{"gitId":"EksdeeeX"},"content":"     * Deletes a specified task.","lastModifiedDate":"2023-02-06"},{"lineNumber":263,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":264,"author":{"gitId":"EksdeeeX"},"content":"     * @return Message upon successful deletion of task.","lastModifiedDate":"2023-02-11"},{"lineNumber":265,"author":{"gitId":"EksdeeeX"},"content":"     * @param num Index no. of task in the list to be deleted.","lastModifiedDate":"2023-02-06"},{"lineNumber":266,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":267,"author":{"gitId":"EksdeeeX"},"content":"    public String delete(int num) {","lastModifiedDate":"2023-02-10"},{"lineNumber":268,"author":{"gitId":"EksdeeeX"},"content":"        assert num \u003e 0: \"Wrong num!!\";","lastModifiedDate":"2023-02-10"},{"lineNumber":269,"author":{"gitId":"EksdeeeX"},"content":"        if (this.getList().isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":270,"author":{"gitId":"EksdeeeX"},"content":"            return emptyErr();","lastModifiedDate":"2023-02-10"},{"lineNumber":271,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":272,"author":{"gitId":"EksdeeeX"},"content":"        if (num \u003e\u003d this.tList.size()) {","lastModifiedDate":"2023-02-04"},{"lineNumber":273,"author":{"gitId":"EksdeeeX"},"content":"            return \"Task no.\" + (num + 1) + \" not found. Try again.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":274,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":275,"author":{"gitId":"EksdeeeX"},"content":"            Task temp \u003d this.tList.get(num);","lastModifiedDate":"2023-02-10"},{"lineNumber":276,"author":{"gitId":"EksdeeeX"},"content":"            this.tList.remove(num);","lastModifiedDate":"2023-02-04"},{"lineNumber":277,"author":{"gitId":"EksdeeeX"},"content":"            return \"Ok! Following task is removed: \" + \"\\n\" + temp;","lastModifiedDate":"2023-02-10"},{"lineNumber":278,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":279,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":280,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":281,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":282,"author":{"gitId":"EksdeeeX"},"content":"     * Prints list of tasks containing specified keyword.","lastModifiedDate":"2023-02-06"},{"lineNumber":283,"author":{"gitId":"EksdeeeX"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":284,"author":{"gitId":"EksdeeeX"},"content":"     * @return String format list of tasks containing the keyword.","lastModifiedDate":"2023-02-11"},{"lineNumber":285,"author":{"gitId":"EksdeeeX"},"content":"     * @param keyword keyword to search with.","lastModifiedDate":"2023-02-06"},{"lineNumber":286,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":287,"author":{"gitId":"EksdeeeX"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-10"},{"lineNumber":288,"author":{"gitId":"EksdeeeX"},"content":"        if (this.getList().isEmpty()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":289,"author":{"gitId":"EksdeeeX"},"content":"            return emptyErr();","lastModifiedDate":"2023-02-10"},{"lineNumber":290,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":291,"author":{"gitId":"EksdeeeX"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-10"},{"lineNumber":292,"author":{"gitId":"EksdeeeX"},"content":"        sb.append(\"Here\u0027s your list of tasks relating to \" + \"\\\"\" + keyword + \"\\\"\" + \":\" + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":293,"author":{"gitId":"EksdeeeX"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-02-06"},{"lineNumber":294,"author":{"gitId":"EksdeeeX"},"content":"        boolean hasMatch \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":295,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":296,"author":{"gitId":"EksdeeeX"},"content":"        for (int i \u003d 0; i \u003c this.tList.size(); i++) {","lastModifiedDate":"2023-02-06"},{"lineNumber":297,"author":{"gitId":"EksdeeeX"},"content":"            Task curr \u003d this.tList.get(i);","lastModifiedDate":"2023-02-06"},{"lineNumber":298,"author":{"gitId":"EksdeeeX"},"content":"            if (curr.getTask().contains(keyword)) {","lastModifiedDate":"2023-02-06"},{"lineNumber":299,"author":{"gitId":"EksdeeeX"},"content":"                hasMatch \u003d true;","lastModifiedDate":"2023-02-06"},{"lineNumber":300,"author":{"gitId":"EksdeeeX"},"content":"                sb.append(counter + \") \" + curr.toString() + \"\\n\");","lastModifiedDate":"2023-02-10"},{"lineNumber":301,"author":{"gitId":"EksdeeeX"},"content":"                counter++;","lastModifiedDate":"2023-02-06"},{"lineNumber":302,"author":{"gitId":"EksdeeeX"},"content":"            }","lastModifiedDate":"2023-02-06"},{"lineNumber":303,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":304,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":305,"author":{"gitId":"EksdeeeX"},"content":"        if (!hasMatch) {","lastModifiedDate":"2023-02-06"},{"lineNumber":306,"author":{"gitId":"EksdeeeX"},"content":"            return \"Sorry! No matching tasks found. Please try again.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":307,"author":{"gitId":"EksdeeeX"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":308,"author":{"gitId":"EksdeeeX"},"content":"            return sb.toString();","lastModifiedDate":"2023-02-10"},{"lineNumber":309,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":310,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":311,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":312,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":313,"author":{"gitId":"EksdeeeX"},"content":"     * Deletes all task from the tasklist.","lastModifiedDate":"2023-02-06"},{"lineNumber":314,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":315,"author":{"gitId":"EksdeeeX"},"content":"    public String clearList() {","lastModifiedDate":"2023-02-10"},{"lineNumber":316,"author":{"gitId":"EksdeeeX"},"content":"        ArrayList\u003cTask\u003e newEmptyList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-06"},{"lineNumber":317,"author":{"gitId":"EksdeeeX"},"content":"        this.tList.setList(newEmptyList);","lastModifiedDate":"2023-02-06"},{"lineNumber":318,"author":{"gitId":"EksdeeeX"},"content":"        return \"Ok! All tasks deleted.\";","lastModifiedDate":"2023-02-10"},{"lineNumber":319,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":320,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":321,"author":{"gitId":"EksdeeeX"},"content":"    public String wrongInput() {","lastModifiedDate":"2023-02-10"},{"lineNumber":322,"author":{"gitId":"EksdeeeX"},"content":"        return errMsg;","lastModifiedDate":"2023-02-10"},{"lineNumber":323,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":324,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"EksdeeeX":324}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"651.0\" prefWidth\u003d\"612.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"20.0\" layoutY\u003d\"604.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"455.0\" AnchorPane.bottomAnchor\u003d\"6.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"501.0\" layoutY\u003d\"604.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutY\u003d\"1.0\" prefHeight\u003d\"597.0\" prefWidth\u003d\"612.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"      \u003ccontent\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"597.0\" prefWidth\u003d\"599.0\" /\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"      \u003c/content\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-10"}],"authorContributionMap":{"EksdeeeX":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"    @Test ","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"    public void stringTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"        Deadline temp \u003d new Deadline(\"sleep\" , \"2023/01/01 1800\");","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"        assertEquals(\"[D] [ ] sleep (by: 01/Jan/2023 1800Hrs)\", temp.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EksdeeeX":14}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    @Test ","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"    public void listTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"        TaskList temp \u003d new TaskList();","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"        ArrayList\u003cTask\u003e tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"        temp.setList(tempList);","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(temp.getList().equals(tempList));","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EksdeeeX":18}},{"path":"src/test/java/duke/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    public void stringTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"        ToDo temp \u003d new ToDo(\"sleep\");","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"        assertEquals(\"[T] [ ] sleep\", temp.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"EksdeeeX":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"todo borrow book","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"list","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"EksdeeeX":3}}]
