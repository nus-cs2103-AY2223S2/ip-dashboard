[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"    public Deadline(String taskDescription, EndTime endTime) {","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        return \"[D]\" + super.toString()  + this.endTime.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/Duration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"public class Duration {","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"    private String from;","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"    private String to;","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"    public Duration(String from, String to) {","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        return \"(from: \" + this.from + \" to: \" + this.to + \")\";","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/java/EndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"public class EndTime {","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"    private String endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"    public EndTime(String endtime) {","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endtime;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        return \"(by: \" + this.endTime + \")\";","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":12}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"public class Event extends Task{","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"    private Duration duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"    public Event(String taskDescription, Duration duration) {","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        return \"[E]\" + super.toString() + this.duration.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":12}},{"path":"src/main/java/Sebastian.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import sebastianExceptions.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Sebastian {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    private Sebastian() {","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * Start a session by greeting the user","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @return a greet","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private String greet() {","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Greetings, I\u0027m Sebastian\" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + \"I\u0027m at your service\";","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * End a session","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return final greet","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private String exit() {","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Bye. It\u0027s my pleasure to serve you\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Echo whatever the user has typed in","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * @param instruction the user input","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * @return the same user input","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    private String echo(String instruction){","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + instruction;","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Response after a task is added to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @param task the task being added","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    private String addTask(Task task){","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Noted. I\u0027ve added this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + Formatter.space() + task + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + \"Now you have \" + this.tasks.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the to-do has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a to-do to add","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    private String addTodo(String instruction) throws LackOfArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"            String task \u003d instruction.substring(5);","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"            return this.addTask(this.tasks.addTodo(task));","lastModifiedDate":"2023-01-13"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the deadline has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a deadline to add","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * @throws DeadlineFormatMismatchException when the format for adding a deadline is not followed","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"    private String addDeadline(String instruction) throws LackOfArgumentException, DeadlineFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"            String deadline \u003d instruction.substring(9);","lastModifiedDate":"2023-01-13"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d deadline.split(\"/by\");","lastModifiedDate":"2023-01-13"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"            if(task.length !\u003d 2) {","lastModifiedDate":"2023-01-13"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"                throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"                return this.addTask(this.tasks.addDeadline(task[0], task[1].trim()));","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the event has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify an event to add","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"     * @throws EventFormatMismatchException when the format for adding an event is not followed","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    private String addEvent(String instruction) throws LackOfArgumentException, EventFormatMismatchException{","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"            String event \u003d instruction.substring(6);","lastModifiedDate":"2023-01-13"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d event.split(\"/from|/to\");","lastModifiedDate":"2023-01-13"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"            if(task.length!\u003d3) {","lastModifiedDate":"2023-01-13"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"                throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-14"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"                return this.addTask(this.tasks.addEvent(task[0],task[1].trim(), task[2].trim()));","lastModifiedDate":"2023-01-13"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been marked","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to mark as done","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to mark a task","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"    private String markTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-13"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-13"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"                return  Formatter.space()+  \"Well Done. I have marked this task as done: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"                         Formatter.space() + Formatter.space() + this.tasks.markTaskAtIndex(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to mark as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to unmark a task","lastModifiedDate":"2023-01-19"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"    private String unmarkTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-13"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-13"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"                return Formatter.space() + \"No problem, I have unmarked this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + this.tasks.unmarkTaskAtIndex(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"     * Delete a task from the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been removed","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to delete","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to delete a task","lastModifiedDate":"2023-01-19"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"    private String deleteTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"                return Formatter.space() + \"Noted. I have deleted this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + this.tasks.deleteTaskAtIndex(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + \"Now your have \" + this.tasks.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-14"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-14"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-19"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"     * Show the current task list","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"     * @return the current task list","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"    private String showList(String instruction) {","lastModifiedDate":"2023-01-14"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Here are the tasks in your list\" + \"\\n\" + this.tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"     * Start a prompt-response cycle","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalInputException when user input does not constitute a valid instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"    private void onDuty() throws IllegalInputException{","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"Emrysil"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-13"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"        String instruction \u003d scan.nextLine();","lastModifiedDate":"2023-01-13"},{"lineNumber":215,"author":{"gitId":"Emrysil"},"content":"        String action \u003d instruction.split(\" \")[0];","lastModifiedDate":"2023-01-13"},{"lineNumber":216,"author":{"gitId":"Emrysil"},"content":"        String res;","lastModifiedDate":"2023-01-13"},{"lineNumber":217,"author":{"gitId":"Emrysil"},"content":"        while (!action.equals(\"bye\")) {","lastModifiedDate":"2023-01-13"},{"lineNumber":218,"author":{"gitId":"Emrysil"},"content":"            switch (action) {","lastModifiedDate":"2023-01-13"},{"lineNumber":219,"author":{"gitId":"Emrysil"},"content":"                case \"list\":","lastModifiedDate":"2023-01-13"},{"lineNumber":220,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.showList(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":221,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":222,"author":{"gitId":"Emrysil"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-13"},{"lineNumber":223,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.markTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":224,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":225,"author":{"gitId":"Emrysil"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-13"},{"lineNumber":226,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.unmarkTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":227,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":228,"author":{"gitId":"Emrysil"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-13"},{"lineNumber":229,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addTodo(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":230,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":231,"author":{"gitId":"Emrysil"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-13"},{"lineNumber":232,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addDeadline(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":233,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":234,"author":{"gitId":"Emrysil"},"content":"                case \"event\":","lastModifiedDate":"2023-01-13"},{"lineNumber":235,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addEvent(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":236,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":237,"author":{"gitId":"Emrysil"},"content":"                case \"delete\" :","lastModifiedDate":"2023-01-14"},{"lineNumber":238,"author":{"gitId":"Emrysil"},"content":"                    res  \u003d this.deleteTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":239,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":240,"author":{"gitId":"Emrysil"},"content":"                default:","lastModifiedDate":"2023-01-13"},{"lineNumber":241,"author":{"gitId":"Emrysil"},"content":"                    throw new IllegalInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":242,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":243,"author":{"gitId":"Emrysil"},"content":"            Formatter.printFormattedString(res);","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"Emrysil"},"content":"            instruction \u003d scan.nextLine();","lastModifiedDate":"2023-01-13"},{"lineNumber":245,"author":{"gitId":"Emrysil"},"content":"            action \u003d instruction.split(\" \")[0];","lastModifiedDate":"2023-01-13"},{"lineNumber":246,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":247,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":248,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":249,"author":{"gitId":"Emrysil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-14"},{"lineNumber":250,"author":{"gitId":"Emrysil"},"content":"        Sebastian sebastian \u003d new Sebastian();","lastModifiedDate":"2023-01-14"},{"lineNumber":251,"author":{"gitId":"Emrysil"},"content":"        Formatter.printFormattedString(sebastian.greet());","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"Emrysil"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":253,"author":{"gitId":"Emrysil"},"content":"        while(flag){","lastModifiedDate":"2023-01-14"},{"lineNumber":254,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":255,"author":{"gitId":"Emrysil"},"content":"                sebastian.onDuty();","lastModifiedDate":"2023-01-14"},{"lineNumber":256,"author":{"gitId":"Emrysil"},"content":"                flag \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":257,"author":{"gitId":"Emrysil"},"content":"            } catch (IllegalInputException | TaskNotExistException | InputFormatMismatchException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":258,"author":{"gitId":"Emrysil"},"content":"                Formatter.printFormattedString(Formatter.space() + e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":259,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":260,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":261,"author":{"gitId":"Emrysil"},"content":"        Formatter.printFormattedString(sebastian.exit());","lastModifiedDate":"2023-01-19"},{"lineNumber":262,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":263,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":263}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":" * This class represents a task","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"public class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    private TaskStatus taskStatus;","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public Task mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public Task unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        return this.taskStatus + \" \" + this.taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":35}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * This class represents a list of all tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class TaskList {","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @param task a description of the to-do to be added","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @return the to-do generated","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public Task addTodo(String task) {","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Todo(task);","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @param task a description of the deadline to be added","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @return the deadline generated","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public Task addDeadline(String task, String endTime) {","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Deadline(task, new EndTime(endTime));","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param task a description of the event to be added","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @return the event generated","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public Task addEvent(String task, String from, String to) {","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Event(task, new Duration(from, to));","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as done","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    public Task markTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException{","lastModifiedDate":"2023-01-13"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        return this.taskList.get(taskIndex-1).mark();","lastModifiedDate":"2023-01-13"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public Task unmarkTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        return this.taskList.get(taskIndex-1).unmark();","lastModifiedDate":"2023-01-13"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"     * Delete the task as specified by the task index","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    public Task deleteTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-14"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        return this.taskList.remove(taskIndex-1);","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     * The total tasks currently in the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"     * @return the total number of tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-13"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        int totalTasks \u003d this.getTotalTasks();","lastModifiedDate":"2023-01-13"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i ++ ) {","lastModifiedDate":"2023-01-13"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2023-01-13"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"            sb.append(Formatter.space()).append(i+1).append(\".\").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        if(sb.length()!\u003d0) {","lastModifiedDate":"2023-01-13"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"            sb.delete(sb.length()-1, sb.length());","lastModifiedDate":"2023-01-13"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":100}},{"path":"src/main/java/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":" * An Enum class representing the completion status of a task","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"public enum TaskStatus {","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"    DONE(\"X\"),","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    NOT_DONE(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    private final String status;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    TaskStatus(String status) {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public String toString(){","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + this.status + \"]\";","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":19}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-13"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"    public Todo(String taskDescription) {","lastModifiedDate":"2023-01-13"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/formatters/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package formatters;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * This class is a utility class used to standardise the formatting of Sebastian","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Formatter {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public static void lineBreak(){","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        String line \u003d \"-\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        String res \u003d space() + line.repeat(80);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * Used to standardise the space before each line of Sebastian\u0027s response","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @return a standardised space","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static String space() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        String space \u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return space.repeat(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Used to wrap Sebastian\u0027s response which a starting and an ending line","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param str the response which needs to be wrapped with lines.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static void printFormattedString(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        System.out.println(str);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":31}},{"path":"src/main/java/sebastianExceptions/DeadlineFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when a deadline is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class DeadlineFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public DeadlineFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format:\" + \"\\n\" +","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + \"deadline [deadline] /by [end_time]\"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/sebastianExceptions/EventFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when an event is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class EventFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public EventFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format: \" + \"\\n\" +","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + \"event [event] /from [start_time] /to [end_time]\"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/sebastianExceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input cannot be comprehended by Sebastian","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class IllegalInputException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public IllegalInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Apologies, I\u0027m afraid I don\u0027t understand your instruction\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastianExceptions/InputFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input does not follow the format for that specific type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * This class is meant to be the superclass of the specific exceptions for each type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"abstract public class InputFormatMismatchException extends IllegalArgumentException{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public InputFormatMismatchException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/sebastianExceptions/InstructionFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when an instruction is given in the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class InstructionFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public InstructionFormatMismatchException(String instruction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please give an instruction in the format of: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + instruction + \" [task index]\"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                );","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/sebastianExceptions/LackOfArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the user did not specify a body for their task declaration/instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class LackOfArgumentException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public LackOfArgumentException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Please specify an argument\");","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastianExceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the specific task the user wish to operate on does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class TaskNotExistException extends IndexOutOfBoundsException{","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, the task does not exist\");","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":10}}]
