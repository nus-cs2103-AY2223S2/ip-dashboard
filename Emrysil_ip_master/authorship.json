[{"path":"src/main/java/DataReader.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import java.io.*;","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Class dedicated to read existing tasks created in the previous Sebastian sessions.","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class DataReader {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Load data from hard disk and convert the String representation into actual tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * @return a TaskList containing all the tasks.","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public static TaskList formTaskListFromData(){","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        File file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            String curLine;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"            while((curLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"                String[] curTask \u003d curLine.split(\"\u003c\u003e\");","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"                String taskType \u003d curTask[0];","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"                int isCompleted \u003d Integer.parseInt(curTask[1]);","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                String taskDescription \u003d curTask[2];","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"                        taskList.addTodo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"                        taskList.addDeadline(isCompleted,taskDescription, curTask[3]);","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"                        taskList.addEvent(isCompleted, taskDescription, curTask[3], curTask[4]);","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            return taskList;","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            return null;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Emrysil":39}},{"path":"src/main/java/Sebastian.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import sebastianExceptions.*;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Sebastian {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private final TaskList tasks;","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private Sebastian(TaskList tasks) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        if(tasks \u003d\u003d null) {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"            this.tasks \u003d tasks;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Start a session by greeting the user","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @return a greet","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private String greet() {","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Greetings, I\u0027m Sebastian\" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + \"I\u0027m at your service\";","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * End a session","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * @return final greet","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private String exit() {","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Bye. It\u0027s my pleasure to serve you\";","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Echo whatever the user has typed in","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param instruction the user input","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @return the same user input","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    private String echo(String instruction){","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + instruction;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * Response after a task is added to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @param task the task being added","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    private String addTask(Task task){","lastModifiedDate":"2023-01-13"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Noted. I\u0027ve added this task:\" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + Formatter.space() + task + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + \"Now you have \" + this.tasks.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the to-do has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a to-do to add","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    private String addTodo(String instruction) throws LackOfArgumentException {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"            String task \u003d instruction.substring(5);","lastModifiedDate":"2023-01-13"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            return this.addTask(this.tasks.addTodo(0, task.trim()));","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the deadline has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a deadline to add","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"     * @throws DeadlineFormatMismatchException when the format for adding a deadline is not followed","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    private String addDeadline(String instruction) throws LackOfArgumentException, DeadlineFormatMismatchException {","lastModifiedDate":"2023-01-14"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"            String deadline \u003d instruction.substring(9);","lastModifiedDate":"2023-01-13"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d deadline.split(\"/by\");","lastModifiedDate":"2023-01-13"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"            if(task.length !\u003d 2) {","lastModifiedDate":"2023-01-13"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"                throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-14"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"            } else if(task[0].equals(\"\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            else {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"                return this.addTask(this.tasks.addDeadline(0, task[0].trim(), task[1].trim()));","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the event has been added","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify an event to add","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"     * @throws EventFormatMismatchException when the format for adding an event is not followed","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    private String addEvent(String instruction) throws LackOfArgumentException, EventFormatMismatchException {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-13"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-13"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"            String event \u003d instruction.substring(6);","lastModifiedDate":"2023-01-13"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d event.split(\"/from|/to\");","lastModifiedDate":"2023-01-13"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"            if(task.length!\u003d3) {","lastModifiedDate":"2023-01-13"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"                throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-14"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"            } else if(task[0].equals(\"\")){","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"            else {","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"                return this.addTask(this.tasks.addEvent(0, task[0].trim(),task[1].trim(), task[2].trim()));","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been marked","lastModifiedDate":"2023-01-19"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to mark as done","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to mark a task","lastModifiedDate":"2023-01-19"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    private String markTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-13"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-13"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"                return  Formatter.space()+  \"Well Done. I have marked this task as done: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"                         Formatter.space() + Formatter.space() + this.tasks.markTaskAtIndex(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to mark as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to unmark a task","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"    private String unmarkTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-13"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-13"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"                return Formatter.space() + \"No problem, I have unmarked this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + this.tasks.unmarkTaskAtIndex(taskIndex);","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-13"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-19"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"     * Delete a task from the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been removed","lastModifiedDate":"2023-01-19"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when the user did not specify a task to delete","lastModifiedDate":"2023-01-19"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when the user did not follow the format to delete a task","lastModifiedDate":"2023-01-19"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when the task specify by the user does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"    private String deleteTask(String instruction) throws LackOfArgumentException, InstructionFormatMismatchException, TaskNotExistException{","lastModifiedDate":"2023-01-19"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-14"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-14"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-14"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-14"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-14"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"                return Formatter.space() + \"Noted. I have deleted this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + this.tasks.deleteTaskAtIndex(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + \"Now your have \" + this.tasks.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-19"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-14"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-19"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-14"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-14"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-14"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-19"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":213,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"     * Get the tasks occurring on the specified date","lastModifiedDate":"2023-01-21"},{"lineNumber":215,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-21"},{"lineNumber":216,"author":{"gitId":"Emrysil"},"content":"     * @return a list of tasks occurring on the specified date","lastModifiedDate":"2023-01-21"},{"lineNumber":217,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a date","lastModifiedDate":"2023-01-21"},{"lineNumber":218,"author":{"gitId":"Emrysil"},"content":"     * @throws DateFormatMismatchException when user did not follow the format to retrieve tasks on a specific date","lastModifiedDate":"2023-01-21"},{"lineNumber":219,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":220,"author":{"gitId":"Emrysil"},"content":"    private String getTasks(String instruction) throws LackOfArgumentException, DateFormatMismatchException{","lastModifiedDate":"2023-01-21"},{"lineNumber":221,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":222,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":223,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-21"},{"lineNumber":224,"author":{"gitId":"Emrysil"},"content":"        } else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-21"},{"lineNumber":225,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":226,"author":{"gitId":"Emrysil"},"content":"                return tasks.getTasksOnDate(insArr[1]).toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":227,"author":{"gitId":"Emrysil"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":228,"author":{"gitId":"Emrysil"},"content":"                throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":229,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":230,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-21"},{"lineNumber":231,"author":{"gitId":"Emrysil"},"content":"            throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":232,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":233,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":234,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":235,"author":{"gitId":"Emrysil"},"content":"     * Show the current task list","lastModifiedDate":"2023-01-19"},{"lineNumber":236,"author":{"gitId":"Emrysil"},"content":"     * @param instruction user input","lastModifiedDate":"2023-01-19"},{"lineNumber":237,"author":{"gitId":"Emrysil"},"content":"     * @return the current task list","lastModifiedDate":"2023-01-19"},{"lineNumber":238,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":239,"author":{"gitId":"Emrysil"},"content":"    private String showList(String instruction) {","lastModifiedDate":"2023-01-14"},{"lineNumber":240,"author":{"gitId":"Emrysil"},"content":"        return Formatter.space() + \"Here are the tasks in your list\" + \"\\n\" + this.tasks;","lastModifiedDate":"2023-01-19"},{"lineNumber":241,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":242,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":243,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":244,"author":{"gitId":"Emrysil"},"content":"     * Start a prompt-response cycle","lastModifiedDate":"2023-01-19"},{"lineNumber":245,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalInputException when user input does not constitute a valid instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":246,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"Emrysil"},"content":"    private void onDuty(Scanner scan) throws IllegalInputException{","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"Emrysil"},"content":"        String instruction \u003d scan.nextLine();","lastModifiedDate":"2023-01-13"},{"lineNumber":249,"author":{"gitId":"Emrysil"},"content":"        String action \u003d instruction.split(\" \")[0];","lastModifiedDate":"2023-01-13"},{"lineNumber":250,"author":{"gitId":"Emrysil"},"content":"        String res;","lastModifiedDate":"2023-01-13"},{"lineNumber":251,"author":{"gitId":"Emrysil"},"content":"        while (!action.equals(\"bye\")) {","lastModifiedDate":"2023-01-13"},{"lineNumber":252,"author":{"gitId":"Emrysil"},"content":"            switch (action) {","lastModifiedDate":"2023-01-13"},{"lineNumber":253,"author":{"gitId":"Emrysil"},"content":"                case \"list\":","lastModifiedDate":"2023-01-13"},{"lineNumber":254,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.showList(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":255,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":256,"author":{"gitId":"Emrysil"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-13"},{"lineNumber":257,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.markTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":258,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":259,"author":{"gitId":"Emrysil"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-13"},{"lineNumber":260,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.unmarkTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":261,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":262,"author":{"gitId":"Emrysil"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-13"},{"lineNumber":263,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addTodo(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":264,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":265,"author":{"gitId":"Emrysil"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-13"},{"lineNumber":266,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addDeadline(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":267,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":268,"author":{"gitId":"Emrysil"},"content":"                case \"event\":","lastModifiedDate":"2023-01-13"},{"lineNumber":269,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.addEvent(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":270,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-13"},{"lineNumber":271,"author":{"gitId":"Emrysil"},"content":"                case \"delete\" :","lastModifiedDate":"2023-01-14"},{"lineNumber":272,"author":{"gitId":"Emrysil"},"content":"                    res  \u003d this.deleteTask(instruction);","lastModifiedDate":"2023-01-14"},{"lineNumber":273,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-14"},{"lineNumber":274,"author":{"gitId":"Emrysil"},"content":"                case \"get\" :","lastModifiedDate":"2023-01-21"},{"lineNumber":275,"author":{"gitId":"Emrysil"},"content":"                    res \u003d this.getTasks(instruction);","lastModifiedDate":"2023-01-21"},{"lineNumber":276,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":277,"author":{"gitId":"Emrysil"},"content":"                default:","lastModifiedDate":"2023-01-13"},{"lineNumber":278,"author":{"gitId":"Emrysil"},"content":"                    throw new IllegalInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":279,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":280,"author":{"gitId":"Emrysil"},"content":"            Formatter.printFormattedString(res);","lastModifiedDate":"2023-01-19"},{"lineNumber":281,"author":{"gitId":"Emrysil"},"content":"            instruction \u003d scan.nextLine();","lastModifiedDate":"2023-01-13"},{"lineNumber":282,"author":{"gitId":"Emrysil"},"content":"            action \u003d instruction.split(\" \")[0];","lastModifiedDate":"2023-01-13"},{"lineNumber":283,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":284,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":285,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":286,"author":{"gitId":"Emrysil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-14"},{"lineNumber":287,"author":{"gitId":"Emrysil"},"content":"        TaskList taskLog \u003d DataReader.formTaskListFromData();","lastModifiedDate":"2023-01-20"},{"lineNumber":288,"author":{"gitId":"Emrysil"},"content":"        Sebastian sebastian \u003d new Sebastian(taskLog);","lastModifiedDate":"2023-01-20"},{"lineNumber":289,"author":{"gitId":"Emrysil"},"content":"        Formatter.printFormattedString(sebastian.greet());","lastModifiedDate":"2023-01-19"},{"lineNumber":290,"author":{"gitId":"Emrysil"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":291,"author":{"gitId":"Emrysil"},"content":"        boolean flag \u003d true;","lastModifiedDate":"2023-01-14"},{"lineNumber":292,"author":{"gitId":"Emrysil"},"content":"        while(flag){","lastModifiedDate":"2023-01-14"},{"lineNumber":293,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":294,"author":{"gitId":"Emrysil"},"content":"                sebastian.onDuty(scan);","lastModifiedDate":"2023-01-19"},{"lineNumber":295,"author":{"gitId":"Emrysil"},"content":"                flag \u003d false;","lastModifiedDate":"2023-01-14"},{"lineNumber":296,"author":{"gitId":"Emrysil"},"content":"            } catch (IllegalInputException | TaskNotExistException | InputFormatMismatchException e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":297,"author":{"gitId":"Emrysil"},"content":"                Formatter.printFormattedString(Formatter.space() + e.getMessage());","lastModifiedDate":"2023-01-19"},{"lineNumber":298,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":299,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":300,"author":{"gitId":"Emrysil"},"content":"        Formatter.printFormattedString(sebastian.exit());","lastModifiedDate":"2023-01-19"},{"lineNumber":301,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":302,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":302}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastianExceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import task.*;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import time.*;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.io.File;","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":" * This class represents a list of all tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"public class TaskList {","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the to-do to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * @return the to-do generated","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public Task addTodo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Todo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the deadline to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * @return the deadline generated","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    public Task addDeadline(int isCompleted, String taskDescription, String endTime) throws DeadlineFormatMismatchException{","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Deadline(isCompleted, taskDescription, new EndTime(convertStringToDate(endTime)));","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"            saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the event to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * @return the event generated","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public Task addEvent(int isCompleted, String taskDescription, String from, String to) throws EventFormatMismatchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Event(isCompleted, taskDescription, new Duration(convertStringToDate(from), convertStringToDate(to)));","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"            saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"            throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime convertStringToDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        return LocalDateTime.parse(dateTime, dateTimeFormatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as done","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    public Task markTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"            Task task \u003d this.taskList.get(taskIndex-1).mark();","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"            return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    public Task unmarkTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"            Task task \u003d this.taskList.get(taskIndex-1).unmark();","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"            saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"            return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     * Delete the task as specified by the task index","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"    public Task deleteTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-14"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            Task task \u003d this.taskList.remove(taskIndex-1);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"            saveToDisk();","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"            return task;","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"    public TaskList getTasksOnDate(String date) throws DateTimeParseException{","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.TASK_ON_DATE_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        LocalDate ld \u003d LocalDate.parse(date, dtf);","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        List\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"        for(Task t: taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"            if(t instanceof Deadline) {","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"                if(d.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"            } else if(t instanceof Event) {","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"                if(e.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"        return new TaskList(tasksOnDate);","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"     * The total tasks currently in the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"     * @return the total number of tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-01-13"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-13"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"     * Used to save existing tasks in the list into the hard disk","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"    public void saveToDisk() {","lastModifiedDate":"2023-01-20"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"            DataSaver.writeToDisk(this);","lastModifiedDate":"2023-01-20"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"            Formatter.printFormattedString(","lastModifiedDate":"2023-01-20"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"                    Formatter.space() + \"Task cannot be saved to disk, exiting the program will cause data to be lost\"","lastModifiedDate":"2023-01-20"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"            );","lastModifiedDate":"2023-01-20"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-13"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"        int totalTasks \u003d this.getTotalTasks();","lastModifiedDate":"2023-01-13"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i ++ ) {","lastModifiedDate":"2023-01-13"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2023-01-13"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"            sb.append(Formatter.space()).append(i+1).append(\".\").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"        if(sb.length()!\u003d0) {","lastModifiedDate":"2023-01-13"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"            sb.delete(sb.length()-1, sb.length());","lastModifiedDate":"2023-01-13"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"     * inner class used to save task list data to the disk","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"    static class DataSaver {","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"        private static File file;","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"         * Save tasks in the taskList into the hard disk.","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"         * @param taskList a TaskList object","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"         * @throws IOException if the file exists but is a directory rather than a regular file,","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"         * does not exist but cannot be created, or cannot be opened for any other reason","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"        private static void writeToDisk(TaskList taskList) throws IOException {","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"            if(file \u003d\u003d null){","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"                file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-20"},{"lineNumber":207,"author":{"gitId":"Emrysil"},"content":"            fw.write(formatTaskList(taskList));","lastModifiedDate":"2023-01-20"},{"lineNumber":208,"author":{"gitId":"Emrysil"},"content":"            fw.flush();","lastModifiedDate":"2023-01-20"},{"lineNumber":209,"author":{"gitId":"Emrysil"},"content":"            fw.close();","lastModifiedDate":"2023-01-20"},{"lineNumber":210,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":211,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":212,"author":{"gitId":"Emrysil"},"content":"        /**","lastModifiedDate":"2023-01-20"},{"lineNumber":213,"author":{"gitId":"Emrysil"},"content":"         * Format tasks in the taskList into a String ready to be written into the hard disk","lastModifiedDate":"2023-01-20"},{"lineNumber":214,"author":{"gitId":"Emrysil"},"content":"         * @param l the TaskList object","lastModifiedDate":"2023-01-20"},{"lineNumber":215,"author":{"gitId":"Emrysil"},"content":"         * @return formatted String","lastModifiedDate":"2023-01-20"},{"lineNumber":216,"author":{"gitId":"Emrysil"},"content":"         */","lastModifiedDate":"2023-01-20"},{"lineNumber":217,"author":{"gitId":"Emrysil"},"content":"        private static String formatTaskList(TaskList l) {","lastModifiedDate":"2023-01-20"},{"lineNumber":218,"author":{"gitId":"Emrysil"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":219,"author":{"gitId":"Emrysil"},"content":"            for(Task task: l.taskList){","lastModifiedDate":"2023-01-20"},{"lineNumber":220,"author":{"gitId":"Emrysil"},"content":"                sb.append(task.formatForSave()).append(\"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":221,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":222,"author":{"gitId":"Emrysil"},"content":"            if(sb.length()\u003e0){","lastModifiedDate":"2023-01-20"},{"lineNumber":223,"author":{"gitId":"Emrysil"},"content":"                return sb.substring(0,sb.length()-1);","lastModifiedDate":"2023-01-20"},{"lineNumber":224,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":225,"author":{"gitId":"Emrysil"},"content":"            return sb.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":226,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":227,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":228,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":228}},{"path":"src/main/java/formatters/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package formatters;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * This class is a utility class used to standardise the formatting of Sebastian","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Formatter {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public static void lineBreak(){","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        String line \u003d \"-\";","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        String res \u003d space() + line.repeat(80);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * Used to standardise the space before each line of Sebastian\u0027s response","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @return a standardised space","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static String space() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        String space \u003d \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return space.repeat(5);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Used to wrap Sebastian\u0027s response which a starting and an ending line","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param str the response which needs to be wrapped with lines.","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public static void printFormattedString(String str) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        System.out.println(str);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":31}},{"path":"src/main/java/sebastianExceptions/DateFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import time.DatePattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class DateFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public DateFormatMismatchException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a date in the following format:\" + \"\\n\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + \"get \" + DatePattern.TASK_ON_DATE_FORMAT","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastianExceptions/DeadlineFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import time.DatePattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Exception when a deadline is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class DeadlineFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public DeadlineFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format:\" + \"\\n\" +","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                Formatter.space() + Formatter.space() + \"deadline [deadline] /by \" + DatePattern.USER_INPUT_FORMAT + \"\\n\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + \"For instance: deadline assignment submission /by 2023-01-27 2359\"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":17}},{"path":"src/main/java/sebastianExceptions/EventFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import time.DatePattern;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * Exception when an event is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class EventFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public EventFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format: \" + \"\\n\" +","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + Formatter.space() + \"event [event] /from \" + DatePattern.USER_INPUT_FORMAT + \" /to \" + DatePattern.USER_INPUT_FORMAT +\"\\n\" +","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + \"For instance: event project meeting /from 2023-01-30 1600 /to 2023-01-30 1800\"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":17}},{"path":"src/main/java/sebastianExceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input cannot be comprehended by Sebastian","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class IllegalInputException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public IllegalInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Apologies, I\u0027m afraid I don\u0027t understand your instruction\");","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastianExceptions/InputFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input does not follow the format for that specific type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * This class is meant to be the superclass of the specific exceptions for each type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"abstract public class InputFormatMismatchException extends IllegalArgumentException{","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public InputFormatMismatchException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/sebastianExceptions/InstructionFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import formatters.Formatter;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when an instruction is given in the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class InstructionFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public InstructionFormatMismatchException(String instruction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please give an instruction in the format of: \" + \"\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                        Formatter.space() + instruction + \" [task index]\"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                );","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/sebastianExceptions/LackOfArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the user did not specify a body for their task declaration/instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class LackOfArgumentException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public LackOfArgumentException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Please specify an argument\");","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastianExceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastianExceptions;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the specific task the user wish to operate on does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class TaskNotExistException extends IndexOutOfBoundsException{","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, the task does not exist\");","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import time.EndTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"D\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public Deadline(int isCompleted, String taskDescription, EndTime endTime) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ldt) {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return endTime.isSameDay(ldt);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        return \"[\"+ taskType +\"]\" + super.toString() + \" \" + this.endTime.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave() + \"\u003c\u003e\" + endTime.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":31}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import time.Duration;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private Duration duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private static String taskType \u003d \"E\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public Event(int isCompleted, String taskDescription, Duration duration) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return duration.isSameDay(ld);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" \" + this.duration.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" +super.formatForSave() + \"\u003c\u003e\" + this.duration.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":31}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * This class represents a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    private String taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    private TaskStatus taskStatus;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public Task(String taskDescription) {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public Task(String taskDescription, int isCompleted) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d isCompleted \u003d\u003d 0? TaskStatus.NOT_DONE : TaskStatus.DONE;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public Task mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public Task unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return this.taskStatus + \" \" + this.taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        int isCompleted \u003d taskStatus \u003d\u003d TaskStatus.DONE? 1 : 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        return isCompleted + \"\u003c\u003e\" + taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":47}},{"path":"src/main/java/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * An Enum class representing the completion status of a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum TaskStatus {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    DONE(\"X\"),","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    NOT_DONE(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private final String status;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    TaskStatus(String status) {","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public String toString(){","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + this.status + \"]\";","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"T\";","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    public Todo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        return \"[\"+ taskType +\"]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/main/java/time/DatePattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package time;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Enum class specifying different date time patterns for uses under different conditions","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum DatePattern {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    PRESENTATION_FORMAT(\"dd MMM yyyy HH:mm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    USER_INPUT_FORMAT(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    TASK_ON_DATE_FORMAT(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private final String format;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    DatePattern(String format) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.format \u003d format;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public String toString(){","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return this.format;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/time/Duration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package time;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * A duration","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Duration {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public Duration(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Checks if the start date and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @return whether the start date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(from.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return \"(from: \" + from.format(dtf) + \" to: \" + to.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return dtf.format(from) + \"\u003c\u003e\" + dtf.format(to);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":38}},{"path":"src/main/java/time/EndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package time;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * The end time","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class EndTime {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public EndTime(LocalDateTime endtime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endtime;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Checks if two this and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return whether this date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(endTime.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return \"(by: \" + endTime.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        return DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString()).format(endTime);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"todo coding assignment","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"deadline cs1205 assignment /by next friday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"event career fair /from 10am /to 5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"list 456789654","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"deadline /by 7","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"deadline sleep","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"mark 100","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"mark -1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"mark 3.11","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"unmark 8","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"wwwwww","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"23333","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"java -classpath ../bin Sebastian \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Emrysil":1,"-":37}}]
