[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"checkstyle {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    toolVersion \u003d\u002710.2\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    mainClassName \u003d \"sebastian.Sebastian\"","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    archiveBaseName \u003d \"sebastian\"","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Emrysil":20,"-":38}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"import controllers.Main;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * Class used to launch the GUI","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class Launcher {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/controllers/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.text.TextAlignment;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":" * Class representing a dialog box","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * @param text dialog text","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * @param img avatar","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        this.style();","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     * Styles the dialog box and other components it contains","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    private void style() {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        Circle circle \u003d new Circle();","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        circle.setCenterY(25.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        circle.setCenterX(25.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        circle.setRadius(25.0);","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        displayPicture.setClip(circle);","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        this.setSpacing(10);","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        this.setFillHeight(false);","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        BorderStroke borderStroke \u003d new BorderStroke(Color.GRAY, BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"                new CornerRadii(20.0), new BorderWidths(1.0));","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        Border dialogBorder \u003d new Border(borderStroke);","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"        dialog.setBorder(dialogBorder);","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        dialog.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"     * Flips a dialog box along the vertical axis","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    private void flip() {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        Label l \u003d (Label) tmp.get(0);","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        l.setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"        l.setTextAlignment(TextAlignment.LEFT);","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * Instantiates a dialog box using the information provided","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     * @param text the content to be shown in the dialog box","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * @param img the user avatar","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     * @return the dialog instance","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"     * Triggers a response of Sebastian","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"     * @param text user input","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * @param img user avatar","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * @return dialog box containing the response and avatar of sebastian","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    public static DialogBox getSebastianDialog(String text, Image img) {","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"        db.flip();","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        return db;","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":109}},{"path":"src/main/java/controllers/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import sebastian.Sebastian;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" * Class used to connect the controller and view of MainWindow","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private Sebastian sebastian \u003d new Sebastian(\"SebastianData.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setSebastian(sebastian);","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            stage.show();","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":34}},{"path":"src/main/java/controllers/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package controllers;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import sebastian.Sebastian;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":" * Class representing the main window of the GUI","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    private Sebastian sebastian;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/cat.jpg\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    private Image sebastainImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/dog.jpg\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * Initialises the main window","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        dialogContainer.setPadding(new Insets(30, 10, 0, 10));","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        dialogContainer.setSpacing(30.0);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        BorderStroke borderStroke \u003d new BorderStroke(Color.GRAY, BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                new CornerRadii(20.0), new BorderWidths(1.0));","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        Border roundBorder \u003d new Border(borderStroke);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * Connects the application to the Sebastian instance","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * @param s the Sebastian instance","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public void setSebastian(Sebastian s) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        sebastian \u003d s;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        dialogContainer.getChildren().add(","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                DialogBox.getSebastianDialog(sebastian.getStartingMessage(), sebastainImage)","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"     * Handles user input","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    @FXML","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"        String response \u003d sebastian.getResponse(userInput.getText());","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"                DialogBox.getSebastianDialog(response, sebastainImage)","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":72}},{"path":"src/main/java/sebastian/Sebastian.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.SebastianException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class representing the task manager, Sebastian","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class Sebastian {","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    private boolean isActive;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param filePath path of the file that stores past tasks","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public Sebastian(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * Generates the starting message of a session","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * @return the starting message","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String getStartingMessage() {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            isActive \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            tasks \u003d storage.formTaskListFromData();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            return ui.getGreeting();","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        } catch (CannotLoadDataException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            return ui.getError(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * Produces a response to the user command","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     * @param input user command","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * @return response to the user command","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        if (isActive) {","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                Command c \u003d Parser.parse(input);","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"                String res \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"                isActive \u003d !c.isExit();","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"                return res;","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            } catch (SebastianException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"                return ui.getError(e.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            return \"Sebastian is offline...\";","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":64}},{"path":"src/main/java/sebastian/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to add a deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class AddDeadlineCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public AddDeadlineCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a deadline to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @throws DeadlineFormatMismatchException when user attempts to add a deadline with a wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, DeadlineFormatMismatchException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            String deadline \u003d instruction.substring(9);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d deadline.split(\"/by\");","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            if (task.length !\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            } else if (task[0].equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                String res \u003d this.addTask(taskList.addDeadline(0, task[0].trim(), task[1].trim()),","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                       taskList.getTotalTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":54}},{"path":"src/main/java/sebastian/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to add an event","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public AddEventCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a deadline to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws EventFormatMismatchException when user attempts to add an event with a wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, EventFormatMismatchException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            String event \u003d instruction.substring(6);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d event.split(\"/from|/to\");","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            if (task.length !\u003d 3) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            } else if (task[0].equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                String res \u003d this.addTask(taskList.addEvent(0, task[0].trim(), task[1].trim(), task[2].trim()),","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                        taskList.getTotalTasks());","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":53}},{"path":"src/main/java/sebastian/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to add a task","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public abstract class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     * Response after a task is added to the task list","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * @param task the task being added","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been added","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public String addTask(Task task, int totalTasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        return \"Noted. I\u0027ve added this task:\" + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"                + task + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"                + \"Now you have a total of \" + totalTasks + \" tasks on the list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":27}},{"path":"src/main/java/sebastian/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to add a to-do","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public AddTodoCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a to-do to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            String task \u003d instruction.substring(5);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            String res \u003d this.addTask(taskList.addTodo(0, task.trim()), taskList.getTotalTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":41}},{"path":"src/main/java/sebastian/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.SebastianException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * Execute the user command","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @throws SebastianException when error / exception occurs during the execution","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws SebastianException;","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":26}},{"path":"src/main/java/sebastian/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.TaskNotExistException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to delete a task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Remove a task from the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify the task to be deleted","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempts to delete a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        } else if (insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                String res \u003d \"Noted. I have deleted this task: \" + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                        + taskList.deleteTaskAtIndex(taskIndex) + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                        + \"Now your have \" + taskList.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":57}},{"path":"src/main/java/sebastian/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to exit the current session","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * To exit the current session","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Bye. It\u0027s my pleasure to serve you\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":28}},{"path":"src/main/java/sebastian/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to find tasks based on a keyword","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public FindCommand(String instruction) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Find tasks which contains user specified keyword as part of its task description","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList TaskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui Ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage Storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) throws LackOfArgumentException {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            String keyword \u003d instruction.substring(5).trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            String res \u003d taskList.findTasks(keyword).toString();","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Emrysil":38}},{"path":"src/main/java/sebastian/command/GetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.DateFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to retrieve tasks occurring on a certain date","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class GetCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public GetCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Retrieve the tasks occurring on a specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a date","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws DateFormatMismatchException when user attempts to specify a data with the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, DateFormatMismatchException {","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        } else if (insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                String res \u003d taskList.getTasksOnDate(insArr[1]).toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":48}},{"path":"src/main/java/sebastian/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to retrieve the tasks currently on the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * Retrieve all tasks on the list","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Here are the tasks in your list: \" + \"\\n\" + taskList + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"                + \"You have \" + taskList.getTotalTasks() + \" tasks\";","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":26}},{"path":"src/main/java/sebastian/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.TaskNotExistException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to mark a task as done","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public MarkCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a task to be marked","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempted to mark a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        } else if (insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                String res \u003d \"Well Done. I have marked this task as done: \" + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                        + taskList.markTaskAtIndex(taskIndex) + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                        + \"You can proceed with other tasks now\";","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":57}},{"path":"src/main/java/sebastian/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.TaskNotExistException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" * Class used to handle a command to mark a task as not done","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public UnmarkCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return a string representing the result of task execution","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a task to be unmarked","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempted to unmark a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        } else if (insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                String res \u003d \"No problem, I have unmarked this task: \" + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                        + taskList.unmarkTaskAtIndex(taskIndex) + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                        + \"It\u0027s time to get started!\";","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                return ui.getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":57}},{"path":"src/main/java/sebastian/exceptions/CannotLoadDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception that tasklist data cannot be loaded from the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class CannotLoadDataException extends SebastianException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public CannotLoadDataException() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, I cannot retrieve your past tasks. I\u0027ll create a new task list for you\");","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastian/exceptions/CannotWriteDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception that data cannot be written to tge hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class CannotWriteDataException extends SebastianException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public CannotWriteDataException() {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(\"Task cannot be saved to disk, exiting the program will cause data to be lost\");","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastian/exceptions/DateFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when a date is given in the wrong format","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class DateFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public DateFormatMismatchException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a date in the following format:\" + \"\\n\" + \"get \" + DatePattern.TASK_ON_DATE_FORMAT","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":17}},{"path":"src/main/java/sebastian/exceptions/DeadlineFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when a deadline is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class DeadlineFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public DeadlineFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format:\" + \"\\n\" + \"deadline [deadline] /by \"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"                        + DatePattern.USER_INPUT_FORMAT + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"                        + \"For instance: deadline assignment submission /by 2023-01-27 2359\"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":19}},{"path":"src/main/java/sebastian/exceptions/EventFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when an event is declared using the wrong format","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class EventFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public EventFormatMismatchException() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format: \" + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"                       + \"event [event] /from \" + DatePattern.USER_INPUT_FORMAT + \" /to \"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"                        + DatePattern.USER_INPUT_FORMAT + \"\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"                       + \"For instance: event project meeting /from 2023-01-30 1600 /to 2023-01-30 1800\"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":20}},{"path":"src/main/java/sebastian/exceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input cannot be comprehended by sebastian.Sebastian","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class IllegalInputException extends SebastianException {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public IllegalInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        super(\"Apologies, I\u0027m afraid I don\u0027t understand your instruction\");","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/java/sebastian/exceptions/InputFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input does not follow the format for that specific type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * This class is meant to be the superclass of the specific exceptions for each type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public abstract class InputFormatMismatchException extends SebastianException {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public InputFormatMismatchException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/java/sebastian/exceptions/InstructionFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when an instruction is given in the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class InstructionFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public InstructionFormatMismatchException(String instruction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(\"Please give an instruction in the format of: \" + \"\\n\" + instruction + \" [task index]\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastian/exceptions/LackOfArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * Exception when the user did not specify a body for their task declaration/instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class LackOfArgumentException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public LackOfArgumentException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        super(\"Please specify an argument\");","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/java/sebastian/exceptions/SebastianException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Super class of all exceptions specific to Sebastian","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class SebastianException extends Exception {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public SebastianException(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastian/exceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the specific task the user wish to operate on does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class TaskNotExistException extends SebastianException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, the task does not exist\");","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":13}},{"path":"src/main/java/sebastian/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.AddDeadlineCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.AddEventCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.AddTodoCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.GetCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.IllegalInputException;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * A class to interpret user input","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * To interpret user command and dispatch the job to different command handlers for execution","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param fullCommand user command","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @return a command handler","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalInputException when user command cannot be interpreted","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public static Command parse(String fullCommand) throws IllegalInputException {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        String action \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        switch (action) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            return new FindCommand(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            return new MarkCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            return new AddTodoCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            return new AddDeadlineCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        case \"event\":","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            return new AddEventCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        case \"get\":","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            return new GetCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        case \"bye\":","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            throw new IllegalInputException();","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":55}},{"path":"src/main/java/sebastian/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.io.File;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":" * A class to store task list to hard disk and to retrieve data from the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    private File file;","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * Load data from hard disk and convert the String representation into actual tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @return a main.TaskList containing all the tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public TaskList formTaskListFromData() throws CannotLoadDataException {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        File file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            String curLine;","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            while ((curLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"                String[] curTask \u003d curLine.split(\"\u003c\u003e\");","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                String taskType \u003d curTask[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                int isCompleted \u003d Integer.parseInt(curTask[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                String taskDescription \u003d curTask[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                case \"T\":","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                    taskList.addTodo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                case \"D\":","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                    taskList.addDeadline(isCompleted, taskDescription, curTask[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                case \"E\":","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"                    taskList.addEvent(isCompleted, taskDescription, curTask[3], curTask[4]);","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"                default:","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"                    break;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException | DeadlineFormatMismatchException | EventFormatMismatchException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            throw new CannotLoadDataException();","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * Save tasks in the taskList into the hard disk.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     * @param taskList a TaskList object","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"    public void writeToDisk(TaskList taskList) throws CannotWriteDataException {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        if (file \u003d\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"            file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        FileWriter fw \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            fw.write(taskList.formatTaskListForSave());","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"            fw.flush();","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"            throw new CannotWriteDataException();","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        } finally {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"            if (fw !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"                    fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":89}},{"path":"src/main/java/sebastian/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.Duration;","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.EndTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":" * This class represents a list of all tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"public class TaskList {","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the to-do to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * @return the to-do generated","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public Task addTodo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Todo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the deadline to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     * @return the deadline generated","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public Task addDeadline(int isCompleted, String taskDescription, String endTime) throws","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"            DeadlineFormatMismatchException {","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Deadline(isCompleted, taskDescription, new EndTime(convertStringToDate(endTime)));","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"            throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the event to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     * @return the event generated","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    public Task addEvent(int isCompleted, String taskDescription, String from, String to) throws","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            EventFormatMismatchException {","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Event(isCompleted, taskDescription,","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"                    new Duration(convertStringToDate(from), convertStringToDate(to)));","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"            throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime convertStringToDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"        return LocalDateTime.parse(dateTime, dateTimeFormatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as done","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"    public Task markTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.get(taskIndex - 1).mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"    public Task unmarkTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.get(taskIndex - 1).unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * Delete the task as specified by the task index","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"    public Task deleteTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-14"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.remove(taskIndex - 1);","lastModifiedDate":"2023-01-22"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"     * Retrieve tasks occurring on a specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"     * @param date retrieve tasks occurring on the date","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"     * @return a Tasklist containing tasks occurring on the specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"     * @throws DateTimeParseException when date provided is invalid or is in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"    public TaskList getTasksOnDate(String date) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.TASK_ON_DATE_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"        LocalDate ld \u003d LocalDate.parse(date, dtf);","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"        List\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"            if (t instanceof Deadline) {","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"                if (d.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"            } else if (t instanceof Event) {","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"                if (e.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"        return new TaskList(tasksOnDate);","lastModifiedDate":"2023-01-21"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     * Find all tasks which contains keyword as part of its task description","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"     * @param keyword the keyword to be checked against","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"     * @return A new Tasklist containing all the qualified tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"        List\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"        for (Task t : taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"            if (t.containsKeyword(keyword)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"                res.add(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"        return new TaskList(res);","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"     * The total tasks currently in the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"     * @return the total number of tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-01-13"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-13"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-13"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"        int totalTasks \u003d this.getTotalTasks();","lastModifiedDate":"2023-01-13"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2023-01-13"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2023-01-13"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"            sb.append(i + 1).append(\".\").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"        if (sb.length() !\u003d 0) {","lastModifiedDate":"2023-01-13"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"            sb.delete(sb.length() - 1, sb.length());","lastModifiedDate":"2023-01-13"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"     * Format tasks in the taskList into a String ready to be written into the hard disk","lastModifiedDate":"2023-01-20"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"     * @return formatted String ready to be written to disk","lastModifiedDate":"2023-01-22"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"    public String formatTaskListForSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-01-22"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"            sb.append(task.formatForSave()).append(\"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"        if (sb.length() \u003e 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"            return sb.substring(0, sb.length() - 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":204,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":205,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":206,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Emrysil":206}},{"path":"src/main/java/sebastian/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * A class in charge of interacting with the user","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * A customised space","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * @return the customised space as a String","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public static String space() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        String space \u003d \" \";","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        return space.repeat(2);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * The message to be sent when Sebastian first runs","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @return greeting message together with the user manual","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Greetings, I\u0027m Sebastian. \" + getUserGuide();","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return getFormattedString(res);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * Echo whatever the user has typed in","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * @param instruction the user input","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @return the same user input","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    public String echo(String instruction) {","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        return space() + instruction;","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Retrieve error occurred during the session in customised format","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * @param errorMessage the error message of the error","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public String getError(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return this.getFormattedString(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Re-format a string into customised style","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * @param str the string to be formatted","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted string","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public String getFormattedString(String str) {","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return formatString(str);","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * To format a String","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * @param str the String to be formatted","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    private static String formatString(String str) {","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        String[] lines \u003d str.split(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        for (int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"            if (i \u003d\u003d 0 \u0026\u0026 lines.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"                sb.append(lines[i]).append(\"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"            } else if (i \u003d\u003d lines.length - 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"                sb.append(lines[i]);","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"                sb.append(space()).append(lines[i]).append(\"\\n\");","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * A user guide to be printed at the start of each session","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     * @return user guide","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"    private String getUserGuide() {","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        String guide \u003d \"Here are the commands you can give me: \\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"                + \"1. todo [a todo task]\\n\" + space() + \"-- to add a todo to your task list\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"                + \"2. deadline [a deadline] /by yyyy-MM-dd HHmm\\n\" + space() + \"-- to add a deadline to you task list\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"                + \"3. event [an event] /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm\\n\" + space()","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"                + \"-- to add an event to you task list\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"                + \"4. mark [task index]\\n\" + space() + \"-- to mark a task as done\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"                + \"5. unmark [task index]\\n\" + space() + \"-- to mark a task as not done\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"                + \"6. list\\n\" + space() + \"-- to show the tasks on the task list\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"                + \"7. delete [task index]\\n\" + space() + \"-- to delete a task from the task list\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"                + \"8. get yyyy-MM-dd\\n\" + space() + \"-- to retrieve the tasks on a specific date\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"                + \"9. bye\\n\" + space() + \"-- to exit the session\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"                + \"10. find [keyword]\\n\" + space() + \"-- find tasks containing the keyword\\n\"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"                + \"You can start giving commands below\";","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"        return guide;","lastModifiedDate":"2023-01-23"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":92}},{"path":"src/main/java/sebastian/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.EndTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" * Class representing a deadline","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"D\";","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted whether the deadline is completed; 0 for not completed, 1 for completed","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription description of the deadline","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param endTime the time the deadline is due","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public Deadline(int isCompleted, String taskDescription, EndTime endTime) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Checked if the deadline is on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @param ld a date","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     * @return whether the deadline is on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return endTime.isSameDay(ld);","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" \" + this.endTime.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     * Format the deadline into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave() + \"\u003c\u003e\" + endTime.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":51}},{"path":"src/main/java/sebastian/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.Duration;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Class representing an event","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private static String taskType \u003d \"E\";","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private Duration duration;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted whether the event is completed; 0 for not completed, 1 for completed","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription description of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @param duration the duration of the event","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public Event(int isCompleted, String taskDescription, Duration duration) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     * Checked if the event starts on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"     * @param ld a date","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * @return whether the event starts on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        return duration.isSameDay(ld);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" \" + this.duration.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     * Format the event into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave() + \"\u003c\u003e\" + this.duration.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":49}},{"path":"src/main/java/sebastian/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Class representing a task","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    private TaskStatus taskStatus;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription description of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted whether the task is completed; 0 for not completed, 1 for completed","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public Task(String taskDescription, int isCompleted) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d isCompleted \u003d\u003d 0 ? TaskStatus.NOT_DONE : TaskStatus.DONE;","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public Task mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    public Task unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * Checks if the task description contains the keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * @param keyword the keyword to be checked against","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @return whether the task description contains the keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public boolean containsKeyword(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        return taskDescription.contains(keyword);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return this.taskStatus + \" \" + this.taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Format a task into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        int isCompleted \u003d taskStatus \u003d\u003d TaskStatus.DONE ? 1 : 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        return isCompleted + \"\u003c\u003e\" + taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":60}},{"path":"src/main/java/sebastian/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * An Enum class representing the completion status of a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum TaskStatus {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    DONE(\"X\"),","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    NOT_DONE(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private final String status;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * @param status completion status of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    TaskStatus(String status) {","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + this.status + \"]\";","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":25}},{"path":"src/main/java/sebastian/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Class represring a todo","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"T\";","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted whether the to-do is completed; 0 for not completed, 1 for completed","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription description of the to-do","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public Todo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + taskType + \"]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Format the to-do into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":33}},{"path":"src/main/java/sebastian/time/DatePattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Enum class specifying different date time patterns for uses under different conditions","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum DatePattern {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    PRESENTATION_FORMAT(\"dd MMM yyyy HH:mm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    USER_INPUT_FORMAT(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    TASK_ON_DATE_FORMAT(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private final String format;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    DatePattern(String format) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.format \u003d format;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return this.format;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/sebastian/time/Duration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Class representing a duration","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Duration {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * Constructor","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * @param from start time","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * @param to end time","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public Duration(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Checks if the start date and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @return whether the start date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(from.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        return \"(from: \" + from.format(dtf) + \" to: \" + to.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     * Format the duration into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        return dtf.format(from) + \"\u003c\u003e\" + dtf.format(to);","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":47}},{"path":"src/main/java/sebastian/time/EndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * The end time","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class EndTime {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public EndTime(LocalDateTime endtime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endtime;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Checks if two this and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return whether this date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(endTime.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return \"(by: \" + endTime.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * Format the duration into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        return DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString()).format(endTime);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":40}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" styleClass\u003d\"dialogBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" type\u003d\"javafx.scene.layout.HBox\" \u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" styleClass\u003d\"dialogText\" text\u003d\"Label\" textAlignment\u003d\"RIGHT\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" styleClass\u003d\"avatar\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        \u003cURL value\u003d\"@../css/DialogBox.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.Cursor?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"700.0\" prefWidth\u003d\"500.0\" style\u003d\"-fx-background-color: black;\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"controllers.MainWindow\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        \u003cURL value\u003d\"@../css/MainWindow.css\" /\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    \u003cTextField fx:id\u003d\"userInput\" styleClass\u003d\"userInput\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: gray; -fx-border-radius: 20; -fx-font-size: 18;\" translateX\u003d\"10.0\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.leftAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"         \u003cFont size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"      \u003ccursor\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"         \u003cCursor fx:constant\u003d\"HAND\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"      \u003c/cursor\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    \u003cButton fx:id\u003d\"sendButton\" styleClass\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"50.0\" prefWidth\u003d\"75.0\" style\u003d\"-fx-background-color: gray; -fx-cursor: hand;\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"10.0\" AnchorPane.rightAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"         \u003cFont size\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"      \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" pannable\u003d\"true\" prefHeight\u003d\"620.0\" prefWidth\u003d\"480.0\" style\u003d\"-fx-pannable: true; -fx-border-width: 0; -fx-background-color: black;\" translateX\u003d\"10.0\" vbarPolicy\u003d\"NEVER\" vvalue\u003d\"1.0\" AnchorPane.topAnchor\u003d\"10.0\"\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\" minHeight\u003d\"620.0\" styleClass\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Emrysil":30}},{"path":"src/test/java/sebastian/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.IllegalInputException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public void testAddCommand(){","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"            Command todo \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            assertTrue(todo instanceof AddTodoCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            Command deadline \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            assertTrue(deadline instanceof AddDeadlineCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"            Command event \u003d Parser.parse(\"event\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"            assertTrue(event instanceof AddEventCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"            Command mark \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            assertTrue(mark instanceof MarkCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            Command unmark \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            assertTrue(unmark instanceof UnmarkCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            Command delete \u003d Parser.parse(\"delete\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            assertTrue(delete instanceof DeleteCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            Command exit \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            assertTrue(exit instanceof ExitCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            Command list \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            assertTrue(list instanceof ListCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            Command get \u003d Parser.parse(\"get\");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            assertTrue(get instanceof GetCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public void testException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalInputException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            Parser.parse(\"some random command\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":47}},{"path":"src/test/java/sebastian/main/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public void loadDataTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            Storage storage \u003d new Storage(\"SebastianData.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"            TaskList taskList \u003d storage.formTaskListFromData();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            Assertions.assertEquals(taskList.getTotalTasks(),7);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        } catch (CannotLoadDataException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":19}},{"path":"src/test/java/sebastian/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.exceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public void testTaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.addTodo(0, \"join a cca\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            assertTrue(t instanceof Todo);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.markTaskAtIndex(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"            assertNotNull(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.deleteTaskAtIndex(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            assertNotNull(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public void testDateParse() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"1234567899\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"20230101\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-01-01\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-1-1 1200\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-1-1 9999\");","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.addDeadline(0, \"random deadline\",\"2023-01-27 2359\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            assertTrue(t instanceof Deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":55}}]
