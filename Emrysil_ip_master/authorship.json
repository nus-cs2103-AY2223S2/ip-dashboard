[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    mainClassName \u003d \"sebastian.Sebastian\"","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"    archiveBaseName \u003d \"sebastian\"","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Emrysil":16,"-":39}},{"path":"src/main/java/sebastian/Sebastian.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.Command;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Parser;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.SebastianException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class Sebastian {","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public Sebastian(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"            tasks \u003d storage.formTaskListFromData();","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        } catch (CannotLoadDataException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public void run() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        ui.greet();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            } catch (SebastianException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-14"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-14"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        new Sebastian(\"SebastianData.txt\").run();","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":48}},{"path":"src/main/java/sebastian/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class AddDeadlineCommand extends AddTaskCommand{","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public AddDeadlineCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a deadline to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws DeadlineFormatMismatchException when user attempts to add a deadline with a wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, DeadlineFormatMismatchException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            String deadline \u003d instruction.substring(9);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d deadline.split(\"/by\");","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            if(task.length !\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"                throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            } else if(task[0].equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            else {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"               String res \u003d this.addTask(taskList.addDeadline(0, task[0].trim(), task[1].trim()), taskList.getTotalTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"               ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"               storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":48}},{"path":"src/main/java/sebastian/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public AddEventCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a deadline to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws EventFormatMismatchException when user attempts to add an event with a wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, EventFormatMismatchException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        if (insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            String event \u003d instruction.substring(6);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            String[] task \u003d event.split(\"/from|/to\");","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            if (task.length !\u003d 3) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            } else if (task[0].equals(\"\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                String res \u003d this.addTask(taskList.addEvent(0, task[0].trim(), task[1].trim(), task[2].trim()), taskList.getTotalTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":49}},{"path":"src/main/java/sebastian/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"abstract public class AddTaskCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"     * Response after a task is added to the task list","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * @param task the task being added","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * @return notice that the task has been added","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public String addTask(Task task, int totalTasks){","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        return  \"Noted. I\u0027ve added this task:\" + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"                task + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"                \"Now you have \" + totalTasks + \" tasks in the list\";","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":24}},{"path":"src/main/java/sebastian/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class AddTodoCommand extends AddTaskCommand{","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public AddTodoCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a to-do to be added","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            String task \u003d instruction.substring(5);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            String res \u003d this.addTask(taskList.addTodo(0, task.trim()), taskList.getTotalTasks());","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":38}},{"path":"src/main/java/sebastian/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.SebastianException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"abstract public class Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public abstract void execute(TaskList taskList, Ui ui, Storage storage) throws SebastianException;","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":15}},{"path":"src/main/java/sebastian/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.TaskNotExistException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public DeleteCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Remove a task from the task list","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify the task to be deleted","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempts to delete a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        } else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                String res \u003d \"Noted. I have deleted this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                        taskList.deleteTaskAtIndex(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                        \"Now your have \" + taskList.getTotalTasks() + \" tasks in the list\";","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"delete\");","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":54}},{"path":"src/main/java/sebastian/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class ExitCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"     * To exit the current session","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Bye. It\u0027s my pleasure to serve you\";","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":24}},{"path":"src/main/java/sebastian/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" * Class representing a find command","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public FindCommand(String instruction) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Find tasks which contains user specified keyword as part of its task description","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList TaskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui Ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage Storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) throws LackOfArgumentException {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            String keyword \u003d instruction.substring(5).trim();","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            ui.printFormattedString(taskList.findTasks(keyword).toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Emrysil":36}},{"path":"src/main/java/sebastian/command/GetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DateFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class GetCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public GetCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Retrieve the tasks occurring on a specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not indicate a date","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws DateFormatMismatchException when user attempts to specify a data with the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, DateFormatMismatchException {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        } else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"                String res \u003d taskList.getTasksOnDate(insArr[1]).toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"                ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"            throw new DateFormatMismatchException();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":44}},{"path":"src/main/java/sebastian/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"     * Retrieve all tasks on the list","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Here are the tasks in your list: \" + \"\\n\" + taskList + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"                \"You have \" + taskList.getTotalTasks() + \" tasks\";","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":22}},{"path":"src/main/java/sebastian/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.TaskNotExistException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private final String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public MarkCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a task to be marked","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempted to mark a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                String res \u003d  \"Well Done. I have marked this task as done: \" + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                        taskList.markTaskAtIndex(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                        \"You can proceed with other tasks now\";","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"mark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":55}},{"path":"src/main/java/sebastian/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.command;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Storage;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.TaskList;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.main.Ui;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.InstructionFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.LackOfArgumentException;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.TaskNotExistException;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private String instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public UnmarkCommand(String instruction) {","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.instruction \u003d instruction;","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param taskList taskList instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ui ui instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @param storage storage instance created at the start of the session","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     * @throws LackOfArgumentException when user did not specify a task to be unmarked","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * @throws InstructionFormatMismatchException when user command is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @throws TaskNotExistException when user attempted to unmark a non-exist task","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     * @throws CannotWriteDataException when fail to write task list to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public void execute(TaskList taskList, Ui ui, Storage storage)","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            throws LackOfArgumentException, InstructionFormatMismatchException,","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            TaskNotExistException, CannotWriteDataException {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        String[] insArr \u003d instruction.split(\" \");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"        if(insArr.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"            throw new LackOfArgumentException();","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        else if(insArr.length \u003d\u003d 2) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                int taskIndex \u003d Integer.parseInt(insArr[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                String res \u003d \"No problem, I have unmarked this task: \" + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                        taskList.unmarkTaskAtIndex(taskIndex) + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                        \"It\u0027s time to get started!\";","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                ui.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                storage.writeToDisk(taskList);","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"                throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"                throw new TaskNotExistException();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"        else {","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"            throw new InstructionFormatMismatchException(\"unmark\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":55}},{"path":"src/main/java/sebastian/main/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.IllegalInputException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" * A class to interpret user input","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"public class Parser {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"     * To interpret user command and dispatch the job to different command handlers for execution","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * @param fullCommand user command","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     * @return a command handler","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"     * @throws IllegalInputException when user command cannot be interpreted","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public static Command parse(String fullCommand) throws IllegalInputException {","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        String action \u003d fullCommand.split(\" \")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        switch (action) {","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"            case \"find\":","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"                return new FindCommand(fullCommand);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            case \"list\":","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"                return new MarkCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"                return new UnmarkCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"               return new AddTodoCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                return new AddDeadlineCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            case \"event\":","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"               return new AddEventCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            case \"delete\" :","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"               return new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            case \"get\" :","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"                return new GetCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            case \"bye\" :","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            default:","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                throw new IllegalInputException();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":44}},{"path":"src/main/java/sebastian/main/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotWriteDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import java.io.*;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":" * A class to store task list to hard disk and to retrieve data from the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"public class Storage {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    private File file;","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Load data from hard disk and convert the String representation into actual tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @return a main.TaskList containing all the tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public TaskList formTaskListFromData() throws CannotLoadDataException{","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        File file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(file));","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"            String curLine;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            while((curLine \u003d br.readLine()) !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                String[] curTask \u003d curLine.split(\"\u003c\u003e\");","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"                String taskType \u003d curTask[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"                int isCompleted \u003d Integer.parseInt(curTask[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"                String taskDescription \u003d curTask[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"                    case \"T\":","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"                        taskList.addTodo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                    case \"D\":","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"                        taskList.addDeadline(isCompleted,taskDescription, curTask[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"                    case \"E\":","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                        taskList.addEvent(isCompleted, taskDescription, curTask[3], curTask[4]);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"                        break;","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"            return taskList;","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException | DeadlineFormatMismatchException | EventFormatMismatchException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"            throw new CannotLoadDataException();","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * Save tasks in the taskList into the hard disk.","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     * @param taskList a TaskList object","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"    public void writeToDisk(TaskList taskList) throws CannotWriteDataException{","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        if(file \u003d\u003d null){","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            file \u003d new File(\"SebastianData.txt\");","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"        FileWriter fw \u003d null;","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"            fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"            fw.write(taskList.formatTaskListForSave());","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"            fw.flush();","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"            throw new CannotWriteDataException();","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"        } finally {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"            if(fw !\u003d null) {","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"                try {","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"                    fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"                } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":81}},{"path":"src/main/java/sebastian/main/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.EventFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Event;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.Duration;","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.EndTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"import java.util.List;","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":" * This class represents a list of all tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"public class TaskList {","lastModifiedDate":"2023-01-13"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Add a to-do to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the to-do to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     * @return the to-do generated","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    public Task addTodo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"        Task newTask \u003d new Todo(isCompleted, taskDescription);","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * Add a deadline to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the deadline to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"     * @return the deadline generated","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"    public Task addDeadline(int isCompleted, String taskDescription, String endTime) throws DeadlineFormatMismatchException{","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Deadline(isCompleted, taskDescription, new EndTime(convertStringToDate(endTime)));","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"            throw new DeadlineFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"     * Add an event to the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"     * @param isCompleted completion status of the task 0:not done 1:done","lastModifiedDate":"2023-01-20"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"     * @param taskDescription a description of the event to be added","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"     * @return the event generated","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"    public Task addEvent(int isCompleted, String taskDescription, String from, String to) throws EventFormatMismatchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"            Task newTask \u003d new Event(isCompleted, taskDescription, new Duration(convertStringToDate(from), convertStringToDate(to)));","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"            this.taskList.add(newTask);","lastModifiedDate":"2023-01-13"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"            return newTask;","lastModifiedDate":"2023-01-13"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"            throw new EventFormatMismatchException();","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime convertStringToDate(String dateTime) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"        return LocalDateTime.parse(dateTime, dateTimeFormatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as done","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as done","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    public Task markTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.get(taskIndex-1).mark();","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"     * Mark the task as specified by the task index as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be marked as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"    public Task unmarkTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-13"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.get(taskIndex-1).unmark();","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":111,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":112,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"Emrysil"},"content":"     * Delete the task as specified by the task index","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"Emrysil"},"content":"     * @param taskIndex the index of the task to be deleted","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Emrysil"},"content":"     * @return the task","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"Emrysil"},"content":"     * @throws IndexOutOfBoundsException when the task index is out of range","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"Emrysil"},"content":"    public Task deleteTaskAtIndex(int taskIndex) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-14"},{"lineNumber":119,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"Emrysil"},"content":"            return this.taskList.remove(taskIndex-1);","lastModifiedDate":"2023-01-22"},{"lineNumber":121,"author":{"gitId":"Emrysil"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"Emrysil"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":125,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":126,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":127,"author":{"gitId":"Emrysil"},"content":"     * Retrieve tasks occurring on a specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":128,"author":{"gitId":"Emrysil"},"content":"     * @param date retrieve tasks occurring on the date","lastModifiedDate":"2023-01-24"},{"lineNumber":129,"author":{"gitId":"Emrysil"},"content":"     * @return a Tasklist containing tasks occurring on the specific date","lastModifiedDate":"2023-01-24"},{"lineNumber":130,"author":{"gitId":"Emrysil"},"content":"     * @throws DateTimeParseException when date provided is invalid or is in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":131,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":132,"author":{"gitId":"Emrysil"},"content":"    public TaskList getTasksOnDate(String date) throws DateTimeParseException{","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.TASK_ON_DATE_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"Emrysil"},"content":"        LocalDate ld \u003d LocalDate.parse(date, dtf);","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"Emrysil"},"content":"        List\u003cTask\u003e tasksOnDate \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"Emrysil"},"content":"        for(Task t: taskList) {","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"Emrysil"},"content":"            if(t instanceof Deadline) {","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"Emrysil"},"content":"                Deadline d \u003d (Deadline) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"Emrysil"},"content":"                if(d.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"Emrysil"},"content":"            } else if(t instanceof Event) {","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"Emrysil"},"content":"                Event e \u003d (Event) t;","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"Emrysil"},"content":"                if(e.isOnSameDay(ld)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"Emrysil"},"content":"                    tasksOnDate.add(t);","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"Emrysil"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"Emrysil"},"content":"        return new TaskList(tasksOnDate);","lastModifiedDate":"2023-01-21"},{"lineNumber":150,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":153,"author":{"gitId":"Emrysil"},"content":"     * Find all tasks which contains keyword as part of its task description","lastModifiedDate":"2023-01-24"},{"lineNumber":154,"author":{"gitId":"Emrysil"},"content":"     * @param keyword the keyword to be checked against","lastModifiedDate":"2023-01-24"},{"lineNumber":155,"author":{"gitId":"Emrysil"},"content":"     * @return A new Tasklist containing all the qualified tasks","lastModifiedDate":"2023-01-24"},{"lineNumber":156,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":157,"author":{"gitId":"Emrysil"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-01-24"},{"lineNumber":158,"author":{"gitId":"Emrysil"},"content":"        List\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":159,"author":{"gitId":"Emrysil"},"content":"        for(Task t:taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":160,"author":{"gitId":"Emrysil"},"content":"            if(t.containsKeyword(keyword)) {","lastModifiedDate":"2023-01-24"},{"lineNumber":161,"author":{"gitId":"Emrysil"},"content":"                res.add(t);","lastModifiedDate":"2023-01-24"},{"lineNumber":162,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":163,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":164,"author":{"gitId":"Emrysil"},"content":"        return new TaskList(res);","lastModifiedDate":"2023-01-24"},{"lineNumber":165,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":166,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":167,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":168,"author":{"gitId":"Emrysil"},"content":"     * The total tasks currently in the task list","lastModifiedDate":"2023-01-19"},{"lineNumber":169,"author":{"gitId":"Emrysil"},"content":"     * @return the total number of tasks","lastModifiedDate":"2023-01-19"},{"lineNumber":170,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":171,"author":{"gitId":"Emrysil"},"content":"    public int getTotalTasks() {","lastModifiedDate":"2023-01-13"},{"lineNumber":172,"author":{"gitId":"Emrysil"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-13"},{"lineNumber":173,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":174,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":175,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":176,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":177,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-13"},{"lineNumber":178,"author":{"gitId":"Emrysil"},"content":"        int totalTasks \u003d this.getTotalTasks();","lastModifiedDate":"2023-01-13"},{"lineNumber":179,"author":{"gitId":"Emrysil"},"content":"        for(int i \u003d 0; i \u003c totalTasks; i ++ ) {","lastModifiedDate":"2023-01-13"},{"lineNumber":180,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d taskList.get(i);","lastModifiedDate":"2023-01-13"},{"lineNumber":181,"author":{"gitId":"Emrysil"},"content":"            sb.append(i+1).append(\".\").append(t.toString()).append(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":182,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":183,"author":{"gitId":"Emrysil"},"content":"        if(sb.length()!\u003d0) {","lastModifiedDate":"2023-01-13"},{"lineNumber":184,"author":{"gitId":"Emrysil"},"content":"            sb.delete(sb.length()-1, sb.length());","lastModifiedDate":"2023-01-13"},{"lineNumber":185,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":186,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-13"},{"lineNumber":187,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":188,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":189,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":190,"author":{"gitId":"Emrysil"},"content":"     * Format tasks in the taskList into a String ready to be written into the hard disk","lastModifiedDate":"2023-01-20"},{"lineNumber":191,"author":{"gitId":"Emrysil"},"content":"     * @return formatted String ready to be written to disk","lastModifiedDate":"2023-01-22"},{"lineNumber":192,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":193,"author":{"gitId":"Emrysil"},"content":"    public String formatTaskListForSave() {","lastModifiedDate":"2023-01-22"},{"lineNumber":194,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-20"},{"lineNumber":195,"author":{"gitId":"Emrysil"},"content":"        for(Task task: this.taskList){","lastModifiedDate":"2023-01-22"},{"lineNumber":196,"author":{"gitId":"Emrysil"},"content":"            sb.append(task.formatForSave()).append(\"\\n\");","lastModifiedDate":"2023-01-20"},{"lineNumber":197,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":198,"author":{"gitId":"Emrysil"},"content":"        if(sb.length()\u003e0){","lastModifiedDate":"2023-01-20"},{"lineNumber":199,"author":{"gitId":"Emrysil"},"content":"            return sb.substring(0,sb.length()-1);","lastModifiedDate":"2023-01-20"},{"lineNumber":200,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":201,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":202,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":203,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Emrysil":203}},{"path":"src/main/java/sebastian/main/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * A class in charge of interacting with the user","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class Ui {","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private static Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"     * Print a single line break ---","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public static void lineBreak(){","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        String line \u003d \"-\";","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        String res \u003d space() + line.repeat(80);","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        System.out.println(res);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * A customised space","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @return the customised space as a String","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public static String space() {","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        String space \u003d \" \";","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"        return space.repeat(5);","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public void greet() {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        String res \u003d \"Greetings, I\u0027m Sebastian. \" + getUserGuide();","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        this.printFormattedString(res);","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * Echo whatever the user has typed in","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     * @param instruction the user input","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"     * @return the same user input","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    public String echo(String instruction){","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        return space() + instruction;","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"     * Read in and return user command","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"     * @return user command","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        return scan.nextLine();","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"     * Print error occurred during the session in customised format","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"     * @param errorMessage the error message of the error","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Emrysil"},"content":"    public void showError(String errorMessage) {","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"Emrysil"},"content":"        this.printFormattedString(errorMessage);","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Emrysil"},"content":"     * Print a string in customised format","lastModifiedDate":"2023-01-24"},{"lineNumber":62,"author":{"gitId":"Emrysil"},"content":"     * @param str the string to be printed in customised format","lastModifiedDate":"2023-01-24"},{"lineNumber":63,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"Emrysil"},"content":"    public void printFormattedString(String str) {","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Emrysil"},"content":"        System.out.println(formatString(str));","lastModifiedDate":"2023-01-23"},{"lineNumber":67,"author":{"gitId":"Emrysil"},"content":"        lineBreak();","lastModifiedDate":"2023-01-23"},{"lineNumber":68,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Emrysil"},"content":"     * To format a String","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Emrysil"},"content":"     * @param str the String to be formatted","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Emrysil"},"content":"    private static String formatString(String str){","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"Emrysil"},"content":"        String[] lines \u003d str.split(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Emrysil"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Emrysil"},"content":"        for(int i \u003d 0; i \u003c lines.length; i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Emrysil"},"content":"            if(i \u003d\u003d 0 \u0026\u0026 lines.length \u003e 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Emrysil"},"content":"                sb.append(space()).append(lines[i]).append(\"\\n\") ;","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Emrysil"},"content":"            } else if (i \u003d\u003d lines.length - 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Emrysil"},"content":"                sb.append(space()).append(lines[i]);","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"Emrysil"},"content":"            } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"Emrysil"},"content":"                sb.append(space()).append(space()).append(lines[i]).append(\"\\n\");","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"Emrysil"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Emrysil"},"content":"        return sb.toString();","lastModifiedDate":"2023-01-23"},{"lineNumber":88,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"Emrysil"},"content":"     * A user guide to be printed at the start of each session","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"Emrysil"},"content":"     * @return user guide","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":94,"author":{"gitId":"Emrysil"},"content":"    private String getUserGuide() {","lastModifiedDate":"2023-01-23"},{"lineNumber":95,"author":{"gitId":"Emrysil"},"content":"        String guide \u003d \"Here are the commands you can give me: \\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":96,"author":{"gitId":"Emrysil"},"content":"                \"1. todo [a todo task] -- to add a todo to your task list\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":97,"author":{"gitId":"Emrysil"},"content":"                \"2. deadline [a deadline] /by yyyy-MM-dd HHmm -- to add a deadline to you task list\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":98,"author":{"gitId":"Emrysil"},"content":"                \"3. event [an event] /from yyyy-MM-dd HHmm /to yyyy-MM-dd HHmm -- to add an event to you task list\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":99,"author":{"gitId":"Emrysil"},"content":"                \"4. mark [task index] -- to mark a task as done\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":100,"author":{"gitId":"Emrysil"},"content":"                \"5. unmark [task index] -- to mark a task as not done\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":101,"author":{"gitId":"Emrysil"},"content":"                \"6. list -- to show the tasks on the task list\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":102,"author":{"gitId":"Emrysil"},"content":"                \"7. delete [task index] -- to delete a task from the task list\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":103,"author":{"gitId":"Emrysil"},"content":"                \"8. get yyyy-MM-dd -- to retrieve the tasks on a specific date\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":104,"author":{"gitId":"Emrysil"},"content":"                \"9. bye -- to exit the session\\n\" +","lastModifiedDate":"2023-01-23"},{"lineNumber":105,"author":{"gitId":"Emrysil"},"content":"                \"10. find [keyword] -- find tasks containing the keyword\\n\" +","lastModifiedDate":"2023-01-24"},{"lineNumber":106,"author":{"gitId":"Emrysil"},"content":"                \"You can start giving commands below\";","lastModifiedDate":"2023-01-23"},{"lineNumber":107,"author":{"gitId":"Emrysil"},"content":"        return guide;","lastModifiedDate":"2023-01-23"},{"lineNumber":108,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":109,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":109}},{"path":"src/main/java/sebastian/sebastianExceptions/CannotLoadDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception that tasklist data cannot be loaded from the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class CannotLoadDataException extends SebastianException {","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public CannotLoadDataException() {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, I cannot retrieve your past tasks. I\u0027ll create a new task list for you\");","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastian/sebastianExceptions/CannotWriteDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception that data cannot be written to tge hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class CannotWriteDataException extends SebastianException{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public CannotWriteDataException() {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Task cannot be saved to disk, exiting the program will cause data to be lost\");","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastian/sebastianExceptions/DateFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * When a date is given in the wrong format","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class DateFormatMismatchException extends InputFormatMismatchException {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public DateFormatMismatchException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a date in the following format:\" + \"\\n\" + \"get \" + DatePattern.TASK_ON_DATE_FORMAT","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":14}},{"path":"src/main/java/sebastian/sebastianExceptions/DeadlineFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when a deadline is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class DeadlineFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public DeadlineFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format:\" + \"\\n\" + \"deadline [deadline] /by \" +","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                        DatePattern.USER_INPUT_FORMAT + \"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                        \"For instance: deadline assignment submission /by 2023-01-27 2359\"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":16}},{"path":"src/main/java/sebastian/sebastianExceptions/EventFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.DatePattern;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" * Exception when an event is declared using the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class EventFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public EventFormatMismatchException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"                \"Please specify a deadline in the following format: \" + \"\\n\" +","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"                       \"event [event] /from \" + DatePattern.USER_INPUT_FORMAT + \" /to \" + DatePattern.USER_INPUT_FORMAT +\"\\n\" +","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"                       \"For instance: event project meeting /from 2023-01-30 1600 /to 2023-01-30 1800\"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        );","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":16}},{"path":"src/main/java/sebastian/sebastianExceptions/IllegalInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input cannot be comprehended by sebastian.Sebastian","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class IllegalInputException extends SebastianException{","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public IllegalInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        super(\"Apologies, I\u0027m afraid I don\u0027t understand your instruction\");","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/sebastian/sebastianExceptions/InputFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when a user input does not follow the format for that specific type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * This class is meant to be the superclass of the specific exceptions for each type of instruction/task declaration","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"abstract public class InputFormatMismatchException extends SebastianException{","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public InputFormatMismatchException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/sebastian/sebastianExceptions/InstructionFormatMismatchException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when an instruction is given in the wrong format","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class InstructionFormatMismatchException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public InstructionFormatMismatchException(String instruction) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"                \"Please give an instruction in the format of: \" + \"\\n\" + instruction + \" [task index]\"","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"                );","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":12}},{"path":"src/main/java/sebastian/sebastianExceptions/LackOfArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" * Exception when the user did not specify a body for their task declaration/instruction","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class LackOfArgumentException extends InputFormatMismatchException{","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    public LackOfArgumentException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"        super(\"Please specify an argument\");","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":11}},{"path":"src/main/java/sebastian/sebastianExceptions/SebastianException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Super class of all exceptions specific to Sebastian","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class SebastianException extends Exception{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public SebastianException(String message) {","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(message);","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastian/sebastianExceptions/TaskNotExistException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.sebastianExceptions;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Exception when the specific task the user wish to operate on does not exist","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class TaskNotExistException extends SebastianException{","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    public TaskNotExistException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"        super(\"Sorry, the task does not exist\");","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Emrysil":10}},{"path":"src/main/java/sebastian/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.EndTime;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * Class representing a deadline","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private EndTime endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"D\";","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    public Deadline(int isCompleted, String taskDescription, EndTime endTime) {","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * Checked if the deadline is on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @param ld a date","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     * @return whether the deadline is on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        return endTime.isSameDay(ld);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return \"[\"+ taskType +\"]\" + super.toString() + \" \" + this.endTime.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * Format the deadline into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave() + \"\u003c\u003e\" + endTime.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":42}},{"path":"src/main/java/sebastian/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import sebastian.time.Duration;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private Duration duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private static String taskType \u003d \"E\";","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public Event(int isCompleted, String taskDescription, Duration duration) {","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.duration \u003d duration;","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * Checked if the event starts on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @param ld a date","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @return whether the event starts on the same day as the provided date","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"    public boolean isOnSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"        return duration.isSameDay(ld);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + taskType + \"]\" + super.toString() + \" \" + this.duration.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * Format the event into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" +super.formatForSave() + \"\u003c\u003e\" + this.duration.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":40}},{"path":"src/main/java/sebastian/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * This class represents a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    private TaskStatus taskStatus;","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public Task(String taskDescription, int isCompleted) {","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d isCompleted \u003d\u003d 0? TaskStatus.NOT_DONE : TaskStatus.DONE;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as done","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    public Task mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"     * Mark a task as not done","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"     * @return the target of invocation","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    public Task unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        this.taskStatus \u003d TaskStatus.NOT_DONE;","lastModifiedDate":"2023-01-13"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        return this;","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * Checks if the task description contains the keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * @param keyword the keyword to be checked against","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @return whether the task description contains the keyword","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public boolean containsKeyword(String keyword){","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        return taskDescription.contains(keyword);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"        return this.taskStatus + \" \" + this.taskDescription;","lastModifiedDate":"2023-01-13"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"     * Format a task into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        int isCompleted \u003d taskStatus \u003d\u003d TaskStatus.DONE? 1 : 0;","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"        return isCompleted + \"\u003c\u003e\" + taskDescription;","lastModifiedDate":"2023-01-20"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":55}},{"path":"src/main/java/sebastian/task/TaskStatus.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * An Enum class representing the completion status of a task","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum TaskStatus {","lastModifiedDate":"2023-01-13"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    DONE(\"X\"),","lastModifiedDate":"2023-01-13"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    NOT_DONE(\" \");","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    private final String status;","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    TaskStatus(String status) {","lastModifiedDate":"2023-01-13"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-01-13"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    public String toString(){","lastModifiedDate":"2023-01-13"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"        return \"[\" + this.status + \"]\";","lastModifiedDate":"2023-01-13"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/sebastian/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.task;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"public class Todo extends Task{","lastModifiedDate":"2023-01-13"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"    private static final String taskType \u003d \"T\";","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"    public Todo(int isCompleted, String taskDescription) {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"        super(taskDescription, isCompleted);","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"        return \"[\"+ taskType +\"]\" + super.toString();","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"     * Format the to-do into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"        return taskType + \"\u003c\u003e\" + super.formatForSave();","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Emrysil":24}},{"path":"src/main/java/sebastian/time/DatePattern.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":" * Enum class specifying different date time patterns for uses under different conditions","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"public enum DatePattern {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"    PRESENTATION_FORMAT(\"dd MMM yyyy HH:mm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    USER_INPUT_FORMAT(\"yyyy-MM-dd HHmm\"),","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    TASK_ON_DATE_FORMAT(\"yyyy-MM-dd\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private final String format;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    DatePattern(String format) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.format \u003d format;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    public String toString(){","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"        return this.format;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":21}},{"path":"src/main/java/sebastian/time/Duration.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * A duration","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class Duration {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"    public Duration(LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * Checks if the start date and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"     * @return whether the start date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(from.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"        return \"(from: \" + from.format(dtf) + \" to: \" + to.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     * Format the duration into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"        return dtf.format(from) + \"\u003c\u003e\" + dtf.format(to);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":42}},{"path":"src/main/java/sebastian/time/EndTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.time;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":" * The end time","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class EndTime {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    private LocalDateTime endTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"    public EndTime(LocalDateTime endtime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        this.endTime \u003d endtime;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"     * Checks if two this and ld are on the same day","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"     * @param ld the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"     * @return whether this date is equal to the other date","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"    public boolean isSameDay(LocalDate ld) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        return ld.equals(endTime.toLocalDate());","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(DatePattern.PRESENTATION_FORMAT.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        return \"(by: \" + endTime.format(dtf) + \")\";","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"     * Format the duration into a suitable String representation to be written to the hard disk","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"     * @return the formatted String representation","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"    public String formatForSave() {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        return DateTimeFormatter.ofPattern(DatePattern.USER_INPUT_FORMAT.toString()).format(endTime);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Emrysil":40}},{"path":"src/test/java/sebastian/main/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.command.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.IllegalInputException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"    public void testAddCommand(){","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"            Command todo \u003d Parser.parse(\"todo\");","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            assertTrue(todo instanceof AddTodoCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            Command deadline \u003d Parser.parse(\"deadline\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            assertTrue(deadline instanceof AddDeadlineCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"            Command event \u003d Parser.parse(\"event\");","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"            assertTrue(event instanceof AddEventCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"            Command mark \u003d Parser.parse(\"mark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            assertTrue(mark instanceof MarkCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"            Command unmark \u003d Parser.parse(\"unmark\");","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"            assertTrue(unmark instanceof UnmarkCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"            Command delete \u003d Parser.parse(\"delete\");","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"            assertTrue(delete instanceof DeleteCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            Command exit \u003d Parser.parse(\"bye\");","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"            assertTrue(exit instanceof ExitCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"            Command list \u003d Parser.parse(\"list\");","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            assertTrue(list instanceof ListCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            Command get \u003d Parser.parse(\"get\");","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"            assertTrue(get instanceof GetCommand);","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"    public void testException() {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"        assertThrows(IllegalInputException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            Parser.parse(\"some random command\");","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":47}},{"path":"src/test/java/sebastian/main/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.CannotLoadDataException;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"    public void loadDataTest() {","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"        try {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"            Storage storage \u003d new Storage(\"SebastianData.txt\");","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"            TaskList taskList \u003d storage.formTaskListFromData();","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"            Assertions.assertEquals(taskList.getTotalTasks(),7);","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        } catch (CannotLoadDataException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":19}},{"path":"src/test/java/sebastian/main/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"package sebastian.main;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-23"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"import sebastian.sebastianExceptions.DeadlineFormatMismatchException;","lastModifiedDate":"2023-01-23"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Deadline;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Task;","lastModifiedDate":"2023-01-23"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"import sebastian.task.Todo;","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-23"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"    public void testTaskList() {","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.addTodo(0, \"join a cca\");","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"            assertTrue(t instanceof Todo);","lastModifiedDate":"2023-01-23"},{"lineNumber":17,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.markTaskAtIndex(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Emrysil"},"content":"            assertNotNull(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.deleteTaskAtIndex(1);","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Emrysil"},"content":"            assertNotNull(t);","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Emrysil"},"content":"    @Test","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Emrysil"},"content":"    public void testDateParse() {","lastModifiedDate":"2023-01-23"},{"lineNumber":28,"author":{"gitId":"Emrysil"},"content":"        TaskList tl \u003d new TaskList();","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Emrysil"},"content":"        assertAll(() -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"1234567899\");","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":33,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"20230101\");","lastModifiedDate":"2023-01-23"},{"lineNumber":36,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":37,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":38,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":39,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-01-01\");","lastModifiedDate":"2023-01-23"},{"lineNumber":40,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":41,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-1-1 1200\");","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"Emrysil"},"content":"            assertThrows(DeadlineFormatMismatchException.class, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"Emrysil"},"content":"                tl.addDeadline(0, \"random deadline\", \"2023-1-1 9999\");","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"Emrysil"},"content":"            });","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"Emrysil"},"content":"        }, () -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"Emrysil"},"content":"            Task t \u003d tl.addDeadline(0, \"random deadline\",\"2023-01-27 2359\");","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"Emrysil"},"content":"            assertTrue(t instanceof Deadline);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"Emrysil"},"content":"        });","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"Emrysil"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"Emrysil"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"Emrysil"},"content":"}","lastModifiedDate":"2023-01-23"}],"authorContributionMap":{"Emrysil":55}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Emrysil"},"content":"todo coding assignment","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Emrysil"},"content":"deadline cs1205 assignment /by next friday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Emrysil"},"content":"event career fair /from 10am /to 5pm","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Emrysil"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Emrysil"},"content":"list 456789654","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Emrysil"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Emrysil"},"content":"deadline /by 7","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Emrysil"},"content":"deadline sleep","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Emrysil"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Emrysil"},"content":"mark 100","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Emrysil"},"content":"mark -1","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Emrysil"},"content":"mark 3.11","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Emrysil"},"content":"unmark 8","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Emrysil"},"content":"wwwwww","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Emrysil"},"content":"23333","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Emrysil"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Emrysil":16}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Emrysil"},"content":"java -classpath ../bin Sebastian \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Emrysil":1,"-":37}}]
