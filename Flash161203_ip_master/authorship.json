[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Flash161203":16,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import duke.ui.TextUi;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":" * Represents the chatbot that helps a user maintain a list of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"public class Duke {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    private final TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    private void run() {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        TextUi.greet();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        Scanner commandScanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        boolean isEnd \u003d false;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        while (true) {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"            String userCommand \u003d TextUi.getUserCommand(commandScanner);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"                Command command \u003d Parser.parse(userCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"                String response \u003d command.execute(this.taskList);","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"                TextUi.show(response);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"                isEnd \u003d command.isExitCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                TextUi.showError(e);","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"            } finally {","lastModifiedDate":"2023-01-20"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"                TextUi.endCommand();","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"            if (isEnd) {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                break;","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        commandScanner.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"        Duke bot \u003d new Duke();","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        bot.run();","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"     * Returns the chatbot\u0027s response to the given user command.","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"     * @param userCommand The user\u0027s text input.","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"    public String getResponse(String userCommand) {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"            Command command \u003d Parser.parse(userCommand);","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"            response \u003d command.execute(this.taskList).strip();","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"        } finally {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Flash161203":83,"-":3}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"public class Launcher {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.ui.components.MainWindow;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"            stage.show();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":39}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" * Represents a command that adds a Task to the list of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    private final Task task;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    private final String taskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    public AddCommand(Task task, String taskType) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"        assert taskType !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by adding the given Task to the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        return taskList.addTask(this.task, this.taskType);","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":42}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * Represents a executable command.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final boolean isExit;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    protected Command(boolean isExit) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"        return isExit;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException If anything goes wrong","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    public abstract String execute(TaskList taskList) throws DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * Represents a command that deletes a Task from the list of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public DeleteCommand(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by deleting a Task from the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException If the task number given is not valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        return taskList.deleteTask(this.taskNumber);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":34}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents a command that ends the session with the chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"        super(true);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by signing off from the chatbot session.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        return \"Bye. Have a nice day!\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":25}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents a command that finds the Tasks from the list of Tasks,","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * that have a particular keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by displaying all Tasks from the list of Tasks,","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     * that have the given keyword.","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * ","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        return taskList.findKeywordInTasks(keyword);","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Flash161203":33}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents a command that displays all the Tasks present in the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    public ListCommand() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by displaying all tasks present in the List of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        return taskList.listTasks();","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":26}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * Represents a command that marks a Task in the list of Tasks, as done.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public MarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by marking a particular Task in the list of Tasks as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException If the task number given is not valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        return taskList.markTask(this.taskNumber);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":33}},{"path":"src/main/java/duke/command/SetPriorityCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.task.Priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class SetPriorityCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final Priority priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public SetPriorityCommand(int taskNumber, Priority priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"        assert priority !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by marking a particular Task in the list of Tasks as done.","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException If the task number given is not valid.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        return taskList.setTaskPriority(this.taskNumber, this.priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Flash161203":36}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * Represents a command that marks a Task in the list of Tasks, as undone.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public UnmarkCommand(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        super(false);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        this.taskNumber \u003d taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * Executes the command by marking a particular Task in the list of Tasks as undone.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"     * @param taskList The TaskList object that manages the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException If the task number given is not valid.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public String execute(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        assert taskList !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        return taskList.unmarkTask(this.taskNumber);","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":33}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that can be thrown while interacting with the chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/duke/exception/DukeInvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that is thrown when the arguments given for a command are invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class DukeInvalidArgumentException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public DukeInvalidArgumentException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/duke/exception/DukeInvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents an exception that is thrown when an invalid command is entered.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class DukeInvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public DukeInvalidCommandException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":12}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeInvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import duke.task.*;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":" * Represents a parser that parses the user input into an executable command.","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    private static LocalDateTime parseDateTime(String dateTimeText) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        assert dateTimeText !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"            dateTime \u003d LocalDateTime.parse(dateTimeText, dateTimeFormatter);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"            dateTime \u003d null;","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        return dateTime;","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    public static Priority parsePriority(String priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"        if (priority.equalsIgnoreCase(\"high\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"            return Priority.HIGH;","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        } else if (priority.equalsIgnoreCase(\"medium\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"            return Priority.MEDIUM;","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        } else if (priority.equalsIgnoreCase(\"low\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"            return Priority.LOW;","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"            return null;","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"    private static Command parseList(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Sorry. That is an invalid command :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"    private static Command parseDelete(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Sorry... That is an invalid command :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"            int taskNumber \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"            return new DeleteCommand(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"    private static Command parseMarkUnmark(String commandHeader, String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Sorry... That is an invalid command :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"            int taskNumber \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"            if (commandHeader.equals(\"mark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"                return new MarkCommand(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"                return new UnmarkCommand(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"    private static Command parseToDo(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Flash161203"},"content":"        assert commandParts.length \u003e 0 : \"The command should not be empty\";","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The description of the to-do is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"        String[] descWords \u003d Arrays.copyOfRange(commandParts, 1, commandParts.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"        String description \u003d String.join(\" \", descWords);","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"        Task toDo \u003d new ToDo(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"        return new AddCommand(toDo, \"to-do\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"    private static Command parseDeadline(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"        assert commandParts.length \u003e 0 : \"The command should not be empty\";","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":126,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Uh-oh. There is no about the deadline :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":127,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":128,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":129,"author":{"gitId":"Flash161203"},"content":"        String[] commandRest \u003d Arrays.copyOfRange(commandParts, 1, commandParts.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Flash161203"},"content":"        List\u003cString\u003e descList \u003d Arrays.asList(commandRest);","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Flash161203"},"content":"        int byIndex \u003d descList.indexOf(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":133,"author":{"gitId":"Flash161203"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":134,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Uh-oh. There is no \u0027by\u0027 given for the deadline :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":135,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":136,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":137,"author":{"gitId":"Flash161203"},"content":"        if (byIndex \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":138,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The description of the deadline is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":139,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":140,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":141,"author":{"gitId":"Flash161203"},"content":"        if (commandRest.length - 1 \u003d\u003d byIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":142,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The \u0027by\u0027 of the deadline is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":143,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"Flash161203"},"content":"        String[] descWords \u003d Arrays.copyOfRange(commandRest, 0, byIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"Flash161203"},"content":"        String description \u003d String.join(\" \", descWords);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":148,"author":{"gitId":"Flash161203"},"content":"        String[] byArray \u003d Arrays.copyOfRange(commandRest, byIndex + 1, commandRest.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":149,"author":{"gitId":"Flash161203"},"content":"        String by \u003d String.join(\" \", byArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":150,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":151,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime byDateTime \u003d Parser.parseDateTime(by);","lastModifiedDate":"2023-01-29"},{"lineNumber":152,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":153,"author":{"gitId":"Flash161203"},"content":"        if (byDateTime \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":154,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-29"},{"lineNumber":155,"author":{"gitId":"Flash161203"},"content":"                    \"Oops! Invalid date-time format. It should be DD-MM-YYYY hhmm (24-hrs format)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":156,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":157,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":158,"author":{"gitId":"Flash161203"},"content":"        Task deadline \u003d new Deadline(description, byDateTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"Flash161203"},"content":"        return new AddCommand(deadline, \"deadline\");","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Flash161203"},"content":"    private static Command parseEvent(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"Flash161203"},"content":"        assert commandParts.length \u003e 0 : \"The command should not be empty\";","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":168,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Uh-oh. There is no information about the event :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":169,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":170,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":171,"author":{"gitId":"Flash161203"},"content":"        String[] commandRest \u003d Arrays.copyOfRange(commandParts, 1, commandParts.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":172,"author":{"gitId":"Flash161203"},"content":"        List\u003cString\u003e descList \u003d Arrays.asList(commandRest);","lastModifiedDate":"2023-01-29"},{"lineNumber":173,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":174,"author":{"gitId":"Flash161203"},"content":"        int fromIndex \u003d descList.indexOf(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":175,"author":{"gitId":"Flash161203"},"content":"        if (fromIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":176,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Uh-oh. There is no \u0027from\u0027 given for the event :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":177,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":178,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"Flash161203"},"content":"        int toIndex \u003d descList.indexOf(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"Flash161203"},"content":"        if (toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":181,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Uh-oh. There is no \u0027to\u0027 given for the event :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":182,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":183,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":184,"author":{"gitId":"Flash161203"},"content":"        if (Math.min(fromIndex, toIndex) \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":185,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The description of the event is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":186,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":187,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":188,"author":{"gitId":"Flash161203"},"content":"        if (toIndex - fromIndex \u003d\u003d 1 || commandRest.length - 1 \u003d\u003d fromIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":189,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The \u0027from\u0027 of the deadline is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":190,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":191,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":192,"author":{"gitId":"Flash161203"},"content":"        if (fromIndex - toIndex \u003d\u003d 1 || commandRest.length - 1 \u003d\u003d toIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Uh-oh. The \u0027to\u0027 of the event is empty :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":194,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":195,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":196,"author":{"gitId":"Flash161203"},"content":"        String[] descWords \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":197,"author":{"gitId":"Flash161203"},"content":"                Arrays.copyOfRange(commandRest, 0, Math.min(fromIndex, toIndex));","lastModifiedDate":"2023-01-29"},{"lineNumber":198,"author":{"gitId":"Flash161203"},"content":"        String description \u003d String.join(\" \", descWords);","lastModifiedDate":"2023-01-29"},{"lineNumber":199,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":200,"author":{"gitId":"Flash161203"},"content":"        String[] fromArray;","lastModifiedDate":"2023-01-29"},{"lineNumber":201,"author":{"gitId":"Flash161203"},"content":"        String[] toArray;","lastModifiedDate":"2023-01-29"},{"lineNumber":202,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":203,"author":{"gitId":"Flash161203"},"content":"        if (fromIndex \u003e toIndex) {","lastModifiedDate":"2023-01-29"},{"lineNumber":204,"author":{"gitId":"Flash161203"},"content":"            fromArray \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":205,"author":{"gitId":"Flash161203"},"content":"                    Arrays.copyOfRange(commandRest, fromIndex + 1, commandRest.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":206,"author":{"gitId":"Flash161203"},"content":"            toArray \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":207,"author":{"gitId":"Flash161203"},"content":"                    Arrays.copyOfRange(commandRest, toIndex + 1, fromIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":208,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":209,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":210,"author":{"gitId":"Flash161203"},"content":"            fromArray \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":211,"author":{"gitId":"Flash161203"},"content":"                    Arrays.copyOfRange(commandRest, fromIndex + 1, toIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":212,"author":{"gitId":"Flash161203"},"content":"            toArray \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":213,"author":{"gitId":"Flash161203"},"content":"                    Arrays.copyOfRange(commandRest, toIndex + 1, commandRest.length);","lastModifiedDate":"2023-01-29"},{"lineNumber":214,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":215,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":216,"author":{"gitId":"Flash161203"},"content":"        String from \u003d String.join(\" \", fromArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":217,"author":{"gitId":"Flash161203"},"content":"        String to \u003d String.join(\" \", toArray);","lastModifiedDate":"2023-01-29"},{"lineNumber":218,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":219,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime fromDateTime \u003d Parser.parseDateTime(from);","lastModifiedDate":"2023-01-29"},{"lineNumber":220,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime toDateTime \u003d Parser.parseDateTime(to);","lastModifiedDate":"2023-01-29"},{"lineNumber":221,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":222,"author":{"gitId":"Flash161203"},"content":"        if (fromDateTime \u003d\u003d null || toDateTime \u003d\u003d null) {","lastModifiedDate":"2023-01-29"},{"lineNumber":223,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-29"},{"lineNumber":224,"author":{"gitId":"Flash161203"},"content":"                    \"Oops! Invalid date-time format. It should be DD-MM-YYYY hhmm (24-hrs format)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":225,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":226,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":227,"author":{"gitId":"Flash161203"},"content":"        if (toDateTime.isBefore(fromDateTime)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":228,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(","lastModifiedDate":"2023-01-29"},{"lineNumber":229,"author":{"gitId":"Flash161203"},"content":"                    \"Uh-oh, those are incompatible dates and times for \u0027from\u0027 and \u0027to\u0027 :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":230,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":231,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":232,"author":{"gitId":"Flash161203"},"content":"        Task event \u003d new Event(description, fromDateTime, toDateTime);","lastModifiedDate":"2023-01-29"},{"lineNumber":233,"author":{"gitId":"Flash161203"},"content":"        return new AddCommand(event, \"event\");","lastModifiedDate":"2023-01-29"},{"lineNumber":234,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":235,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":236,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":237,"author":{"gitId":"Flash161203"},"content":"    private static Command parseFind(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":238,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":239,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length !\u003d 2) {","lastModifiedDate":"2023-02-01"},{"lineNumber":240,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"Flash161203"},"content":"                    \"Sorry... The correct format for find command is \u0027find \u003ckeyword\u003e\u0027.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":242,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":243,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"Flash161203"},"content":"        return new FindCommand(commandParts[1]);","lastModifiedDate":"2023-02-01"},{"lineNumber":245,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":246,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":248,"author":{"gitId":"Flash161203"},"content":"    private static Command parsePrioritize(String[] commandParts) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"Flash161203"},"content":"        if (commandParts.length !\u003d 3) {","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Sorry... That is an invalid command :/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":252,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"Flash161203"},"content":"        int taskNumber;","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":255,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":256,"author":{"gitId":"Flash161203"},"content":"            taskNumber \u003d Integer.parseInt(commandParts[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":257,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":258,"author":{"gitId":"Flash161203"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":259,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":260,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":261,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":262,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":263,"author":{"gitId":"Flash161203"},"content":"        Priority priority \u003d Parser.parsePriority(commandParts[2]);","lastModifiedDate":"2023-02-12"},{"lineNumber":264,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":265,"author":{"gitId":"Flash161203"},"content":"        if (priority \u003d\u003d null) {","lastModifiedDate":"2023-02-12"},{"lineNumber":266,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... priority should be given as high/medium/low :/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":267,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":268,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":269,"author":{"gitId":"Flash161203"},"content":"        return new SetPriorityCommand(taskNumber, priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":270,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":271,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":272,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":273,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":274,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":275,"author":{"gitId":"Flash161203"},"content":"     * Parses the user\u0027s text input into an executable command.","lastModifiedDate":"2023-02-01"},{"lineNumber":276,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":277,"author":{"gitId":"Flash161203"},"content":"     * @param userCommand The user\u0027s text input.","lastModifiedDate":"2023-02-01"},{"lineNumber":278,"author":{"gitId":"Flash161203"},"content":"     * @return The executable command obtained from the user\u0027s input.","lastModifiedDate":"2023-02-01"},{"lineNumber":279,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException When the user\u0027s input cannot be parsed into an executable command.","lastModifiedDate":"2023-02-01"},{"lineNumber":280,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":281,"author":{"gitId":"Flash161203"},"content":"    public static Command parse(String userCommand) throws DukeException {","lastModifiedDate":"2023-01-29"},{"lineNumber":282,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":283,"author":{"gitId":"Flash161203"},"content":"        String command \u003d userCommand.strip().replaceAll(\"( )+\", \" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":284,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":285,"author":{"gitId":"Flash161203"},"content":"        if (command.equals(\"\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":286,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"You have not entered anything...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":287,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":288,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":289,"author":{"gitId":"Flash161203"},"content":"        String[] commandParts \u003d command.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":290,"author":{"gitId":"Flash161203"},"content":"        String commandHeader \u003d commandParts[0].toLowerCase();","lastModifiedDate":"2023-01-29"},{"lineNumber":291,"author":{"gitId":"Flash161203"},"content":"        ","lastModifiedDate":"2023-01-29"},{"lineNumber":292,"author":{"gitId":"Flash161203"},"content":"        if (commandHeader.equals(\"bye\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":293,"author":{"gitId":"Flash161203"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":294,"author":{"gitId":"Flash161203"},"content":"            ","lastModifiedDate":"2023-01-29"},{"lineNumber":295,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"list\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":296,"author":{"gitId":"Flash161203"},"content":"            return parseList(commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":297,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":298,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"delete\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":299,"author":{"gitId":"Flash161203"},"content":"            return parseDelete(commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":300,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":301,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"mark\") || commandHeader.equals(\"unmark\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":302,"author":{"gitId":"Flash161203"},"content":"            return parseMarkUnmark(commandHeader, commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":303,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":304,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"todo\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":305,"author":{"gitId":"Flash161203"},"content":"            return parseToDo(commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":306,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":307,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"deadline\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":308,"author":{"gitId":"Flash161203"},"content":"            return parseDeadline(commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":309,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":310,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"event\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":311,"author":{"gitId":"Flash161203"},"content":"            return parseEvent(commandParts);","lastModifiedDate":"2023-01-29"},{"lineNumber":312,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":313,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":314,"author":{"gitId":"Flash161203"},"content":"            return parseFind(commandParts);","lastModifiedDate":"2023-02-01"},{"lineNumber":315,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":316,"author":{"gitId":"Flash161203"},"content":"        } else if (commandHeader.equals(\"prioritize\")) {","lastModifiedDate":"2023-02-12"},{"lineNumber":317,"author":{"gitId":"Flash161203"},"content":"            return parsePrioritize(commandParts);","lastModifiedDate":"2023-02-12"},{"lineNumber":318,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":319,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":320,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidCommandException(\"Sorry... I did not understand that :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":321,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":322,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":323,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":324,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":325,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":326,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":326}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"import java.util.List;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":" * Represents a storage manager that helps in storing and retrieving","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":" * the list of Tasks from a text file.","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public final String folderPath;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    public final String fileName;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    public final String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        assert filePath !\u003d null : \"A valid filepath should be provided\";","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        int splitIndex \u003d filePath.lastIndexOf(\"/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        this.folderPath \u003d filePath.substring(0, splitIndex);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        this.fileName \u003d filePath.substring(splitIndex + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"     * Retrieves the list of Tasks from the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"     * @return The list of Tasks stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"    public ArrayList\u003cTask\u003e readTasksFromFile() {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"            File tasksFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"            Scanner fileScanner \u003d new Scanner(tasksFile);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"            while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"                String data \u003d fileScanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"                tasks.add(Task.getTaskFromString(data));","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"            fileScanner.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"            File tasksFolderObject \u003d new File(this.folderPath);","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"            if (!tasksFolderObject.exists()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"                tasksFolderObject.mkdir();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"            File tasksFileObject \u003d new File(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"            tasksFileObject.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"        } finally {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"            return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"     * Writes a list of Tasks to the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"     * @param tasks The list of Tasks to be written to the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"    public void writeTasksToFile(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"            List\u003cString\u003e taskStrings \u003d tasks","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"                    .stream()","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"                    .map(Task::getFileRepresentation)","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"                    .collect(Collectors.toList());","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"            String textToBeWritten \u003d String.join(\"\\n\", taskStrings);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"            fileWriter.write(textToBeWritten);","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"            throw new DukeException(\"An error occurred in writing the data to file :/\");","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":100}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents a deadline - a task that should be completed within","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * a particular date and time.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"        assert by !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    public Deadline(String description, LocalDateTime by, Priority priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        assert by !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"     * Gets the String representation of the deadline to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"     * @return The String representation of the deadline to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        String mark \u003d (super.isDone) ? \"X\" : \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        return \"D\" + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                + this.priority + \"~\"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                + mark + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"                + this.description + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"                + this.by;","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"                + \" (by: \"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"                + Task.getDateTimeString(this.by)","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"                + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Flash161203":53}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":" * Represents an event - a task with specific start and end","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":" * dates and times.","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"        assert from !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"        assert to !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to, Priority priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        assert from !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        assert to !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"     * Gets the String representation of the event to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"     * @return The String representation of the event to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        String mark \u003d (super.isDone) ? \"X\" : \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        return \"E\" + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"                + this.priority + \"~\"","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"                + mark + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"                + this.description + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"                + this.from + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"                + this.to;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"                + \" (from: \" + Task.getDateTimeString(this.from)","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"                + \" ; to: \" + Task.getDateTimeString(this.to)","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"                + \")\";","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Flash161203":58}},{"path":"src/main/java/duke/task/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"public enum Priority {","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"    LOW,","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"    MEDIUM,","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"    HIGH","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Flash161203":7}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":" * Represents a task with the description of the task and","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":" * the status of the task - whether it is done.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    protected final String description;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    protected Priority priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        assert description !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        this.priority \u003d Priority.MEDIUM;","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"    protected Task(String description, Priority priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        assert description !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"        assert priority !\u003d null;","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"     * Gets a Task object from the file representation of the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"     * @param task The String representation of the task in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"     * @return The Task object corresponding to the String representation in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    public static Task getTaskFromString(String task) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        assert task.contains(\"~\");","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        String[] taskParts \u003d task.split(\"~\");","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        String taskType \u003d taskParts[0];","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"        Priority priority \u003d Parser.parsePriority(taskParts[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        String marked \u003d taskParts[2];","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        String description \u003d taskParts[3];","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"        Task answer \u003d null;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"            answer \u003d new ToDo(description, priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"            answer \u003d new Deadline(description,","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                    LocalDateTime.parse(taskParts[4]),","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"                    priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"            answer \u003d new Event(description,","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"                    LocalDateTime.parse(taskParts[4]),","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"                    LocalDateTime.parse(taskParts[5]),","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"                    priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"        if (answer !\u003d null \u0026\u0026 marked.equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"            answer.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"        return answer;","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"     * Gets the representation of the LocalDateTime object formatted like Jan 21 2023 06:00 PM.","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"     * @param dateTime The LocalDateTime object to be formatted.","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"     * @return The formatted String representation of the LocalDateTime object.","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"    public static String getDateTimeString(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"        assert dateTime !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"        DateTimeFormatter formatToPrint \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mm a\");","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"        return dateTime.format(formatToPrint);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"        return this.description;","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"    ","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"    public void setPriority(Priority p) {","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"        this.priority \u003d p;","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"        String mark \u003d this.isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"        return \"{\" + this.priority.toString().toLowerCase()","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"                + \"}[\" + mark + \"] \"","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"                + this.description;","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"     * Gets the String representation of the Task to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"     * @return The String representation of the Task to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"    public abstract String getFileRepresentation();","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Flash161203":123}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":" * Represents a task that should be completed, with no time constraints.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    public ToDo(String description, Priority priority) {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"        super(description, priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"     * Gets the String representation of the to-do to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"     * @return The String representation of the to-do to be stored in the text file.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public String getFileRepresentation() {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        String mark \u003d (super.isDone) ? \"X\" : \" \";","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        return \"T\" + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"                + this.priority + \"~\"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"                + mark + \"~\"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"                + this.description;","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Flash161203":36}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeInvalidArgumentException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import duke.task.Priority;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":" * Represents a task list manager that aids in storing and manipulating the","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":" * list of Tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    private static final String TASKS_FILE_PATH \u003d \"data/duke_tasks.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    private final Storage taskStorage \u003d new Storage(TASKS_FILE_PATH);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d taskStorage.readTasksFromFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"     * Returns all the Tasks in the list of Tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"     * ","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    public String listTasks() {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"        if (this.tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"            return \"You do not have any tasks added to the list.\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"            StringBuilder response \u003d new StringBuilder(\"Listing all tasks...\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"            for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"                response.append(i + 1)","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"                        .append(\") \")","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                        .append(this.tasks.get(i))","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"            return response.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    private String markUnmark(int taskNumber, boolean isMarkCommand) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        boolean isValidTaskNumber \u003d (taskNumber \u003e 0","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 taskNumber \u003c\u003d this.tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        if (isValidTaskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"            if (isMarkCommand) {","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"                this.tasks.get(taskNumber - 1).mark();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"                response.append(\"I have marked Task \")","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"                        .append(taskNumber)","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"                        .append(\" as done.\\n\")","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"                        .append(this.tasks.get(taskNumber - 1))","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"            } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"                this.tasks.get(taskNumber - 1).unmark();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"                response.append(\"I have marked Task \")","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"                        .append(taskNumber)","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"                        .append(\" as undone.\\n\")","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"                        .append(this.tasks.get(taskNumber - 1))","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"Flash161203"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Flash161203"},"content":"            this.taskStorage.writeTasksToFile(this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Flash161203"},"content":"            return response.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Flash161203"},"content":"     * Marks a particular Task in the list of Tasks, as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Flash161203"},"content":"     * @param taskNumber The number to indicate which Task is to be marked as done.","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.                  ","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException When the task number given is not valid or","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"Flash161203"},"content":"     * when there is an error in writing to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Flash161203"},"content":"    public String markTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"Flash161203"},"content":"        return this.markUnmark(taskNumber, true);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Flash161203"},"content":"     * Marks a particular Task in the list of Tasks, as undone.","lastModifiedDate":"2023-02-01"},{"lineNumber":96,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Flash161203"},"content":"     * @param taskNumber The number to indicate which Task is to be marked as undone.","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.                  ","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException When the task number given is not valid or","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"Flash161203"},"content":"     * when there is an error in writing to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":102,"author":{"gitId":"Flash161203"},"content":"    public String unmarkTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"Flash161203"},"content":"        return this.markUnmark(taskNumber, false);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":107,"author":{"gitId":"Flash161203"},"content":"     * Adds a given Task to the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"Flash161203"},"content":"     * @param task The Task to be added to the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":110,"author":{"gitId":"Flash161203"},"content":"     * @param taskType The type of the given task.","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException When there is an error in writing to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"Flash161203"},"content":"    public String addTask(Task task, String taskType) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"Flash161203"},"content":"        assert task !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"Flash161203"},"content":"        assert taskType !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"Flash161203"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Flash161203"},"content":"        this.taskStorage.writeTasksToFile(this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"Flash161203"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"Flash161203"},"content":"        response.append(\"I have added the \")","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"Flash161203"},"content":"                .append(taskType)","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Flash161203"},"content":"                .append(\" to the list :)\\n\")","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Flash161203"},"content":"                .append(task)","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"Flash161203"},"content":"                .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"Flash161203"},"content":"        return response.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":130,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":131,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":132,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":133,"author":{"gitId":"Flash161203"},"content":"     * Deletes a Task from the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":134,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":135,"author":{"gitId":"Flash161203"},"content":"     * @param taskNumber The number to indicate which Task is to be deleted.","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"Flash161203"},"content":"     * @throws DukeException When the task number given is not valid or","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"Flash161203"},"content":"     * when there is an error in writing to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"Flash161203"},"content":"    public String deleteTask(int taskNumber) throws DukeException {","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"Flash161203"},"content":"        boolean isValidTaskNumber \u003d (taskNumber \u003e 0","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 taskNumber \u003c\u003d this.tasks.size());","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":144,"author":{"gitId":"Flash161203"},"content":"        if (isValidTaskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":145,"author":{"gitId":"Flash161203"},"content":"            Task removedTask \u003d this.tasks.remove(taskNumber - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":146,"author":{"gitId":"Flash161203"},"content":"            this.taskStorage.writeTasksToFile(this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":147,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"Flash161203"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"Flash161203"},"content":"            response.append(\"I have removed Task \")","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"Flash161203"},"content":"                    .append(taskNumber)","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"Flash161203"},"content":"                    .append(\" from the list.\\n\")","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"Flash161203"},"content":"                    .append(removedTask)","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"Flash161203"},"content":"                    .append(\"\\nYou now have \")","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"Flash161203"},"content":"                    .append(this.tasks.size())","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"Flash161203"},"content":"                    .append(\" task(s) in the list.\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"Flash161203"},"content":"            return response.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":159,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":160,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-01-29"},{"lineNumber":161,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":162,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":163,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":164,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":165,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":166,"author":{"gitId":"Flash161203"},"content":"     * Returns all the Tasks in the list of Tasks, that have the given keyword.","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":168,"author":{"gitId":"Flash161203"},"content":"     * @param keyword The keyword to search for, in the list of Tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":169,"author":{"gitId":"Flash161203"},"content":"     * @return The String response of the chatbot.","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":171,"author":{"gitId":"Flash161203"},"content":"    public String findKeywordInTasks(String keyword) {","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"Flash161203"},"content":"        assert keyword !\u003d null;","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"Flash161203"},"content":"        ArrayList\u003cTask\u003e tasksWithKeyword \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":175,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":176,"author":{"gitId":"Flash161203"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":177,"author":{"gitId":"Flash161203"},"content":"            Task task \u003d this.tasks.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":178,"author":{"gitId":"Flash161203"},"content":"            String taskDescription \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2023-02-01"},{"lineNumber":179,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":180,"author":{"gitId":"Flash161203"},"content":"            int findIndex \u003d taskDescription.indexOf(keyword.toLowerCase());","lastModifiedDate":"2023-02-01"},{"lineNumber":181,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":182,"author":{"gitId":"Flash161203"},"content":"            if (findIndex !\u003d -1) {","lastModifiedDate":"2023-02-01"},{"lineNumber":183,"author":{"gitId":"Flash161203"},"content":"                tasksWithKeyword.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":184,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":185,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":186,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":187,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"Flash161203"},"content":"        if (tasksWithKeyword.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":189,"author":{"gitId":"Flash161203"},"content":"            return \"I could not find any tasks with the keyword \u0027\"","lastModifiedDate":"2023-02-11"},{"lineNumber":190,"author":{"gitId":"Flash161203"},"content":"                    + keyword + \"\u0027 :/\\n\";","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":192,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":193,"author":{"gitId":"Flash161203"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"Flash161203"},"content":"            response.append(\"Listing all tasks with the keyword \u0027\")","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"Flash161203"},"content":"                    .append(keyword)","lastModifiedDate":"2023-02-11"},{"lineNumber":196,"author":{"gitId":"Flash161203"},"content":"                    .append(\"\u0027...\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"Flash161203"},"content":"            for (int i \u003d 0; i \u003c tasksWithKeyword.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":198,"author":{"gitId":"Flash161203"},"content":"                response.append(i + 1)","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"Flash161203"},"content":"                        .append(\") \")","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"Flash161203"},"content":"                        .append(tasksWithKeyword.get(i))","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"Flash161203"},"content":"                        .append(\"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":202,"author":{"gitId":"Flash161203"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":203,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":204,"author":{"gitId":"Flash161203"},"content":"            return response.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":206,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":207,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":208,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":209,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":210,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":211,"author":{"gitId":"Flash161203"},"content":"    public String setTaskPriority(int taskNumber, Priority priority) throws DukeException {","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"Flash161203"},"content":"        boolean isValidTaskNumber \u003d (taskNumber \u003e 0","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"Flash161203"},"content":"                \u0026\u0026 taskNumber \u003c\u003d this.tasks.size());","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":215,"author":{"gitId":"Flash161203"},"content":"        if (isValidTaskNumber) {","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"Flash161203"},"content":"            StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"Flash161203"},"content":"            this.tasks.get(taskNumber - 1).setPriority(priority);","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"Flash161203"},"content":"            response.append(\"I have changed the priority of Task \")","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"Flash161203"},"content":"                    .append(taskNumber)","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"Flash161203"},"content":"                    .append(\" to \")","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"Flash161203"},"content":"                    .append(priority)","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"Flash161203"},"content":"                    .append(\".\\n\")","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"Flash161203"},"content":"                    .append(this.tasks.get(taskNumber - 1))","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"Flash161203"},"content":"                    .append(\"\\n\");","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"Flash161203"},"content":"            this.taskStorage.writeTasksToFile(this.tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"Flash161203"},"content":"            return response.toString();","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"Flash161203"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"Flash161203"},"content":"            throw new DukeInvalidArgumentException(\"Sorry... That is an invalid task number :/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":234,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":235}},{"path":"src/main/java/duke/ui/TextUi.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":" * Represents the test-based user interface of the chatbot.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class TextUi {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    private static final String LINE \u003d \"------------------------------------------------------------\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    private static final String LOGO \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"     * Greets the user upon starting the session with the chatbot.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    public static void greet() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        System.out.println(\"\\nHello from\\n\" + TextUi.LOGO);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        System.out.println(\"How can I help you?\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"        System.out.println(TextUi.LINE + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"     * Prompts the user for and obtains a text input.","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"     * Sets up the interface for the chatbot\u0027s response and returns the user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"     * @param commandScanner The Scanner object used to obtain user\u0027s text input.","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"     * @return User\u0027s text input","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    public static String getUserCommand(Scanner commandScanner) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"        System.out.print(\"You:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        String command \u003d commandScanner.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        System.out.println(\"\\nDuke:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        return command;","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    public static void show(String message) {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        System.out.println(message);","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"    public static void showError(DukeException exception) {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        System.out.println(exception.getMessage() + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"     * Sets up the interface to obtain the user\u0027s next input.","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"    public static void endCommand() {","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"        System.out.println(TextUi.LINE + \"\\n\");","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Flash161203":65}},{"path":"src/main/java/duke/ui/components/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.ui.components;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"    private void flip() {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Flash161203"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Flash161203"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Flash161203"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"Flash161203"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"Flash161203"},"content":"        db.flip();","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"Flash161203"},"content":"        return db;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":68}},{"path":"src/main/java/duke/ui/components/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.ui.components;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Flash161203"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Flash161203"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Flash161203"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Flash161203"},"content":"    @FXML","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Flash161203"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Flash161203"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Flash161203"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Flash161203"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Flash161203"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Flash161203"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Flash161203"},"content":"        );","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Flash161203"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":56}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.components.MainWindow\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Flash161203":19}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.parser;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static org.junit.jupiter.api.Assertions.assertNull;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"    public void parse_emptyCommand_exceptionThrown() {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"            assertNull(Parser.parse(\"\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"            fail();","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"            assertEquals(\"You have not entered anything...\", e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"    public void parse_invalidCommand_exceptionThrown() {","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"            assertNull(Parser.parse(\"blah\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"            fail();","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"            assertEquals(\"Sorry... I did not understand that :/\", e.getMessage());","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"    public void parse() {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"            assertEquals(new ExitCommand().isExitCommand(), Parser.parse(\"bye\").isExitCommand());","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"            fail();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Flash161203":42}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"package duke.task;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Flash161203"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Flash161203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(\"01-01-2023 1800\", formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Flash161203"},"content":"        assertEquals(\"[D][ ] d1 (by: Jan 01 2023 06:00 PM)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Flash161203"},"content":"                new Deadline(\"d1\", byDateTime).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Flash161203"},"content":"    public void getFileRepresentation() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Flash161203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(\"01-01-2023 1800\", formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Flash161203"},"content":"        assertEquals(\"D~ ~d1~2023-01-01T18:00\",","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Flash161203"},"content":"                new Deadline(\"d1\", byDateTime).getFileRepresentation());","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Flash161203"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Flash161203"},"content":"    public void mark() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Flash161203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Flash161203"},"content":"        LocalDateTime byDateTime \u003d LocalDateTime.parse(\"01-01-2023 1800\", formatter);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Flash161203"},"content":"        Deadline deadline \u003d new Deadline(\"d1\", byDateTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Flash161203"},"content":"        deadline.mark();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Flash161203"},"content":"        assertEquals(\"[D][X] d1 (by: Jan 01 2023 06:00 PM)\",","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Flash161203"},"content":"                deadline.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Flash161203"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Flash161203"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Flash161203"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Flash161203":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Flash161203"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Flash161203"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Flash161203"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Flash161203"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Flash161203"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Flash161203"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Flash161203"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Flash161203"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Flash161203"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Flash161203"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Flash161203":10}}]
