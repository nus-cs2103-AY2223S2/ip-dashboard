[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FredericChow00":5,"-":41}},{"path":"src/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"T|false|borrow book","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"D|false|borrow book|2023-01-23T16:30","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"E|false|borrow book|2023-01-23T16:30|2023-01-23T16:30","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"FredericChow00":3}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"public class Duke {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"    private final Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"    private final Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    private static final String[] LIST_OF_COMMANDS \u003d","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"            new String[]{\"list\", \"bye\", \"todo\", \"mark\", \"unmark\", \"event\", \"deadline\", \"delete\", \"find\"};","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"    enum Commands {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"        start, list, bye, todo, mark, unmark, event, deadline, delete, find","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"            this.tasks \u003d storage.readFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"            System.out.println(err.getErrorMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"            this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        Commands command \u003d Commands.start;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        this.ui.sayGreetings();","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        while (!command.equals(Commands.bye)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"            String[] inputStrings \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"            try {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"                command \u003d parser.executeCommand(inputStrings, LIST_OF_COMMANDS, this.tasks, this.storage, this.ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"            } catch (DukeException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"                System.out.println(err.getErrorMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"        new Duke(\"duke.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FredericChow00":49}},{"path":"src/main/java/seedu/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"    private final String errorMessage;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"     *  Constructor for DukeException","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"     *  @param errorMessage Message to be printed out when exception occurs","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"        this.errorMessage \u003d errorMessage;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"     *  Gets the error message for the exception faced","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"     *  @return Reason for error faced","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    public String getErrorMessage() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"        return this.errorMessage;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"FredericChow00":24}},{"path":"src/main/java/seedu/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.time.*;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether task number is given","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"     *  @return String of the task number if it exists","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"    private String getTaskNumber(String[] inputStrings) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"        if (inputStrings.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"No task number was given!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"            return inputStrings[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     *  Retrieve the keyword(s) from the input given by user","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     *  @return String of the keyword(s) that user wants to look for","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    private String getKeywords(String[] inputStrings) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        inputStrings \u003d Arrays.copyOfRange(inputStrings, 1, inputStrings.length);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        String keywords \u003d String.join(\" \", inputStrings).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        if (keywords.length() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"No keyword was given!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        return keywords;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"     *  Checks the validity of the command","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"     *  @param command String of the command sent by user","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"     *  @param listOfCommands String array of all the commands","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"     *  @return String of the command if valid","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"    private String checkCommand(String command, String[] listOfCommands) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"        for (String cmd : listOfCommands) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"            if (cmd.equals(command)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"                return command;","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"        throw new DukeException(\"I don\u0027t know what this command means!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether task number is numeric \u0026 valid","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"     *  @param taskList Current state of TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"     *  @param taskNumber String of the taskNumber","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"     *  @return Integer of the task number (in 0-indexing) if it is valid","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"    private int checkTaskNumber(TaskList taskList, String taskNumber) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"            int index \u003d Integer.parseInt(taskNumber) - 1;","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"            if (index \u003e\u003d taskList.getSize() || index \u003c 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"                throw new DukeException(\"The task number given does not exist!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"            } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"                return index;","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"The task number given is not numeric!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether description for Task is given","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"     *  @param description Description of the Task","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"    private void checkDescription(String description) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"        if (description.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"There was no task description given!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether deadline is given","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"     *  @return Index of /by in the array","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"    private int checkDeadline(String[] inputStrings) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"        int byIndex \u003d Arrays.asList(inputStrings).indexOf(\"/by\");","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"There was no deadline given!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"            return byIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether starting time stamp for Event is given","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"     *  @return Index of /from in splitInput","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"    private int checkStarting(String[] inputStrings) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"        int byIndex \u003d Arrays.asList(inputStrings).indexOf(\"/from\");","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Please indicate a starting period!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"FredericChow00"},"content":"            return byIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"     *  Checks whether ending time stamp for Event is given","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"     *  @return Index of /to in splitInput","lastModifiedDate":"2023-01-26"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"    private int checkEnding(String[] inputStrings) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"        int byIndex \u003d Arrays.asList(inputStrings).indexOf(\"/to\");","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"        if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Please indicate an ending period!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"        } else {","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"            return byIndex;","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"     *  Converts String timestamp into LocalDateTime object","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"     *  @param timestamp String of the timestamp given","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"     *  @return LocalDateTime object of timestamp","lastModifiedDate":"2023-01-26"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"    private static LocalDateTime convertTimestamp(String timestamp) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"        if (timestamp.equals(\"\")) {","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"There was no time period given!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"            String[] dateTimeStrings \u003d timestamp.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"FredericChow00"},"content":"            LocalDate date \u003d LocalDate.parse(dateTimeStrings[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"FredericChow00"},"content":"            int hour \u003d Integer.parseInt(dateTimeStrings[1].substring(0, 2));","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"FredericChow00"},"content":"            int min \u003d Integer.parseInt(dateTimeStrings[1].substring(2, 4));","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"FredericChow00"},"content":"            LocalTime time \u003d LocalTime.of(hour, min);","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"FredericChow00"},"content":"            return LocalDateTime.of(date, time);","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"FredericChow00"},"content":"        } catch (DateTimeParseException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Date formatting is wrong! Must be yyyy-MM-dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"FredericChow00"},"content":"        } catch (ArrayIndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Time not stated!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"FredericChow00"},"content":"        } catch (StringIndexOutOfBoundsException | NumberFormatException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Time must be in HHmm format!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"FredericChow00"},"content":"        } catch (DateTimeException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Time given is not valid!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"FredericChow00"},"content":"     *  Converts String timestamp into LocalDateTime object","lastModifiedDate":"2023-01-26"},{"lineNumber":162,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"FredericChow00"},"content":"     *  @param inputStrings String array of each word input by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"FredericChow00"},"content":"     *  @param listOfCommands String array of all the commands","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"FredericChow00"},"content":"     *  @param taskList Current state of TaskList","lastModifiedDate":"2023-01-26"},{"lineNumber":166,"author":{"gitId":"FredericChow00"},"content":"     *  @param storage Storage to overwrite save file","lastModifiedDate":"2023-01-26"},{"lineNumber":167,"author":{"gitId":"FredericChow00"},"content":"     *  @param ui Ui to print lines for user to see and interact with","lastModifiedDate":"2023-01-26"},{"lineNumber":168,"author":{"gitId":"FredericChow00"},"content":"     *  @return Enum Command of the input given","lastModifiedDate":"2023-01-26"},{"lineNumber":169,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":170,"author":{"gitId":"FredericChow00"},"content":"    public Duke.Commands executeCommand(String[] inputStrings, String[] listOfCommands, TaskList taskList,","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"FredericChow00"},"content":"                                        Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"FredericChow00"},"content":"        String commandStr \u003d inputStrings[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"FredericChow00"},"content":"        Duke.Commands command \u003d Duke.Commands.valueOf(checkCommand(commandStr, listOfCommands));","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"FredericChow00"},"content":"            String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"FredericChow00"},"content":"            String taskNumber;","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"FredericChow00"},"content":"            Task newTask;","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"FredericChow00"},"content":"            TaskList updatedList;","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"FredericChow00"},"content":"            int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"FredericChow00"},"content":"            switch (command) {","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"FredericChow00"},"content":"            case list:","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"FredericChow00"},"content":"                ui.showList(taskList);","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"FredericChow00"},"content":"            case bye:","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"FredericChow00"},"content":"                ui.sayGoodbye();","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"FredericChow00"},"content":"            case todo:","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"FredericChow00"},"content":"                description \u003d String.join(\" \", Arrays.copyOfRange(inputStrings, 1, inputStrings.length));","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"FredericChow00"},"content":"                checkDescription(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":190,"author":{"gitId":"FredericChow00"},"content":"                newTask \u003d new Todo(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":191,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":192,"author":{"gitId":"FredericChow00"},"content":"                storage.writeFile(updatedList);","lastModifiedDate":"2023-01-26"},{"lineNumber":193,"author":{"gitId":"FredericChow00"},"content":"                ui.sayAddedTask(newTask, updatedList);","lastModifiedDate":"2023-01-25"},{"lineNumber":194,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":195,"author":{"gitId":"FredericChow00"},"content":"            case deadline:","lastModifiedDate":"2023-01-25"},{"lineNumber":196,"author":{"gitId":"FredericChow00"},"content":"                int byIndex \u003d checkDeadline(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"FredericChow00"},"content":"                description \u003d String.join(\" \", Arrays.copyOfRange(inputStrings, 1, byIndex));","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"FredericChow00"},"content":"                checkDescription(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":199,"author":{"gitId":"FredericChow00"},"content":"                String deadline \u003d String.join(\" \", Arrays.copyOfRange(inputStrings,","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"FredericChow00"},"content":"                        byIndex + 1, inputStrings.length));","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"FredericChow00"},"content":"                LocalDateTime formattedDeadline \u003d convertTimestamp(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"FredericChow00"},"content":"                newTask \u003d new Deadline(description, formattedDeadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":204,"author":{"gitId":"FredericChow00"},"content":"                storage.writeFile(updatedList);","lastModifiedDate":"2023-01-26"},{"lineNumber":205,"author":{"gitId":"FredericChow00"},"content":"                ui.sayAddedTask(newTask, updatedList);","lastModifiedDate":"2023-01-25"},{"lineNumber":206,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"FredericChow00"},"content":"            case event:","lastModifiedDate":"2023-01-25"},{"lineNumber":208,"author":{"gitId":"FredericChow00"},"content":"                int fromIndex \u003d checkStarting(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":209,"author":{"gitId":"FredericChow00"},"content":"                int toIndex \u003d checkEnding(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":210,"author":{"gitId":"FredericChow00"},"content":"                description \u003d String.join(\" \", Arrays.copyOfRange(inputStrings, 1, fromIndex));","lastModifiedDate":"2023-01-27"},{"lineNumber":211,"author":{"gitId":"FredericChow00"},"content":"                checkDescription(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":212,"author":{"gitId":"FredericChow00"},"content":"                String from \u003d String.join(\" \",","lastModifiedDate":"2023-01-25"},{"lineNumber":213,"author":{"gitId":"FredericChow00"},"content":"                        Arrays.copyOfRange(inputStrings, fromIndex + 1, toIndex));","lastModifiedDate":"2023-01-27"},{"lineNumber":214,"author":{"gitId":"FredericChow00"},"content":"                LocalDateTime formattedFrom \u003d convertTimestamp(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"FredericChow00"},"content":"                String to \u003d String.join(\" \",","lastModifiedDate":"2023-01-25"},{"lineNumber":216,"author":{"gitId":"FredericChow00"},"content":"                        Arrays.copyOfRange(inputStrings, toIndex + 1, inputStrings.length));","lastModifiedDate":"2023-01-27"},{"lineNumber":217,"author":{"gitId":"FredericChow00"},"content":"                LocalDateTime formattedTo \u003d convertTimestamp(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"FredericChow00"},"content":"                newTask \u003d new Event(description, formattedFrom, formattedTo);","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.addTask(newTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"FredericChow00"},"content":"                storage.writeFile(updatedList);","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"FredericChow00"},"content":"                ui.sayAddedTask(newTask, updatedList);","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":223,"author":{"gitId":"FredericChow00"},"content":"            case mark:","lastModifiedDate":"2023-01-25"},{"lineNumber":224,"author":{"gitId":"FredericChow00"},"content":"                // taskNumber in 1-indexing","lastModifiedDate":"2023-01-25"},{"lineNumber":225,"author":{"gitId":"FredericChow00"},"content":"                taskNumber \u003d getTaskNumber(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"FredericChow00"},"content":"                // index in 0-indexing","lastModifiedDate":"2023-01-25"},{"lineNumber":227,"author":{"gitId":"FredericChow00"},"content":"                index \u003d checkTaskNumber(taskList, taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.markTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"FredericChow00"},"content":"                newTask \u003d updatedList.get(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":230,"author":{"gitId":"FredericChow00"},"content":"                storage.writeFile(updatedList);","lastModifiedDate":"2023-01-26"},{"lineNumber":231,"author":{"gitId":"FredericChow00"},"content":"                ui.sayMarkedTask(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":233,"author":{"gitId":"FredericChow00"},"content":"            case unmark:","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"FredericChow00"},"content":"                taskNumber \u003d getTaskNumber(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"FredericChow00"},"content":"                index \u003d checkTaskNumber(taskList, taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":236,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.unmarkTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":237,"author":{"gitId":"FredericChow00"},"content":"                newTask \u003d updatedList.get(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"FredericChow00"},"content":"                ui.sayUnmarkedTask(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":239,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":240,"author":{"gitId":"FredericChow00"},"content":"            case delete:","lastModifiedDate":"2023-01-25"},{"lineNumber":241,"author":{"gitId":"FredericChow00"},"content":"                // taskNumber in 1-indexing","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"FredericChow00"},"content":"                taskNumber \u003d getTaskNumber(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"FredericChow00"},"content":"                // index in 0-indexing","lastModifiedDate":"2023-01-25"},{"lineNumber":244,"author":{"gitId":"FredericChow00"},"content":"                index \u003d checkTaskNumber(taskList, taskNumber);","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"FredericChow00"},"content":"                Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"FredericChow00"},"content":"                updatedList \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":247,"author":{"gitId":"FredericChow00"},"content":"                storage.writeFile(updatedList);","lastModifiedDate":"2023-01-26"},{"lineNumber":248,"author":{"gitId":"FredericChow00"},"content":"                ui.sayDeletedTask(deletedTask, updatedList);","lastModifiedDate":"2023-01-25"},{"lineNumber":249,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-25"},{"lineNumber":250,"author":{"gitId":"FredericChow00"},"content":"            case find:","lastModifiedDate":"2023-01-27"},{"lineNumber":251,"author":{"gitId":"FredericChow00"},"content":"                String keywords \u003d getKeywords(inputStrings);","lastModifiedDate":"2023-01-27"},{"lineNumber":252,"author":{"gitId":"FredericChow00"},"content":"                TaskList matchingTasks \u003d taskList.findTask(keywords);","lastModifiedDate":"2023-01-27"},{"lineNumber":253,"author":{"gitId":"FredericChow00"},"content":"                ui.sayMatchingTasks(matchingTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":254,"author":{"gitId":"FredericChow00"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":255,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"FredericChow00"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":257,"author":{"gitId":"FredericChow00"},"content":"            System.out.println(err.getErrorMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"FredericChow00"},"content":"        return command;","lastModifiedDate":"2023-01-25"},{"lineNumber":260,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":261,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FredericChow00":261}},{"path":"src/main/java/seedu/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    private final Path path;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     *  Constructor for Storage","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"     *  @param fileName String of the name of the save file","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    Storage(String fileName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"        String currPath \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"        this.path \u003d Paths.get(currPath, \"src\", \"data\", fileName);","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     *  Coverts the text in save file into a TaskList object","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"     *  @return TaskList object of the save file","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"    public TaskList readFile() throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        TaskList data \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"            File file \u003d new File(String.valueOf(this.path));","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"            // scan and read each line on the duke.txt file","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"            // need to be able to have a common function that creates the different types of tasks","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"                String[] taskDetails \u003d sc.nextLine().split(\"\\\\|\");","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"                String taskType \u003d taskDetails[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"                boolean isDone \u003d Boolean.parseBoolean(taskDetails[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"                switch (taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"                case \"T\":","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"                    data.addTask(new Todo(taskDetails[2], isDone, taskType));","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"                case \"D\":","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"                    String deadline \u003d taskDetails[3];","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"                    LocalDateTime formattedDeadline \u003d formatTimeStamp(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"                    data.addTask(new Deadline(taskDetails[2], isDone, taskType, formattedDeadline));","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"                case \"E\":","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"                    String from \u003d taskDetails[3];","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"                    LocalDateTime formattedFrom \u003d formatTimeStamp(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"                    String to \u003d taskDetails[4];","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"                    LocalDateTime formattedTo \u003d formatTimeStamp(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"                    data.addTask(new Event(taskDetails[2], isDone, taskType, formattedFrom, formattedTo));","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"                    break;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"        } catch (FileNotFoundException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"Save file does not exist!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"        return data;","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"     *  Formats the String of the LocalDateTime time stamp into a LocalDateTime object","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"     *  @param timeStamp String of the LocalDateTime time stamp","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"     *  @return LocalDateTime object of the time stamp","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"    private LocalDateTime formatTimeStamp(String timeStamp) {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"        String[] timeStampDetails \u003d timeStamp.split(\"T\");","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"        LocalDate date \u003d LocalDate.parse(timeStampDetails[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        LocalTime time \u003d LocalTime.parse(timeStampDetails[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"        return LocalDateTime.of(date, time);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"     *  Coverts the TaskList object into a String for the save file","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"     *  @param taskList TasKList object to be saved into save file","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"    public void writeFile(TaskList taskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        StringBuilder taskString \u003d new StringBuilder();","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"            String formattedTask \u003d taskList.formatTask(i);","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"            taskString.append(formattedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"            taskString.append(\"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"            FileWriter fileWriter \u003d new FileWriter(String.valueOf(this.path));","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"            fileWriter.write(taskString.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"        } catch (IOException err) {","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"            err.printStackTrace();","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FredericChow00":102}},{"path":"src/main/java/seedu/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"     * @param tasks List of Task to be initialized","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for empty TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * Retrieves the Task at the specified index (in 0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     * @param index of the Task in list shown","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     * @return Task at the specified index (0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"     * @return Size of the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"     * Format Task to be saved as String in save file","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"     * @param index Index of Task to be unmarked (in 0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"     * @return String of formatted Task","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"    public String formatTask(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"        return get(index).formatTask();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"     * Adds Task to the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"     * @param newTask Task to be added","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"     * @return Updated TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"    public TaskList addTask(Task newTask) {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"        updatedTasks.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"     * Deletes Task from the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"     * @param index Index of Task to be added (in 0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"     * @return Updated TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"    public TaskList deleteTask(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"        updatedTasks.remove(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"     * Marks Task from the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"     * @param index Index of Task to be marked (in 0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"     * @return Updated TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"    public TaskList markTask(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"        Task unmarkedTask \u003d updatedTasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"        Task markedTask \u003d unmarkedTask.markTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        updatedTasks.set(index, markedTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"     * Unmarks Task from the TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"     * @param index Index of Task to be unmarked (in 0-indexing)","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"     * @return Updated TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"FredericChow00"},"content":"    public TaskList unmarkTask(int index) throws DukeException {","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e updatedTasks \u003d this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"FredericChow00"},"content":"        Task markedTask \u003d updatedTasks.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"FredericChow00"},"content":"        Task unmarkedTask \u003d markedTask.unmarkTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"FredericChow00"},"content":"        updatedTasks.set(index, unmarkedTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"FredericChow00"},"content":"        return new TaskList(updatedTasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"FredericChow00"},"content":"     * Finds all Tasks in TaskList that contains the String of keyword(s), including sub-words","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"FredericChow00"},"content":"     * @param keywords keywords provided by the user","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"FredericChow00"},"content":"     * @return TaskList containing all Tasks with matching keywords","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"FredericChow00"},"content":"    public TaskList findTask(String keywords) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"FredericChow00"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"FredericChow00"},"content":"        for (int index \u003d 0; index \u003c getSize(); index++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"FredericChow00"},"content":"            Task task \u003d get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"FredericChow00"},"content":"            if (task.toString().contains(keywords)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"FredericChow00"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"FredericChow00"},"content":"        if (matchingTasks.getSize() \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"There are no matching tasks!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"FredericChow00"},"content":"        return matchingTasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"FredericChow00"},"content":"     * Checks whether contents in two TaskLists are similar","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"FredericChow00"},"content":"     * @param o Object to be compared with TaskList for equality","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"FredericChow00"},"content":"     * @return true if TaskLists have similar content, or else false","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"FredericChow00"},"content":"    public boolean equals (Object o) {","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"FredericChow00"},"content":"        if (o instanceof TaskList) {","lastModifiedDate":"2023-01-26"},{"lineNumber":135,"author":{"gitId":"FredericChow00"},"content":"            TaskList taskList \u003d (TaskList) o;","lastModifiedDate":"2023-01-26"},{"lineNumber":136,"author":{"gitId":"FredericChow00"},"content":"            if(taskList.tasks.equals(this.tasks)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"FredericChow00"},"content":"                return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":138,"author":{"gitId":"FredericChow00"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":139,"author":{"gitId":"FredericChow00"},"content":"            return true;","lastModifiedDate":"2023-01-26"},{"lineNumber":140,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"FredericChow00"},"content":"        return  false;","lastModifiedDate":"2023-01-26"},{"lineNumber":142,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FredericChow00":143}},{"path":"src/main/java/seedu/duke/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"     * @param deadline deadline of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    public Deadline(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"        this(description, false, \"D\", deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Storage\u0027s creation of Deadline when reading save file","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"     * @param isDone whether the task has been marked","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"     * @param taskType String representing the type of task","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * @param deadline deadline of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"    public Deadline(String description, boolean isDone, String taskType, LocalDateTime deadline) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"        super(description, isDone, taskType);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"    public Task markTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already marked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        return new Deadline(super.description, true, super.taskType, this.deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"    public Task unmarkTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"        if (!super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already unmarked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"        return new Deadline(super.description, false, super.taskType, this.deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"    public String formatTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"D|%b|%s|%s\", this.isDone, this.description, this.deadline.toString());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"        String timePattern \u003d \"d MMM yyyy, HHmm\";","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"%s%s %s (by: %s)\", super.getTaskTypeBox(), super.getStatusCheckbox(),","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"                super.toString(), this.deadline.format(DateTimeFormatter.ofPattern(timePattern)));","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"FredericChow00":67}},{"path":"src/main/java/seedu/duke/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Event","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"     * @param from /from timestamp of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"     * @param to /to timestamp of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"        this(description, false, \"E\", from, to);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Storage\u0027s creation of Deadline when reading save file","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     * @param isDone whether the task has been marked","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     * @param taskType String representing the type of task","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     * @param from /from timestamp of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     * @param to /to timestamp of the task in LocalDateTime","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    public Event(String description, boolean isDone, String taskType, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        super(description, isDone, taskType);","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    public Task markTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already marked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"        return new Event(super.description, true, super.taskType, this.from, this.to);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"    public Task unmarkTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"        if (!super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already unmarked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"        return new Event(super.description, false, super.taskType, this.from, this.to);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"    public String formatTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"E|%b|%s|%s|%s\", this.isDone, this.description, this.from.toString(), this.to.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"        String timePattern \u003d \"d MMM yyyy, HHmm\";","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"%s%s %s (from: %s to: %s)\", super.getTaskTypeBox(), super.getStatusCheckbox(),","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"                super.toString(), this.from.format(DateTimeFormatter.ofPattern(timePattern)),","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"                this.to.format(DateTimeFormatter.ofPattern(timePattern)));","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"FredericChow00":72}},{"path":"src/main/java/seedu/duke/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"    protected final String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"    protected final boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"    protected final String taskType;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"     *  Constructor for Task","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"     *  @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     *  @param isDone whether the task has been marked","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"     *  @param taskType String representing the type of task","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    protected Task(String description, boolean isDone, String taskType) {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"     * Gets the status checkbox","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"     * @return String of the status checkbox","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"    public String getStatusCheckbox() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"        return (this.isDone) ? \"[X]\" : \"[]\";","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"     * Gets the boxed Task type","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"     * @return String of the boxed Task type","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"    public String getTaskTypeBox() {","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"[%s]\", this.taskType);","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"     * Marks a marked Task","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"     * @return the new marked Task","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"     * @throws DukeException if Task is already marked","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"    abstract public Task markTask() throws DukeException;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"     * Marks an unmarked Task","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"     * @return the new unmarked Task","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"     * @throws DukeException if Task is already unmarked","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"    abstract public Task unmarkTask() throws DukeException;","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"     * Formats the Task into a format readable by Storage","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"     * @return String of the formatted Task","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"    abstract public String formatTask();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"        return this.description;","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"FredericChow00":68}},{"path":"src/main/java/seedu/duke/Tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.DukeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Deadline","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"        this(description, false, \"T\");","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"     * Constructor for Storage\u0027s creation of Deadline when reading save file","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"     * @param description String description of the task","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"     * @param isDone whether the task has been marked","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"     * @param taskType String representing the type of task","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"    public Todo(String description, boolean isDone, String taskType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"        super(description, isDone, taskType);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    public Task markTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"        if (super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already marked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        return new Todo(super.description, true, super.taskType);","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"    public Task unmarkTask() throws DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        if (!super.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"            throw new DukeException(\"This task is already unmarked!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        return new Todo(this.description, false, super.taskType);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"    public String formatTask() {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"T|%b|%s\", this.isDone, this.description);","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"        return String.format(\"%s%s %s\", super.getTaskTypeBox(), super.getStatusCheckbox(), super.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"FredericChow00":58}},{"path":"src/main/java/seedu/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.*;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"     * Prints out greetings for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"    public void sayGreetings() {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"TOP OF THE MORNING TO YOU LADDIES!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"What can I do for you? :)\");","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"     * Prints out current list of Tasks for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"     * @param taskList current Task List","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"    public void showList(TaskList taskList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"            Task task \u003d taskList.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"            System.out.printf(\"%d.%s%n\", i + 1, task);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line after successfully adding a Task for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"     * @param newTask Task that has been added","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"     * @param updatedList updated Task List","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"    public void sayAddedTask(Task newTask, TaskList updatedList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Got it, I\u0027ve added this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(newTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", updatedList.getSize());","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line after successfully deleting a Task for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"     * @param deletedTask Task that has been deleted","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"     * @param updatedList updated Task List","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"    public void sayDeletedTask(Task deletedTask, TaskList updatedList) {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(deletedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"        System.out.printf(\"Now you have %d tasks in the list.%n\", updatedList.getSize());","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line after successfully marking a Task for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"FredericChow00"},"content":"     * @param markedTask Task that has been marked","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"FredericChow00"},"content":"    public void sayMarkedTask(Task markedTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(markedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line after successfully unmarking a Task for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"FredericChow00"},"content":"     * @param unmarkedTask Task that has been unmarked","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"FredericChow00"},"content":"    public void sayUnmarkedTask(Task unmarkedTask) {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(unmarkedTask);","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line after successfully finding matching Tasks for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"FredericChow00"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"FredericChow00"},"content":"     * @param matchingTasks Tasks that match the keyword provided by user","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"FredericChow00"},"content":"    public void sayMatchingTasks(TaskList matchingTasks) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"FredericChow00"},"content":"        for (int i \u003d 0; i \u003c matchingTasks.getSize(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"FredericChow00"},"content":"            System.out.printf(\"%d: %s\\n\", i + 1, matchingTasks.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"FredericChow00"},"content":"     * Prints out line if there is an error loading for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"FredericChow00"},"content":"    public void showLoadingError(){","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"FredericChow00"},"content":"        System.out.println((\"Unable to load!\"));","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"FredericChow00"},"content":"     * Prints out goodbye line for user to see","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"FredericChow00"},"content":"    public void sayGoodbye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"FredericChow00"},"content":"        System.out.println(\"Goodbye!!!! Hope I don\u0027t see you again!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"FredericChow00":97}},{"path":"src/test/java/seedu/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"     * Testing script for reading save file with empty input","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"    public void readFile_emptyInput_emptyTaskList(){","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"            TaskList storageTaskList \u003d storage.readFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"            assertEquals(taskList, storageTaskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"     * Testing script for reading save file with three inputs","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"    public void writeAndReadFile_threeInputs_taskListWithThreeTasks(){","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        Storage storage \u003d new Storage(\"duke.txt\");","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"            LocalDate date \u003d LocalDate.of(2023, 1, 23);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"            LocalTime time \u003d LocalTime.of(16,30);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"            taskList \u003d taskList.addTask(new Todo(\"borrow book\"));","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"            taskList \u003d taskList.addTask(new Deadline(\"borrow book\", LocalDateTime.of(date, time)));","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"            taskList \u003d taskList.addTask(new Event(\"borrow book\",","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"                    LocalDateTime.of(date, time), LocalDateTime.of(date, time)));","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"            storage.writeFile(taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"FredericChow00"},"content":"            assertEquals(taskList, storage.readFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"FredericChow00"},"content":"        } catch (DukeException err) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"FredericChow00"},"content":"            fail();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"FredericChow00"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"FredericChow00":52}},{"path":"src/test/java/seedu/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"package seedu.duke;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"import seedu.duke.tasks.Todo;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"FredericChow00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"FredericChow00"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"FredericChow00"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"FredericChow00"},"content":"     * Testing script for adding Tasks to TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"FredericChow00"},"content":"    public void addTask_success() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"FredericChow00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"FredericChow00"},"content":"        Task addedTask \u003d new Todo(\"eat book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"FredericChow00"},"content":"        taskList \u003d taskList.addTask(addedTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"FredericChow00"},"content":"        tasks.add(addedTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"FredericChow00"},"content":"        TaskList updatedTaskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"FredericChow00"},"content":"        assertEquals(updatedTaskList, taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"FredericChow00"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"FredericChow00"},"content":"     * Testing script for deleted index zero Tasks from TaskList","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"FredericChow00"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"FredericChow00"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"FredericChow00"},"content":"    public void deleteIndexZeroTask_success() {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"FredericChow00"},"content":"        // add task first","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"FredericChow00"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"FredericChow00"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"FredericChow00"},"content":"        Task addedTask \u003d new Todo(\"return book\");","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"FredericChow00"},"content":"        taskList \u003d taskList.addTask(addedTask);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"FredericChow00"},"content":"        tasks.add(addedTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"FredericChow00"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"FredericChow00"},"content":"        // then delete index 0","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"FredericChow00"},"content":"        int index \u003d 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"FredericChow00"},"content":"        taskList \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"FredericChow00"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"FredericChow00"},"content":"        TaskList updatedTaskList \u003d new TaskList(tasks);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"FredericChow00"},"content":"        assertEquals(updatedTaskList, taskList);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"FredericChow00"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"FredericChow00"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"FredericChow00":46}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"FredericChow00"},"content":"todo cs2103t stuff","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"FredericChow00"},"content":"event project meeting /from 2023-01-22 1100 /to 2023-01-22 1400","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"FredericChow00"},"content":"deadline do homework /by 2023-01-22 1400","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"FredericChow00"},"content":"deadline return book /by 2023-01-22 1400","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"FredericChow00"},"content":"todo everything that is not done hehexd","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"FredericChow00"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"FredericChow00":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"FredericChow00"},"content":"javac  -cp ..\\src\\main\\java\\seedu\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\seedu\\duke\\*.java","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"FredericChow00":1,"-":20}}]
