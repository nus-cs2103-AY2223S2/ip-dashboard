[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"## Duke","lastModifiedDate":"2023-02-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"\u003e ‚ÄúYour mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2023-02-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"Duke is a simple reminder app that helps you to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-13"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"- text-based","lastModifiedDate":"2023-02-13"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"- easy to learn","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"- ~FAST~ *SUPER FAST* to use","lastModifiedDate":"2023-02-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"All you need to do is, ","lastModifiedDate":"2023-02-13"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"1. download it from [here](https://github.com/Gibson0918/ip/releases).","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"2. double-click it.","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"3. add your tasks.","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"4. let it manage your tasks for you üòÅ","lastModifiedDate":"2023-02-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"And it is **FREE**!","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"Features:","lastModifiedDate":"2023-02-13"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"- [x] Adding ToDo task","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"- [x] Adding task with deadline","lastModifiedDate":"2023-02-13"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"- [x] Adding Event with deadline","lastModifiedDate":"2023-02-13"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"if you are a Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2023-02-13"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"```public class Launcher {","lastModifiedDate":"2023-02-13"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-13"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-13"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-13"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":5,"Gibson0918":24}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"Gibson0918":17}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"Duke is a desktop app that reminds you of all the tasks that you have to carry out!!","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"1. Adding tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"   - Todo","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"   - Deadline","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"   - Event","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"2. Viewing tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"3. Editing task ","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"4. Locating task","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"5. Deleting task ","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"6. Marking task ","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"7. Unmarking task ","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"8. Exiting the program ","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"### Adding a task","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"Adds a task to Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"Format: ```{task} {description} {startDate} {endDate}```","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"- task: either todo deadline/event","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"- description: description of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"- startDate: start date of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"- endDate: end date of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"*{startDate} and {endDate} is optional for ToDo task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"*{startDate} is required and {endDate} is optional for Deadline task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"*{startDate} and {endDate} is required for Event task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"### Viewing task","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"View all task stored in Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"Format: ```list```","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"### Editing task","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"Updating an existing task in Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"Format: ```update {index} {description} {startDate} {endDate}```","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"- index: index of the task ","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"- description: description of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"- startDate: start date of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"- endDate: end date of the task","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"*{startDate} and {endDate} is optional for ToDo task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"*{startDate} is required and {endDate} is optional for Deadline task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"*{startDate} and {endDate} is required for Event task.*","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"### Locating task","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"Finds any task that has a description that matches given keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"Format: ```find {keyword}```","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"- keyword: keyword to be located in task\u0027s description","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"### Delete task","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"Delete task from Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"Format: ```delete {index} ```","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"- index: index of the task ","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"### Mark task","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"Mark an existing task in Duke as completed","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"Format: ```mark {index}```","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"- index: index of the task ","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"### Unmark task","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"Unmark an existing task in Duke as incomplete","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"Format: ```Unmark {index}```","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"- index: index of the task ","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"### Killing the program","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"Terminating Duke","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"Format: ```Bye```","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":15,"Gibson0918":76}},{"path":"duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"T | 0 | borrow book","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"D | 0 | return book | 2020-05-12 1800","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"E | 0 | project meeting | 2020-12-20 2000 | 2020-12-25 2200","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"T | 1 | go library","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"Gibson0918":4}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        String formattedByDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formattedByDate + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    public String formatForFile() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        String formattedByDate \u003d this.by.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"            return \"D | \" + 1 + \" | \" + description + \" | \" + formattedByDate + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"            return \"D | \" + 0 + \" | \" + description + \" | \" + formattedByDate + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    public Type getType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        return Type.DEADLINE;","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":35}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"public class Duke {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    private static final String FILEPATH \u003d \"duke.txt\";","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    public Duke() {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        ui.displayTaskList(tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    public String getResponse(String command) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            Command c \u003d Parser.parse(command);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            return c.initCommand(tasks, ui, storage);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"        catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":41}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"    protected LocalDateTime startDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    protected LocalDateTime endDate;","lastModifiedDate":"2023-02-10"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    public Event(String description, String startDate, String endDate) {","lastModifiedDate":"2023-02-10"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"        this.startDate \u003d LocalDateTime.parse(startDate, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"        this.endDate \u003d LocalDateTime.parse(endDate, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        String formattedStartDate \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"        String formattedEndDate \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formattedStartDate + \" to: \" + formattedEndDate + \")\";","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    public String formatForFile() {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        String formattedStartDate \u003d startDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"        String formattedEndDate \u003d endDate.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"            return \"E | \" + 1 + \" | \" + description + \" | \" + formattedStartDate + \" | \" + formattedEndDate + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            return \"E | \" + 0 + \" | \" + description + \" | \" + formattedStartDate + \" | \" + formattedEndDate + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    public Type getType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        return Type.EVENT;","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":37}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.gui.MainWindow;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            stage.setOnCloseRequest( e-\u003e Platform.exit());","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":35}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"     * Represents the abstract Task class which serves as a base template to handle all possible Tasks","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"    protected String description;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"     * Constructor method for Task","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * @param description description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * get the status of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * @return an X if the task is completed","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"     * Sets the status of the task to completed","lastModifiedDate":"2023-02-09"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    public void marked() {","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"     * Sets the status of the task to incomplete","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"    public void unmarked() {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the description of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"     * @return formatted description of the task","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    public String toString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"     * Abstract method to be implemented by child classes for formatting output when saving data to file","lastModifiedDate":"2023-02-09"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"     * @return formatted string","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"    public abstract String formatForFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"    public abstract Type getType();","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Gibson0918":56}},{"path":"src/main/java/duke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class TaskList extends ArrayList\u003cTask\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"     * TaskList class to handle all operations relating to tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    private List\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for TaskList","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"        taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for TaskList.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @param taskList a list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    public TaskList(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"     * Retrieves the task within the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"     * @param taskID index of the task to be retrieved.","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"     * @return task retrieved","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    public Task getTask(int taskID) {","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        assert taskID \u003c taskList.size() : \"taskID given should be less than taskList size\";","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        return taskList.get(--taskID);","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"     * Add the task to the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"     * @param task task to be added.","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"        assert task !\u003d null : \"Task cannot be null\";","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"     * Delete the task from the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"     * @param taskID index of task to be deleted.","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"     * @return task removed from the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"    public Task deleteTask(int taskID) {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"        assert taskID \u003c taskList.size() : \"taskID to be deleted must be within tasklist\";","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"        Task task \u003d taskList.remove(--taskID);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"        return task;","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"     * Gets the size of the list","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"     * @return size of list","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"    public int size() {","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"        return taskList.size();","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"     * Determine if list is empty","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"     * @return true if empty, false otherwise","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Gibson0918"},"content":"        return taskList.isEmpty();","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"    public List\u003cTask\u003e find(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"        assert keyword !\u003d null : \"Keyword should not be empty\";","lastModifiedDate":"2023-02-14"},{"lineNumber":79,"author":{"gitId":"Gibson0918"},"content":"        return this.taskList.stream().filter(x -\u003e x.description.contains(keyword)).collect(Collectors.toList());","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"Gibson0918"},"content":"     * replace the tasks with another at the given index","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"     * @param index index of the element to replace","lastModifiedDate":"2023-02-14"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"     * @param task element to be stored at the specified position","lastModifiedDate":"2023-02-14"},{"lineNumber":86,"author":{"gitId":"Gibson0918"},"content":"     * @return the new task replaced","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Gibson0918"},"content":"    public Task set(int index, Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Gibson0918"},"content":"        assert index \u003c taskList.size() : \"index provided should be less than taskList size\";","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"Gibson0918"},"content":"        taskList.set(index, task);","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"Gibson0918"},"content":"        return task;","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"Gibson0918"},"content":"     * Prints out all tasks in the list","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"Gibson0918"},"content":"     * @return String representation of all tasks in the list","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"Gibson0918"},"content":"    public String toString() {","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"Gibson0918"},"content":"        if (!taskList.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"Gibson0918"},"content":"            sb.append(\"Here are the tasks in your list: \\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"Gibson0918"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"Gibson0918"},"content":"            for (Task t : taskList) {","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"Gibson0918"},"content":"                sb.append(count++);","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Gibson0918"},"content":"                sb.append(\".\" + t.toString() + \"\\n\");","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"Gibson0918"},"content":"            sb.append(\"You have no tasks\");","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":113}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"     * Constructor method for Todo","lastModifiedDate":"2023-02-09"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"     * @param description task\u0027s description","lastModifiedDate":"2023-02-09"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method for print Todo task","lastModifiedDate":"2023-02-09"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     * @return String output of the task","lastModifiedDate":"2023-02-09"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * Formats the task\u0027s details for saving to file","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @return formatted task\u0027s details","lastModifiedDate":"2023-02-09"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    public String formatForFile() {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"            return \"T | \" + 1 + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            return \"T | \" + 0 + \" | \" + this.description + \"\\n\";","lastModifiedDate":"2023-02-10"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"    public Type getType() {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        return Type.TODO;","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":38}},{"path":"src/main/java/duke/Type.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"public enum Type {","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"    DEADLINE, EVENT, TODO","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Gibson0918":5}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * Handles the appropriate tasks when performing an AddCommand by Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    private Task task;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for AddCommand.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"     * @param task Task provided by the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when adding tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"        tasks.addTask(this.task);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"        return ui.displayAddTaskMessage(task, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":36}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * Represents the abstract Command class which serves as a base template to handle all possible commands by Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     *","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * @return duke\u0027s response message.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    public abstract String initCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":22}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"     * Handles the appropriate tasks when performing an DeleteCommand by Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    private int taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for DeleteCommand.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     * @param taskID integer identifier to identify the index of the task to be deleted from the list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    public DeleteCommand(int taskID) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"        this.taskID \u003d taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when performing deletion","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"        if (tasks.size() \u003e\u003d taskID \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            Task currentTask \u003d tasks.getTask(taskID);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            tasks.deleteTask(taskID);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayDeleteTaskMessage(currentTask, tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayMsg(\"Invalid taskID entered!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":41}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when performing deletion","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"        storage.saveData(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"        Platform.exit();","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"        return ui.displayGoodbyeMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":23}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * Handles the appropriate tasks when performing an DeleteCommand by Duke.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    private String keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for FindCommand","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * @param keyword keyword to be filtered by","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when performing deletion.","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        List\u003cTask\u003e matchingTasks \u003d tasks.find(keyword);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        if (matchingTasks.isEmpty()) {","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"            return \"No matching tasks, please try again!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"            sb.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"            int count \u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"            for (Task t : matchingTasks) {","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"                sb.append(count++  + \".\" + t.toString() + \"\\n\");","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"            return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Gibson0918":48}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when listing out all tasks from the Duke\u0027s list.","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        return ui.displayTaskList(tasks);","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":19}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    private int taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for MarkCommand.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     * @param taskID index of the task to be marked within the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    public MarkCommand(int taskID) {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        this.taskID \u003d taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when marking task as done in the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        if (tasks.size() \u003e\u003d taskID \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            Task currentTask \u003d tasks.getTask(taskID);","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            currentTask.marked();","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayMarkMessage(currentTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayMsg(\"Invalid taskID entered!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    private int taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for UnmarkCommand.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * @param taskID index of the task to be unmark within the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    public UnmarkCommand(int taskID) {","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"        this.taskID \u003d taskID;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * Overridden method to handle the specific tasks to be carried out when unmarking task from the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks a list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * @param ui Ui class to handle display messages.","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        if (tasks.size() \u003e\u003d taskID \u0026\u0026 !tasks.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            Task currentTask \u003d tasks.getTask(taskID);","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            currentTask.unmarked();","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            storage.saveData(tasks);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayUnmarkedMessage(currentTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"            return ui.displayMsg(\"Invalid taskID entered!\");","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":38}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.command;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.*;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    private String details;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    public UpdateCommand(String details) {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks   a list of tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"     * @param ui      Ui class to handle display messages.","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"     * @param storage Storage to handle saving/loading of data to/from the list of task.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * @return duke\u0027s response message.","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    public String initCommand(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        String[] splitDetails \u003d this.details.split(\" \", 2);","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        int index \u003d Integer.parseInt(splitDetails[0]);","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"        String description \u003d splitDetails[1];","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        Task toBeReplacedTask \u003d tasks.getTask(index);","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        Type taskType \u003d toBeReplacedTask.getType();","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            case TODO:","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"                Todo newToDo \u003d new Todo(description);","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"                tasks.set(--index, newToDo);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"                return ui.displayUpdateMessage(newToDo);","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"                String[] deadlineFormatter \u003d description.split(\" /by \");","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"                if (deadlineFormatter.length \u003c 2 ) {","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"                    throw new DukeException(\"Either the description or deadline of the task is missing\");","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"                } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"                    Deadline newDeadline \u003d new Deadline(deadlineFormatter[0], deadlineFormatter[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"                    tasks.set(--index, newDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"                    return ui.displayUpdateMessage(newDeadline);","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"            case EVENT:","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"                // update 2 project meeting /from 2020-12-20 2000 /to 2020-12-25 2200","lastModifiedDate":"2023-02-14"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"                String[] details \u003d description.split(\" /\", 3);","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"                if (details.length \u003c 3) {","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"                    throw new IllegalArgumentException(\"Either the description or dates (from/to) of the task is missing\");","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"                } else {","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"                    String[] eventFormatter \u003d description.split(\" /from \");","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"                    String[] startEndDate \u003d eventFormatter[1].split(\" /to \");","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"                    Event event \u003d new Event(eventFormatter[0], startEndDate[0], startEndDate[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"                    tasks.set(--index, event);","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"                    return ui.displayUpdateMessage(event);","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"            default:","lastModifiedDate":"2023-02-14"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"                throw new DukeException(\"Please try again\");","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"Gibson0918":58}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.exception;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for Duke\u0027s own exception class.","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"     * @param message appropriate message to be displayed.","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"        super(message);","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":11}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":61}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.gui;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":54}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import duke.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"public class Parser {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"     * Represents Duke\u0027s parser to parse all userInputs and validate them before performing appropriate actions.","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    public enum ValidCommands {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"        LIST, TODO, DEADLINE, EVENT, MARK, UNMARK, DELETE, BYE, FIND, UPDATE","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"     * Parse the userInput/commmand and returns the appropriate command for execution","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * @param command Input/command given by the user.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * @return The appropriate command to be executed if valid","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * @throws DukeException if the command is invalid","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    public static Command parse(String command) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        String[] output \u003d command.split(\" \", 2);","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"        ValidCommands validCommands \u003d ValidCommands.valueOf(output[0].toUpperCase());","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        switch (validCommands) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"            case LIST:","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"                return new ListCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            case BYE:","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"                return new ExitCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            case TODO:","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"                return new AddCommand(new Todo(output[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            case DEADLINE:","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"                String[] deadlineFormatter \u003d output[1].split(\" /by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"                if (deadlineFormatter.length \u003c 2 ) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"                    throw new DukeException(\"Either the description or deadline of the task is missing\");","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"                } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"                    return new AddCommand(new Deadline(deadlineFormatter[0], deadlineFormatter[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"            case EVENT:","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"                String[] details \u003d output[1].split(\" /\", 3);","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"                String[] eventFormatter \u003d output[1].split(\" /from \");","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"                System.out.println(eventFormatter[0]);","lastModifiedDate":"2023-02-04"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"                if (details.length \u003c 3 ) {","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"                    throw new IllegalArgumentException(\"Either the description or dates (from/to) of the task is missing\");","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"                else {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"                    String[] startEndDate \u003d eventFormatter[1].split(\" /to \");","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"                    return new AddCommand(new Event(eventFormatter[0], startEndDate[0], startEndDate[1]));","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"            case MARK:","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"                return new MarkCommand(Integer.parseInt(output[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"            case UNMARK:","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"                return new UnmarkCommand(Integer.parseInt(output[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"            case DELETE:","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"                return new DeleteCommand(Integer.parseInt(output[1]));","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"            case FIND:","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"                return new FindCommand(output[1]);","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"            case UPDATE:","lastModifiedDate":"2023-02-14"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"                return new UpdateCommand(output[1]);","lastModifiedDate":"2023-02-14"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"            default:","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"                throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":65}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.io.File;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import duke.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import duke.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import duke.Todo;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"public class Storage {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * Storage class to handle all files related activities such as creation of duke.txt,","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * loading and saving data from duke.txt.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    private String filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"     * Constructor method for Storage.","lastModifiedDate":"2023-02-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"     * @param filePath path to duke.txt","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"        checkFile(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"     * check if duke.txt exists, creates it otherwise","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"     * @param filePath relative/absolute path to duke.txt","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"    private void checkFile(String filePath) {","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"        if (!file.isFile()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"                file.createNewFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"                System.out.println(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"     * Handles the saving of data from the list of tasks to duke.txt","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"     * @param taskList the list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"    public void saveData(TaskList taskList) {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"                Task t \u003d taskList.getTask(i + 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"                fileWriter.write(t.formatForFile());","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"            System.out.println(e);","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"     * Handles the loading of data from duke.txt to the list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"     * @return a list of tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"     * @throws FileNotFoundException if the file does not exist in the filePath given","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"    public List\u003cTask\u003e loadFile() throws FileNotFoundException {","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"Gibson0918"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"Gibson0918"},"content":"        if (file.isFile()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"            Scanner sc \u003d new Scanner(file);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"                String[] data \u003d sc.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"                Task task \u003d null;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"Gibson0918"},"content":"                switch (data[0]) {","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"                    case \"T\":","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"Gibson0918"},"content":"                        task \u003d new Todo(data[2]);","lastModifiedDate":"2023-02-01"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"Gibson0918"},"content":"                    case \"D\":","lastModifiedDate":"2023-02-01"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"                        task \u003d new Deadline(data[2], data[3]);","lastModifiedDate":"2023-02-01"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":86,"author":{"gitId":"Gibson0918"},"content":"                    case \"E\":","lastModifiedDate":"2023-02-01"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"                        task \u003d new Event(data[2], data[3], data[4]);","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"Gibson0918"},"content":"                        break;","lastModifiedDate":"2023-02-01"},{"lineNumber":89,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":90,"author":{"gitId":"Gibson0918"},"content":"                if (data[1].equals(\"1\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"Gibson0918"},"content":"                    task.marked();","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":93,"author":{"gitId":"Gibson0918"},"content":"                taskList.add(task);","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":95,"author":{"gitId":"Gibson0918"},"content":"            sc.close();","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"Gibson0918"},"content":"        return taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":99}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke.ui;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import duke.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import duke.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"public class Ui {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"     * Ui class to handle Duke\u0027s output","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"     * Prints out all of Duke\u0027s tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    public String displayTaskList(TaskList tasks) {","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"        return tasks.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the appropriate message when adding task to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * @param task task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * @param taskList list of task","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    public String displayAddTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        sb.append(task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the appropriate message when adding task to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"     * @param task task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"     * @param taskList list of task","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"    public String displayDeleteTaskMessage(Task task, TaskList taskList) {","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"        sb.append(task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"\\nNow you have \" + taskList.size() + \" tasks in the list.\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the appropriate message when adding task to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"     * @param task task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"    public String displayMarkMessage(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"        sb.append(task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the appropriate message when unmarking a task","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"     * @param task task to be added","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"    public String displayUnmarkedMessage(Task task) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"OK, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"        sb.append(task.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Gibson0918"},"content":"     * Prints out Duke\u0027s goodbye message","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"    public String displayGoodbyeMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"     * Prints out the appropriate misc message","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"Gibson0918"},"content":"     * @return Duke\u0027s response message","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"Gibson0918"},"content":"    public String displayMsg(String output) {","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"        return output;","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"    public String displayUpdateMessage(Task task) {","lastModifiedDate":"2023-02-14"},{"lineNumber":88,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-14"},{"lineNumber":89,"author":{"gitId":"Gibson0918"},"content":"        sb.append(\"Task has been updated\\n\");","lastModifiedDate":"2023-02-14"},{"lineNumber":90,"author":{"gitId":"Gibson0918"},"content":"        sb.append(task.toString());","lastModifiedDate":"2023-02-14"},{"lineNumber":91,"author":{"gitId":"Gibson0918"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-14"},{"lineNumber":92,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":93,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Gibson0918":93}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"                \u003cInsets /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"150.0\" fitWidth\u003d\"150.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"            \u003c/HBox.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"762.0\" prefWidth\u003d\"655.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"709.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"52.0\" prefWidth\u003d\"521.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"134.0\" AnchorPane.topAnchor\u003d\"709.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"524.0\" layoutY\u003d\"709.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"52.0\" prefWidth\u003d\"128.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.rightAnchor\u003d\"3.0\" AnchorPane.topAnchor\u003d\"709.0\" /\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToHeight\u003d\"true\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" vvalue\u003d\"1.0\" AnchorPane.bottomAnchor\u003d\"56.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"2.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"704.0\" prefWidth\u003d\"651.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Gibson0918":19}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"    public void toFileFormatTest(){","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"        Deadline deadline \u003d new Deadline(\"return book\", \"2020-05-12 1800\");","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"        assertEquals(\"D | 0 | return book | 2020-05-12 1800\\n\", deadline.formatForFile());","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2020-05-12 1800\");","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"        assertEquals(\"[D][ ] test (by: May 12 2020 18:00)\", deadline.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Gibson0918":20}},{"path":"src/test/java/duke/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"public class EventTest {","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"    public void toFileFormatTest(){","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"        Event event \u003d new Event(\"project meeting\", \"2020-12-20 2000\", \"2020-12-25 2200\");","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"        assertEquals(\"E | 0 | project meeting | 2020-12-20 2000 | 2020-12-25 2200\\n\", event.formatForFile());","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"        Event event \u003d new Event(\"project meeting\", \"2020-05-12 1800\", \"2020-12-25 2200\");","lastModifiedDate":"2023-02-05"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"        assertEquals(\"[E][ ] project meeting (from: May 12 2020 18:00 to: Dec 25 2020 22:00)\", event.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"    public void markTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"        Event event \u003d new Event(\"test\", \"2020-05-12 1800\", \"2020-12-25 2200\");","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"        event.marked();","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        assertEquals(\"[E][X] test (from: May 12 2020 18:00 to: Dec 25 2020 22:00)\", event.toString());","lastModifiedDate":"2023-02-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Gibson0918":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"mark 1","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"todo borrow book","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"deadline return book /by 2020-05-12 1800","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"event project meeting /from 2020-12-20 2000 /to 2020-12-25 2200","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"mark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"mark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"unmark 3","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"mark 4","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"unmark 4","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"unmark 2","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"blah","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"todo","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"event buy bread","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"event","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"deadline","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"delete 3","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"list","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"Gibson0918":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"Gibson0918":1}}]
