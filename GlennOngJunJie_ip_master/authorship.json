[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"# Glenn\u0027s DukePro","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"\u003e \"A goal without a plan is just a wish\" - Larry Elder","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"Glenn\u0027s DukePro only has 3 prerequisites:","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"- Knows English","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"- Have things to do","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"- Not be **LAZY**","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"## Setting up Glenn\u0027s Duke Pro","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"Prerequisites: JDK 11.","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"All you need to do to set it up:","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"1. Download it from [here](https://github.com/GlennOngJunJie/ip/releases/tag/A-Release)","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"2. Choose where you want to save your progress on your desktop","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"3. Add todos, events, deadlines","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"4. You can also mark task, unmark tasks, delete task or even find all the task with a particular name","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"5. Enjoy using :smile:","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"Things you can do in the list:","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] todo ","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] event","lastModifiedDate":"2023-02-16"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] deadlines","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] mark","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] unmark","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] delete","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] list","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] find","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] help","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"- [x] examples","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"- [ ] set reminder","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"- [ ] set recurring events","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"Examples to type in:","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"(where \"work\" can be replaced with anything you want as well as the dates and timings)","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"1. todo: todo work","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"2. deadline: deadline work /by 2023-02-17","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"3. event: event work /from Tuesday 5pm /to 8pm","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"4. mark: mark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"5. unmark: unmark 1","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"6. delete: delete 1","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"7. find: find work","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"8. list: list","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"9. help: /help","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"10. examples: /examples","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"GlennOngJunJie":51}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"//    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"//checkstyle {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"//    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"//}","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GlennOngJunJie":22,"-":39}},{"path":"src/main/java/duke/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"    public Deadline(String description, String fullDescription, String by) {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"        super(description, fullDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"        assert fullDescription.startsWith(\"deadline\");","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":21}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    private Circle displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    private DialogBox(String text, Image img, String colourCode) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"        dialog.setStyle(\"-fx-background-color: \" + colourCode);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"        displayPicture.setFill(new ImagePattern(img));","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"    public static DialogBox getUserDialog(String text, Image img, String colourCode ) {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"        return new DialogBox(text, img, colourCode);","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"    public static DialogBox getDukeDialog(String text, Image img, String colourCode) {","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"        var db \u003d new DialogBox(text, img, colourCode);","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":62}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"public class Duke  {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"    private Tasklist tasks;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"    public Duke(String filepath) throws IOException, ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"        storage \u003d new Storage(filepath);","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"            tasks \u003d new Tasklist(storage.load());","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"            tasks \u003d new Tasklist();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"    public String run() {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"        return this.ui.welcome();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    public String feedingIntoInterface(String userInput) throws DukeException, FileNotFoundException, ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"        return this.parser.parse(userInput, tasks, ui, storage);","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"    public static void main(String[] args) throws DukeException, IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":35}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":7}},{"path":"src/main/java/duke/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"    protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"    protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"    public Event(String description, String fullDescription, String from, String to) {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"        super(description, fullDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"        assert fullDescription.startsWith(\"event\");","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"[E]\" + super.toString() + \"(from: \" + from + \"to: \" + to + \")\";","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":18}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":" * A GUI for duke.Duke using FXML.","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"            duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setWelcomeMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":38}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.layout.*;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"import javafx.scene.Group;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke Avatar.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Receiver Avatar.jpeg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"    public void initialize() throws IOException {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"//        duke \u003d new Duke(\"data/tasks.txt\");","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"        Image img \u003d new Image(this.getClass().getResourceAsStream(\"/images/Background Image.jpeg\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"        BackgroundImage bImg \u003d new BackgroundImage(img,","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"                BackgroundRepeat.REPEAT,","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"                BackgroundPosition.DEFAULT,","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"                BackgroundSize.DEFAULT);","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"        Background bGround \u003d new Background(bImg);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"        dialogContainer.setBackground(bGround);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"        // dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.run(), dukeImage, \"#d4fffd\")); //syntax","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"    public void setWelcomeMessage() {","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.run(), dukeImage, \"#d4fffd\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing duke.Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"    private void handleUserInput() throws DukeException, FileNotFoundException, ParseException, InterruptedException {","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"GlennOngJunJie"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"GlennOngJunJie"},"content":"        String response \u003d duke.feedingIntoInterface(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"GlennOngJunJie"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getUserDialog(input, userImage, \"#eca3b3\"),","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"GlennOngJunJie"},"content":"                new Group(DialogBox.getDukeDialog(response, dukeImage, \"#d4fffd\")));","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"GlennOngJunJie"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"GlennOngJunJie"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"GlennOngJunJie"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":72}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"public class Parser {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"     * Processes the user input and helps to run the user\u0027s commands.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param userInput instructions given by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param tasklist  the existing tasklist that has been created.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param ui        user interface to handle interactions with user.","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param storage   current file to store the tasklist to.","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws DukeException         if user command is not understood or incorrect.","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws FileNotFoundException if file to store the tasklist do not exist.","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"    public String parse(String userInput, Tasklist tasklist, Ui ui, Storage storage) throws FileNotFoundException, ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"        if (userInput.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"            return tasklist.printList();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"mark\") \u0026\u0026 userInput.substring(0, 4).equals(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(4).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number of mark cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"                Integer.parseInt(userInput.substring(5));","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! No number detected. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"            if (Integer.valueOf(userInput.substring(5)) \u003e tasklist.taskSize() || Integer.valueOf(userInput.substring(5)) \u003c 1 ) {","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number is not present in the tasklist. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"            assert userInput.substring(4).equals(\"\") || Integer.valueOf(userInput.substring(5)) \u003c\u003d tasklist.taskSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"            int position \u003d Integer.valueOf(userInput.substring(5));","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"            return tasklist.updateTask(\"mark\", position - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"unmark\") \u0026\u0026 userInput.substring(0, 6).equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(6).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number of mark cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"                Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! No number detected. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"            if (Integer.valueOf(userInput.substring(7)) \u003e tasklist.taskSize() || Integer.valueOf(userInput.substring(7)) \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number is not present in the tasklist. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"            assert userInput.substring(6).equals(\"\") || Integer.valueOf(userInput.substring(7)) \u003c\u003d tasklist.taskSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"            int position \u003d Integer.valueOf(userInput.substring(7));","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"            return tasklist.updateTask(\"unmark\", position - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"delete\") \u0026\u0026 userInput.substring(0, 6).equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(6).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number of mark cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"                Integer.parseInt(userInput.substring(7));","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! No number detected. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"            if (Integer.valueOf(userInput.substring(7)) \u003e tasklist.taskSize() || Integer.valueOf(userInput.substring(7)) \u003c 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The task number is not present in the tasklist. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"GlennOngJunJie"},"content":"            assert userInput.substring(6).equals(\"\") || Integer.valueOf(userInput.substring(7)) \u003c\u003d tasklist.taskSize();","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"GlennOngJunJie"},"content":"            int position \u003d Integer.valueOf(userInput.substring(7));","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"GlennOngJunJie"},"content":"            return tasklist.updateTask(\"delete\", position - 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"todo\") \u0026\u0026 userInput.substring(0, 4).equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":67,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(4).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The description of a todo cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":69,"author":{"gitId":"GlennOngJunJie"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"GlennOngJunJie"},"content":"                assert (userInput.substring(4) !\u003d null);","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"GlennOngJunJie"},"content":"                return tasklist.addingActivities(\"todo\", userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"deadline\") \u0026\u0026 userInput.substring(0, 8).equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(8).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The description of a deadline cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"GlennOngJunJie"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"GlennOngJunJie"},"content":"                assert (userInput.substring(8) !\u003d null);","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"GlennOngJunJie"},"content":"                return tasklist.addingActivities(\"deadline\", userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"event\") \u0026\u0026 userInput.substring(0, 5).equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(5).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The description of a event cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"GlennOngJunJie"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"GlennOngJunJie"},"content":"                assert (userInput.substring(6) !\u003d null);","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"GlennOngJunJie"},"content":"                return tasklist.addingActivities(\"event\", userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.contains(\"find\") \u0026\u0026 userInput.substring(0, 4).equals(\"find\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":88,"author":{"gitId":"GlennOngJunJie"},"content":"            if (userInput.substring(4).equals(\"\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The description of find cannot be empty. Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"GlennOngJunJie"},"content":"            } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":91,"author":{"gitId":"GlennOngJunJie"},"content":"                assert (userInput.substring(4) !\u003d null);","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"GlennOngJunJie"},"content":"                return tasklist.findingActivities(userInput.substring(5));","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":94,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"GlennOngJunJie"},"content":"            assert (storage !\u003d null);","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.saveToFile(tasklist);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.storageClose();","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"GlennOngJunJie"},"content":"            return ui.bye();","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.startsWith(\"/help\")){","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"GlennOngJunJie"},"content":"            return ui.help();","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"GlennOngJunJie"},"content":"        } else if (userInput.startsWith(\"/example\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"GlennOngJunJie"},"content":"            return ui.example();","lastModifiedDate":"2023-02-16"},{"lineNumber":103,"author":{"gitId":"GlennOngJunJie"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Type /help for user guide.\";","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":107}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"    private String filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"    private PrintWriter storeInFile;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"    private boolean isFilePresent \u003d false;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"    private File fileCreation;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"     * Constructor to create a directory or file to store the tasklist locally on the user\u0027s computer.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param filePath location of where the file should be saved","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws IOException when input or output cannot be interpreted and when the program do not have access to create a new file.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    public Storage(String filePath) throws IOException {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"            String filePath2 \u003d filePath;","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"            while (filePath2.contains(\"/\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"                int slashPos \u003d filePath2.indexOf(\"/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"                File dirCreation \u003d new File(filePath2.substring(0, slashPos));","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"                dirCreation.mkdir();","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"                filePath2 \u003d filePath2.substring(slashPos + 1);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"            fileCreation \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"            if (!fileCreation.createNewFile()) {","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"                isFilePresent \u003d true;","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"            System.out.println(\"Folder do not exist.\");","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"     * Saves the current tasklist locally on the user\u0027s computer.","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param tasklist the current working tasklist that has been created by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws FileNotFoundException if the location to store the tasklist in is not available.","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"    public void saveToFile(Tasklist tasklist) throws FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"        assert (fileCreation !\u003d null);","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"        storeInFile \u003d new PrintWriter(fileCreation);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"        for (int i \u003d 0; i \u003c tasklist.getList().size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"            storeInFile.println(tasklist.getList().get(i).getFullDescription());","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"            if (tasklist.getList().get(i).isDoneStatus()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"                storeInFile.println(\"mark \" + (i + 1));","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"     * Closes the directory or file once saving has been complete.","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"    public void storageClose() {","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"        assert (storeInFile !\u003d null);","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"GlennOngJunJie"},"content":"        storeInFile.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"GlennOngJunJie"},"content":"     * Retrieves the saved tasklist that was previously created by the user.","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"GlennOngJunJie"},"content":"     * @return the arraylist containing all the previously saved tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws DukeException when the user input is incorrect or cannot be understood.","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"GlennOngJunJie"},"content":"     * @throws FileNotFoundException if the file where the old tasklist was stored at is not available.","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"GlennOngJunJie"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"GlennOngJunJie"},"content":"        if (isFilePresent) {","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"GlennOngJunJie"},"content":"            ArrayList\u003cTask\u003e storage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"GlennOngJunJie"},"content":"            File fileScanning \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"GlennOngJunJie"},"content":"            Scanner sc \u003d new Scanner(fileScanning);","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"GlennOngJunJie"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"GlennOngJunJie"},"content":"                String content \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"GlennOngJunJie"},"content":"                String[] type \u003d content.split(\" \", 2);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"GlennOngJunJie"},"content":"                switch (type[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"GlennOngJunJie"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"GlennOngJunJie"},"content":"                    storage.get(Integer.parseInt(type[1]) - 1).markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"GlennOngJunJie"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"GlennOngJunJie"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"GlennOngJunJie"},"content":"                    Todo todoTask \u003d new Todo(content.substring(5), content);","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"GlennOngJunJie"},"content":"                    storage.add(todoTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"GlennOngJunJie"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"GlennOngJunJie"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"GlennOngJunJie"},"content":"                    int position \u003d content.indexOf(\"/by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"GlennOngJunJie"},"content":"                    Deadline deadlineTask \u003d new Deadline(content.substring(9, position), content, content.substring(position + 4));","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"GlennOngJunJie"},"content":"                    storage.add(deadlineTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"GlennOngJunJie"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"GlennOngJunJie"},"content":"                case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"GlennOngJunJie"},"content":"                    int position1 \u003d content.indexOf(\"/from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"GlennOngJunJie"},"content":"                    int position2 \u003d content.indexOf(\"/to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"GlennOngJunJie"},"content":"                    Event eventTask \u003d new Event(content.substring(6, position1), content, content.substring(position1 + 6, position2), content.substring(position2 + 4));","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"GlennOngJunJie"},"content":"                    storage.add(eventTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"GlennOngJunJie"},"content":"                    break;","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"GlennOngJunJie"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"GlennOngJunJie"},"content":"            return storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"GlennOngJunJie"},"content":"        return new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":105}},{"path":"src/main/java/duke/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"    protected String fullDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"     * Constructor to make a task that the user has specified and wants to be placed on the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param description     the type of task.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param fullDescription the entire string of user input for the task.","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"    public Task(String description, String fullDescription) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"        this.fullDescription \u003d fullDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"     * Returns a string to see if the task is marked or unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"     * @return \"X\" if the task has been marked or empty otherwise.","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"     * Updates the isDone variable to true as the task has been done.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"     * Updates the isDone variable to false as the task has been unmarked.","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"     * Returns the entire string of the user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"     * @return user input.","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"    public String getFullDescription() {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"        return fullDescription;","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"     * Return true if a particular task is marked and false if task is unmarked.","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"     * @return a boolean to see if a task has been completed.","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"    public boolean isDoneStatus() {","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"        return isDone;","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"        return description;","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"GlennOngJunJie"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"GlennOngJunJie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":69}},{"path":"src/main/java/duke/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"public class Tasklist {","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"    private ArrayList\u003cTask\u003e storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"     * Constructor to create a brand new TaskList if there is non stored locally.","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"    public Tasklist() {","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        storage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"     * Constructor that loads the TaskList that was previously stored locally in the harddisk.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param load the TaskList that was locally stored in the harddisk.","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    public Tasklist(ArrayList\u003cTask\u003e load) {","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"        storage \u003d load;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"     * Updates the status of the current task, where users get to mark a task when completed, unmark a task, or even delete a task if","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"     * the task is no longer necessary to them.","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param request  the type of request that the user requested for.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param position position of the current task in the tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"    public String updateTask(String request, int position) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"        switch (request) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.get(position).markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + \"[\" + storage.get(position).getStatusIcon() + \"] \" + storage.get(position).description;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.get(position).markAsNotDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + \"[\" + storage.get(position).getStatusIcon() + \"] \" + storage.get(position).description;","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"            Task deletedTask \u003d storage.get(position);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.remove(position);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"Noted. I\u0027ve removed this task:\\n\" + deletedTask.toString() + \"\\nNow you have \" + (storage.size()) + \" \" + \"tasks in the list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"GlennOngJunJie"},"content":"     * Prints all the tasks that are available in the current Tasklist to console.","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"GlennOngJunJie"},"content":"    public String printList() {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"GlennOngJunJie"},"content":"        String list \u003d \"Here are the tasks in your list:\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"GlennOngJunJie"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"GlennOngJunJie"},"content":"            list \u003d list + (i + 1) + \".\" + storage.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"GlennOngJunJie"},"content":"        list \u003d list + \" \";","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"GlennOngJunJie"},"content":"        return list;","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"GlennOngJunJie"},"content":"     * Adds tasks to the Tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param type    the type of task to be added.","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"GlennOngJunJie"},"content":"     * @param content the user input that they typed in the command line.","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"GlennOngJunJie"},"content":"    public String addingActivities(String type, String content) throws DateTimeParseException{","lastModifiedDate":"2023-02-17"},{"lineNumber":68,"author":{"gitId":"GlennOngJunJie"},"content":"        switch (type) {","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"GlennOngJunJie"},"content":"            Todo todoTask \u003d new Todo(content.substring(5), content);","lastModifiedDate":"2023-01-31"},{"lineNumber":71,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.add(todoTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"Got it. I\u0027ve added this task:\\n  \" + todoTask.toString() + \"\\nNow you have \" + storage.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"GlennOngJunJie"},"content":"            if (!content.contains(\"/by\")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The syntax for deadline is wrong. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":77,"author":{"gitId":"GlennOngJunJie"},"content":"            int position \u003d content.indexOf(\"/by \");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"GlennOngJunJie"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"GlennOngJunJie"},"content":"                LocalDate.parse(content.substring(position + 4));","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"GlennOngJunJie"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The date is in the wrong format. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"GlennOngJunJie"},"content":"            Deadline deadlineTask \u003d new Deadline(content.substring(9, position), content, content.substring(position + 4));","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.add(deadlineTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"Got it. I\u0027ve added this task:\\n  \" + deadlineTask.toString() + \"\\nNow you have \" + storage.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"GlennOngJunJie"},"content":"        case \"event\":","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"GlennOngJunJie"},"content":"            if (!(content.contains(\"/from\")) || !(content.contains(\"/to\"))) {","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"GlennOngJunJie"},"content":"                return \"☹ OOPS!!! The syntax for event is wrong. Type /help for user guide.\";","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"GlennOngJunJie"},"content":"            int position1 \u003d content.indexOf(\"/from \");","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"GlennOngJunJie"},"content":"            int position2 \u003d content.indexOf(\"/to \");","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"GlennOngJunJie"},"content":"            Event eventTask \u003d new Event(content.substring(6, position1), content, content.substring(position1 + 6, position2), content.substring(position2 + 4));","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"GlennOngJunJie"},"content":"            storage.add(eventTask);","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"GlennOngJunJie"},"content":"            return \"Got it. I\u0027ve added this task:\\n  \" + eventTask.toString() + \"\\nNow you have \" + storage.size() + \" tasks in the list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"\";","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"GlennOngJunJie"},"content":"    public String findingActivities(String content) {","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"GlennOngJunJie"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"GlennOngJunJie"},"content":"        String found \u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"GlennOngJunJie"},"content":"        for (int i \u003d 0; i \u003c storage.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":103,"author":{"gitId":"GlennOngJunJie"},"content":"            Task taskObtained \u003d storage.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":104,"author":{"gitId":"GlennOngJunJie"},"content":"            if (taskObtained.getDescription().contains(content)) {","lastModifiedDate":"2023-02-01"},{"lineNumber":105,"author":{"gitId":"GlennOngJunJie"},"content":"                if (taskObtained instanceof Todo) {","lastModifiedDate":"2023-02-01"},{"lineNumber":106,"author":{"gitId":"GlennOngJunJie"},"content":"                    found \u003d found + (index + \".\" + ((Todo) taskObtained).toString()) + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"GlennOngJunJie"},"content":"                    index++;","lastModifiedDate":"2023-02-01"},{"lineNumber":108,"author":{"gitId":"GlennOngJunJie"},"content":"                } else if (taskObtained instanceof Deadline) {","lastModifiedDate":"2023-02-01"},{"lineNumber":109,"author":{"gitId":"GlennOngJunJie"},"content":"                    found \u003d found + (index + \".\" + ((Deadline) taskObtained).toString()) + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"GlennOngJunJie"},"content":"                    index++;","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"GlennOngJunJie"},"content":"                } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":112,"author":{"gitId":"GlennOngJunJie"},"content":"                    found \u003d found + index + \".\" + ((Event) taskObtained).toString() + \"\\n\";","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"GlennOngJunJie"},"content":"                    index++;","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"GlennOngJunJie"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":115,"author":{"gitId":"GlennOngJunJie"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"GlennOngJunJie"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"GlennOngJunJie"},"content":"        found \u003d found + \" \";","lastModifiedDate":"2023-02-08"},{"lineNumber":118,"author":{"gitId":"GlennOngJunJie"},"content":"        return found;","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"GlennOngJunJie"},"content":"     * Returns an ArrayList that currently contains all the task that have been added or marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"GlennOngJunJie"},"content":"     *","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"GlennOngJunJie"},"content":"     * @return The ArrayList containing all the tasks.","lastModifiedDate":"2023-02-01"},{"lineNumber":125,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":126,"author":{"gitId":"GlennOngJunJie"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"GlennOngJunJie"},"content":"        return storage;","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"GlennOngJunJie"},"content":"    public int taskSize() {","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"GlennOngJunJie"},"content":"        return storage.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":133}},{"path":"src/main/java/duke/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"    public Todo(String description, String fullDescription) {","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"        super(description, fullDescription);","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"        assert fullDescription.startsWith(\"todo\");","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":13}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"package duke;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"public class Ui {","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"     * Handles the welcome user interface when the programs start.","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"    public String welcome() {","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"        return  \"Hello! I\u0027m duke.\\nWhat can I do for you? \\n \\n\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"                \"There are 3 different types of activities: \\n 1. todo (todo ____)\\n 2. \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"                \"deadline (deadline ____ /by ____ [yyyy-mm-dd]) \\n 3. event (event ____ /from ____ /to ____ \\n \\n You\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"                \" can\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"                \" also do this: \\n 1. list \\n 2. mark _ \\n 3. unmark _ \\n 4. delete _ \\n 5. find ____ \\n \\nEnjoy \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"                \"Using \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"                \"~\";","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"     * Handles to goodbye user interface when programs end.","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    public String bye() {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"     * Handles the user interface if there is not previously saved tasklist.","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"    public String showLoadingError() {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"        return \"There is no saved file! Start a new list :)\";","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"    public String help() {","lastModifiedDate":"2023-02-16"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"        String userGuide \u003d \"How to use?:\\n \\nThere are 3 different types of activities: \\n 1. todo (todo ____)\\n 2. \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"                \"deadline (deadline ____ /by ____ [yyyy-mm-dd]) \\n 3. event (event ____ /from ____ /to ____ \\n \\n You\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"                \" can also do this: \\n 1. list \\n 2. mark _ \\n 3. unmark _ \\n 4. delete _ \\n 5. find ____ \\n \\n For \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"                \"examples type /example\\n \";","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"        return userGuide;","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"    public String example() {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"        String examples \u003d \"Example: (where `work` is the activity you want to add and the `1` corresponds to number \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"                \"on the list) \\n 1. todo: \" + \"todo work \\n 2. \" + \"deadline: deadline \" + \"work \" + \"/by \" + \"2023-02-17 \\n 3. \" +","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"                \"event: event work /from today 3pm /to 6pm \\n 4. list: list \\n 5. mark: mark 1 \\n 6. unmark: unmark 1\" +","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"                \"\\n 7. delete: delete 1 \\n 8. find: find work \\n \";","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"GlennOngJunJie"},"content":"        return examples;","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":46}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.paint.Color?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.paint.LinearGradient?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.paint.Stop?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" minHeight \u003d\"-Infinity\" minWidth\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" maxHeight\u003d\"-Infinity\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003cLabel fx:id\u003d\"dialog\" lineSpacing\u003d\"2.0\" minHeight \u003d\"97.0\" maxHeight\u003d\"Infinity\" minWidth\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" prefWidth\u003d\"283.0\" style\u003d\"-fx-background-color: #1d9e9b;\" text\u003d\"Label\" wrapText\u003d\"true\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003cFont name\u003d\"Rockwell\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003c/font\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"      \u003cCircle fx:id\u003d\"displayPicture\" accessibleRole\u003d\"IMAGE_VIEW\" radius\u003d\"48.0\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003cfill\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003cLinearGradient endX\u003d\"1.0\" endY\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"               \u003cstops\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"                  \u003cStop\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"                        \u003cColor red\u003d\"0.35313108563423157\" green\u003d\"0.38416382670402527\" blue\u003d\"0.40789473056793213\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"GlennOngJunJie"},"content":"                  \u003cStop offset\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"GlennOngJunJie"},"content":"                     \u003ccolor\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"GlennOngJunJie"},"content":"                        \u003cColor red\u003d\"1.0\" green\u003d\"1.0\" blue\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"GlennOngJunJie"},"content":"                     \u003c/color\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"GlennOngJunJie"},"content":"                  \u003c/Stop\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"GlennOngJunJie"},"content":"               \u003c/stops\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003c/LinearGradient\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"GlennOngJunJie"},"content":"         \u003c/fill\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"GlennOngJunJie"},"content":"      \u003c/Circle\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":43}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Enter\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"GlennOngJunJie":19}},{"path":"src/test/java/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"import duke.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"    public void parserTest1() throws IOException, DukeException, ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"        Storage storage \u003d new Storage(\"data/tasks\");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"        parser.parse(\"todo read\", tasklist, ui, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"        parser.parse(\"mark 1\", tasklist, ui, storage);","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"        assertEquals(true, tasklist.getList().get(0).isDoneStatus());","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"    public void parserTest2() throws IOException, DukeException, ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"        Storage storage \u003d new Storage(\"data/tasks\");","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"        assertEquals(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-( Type /help for user guide.\", parser.parse(\"bird\", tasklist, ui, storage));","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":29}},{"path":"src/test/java/TasklistTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"import duke.*;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"GlennOngJunJie"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"GlennOngJunJie"},"content":"public class TasklistTest {","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"GlennOngJunJie"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"GlennOngJunJie"},"content":"    public void taskListTest1() throws ParseException {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"GlennOngJunJie"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"GlennOngJunJie"},"content":"        tasklist.addingActivities(\"todo\", \"todo read\");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"GlennOngJunJie"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"GlennOngJunJie"},"content":"        result.add(new Todo(\"read\", \"todo read\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"GlennOngJunJie"},"content":"        assertEquals(result.get(0).toString(), tasklist.getList().get(0).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"GlennOngJunJie"},"content":"    @Test","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"GlennOngJunJie"},"content":"    public void taskListTest2() throws ParseException{","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"GlennOngJunJie"},"content":"        Tasklist tasklist \u003d new Tasklist();","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"GlennOngJunJie"},"content":"        tasklist.addingActivities(\"event\", \"event project meeting /from Mon 2pm /to 4pm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"GlennOngJunJie"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"GlennOngJunJie"},"content":"        result.add(new Event(\"project meeting \", \"event project meeting /from Mon 2pm /to 4pm\", \"Mon 2pm \", \"4pm\"));","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"GlennOngJunJie"},"content":"        assertEquals(result.get(0).toString(), tasklist.getList().get(0).toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"GlennOngJunJie"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"GlennOngJunJie"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"GlennOngJunJie":27}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GlennOngJunJie"},"content":"eat","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"GlennOngJunJie"},"content":"sleep","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"GlennOngJunJie"},"content":"repeat","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"GlennOngJunJie"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"GlennOngJunJie"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"GlennOngJunJie"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"GlennOngJunJie":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"GlennOngJunJie"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GlennOngJunJie":1,"-":20}}]
