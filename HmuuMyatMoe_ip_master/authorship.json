[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HmuuMyatMoe":6,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dirPath The path to the directory that the file is stored in.","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param fileName The name of the storage file.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Duke(String dirPath, String fileName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"            tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"            ui.print(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Runs Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void run() {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"        ui.printWelcome();","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"                String input \u003d ui.readCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"                Command cmd \u003d Parser.parse(input);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"                cmd.execute(tasks, storage, ui);","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"                isExit \u003d cmd.isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"                ui.print(e.getMessage());","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"        storage.write(tasks.getTaskList());","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        return;","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Starts the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param args A string array of arguments from the command line.","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"        new Duke(\"./data\", \"DukeList.txt\").run();","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HmuuMyatMoe":60,"-":3}},{"path":"src/main/java/duke/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a Formatter that formats given inputs.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Formatter {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Formats LocalDate to day month year format and returns the string representation of it.","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ld The given LocalDate to be formatted.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The string representation of the formatted date.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static String formatDatePrint(LocalDate ld) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        int day \u003d ld.getDayOfMonth();","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        String month \u003d ld.getMonth().toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        int year \u003d ld.getYear();","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        return String.format(\"%d %s %d\", day, month, year);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Formats LocalDate to yyyy/mm/dd format and returns the string representation of it.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ld The given LocalDate to be formatted.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The string representation of the formatted date.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static String formatDateStore(LocalDate ld) {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        return ld.format(dtf);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":33}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a command to add a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Task task;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates AddCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param task The task to be added into the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Adds the given task to the taskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        tasks.add(this.task);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return False indicating that program should not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":39}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to exit the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out goodbye message.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        ui.printBye();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return True indicating that the program should exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":28}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a command.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Executes the command given.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public abstract void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return True if the program should exit, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":23}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to delete a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DeleteCommand object.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if given index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        tasks.delete(this.index);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return False indicating that program should not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to list out all tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        tasks.print();","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return False indicating that program should not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":28}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to mark a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates MarkCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        tasks.mark(this.index);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return False indicating that program should not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":39}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to mark a task as not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates UnmarkCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if given index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        tasks.unmark(this.index);","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return False indicating that program should not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":42}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an exception specific to Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DukeException.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string representation of the error message to be printed.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The error message string.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"OPPS! \" + super.getMessage() + \"\\nPlease try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":25}},{"path":"src/main/java/duke/exception/IncompleteDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an IncompleteDescException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when description given is missing or incomplete.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class IncompleteDescException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates IncompleteDescException","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public IncompleteDescException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":16}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an InvalidInputException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when given input is invalid,","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" * for instance, command given does not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates InvalidInputException.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":17}},{"path":"src/main/java/duke/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of OutOfBoundsException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when indexes given are out of bounds.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class OutOfBoundsException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates OutOfBoundsException.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public OutOfBoundsException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.IncompleteDescException;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a parser that parses the inputs given.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    private enum CommandEnum {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a new ToDo task and returns it.","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param inputArr An array containing the input by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A new ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If name of the task is not given.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    private static ToDo getTodo(String[] inputArr) throws IncompleteDescException {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (inputArr.length \u003c\u003d 1 || inputArr[1].isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"The description of a todo cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"        return new ToDo(inputArr[1]);","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Parses the given string into a LocalDate object.","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param date The given string representation of the date to be parsed.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The parsed LocalDate.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        return LocalDate.parse(date, dtf);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a new Deadline object and returns it.","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param inputArr An array containing the input by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If name or due date/time or both is/are not provided.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If due date/time is given in the wrong format.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    private static Deadline getDeadline(String[] inputArr) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        int endIndex \u003d inputArr[1].indexOf(\"/by\");","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (endIndex \u003c 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"Please add the due date/time!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"        String name \u003d inputArr[1].substring(0, endIndex).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"        String end \u003d inputArr[1].substring((endIndex + 3)).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"The description of a deadline cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (end.isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"Please add the due date/time!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"            LocalDate ldEnd \u003d Parser.parseDate(end);","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"            end \u003d Formatter.formatDatePrint(ldEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (ldEnd.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"                throw new InvalidInputException(\"The given deadline (yyyy/mm/dd) \" + end + \" has passed.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"            return new Deadline(name, ldEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(\"Please enter the date/time in \\\"yyyy/mm/dd\\\" format.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiate a new Event object and returns it.","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param inputArr An array containing the input by the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A new Event.","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If the name, start date/time or due date/time are not given.","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If any of the date/time are given","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                               in a format different from \"yyyy/MM/dd\".","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"    private static Event getEvent(String[] inputArr) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"The description of an event cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"        int startIndex \u003d inputArr[1].indexOf(\"/from\");","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"        int endIndex \u003d inputArr[1].indexOf(\"/to\");","lastModifiedDate":"2023-01-25"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (startIndex \u003c 0 || endIndex \u003c 0) {","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please make sure that the start and end date/time are not empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"        String name \u003d inputArr[1].substring(0, startIndex).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"        String start \u003d inputArr[1].substring((startIndex + 5), endIndex).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"        String end \u003d inputArr[1].substring(endIndex + 3).strip();","lastModifiedDate":"2023-01-25"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(\"The description of an event cannot be empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (start.isBlank() || end.isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please make sure that the start and end date/time are not empty!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":120,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":121,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":122,"author":{"gitId":"HmuuMyatMoe"},"content":"            LocalDate ldStart \u003d Parser.parseDate(start);","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"HmuuMyatMoe"},"content":"            LocalDate ldEnd \u003d Parser.parseDate(end);","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (ldStart.isAfter(ldEnd)) {","lastModifiedDate":"2023-01-25"},{"lineNumber":125,"author":{"gitId":"HmuuMyatMoe"},"content":"                throw new InvalidInputException(","lastModifiedDate":"2023-01-25"},{"lineNumber":126,"author":{"gitId":"HmuuMyatMoe"},"content":"                        \"The start date (yyyy/mm/dd) should be before the end date (yyyy/mm/dd).\");","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":128,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (ldEnd.isBefore(LocalDate.now())) {","lastModifiedDate":"2023-01-25"},{"lineNumber":129,"author":{"gitId":"HmuuMyatMoe"},"content":"                end \u003d Formatter.formatDatePrint(ldEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"HmuuMyatMoe"},"content":"                throw new InvalidInputException(\"The given event (end date: \" + end + \") has ended.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"HmuuMyatMoe"},"content":"            return new Event(name, ldStart, ldEnd);","lastModifiedDate":"2023-01-25"},{"lineNumber":133,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":134,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(\"Please enter the date/time in \\\"yyyy/mm/dd\\\" format.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":135,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":136,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":137,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":138,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":139,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Parses the given string into the correct command.","lastModifiedDate":"2023-01-25"},{"lineNumber":140,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":141,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The string input given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":142,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A Command representing the command given.","lastModifiedDate":"2023-01-26"},{"lineNumber":143,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If command given is incomplete.","lastModifiedDate":"2023-01-26"},{"lineNumber":144,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If command is invalid.","lastModifiedDate":"2023-01-26"},{"lineNumber":145,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":146,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static Command parse(String input) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"HmuuMyatMoe"},"content":"        String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":148,"author":{"gitId":"HmuuMyatMoe"},"content":"        CommandEnum commandType;","lastModifiedDate":"2023-01-25"},{"lineNumber":149,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":150,"author":{"gitId":"HmuuMyatMoe"},"content":"            commandType \u003d CommandEnum.valueOf(inputArr[0].toUpperCase());","lastModifiedDate":"2023-01-25"},{"lineNumber":151,"author":{"gitId":"HmuuMyatMoe"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":152,"author":{"gitId":"HmuuMyatMoe"},"content":"                case BYE:","lastModifiedDate":"2023-01-25"},{"lineNumber":153,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":154,"author":{"gitId":"HmuuMyatMoe"},"content":"                case LIST:","lastModifiedDate":"2023-01-25"},{"lineNumber":155,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":156,"author":{"gitId":"HmuuMyatMoe"},"content":"                case MARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":157,"author":{"gitId":"HmuuMyatMoe"},"content":"                    if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":158,"author":{"gitId":"HmuuMyatMoe"},"content":"                        throw new InvalidInputException(\"Please give the index of the item to be marked.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":159,"author":{"gitId":"HmuuMyatMoe"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":160,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new MarkCommand(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":161,"author":{"gitId":"HmuuMyatMoe"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":162,"author":{"gitId":"HmuuMyatMoe"},"content":"                    if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":163,"author":{"gitId":"HmuuMyatMoe"},"content":"                        throw new InvalidInputException(\"Please give the index of the item to be unmarked.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":164,"author":{"gitId":"HmuuMyatMoe"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":165,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new UnmarkCommand(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"HmuuMyatMoe"},"content":"                case DELETE:","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"HmuuMyatMoe"},"content":"                    if (inputArr.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-25"},{"lineNumber":168,"author":{"gitId":"HmuuMyatMoe"},"content":"                        throw new InvalidInputException(\"Please give the index of the item to be deleted.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":169,"author":{"gitId":"HmuuMyatMoe"},"content":"                    }","lastModifiedDate":"2023-01-25"},{"lineNumber":170,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new DeleteCommand(Integer.parseInt(inputArr[1]) - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":171,"author":{"gitId":"HmuuMyatMoe"},"content":"                case TODO:","lastModifiedDate":"2023-01-25"},{"lineNumber":172,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Task task \u003d Parser.getTodo(inputArr);","lastModifiedDate":"2023-01-25"},{"lineNumber":173,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new AddCommand(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":174,"author":{"gitId":"HmuuMyatMoe"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-25"},{"lineNumber":175,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Deadline deadline \u003d Parser.getDeadline(inputArr);","lastModifiedDate":"2023-01-25"},{"lineNumber":176,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new AddCommand(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":177,"author":{"gitId":"HmuuMyatMoe"},"content":"                case EVENT:","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Event event \u003d Parser.getEvent(inputArr);","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"HmuuMyatMoe"},"content":"                    return new AddCommand(event);","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"HmuuMyatMoe"},"content":"                default:","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"HmuuMyatMoe"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-25"},{"lineNumber":182,"author":{"gitId":"HmuuMyatMoe"},"content":"                            \"OPPS! I\u0027m sorry, there is no such command.\\nPlease try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":183,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":184,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IllegalArgumentException i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":185,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2023-01-25"},{"lineNumber":186,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"OPPS! I\u0027m sorry, there is no such command.\\nPlease try again.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":188,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":189,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":189}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the class that reads and writes to the storage file in the hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String dirPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    private File myFile;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dirPath The path to the directory that the file is stored in.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param fileName The name of the storage file.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.filePath \u003d dirPath + \"/\" + this.fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Creates file at the specified file path if it does not already exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void createFile() {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        File dir \u003d new File(this.dirPath);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"        //create file if it does not already exist","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"            myFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (!myFile.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"                myFile.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(e + \"\\nNew storage file cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Reads data stored in the hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return An ArrayList containing existing tasks stored in the storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if file to be read cannot be found.","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ArrayList\u003cTask\u003e read() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"            this.createFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"            Scanner sc \u003d new Scanner(myFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"                String[] dataArr \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"                String type \u003d dataArr[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"                boolean isDone \u003d dataArr[1].equals(\"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"                    ToDo t \u003d new ToDo(dataArr[2], isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate end \u003d Parser.parseDate(dataArr[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Deadline d \u003d new Deadline(dataArr[2], end, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate start \u003d Parser.parseDate(dataArr[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate end \u003d Parser.parseDate(dataArr[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Event e \u003d new Event(dataArr[2], start, end, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"            sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"            return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"        catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new DukeException(e + \"\\nData file not found.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Updates the storage file in hard disk with the given list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void write(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"            FileWriter fw \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"            int size \u003d tasks.size();","lastModifiedDate":"2023-01-25"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"                Task t \u003d tasks.get(i);","lastModifiedDate":"2023-01-25"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"                fw.write(t.formatStore());","lastModifiedDate":"2023-01-25"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"                fw.write(\"\\n\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"            fw.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(e + \"\\nUnable to write to data file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":120,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"HmuuMyatMoe":120}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a Deadline task,","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    //The deadline given.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Deadline with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Deadline(String name, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates deadline with three arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Deadline(String name, LocalDate end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [D] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this Deadline task.","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"        String toPrint \u003d String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"                super.toString(), Formatter.formatDatePrint(this.end));","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        return toPrint;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatStore() {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"D | \" + super.formatStore()","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"                + String.format(\" | %s\", Formatter.formatDateStore(this.end)));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents a task that starts and ends at a specific date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    //Start time","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate start;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    //End time","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Event with three arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param start The start date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Event with 4 arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param start The start date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Event(String name, LocalDate start, LocalDate end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [E] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this Event task.","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        String s \u003d Formatter.formatDatePrint(this.start);","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        String e \u003d Formatter.formatDatePrint(this.end);","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        String toPrint \u003d String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"                super.toString(), s, e);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"        return toPrint;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatStore() {","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        String s \u003d Formatter.formatDateStore(this.start);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        String e \u003d Formatter.formatDateStore(this.end);","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"E | \" + super.formatStore() + String.format(\" | %s | %s\", s, e));","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"    //name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    //track whether the class is marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Task with one argument given.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a task with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"        this(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void mark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a string representing the \u0027isDone\u0027 status.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return \"X\" if isDone is true, \" \" otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String getStatus() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"            return \"X\";","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string representation of the \u0027isDone\u0027 status and the name of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        String status \u003d this.getStatus();","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (String.format(\"[%s] %s\", status, this.name));","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatStore() {","lastModifiedDate":"2023-01-25"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (String.format(\"%s | %s\", status, this.name));","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":79}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the list containing tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    //An ArrayList to store the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates TaskList with no arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates TaskList with the given ArrayList.","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param taskList The list of our tasks fetched from hard drive storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns this list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The ArrayList containing the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"        return this.taskList;","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Adds tasks into the list and prints out completion message when done.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\" \" + task);","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Now you have \" + this.taskList.size() + \" task(s) in your list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Deletes task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of task to be deleted.","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void delete(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please enter a valid index.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task removed \u003d this.taskList.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"                \" \" + removed + \"\\nNow you have \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"                this.taskList.size() + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index number of the task given.","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void mark(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please enter a valid index.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.taskList.get(index).mark();","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\" \" + this.taskList.get(index) + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index number of the task given.","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void unmark(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \" +","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please enter a valid index.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.taskList.get(index).unmark();","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\" \" + this.taskList.get(index) + \"\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints all the tasks in the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void print() {","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"        int size \u003d this.taskList.size();","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(\"There are no items in the list.\\n\");","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"            return;","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"        for(int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"            String toPrint \u003d String.format(\"%d. %s\", (i + 1), this.taskList.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(toPrint);","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"\");","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":119}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents a task without any date/time attached.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates ToDo with one argument given.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates ToDo with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [T] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this ToDo task.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatStore() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"T | \" + super.formatStore());","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":46}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the Ui","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" * that handles interaction with user.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Scanner sc;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Ui.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out the welcome message onto the screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Hi! I am Duke. How may I help you today?\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out goodbye message onto screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void printBye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Reads input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The input string read.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out the given string to screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void print(String errMessage) {","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(errMessage + \"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":55}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Test the behavior of Deadline class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[D][ ] get food (by: 11 NOVEMBER 2024)\", new Deadline(\"get food\", ld).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"D | 0 | get food | 2024/11/11\", new Deadline(\"get food\", ld).formatStore());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":27}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Test the behavior of Event class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate start \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate end \u003d LocalDate.parse(\"2024/11/25\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[E][ ] school (from: 11 NOVEMBER 2024 to: 25 NOVEMBER 2024)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Event(\"school\", start, end).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate start \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate end \u003d LocalDate.parse(\"2024/11/25\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"E | 0 | school event | 2024/11/11 | 2024/11/25\",","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Event(\"school event\", start, end).formatStore());","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":31}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"get food\");","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[X] get food\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testUnMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"get food\");","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.unmark();","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[ ] get food\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testGetStatusUnmarked() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\" \", new Task(\"a\").getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testGetStatusMarked() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"X\", task.getStatus());","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[ ] get food\", new Task(\"get food\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"0 | get food\", new Task(\"get food\").formatStore());","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":44}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Tests the behavior of ToDo class.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[T][ ] get food\", new ToDo(\"get food\").toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"T | 0 | get food\", new ToDo(\"get food\").formatStore());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testGetStatus() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        ToDo task \u003d new ToDo(\"get food\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.mark();","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":26}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"todo buy food","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline do hw /by Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"event cca /from Jan 1 /to Jan 5","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"t","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"tdo drink water","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline a","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline /by","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline a /by","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"event a","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from /to","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /to 4","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from 4","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from 4 /to","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from /to","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from 2 /to 4","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"todo a","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"todo b","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 4","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"mark -1","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 8","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark -3","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 10","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 0","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"delete -5","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 9","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":40}}]
