[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"HmuuMyatMoe":21,"-":40}},{"path":"data/DukeList.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"D | 0 | read | 2023/02/08","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"E | 0 | camp | 2023/02/02 | 2023/03/03","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"T | 0 | a","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"T | 0 | b","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"T | 1 | c","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"T | 0 | d","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"D | 0 | a | 2023/11/09","lastModifiedDate":"2023-02-09"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"E | 0 | b | 2023/11/09 | 2023/11/09","lastModifiedDate":"2023-02-09"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"D | 0 | a | 2023/11/09","lastModifiedDate":"2023-02-09"}],"authorContributionMap":{"HmuuMyatMoe":9}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":" * A class that represents the container for the user\u0027s input or for duke\u0027s response,","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":" * it consists of an ImageView representing the user/duke icon and a Label containing","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":" * the user\u0027s input or duke\u0027s response.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":" * This container is to be displayed onto the screen.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * The label containing a string representing the user input or duke\u0027s response.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * The icon to be displayed, representing the user\u0027s icon or the duke\u0027s icon.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DialogBox.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param text A string that represents user\u0027s input or duke\u0027s response.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param img The user\u0027s or duke\u0027s icon.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        dialog.setMinHeight(Region.USE_PREF_SIZE);","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DialogBox where the ImageView is on the right and text on the left,","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"     * which represents the user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param text The user\u0027s input.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param img The user\u0027s icon.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A DialogBox representing the user\u0027s input message.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DialogBox where the ImageView is on the left and text on the right,","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"     * which represents the duke\u0027s response.","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param text Duke\u0027s response.","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param img Duke\u0027s icon.","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A DialogBox representing duke\u0027s response message.","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":90}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of Duke.","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Duke extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Parser parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Scene scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Image userIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Image dukeIcon \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeIcon.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dirPath The path to the directory that the file is stored in.","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param fileName The name of the storage file.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Duke(String dirPath, String fileName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.storage \u003d new Storage(dirPath, fileName);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.parser \u003d new Parser();","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"            tasks \u003d new TaskList(storage.read());","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"            ui.printMsg(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Stores the tasks in a file in hard drive.","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void store() {","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task[] t \u003d {new ToDo(\"a\")};","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.storage.write(this.tasks.getTaskList().toArray(t));","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Renders the starting stage to the screen.","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param stage The primary stage for this application","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     *              for the scene to be set.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"        //set up components","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"        //The container for the scrolling chat.","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane \u003d new ScrollPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setContent(this.dialogContainer);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.userInput \u003d new TextField();","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.sendButton \u003d new Button(\"Send\");","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane mainLayout \u003d new AnchorPane();","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"        mainLayout.getChildren().addAll(this.scrollPane, this.userInput, this.sendButton);","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scene \u003d new Scene(mainLayout);","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.setScene(this.scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"        //format the window to look as desired","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.setResizable(false);","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.setMinHeight(600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"        stage.setMinWidth(400.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"        mainLayout.setPrefSize(400.0, 600.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setPrefSize(385, 535);","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setVvalue(1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scrollPane.setFitToWidth(true);","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dialogContainer.setMinHeight(Region.USE_COMPUTED_SIZE);","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.userInput.setPrefWidth(325.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.sendButton.setPrefWidth(55.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"        //AnchorPane used to achieve desired layout.","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane.setTopAnchor(this.scrollPane, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane.setBottomAnchor(this.sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane.setRightAnchor(this.sendButton, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane.setLeftAnchor(this.userInput , 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"HmuuMyatMoe"},"content":"        AnchorPane.setBottomAnchor(this.userInput, 1.0);","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"HmuuMyatMoe"},"content":"        //A handler on the VBox that react to its own size changing and scrolling the ScrollPane down.","lastModifiedDate":"2023-02-02"},{"lineNumber":126,"author":{"gitId":"HmuuMyatMoe"},"content":"        //Scroll down to the end every time dialogContainer\u0027s height changes.","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dialogContainer.heightProperty().addListener(observable -\u003e scrollPane.setVvalue(1.0));","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"HmuuMyatMoe"},"content":"        //handle user input","lastModifiedDate":"2023-02-02"},{"lineNumber":130,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.sendButton.setOnMouseClicked((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"HmuuMyatMoe"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":132,"author":{"gitId":"HmuuMyatMoe"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.userInput.setOnAction((event) -\u003e {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"HmuuMyatMoe"},"content":"            handleUserInput();","lastModifiedDate":"2023-02-02"},{"lineNumber":136,"author":{"gitId":"HmuuMyatMoe"},"content":"        });","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and then appends them to the dialog container.","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"HmuuMyatMoe"},"content":"        String userText \u003d this.userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"HmuuMyatMoe"},"content":"        String dukeText \u003d getResponse(userText);","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"HmuuMyatMoe"},"content":"                DialogBox.getUserDialog(userText, this.userIcon),","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"HmuuMyatMoe"},"content":"                DialogBox.getDukeDialog(dukeText, this.dukeIcon)","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"HmuuMyatMoe"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":153,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":154,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":155,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Parses the user input to get a Command, executes the returned Command and","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"HmuuMyatMoe"},"content":"     * catches and handles DukeException if there is any thrown.","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":158,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The user input read.","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representing Duke\u0027s response to the user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":160,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":161,"author":{"gitId":"HmuuMyatMoe"},"content":"    protected String getResponse(String input) {","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"HmuuMyatMoe"},"content":"            Command cmd \u003d this.parser.parseCommand(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"HmuuMyatMoe"},"content":"            return cmd.execute(this.tasks, this.storage, this.ui);","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"HmuuMyatMoe"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-02"},{"lineNumber":167,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"HmuuMyatMoe":167,"-":2}},{"path":"src/main/java/duke/Formatter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a Formatter that formats given inputs.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Formatter {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Formats LocalDate to day month year format","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and returns the string representation of it.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param localDate The given LocalDate to be formatted.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return Returns the string representation of the formatted date.","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static String formatDateForPrint(LocalDate localDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        int day \u003d localDate.getDayOfMonth();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"        String month \u003d localDate.getMonth().toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        int year \u003d localDate.getYear();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        return String.format(\"%d %s %d\", day, month, year);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Formats LocalDate to yyyy/mm/dd format","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and returns the string representation of it.","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param localDate The given LocalDate to be formatted.","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return Returns the string representation of the formatted date.","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static String formatDateForStorage(LocalDate localDate) {","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        return localDate.format(dtf);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":33}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulation of a launcher class that represents","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" * the starting point of our application.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Starts the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param args A string array of arguments from the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static void main(String... args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":17}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" * A Graphical User Interface made using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Duke duke \u003d new Duke(\"./ip/data\", \"DukeList.txt\");","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Stages the primary stage onto the screen.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * This is the starting point of the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param stage The primary stage for this application.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(this.duke);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Stores data of the tasks in the local hard drive","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     * upon exiting the application.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void stop(){","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.duke.store();","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":45}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/UserIcon.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeIcon.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Initialise Duke and greets user.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param d A Duke instance.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"        String logo \u003d \" ____      _        \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|  _ \\\\ _  _| |   ___ \\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| | | | | | | |/ /  _  \\\\\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|___/ \\\\__|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"        String welcome \u003d \"Hello from\\n\" + logo;","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"        welcome +\u003d \"Hi! I am Duke. How may I help you today?\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dialogContainer.getChildren().add(","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"                DialogBox.getDukeDialog(welcome, this.dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Gets a response from Duke for the user input given and then","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     * gets one DialogBox containing the user input and another containing the response,","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * adds the two DialogBox to the Vbox container.","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Clear the user input at the end.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":73}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a command to add a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Task task;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates AddCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param task The task to be added into the list.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public AddCommand(Task task) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.task \u003d task;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Adds the given task to the taskList.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.add(this.task);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":34}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to exit the program.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out goodbye message.","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \"Bye! Hope to see you again soon!\";","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return True indicating that the program should exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":33}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a command.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Executes the command given.","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException If task is not executed successfully.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    public abstract String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns whether the command requires the program to exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return True if the program should exit, false otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-09"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"        return false;","lastModifiedDate":"2023-02-09"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    };","lastModifiedDate":"2023-02-09"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":31}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to delete a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DeleteCommand object.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    public DeleteCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Deletes the task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if given index is out of range.","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.delete(this.index);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":36}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to find tasks with a keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates FindCommand.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param keyword The keyword to search for in the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Finds the tasks that contain the given keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.find(this.keyword);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"HmuuMyatMoe":34}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to list out all tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out all tasks in the list.","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of the list of all the tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.print();","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":23}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to mark a task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates MarkCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be marked.","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public MarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException If given index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.markIsDone(this.index);","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":35}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.command;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the command to mark a task as not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int index;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates UnmarkCommand.","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    public UnmarkCommand(int index) {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks The ArrayList of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param storage The class that reads and write program data to hard drive.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param ui The class that handles interaction with the users.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if given index is out of bounds.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String execute(TaskList tasks, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        return tasks.unmarkIsDone(this.index);","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":36}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an exception specific to Duke.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates DukeException.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(\"OPPS! \" + message + \"\\nPlease try again.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string representation of the error message to be printed.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The error message string.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (super.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":25}},{"path":"src/main/java/duke/exception/IncompleteDescException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an IncompleteDescException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when description given is missing or incomplete.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class IncompleteDescException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates IncompleteDescException","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public IncompleteDescException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":16}},{"path":"src/main/java/duke/exception/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an InvalidInputException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when given input is invalid,","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" * for instance, command given does not exit.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates InvalidInputException.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":17}},{"path":"src/main/java/duke/exception/OutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.exception;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of OutOfBoundsException.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the exception to throw when indexes given are out of bounds.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class OutOfBoundsException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates OutOfBoundsException.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param message The error message.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public OutOfBoundsException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":16}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.parser;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.AddCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.ByeCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.Command;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.FindCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.MarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.command.UnmarkCommand;","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.IncompleteDescException;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.InvalidInputException;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a parser that parses the inputs given.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Parser {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    protected enum CommandEnum {","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        BYE, LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Checks if name of tasks is given in the given input","lastModifiedDate":"2023-02-09"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * by checking the length of String array of the split input","lastModifiedDate":"2023-02-09"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and checking that the portion of the given input behind the command name is not empty.","lastModifiedDate":"2023-02-09"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param splitInputs The given user input that was split into 2 sections using \" \".","lastModifiedDate":"2023-02-09"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param cmdType The type of the command given by user.","lastModifiedDate":"2023-02-09"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If there is no name of task given.","lastModifiedDate":"2023-02-09"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void checkName(String splitInputs[], String cmdType) throws IncompleteDescException {","lastModifiedDate":"2023-02-09"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (splitInputs.length \u003c\u003d 1 || splitInputs[1].isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-02-09"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"The description of a \" + cmdType + \" cannot be empty!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a new ToDo task and returns it.","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param splitInputs An array containing the input by the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The new ToDo task.","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If name of the task is not given.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ToDo getTodo(String[] splitInputs) throws IncompleteDescException {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkName(splitInputs, \"todo\");","lastModifiedDate":"2023-02-09"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        return new ToDo(splitInputs[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Parses the given string into a LocalDate object.","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param date The given string representation of the date to be parsed.","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The parsed LocalDate.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"    public static LocalDate parseDate(String date) {","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"        return LocalDate.parse(date, dtf);","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Finds the index of the given keyword","lastModifiedDate":"2023-02-09"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"     * in a section of the input given by user.","lastModifiedDate":"2023-02-09"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The section of the user input with the command name removed.","lastModifiedDate":"2023-02-09"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param keyword The keyword to be found.","lastModifiedDate":"2023-02-09"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param keywordType The type of keyword given (what the keyword represents).","lastModifiedDate":"2023-02-09"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The index of the given keyword in the given string.","lastModifiedDate":"2023-02-09"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If keyword is not found.","lastModifiedDate":"2023-02-09"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"    private int getKeywordIndex(String input, String keyword, String keywordType) throws IncompleteDescException {","lastModifiedDate":"2023-02-09"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"        int index \u003d input.indexOf(keyword);","lastModifiedDate":"2023-02-09"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0) {","lastModifiedDate":"2023-02-09"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please add the \" + keywordType);","lastModifiedDate":"2023-02-09"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"        return index;","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Extracts the name of the task from the given input","lastModifiedDate":"2023-02-09"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"     * using the indexes given.","lastModifiedDate":"2023-02-09"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The string to extract the name from.","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param startIndex The starting index of the name in input string.","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param endIndex The last index of the name in input string.","lastModifiedDate":"2023-02-09"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param nameType The task type of the given name.","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The extracted name.","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If no name can be found using the given indexes.","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String getName(String input, int startIndex, int endIndex, String nameType) throws IncompleteDescException {","lastModifiedDate":"2023-02-09"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"        String name \u003d input.substring(startIndex, endIndex).strip();","lastModifiedDate":"2023-02-09"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (name.isBlank()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"The description of a \" + nameType + \" cannot be empty!\");","lastModifiedDate":"2023-02-09"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"        return name;","lastModifiedDate":"2023-02-09"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Extracts date from the input string given","lastModifiedDate":"2023-02-09"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and parses it into a LocalDate object.","lastModifiedDate":"2023-02-09"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The input string to extract the date from.","lastModifiedDate":"2023-02-09"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param startIndex The starting index of the date in input string.","lastModifiedDate":"2023-02-09"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param endIndex The last index of the date in input string.","lastModifiedDate":"2023-02-09"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dateType The type of date extracted (what the date represents).","lastModifiedDate":"2023-02-09"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A LocalDate representation of the extracted date.","lastModifiedDate":"2023-02-09"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If no date can be found using the given indexes.","lastModifiedDate":"2023-02-09"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If given date is not in the yyyy/mm/dd format","lastModifiedDate":"2023-02-09"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                               or if the given date is not a valid date in the calendar.","lastModifiedDate":"2023-02-09"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate getLocalDate(String input, int startIndex, int endIndex, String dateType) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-02-09"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"        String date \u003d input.substring(startIndex, endIndex).strip();","lastModifiedDate":"2023-02-09"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (date.isBlank()) {","lastModifiedDate":"2023-02-09"},{"lineNumber":120,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new IncompleteDescException(","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please add the \" + dateType);","lastModifiedDate":"2023-02-09"},{"lineNumber":122,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":123,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":124,"author":{"gitId":"HmuuMyatMoe"},"content":"            LocalDate localDate \u003d Parser.parseDate(date);","lastModifiedDate":"2023-02-09"},{"lineNumber":125,"author":{"gitId":"HmuuMyatMoe"},"content":"            return localDate;","lastModifiedDate":"2023-02-09"},{"lineNumber":126,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":127,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"Please enter a valid date/time in \\\"yyyy/mm/dd\\\" format.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":130,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":131,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":132,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":133,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Checks whether the given dateInput is before the dateToCheckWith.","lastModifiedDate":"2023-02-09"},{"lineNumber":134,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dateInput The date we want to check.","lastModifiedDate":"2023-02-09"},{"lineNumber":135,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dateToCheckWith The date we are cross-checking against.","lastModifiedDate":"2023-02-09"},{"lineNumber":136,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dateType The type of dateInput given (what the dateInput represents).","lastModifiedDate":"2023-02-09"},{"lineNumber":137,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If dateInput is not before the dateToCheckWith.","lastModifiedDate":"2023-02-09"},{"lineNumber":138,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":139,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void checkDateIsBefore(LocalDate dateInput, LocalDate dateToCheckWith, String dateType) throws InvalidInputException {","lastModifiedDate":"2023-02-09"},{"lineNumber":140,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (dateInput.isBefore(dateToCheckWith)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":141,"author":{"gitId":"HmuuMyatMoe"},"content":"            String dateFormatted \u003d Formatter.formatDateForPrint(dateInput);","lastModifiedDate":"2023-02-09"},{"lineNumber":142,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2023-02-09"},{"lineNumber":143,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"The given \" + dateType + \" (yyyy/mm/dd) \" + dateFormatted + \" has passed.\");","lastModifiedDate":"2023-02-09"},{"lineNumber":144,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":145,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":146,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":147,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":148,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Checks whether the given endDate is after or the same as the startDate.","lastModifiedDate":"2023-02-09"},{"lineNumber":149,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param startDate The starting date.","lastModifiedDate":"2023-02-09"},{"lineNumber":150,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param endDate The end date.","lastModifiedDate":"2023-02-09"},{"lineNumber":151,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If endDate given is before startDate given.","lastModifiedDate":"2023-02-09"},{"lineNumber":152,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":153,"author":{"gitId":"HmuuMyatMoe"},"content":"    private void checkEndIsAfterStart(LocalDate startDate, LocalDate endDate) throws InvalidInputException {","lastModifiedDate":"2023-02-09"},{"lineNumber":154,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (endDate.isAfter(startDate)) {","lastModifiedDate":"2023-02-09"},{"lineNumber":155,"author":{"gitId":"HmuuMyatMoe"},"content":"            String dateFormatted \u003d Formatter.formatDateForPrint(startDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":156,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2023-02-09"},{"lineNumber":157,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"The given start date \" + dateFormatted + \" (yyyy/mm/dd) should be before the end date (yyyy/mm/dd).\");","lastModifiedDate":"2023-02-09"},{"lineNumber":158,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-02-09"},{"lineNumber":159,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":160,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":161,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-09"},{"lineNumber":162,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a new Deadline object and returns it.","lastModifiedDate":"2023-02-09"},{"lineNumber":163,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param splitInputs An array containing the input by the user.","lastModifiedDate":"2023-02-09"},{"lineNumber":164,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A new Deadline object.","lastModifiedDate":"2023-02-09"},{"lineNumber":165,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If name or due date/time or both is/are not provided.","lastModifiedDate":"2023-02-09"},{"lineNumber":166,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If due date/time is given in the wrong format.","lastModifiedDate":"2023-02-09"},{"lineNumber":167,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-09"},{"lineNumber":168,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Deadline getDeadline(String[] splitInputs) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-02-09"},{"lineNumber":169,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkName(splitInputs, \"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":170,"author":{"gitId":"HmuuMyatMoe"},"content":"        int endIndex \u003d getKeywordIndex(splitInputs[1], \"/by\", \"due date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":171,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":172,"author":{"gitId":"HmuuMyatMoe"},"content":"        String name \u003d getName(splitInputs[1], 0, endIndex, \"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":173,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate endLocalDate \u003d getLocalDate(splitInputs[1], endIndex + 3,","lastModifiedDate":"2023-02-09"},{"lineNumber":174,"author":{"gitId":"HmuuMyatMoe"},"content":"                splitInputs[1].length(), \"due date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":175,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkDateIsBefore(endLocalDate, LocalDate.now(), \"deadline\");","lastModifiedDate":"2023-02-09"},{"lineNumber":176,"author":{"gitId":"HmuuMyatMoe"},"content":"        return new Deadline(name, endLocalDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":177,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":178,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":179,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiate a new Event object and returns it.","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param splitInputs An array containing the input by the user.","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A new Event.","lastModifiedDate":"2023-01-26"},{"lineNumber":183,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If the name, start date/time or due date/time are not given.","lastModifiedDate":"2023-01-26"},{"lineNumber":184,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If any of the date/time are given","lastModifiedDate":"2023-01-26"},{"lineNumber":185,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                               in a format different from \"yyyy/MM/dd\".","lastModifiedDate":"2023-01-26"},{"lineNumber":186,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":187,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Event getEvent(String[] splitInputs) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-02-01"},{"lineNumber":188,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkName(splitInputs, \"event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":189,"author":{"gitId":"HmuuMyatMoe"},"content":"        int startIndex \u003d getKeywordIndex(splitInputs[1], \"/from\", \"start date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":190,"author":{"gitId":"HmuuMyatMoe"},"content":"        int endIndex \u003d getKeywordIndex(splitInputs[1], \"/to\", \"end date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":191,"author":{"gitId":"HmuuMyatMoe"},"content":"        String name \u003d getName(splitInputs[1], 0, startIndex, \"event\");","lastModifiedDate":"2023-02-09"},{"lineNumber":192,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":193,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate startLocalDate \u003d getLocalDate(splitInputs[1], startIndex + 5,","lastModifiedDate":"2023-02-09"},{"lineNumber":194,"author":{"gitId":"HmuuMyatMoe"},"content":"                endIndex, \"start date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":195,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate endLocalDate \u003d getLocalDate(splitInputs[1], endIndex + 3,","lastModifiedDate":"2023-02-09"},{"lineNumber":196,"author":{"gitId":"HmuuMyatMoe"},"content":"                splitInputs[1].length(), \"end date/time\");","lastModifiedDate":"2023-02-09"},{"lineNumber":197,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":198,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkEndIsAfterStart(startLocalDate, endLocalDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":199,"author":{"gitId":"HmuuMyatMoe"},"content":"        checkDateIsBefore(endLocalDate, LocalDate.now(), \"end date\");","lastModifiedDate":"2023-02-09"},{"lineNumber":200,"author":{"gitId":"HmuuMyatMoe"},"content":"        return new Event(name, startLocalDate, endLocalDate);","lastModifiedDate":"2023-02-09"},{"lineNumber":201,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":202,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":203,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":204,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Parses the given string into the correct command.","lastModifiedDate":"2023-01-25"},{"lineNumber":205,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param input The string input given by the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":207,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A Command representing the command given.","lastModifiedDate":"2023-01-26"},{"lineNumber":208,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws IncompleteDescException If command given is incomplete.","lastModifiedDate":"2023-01-26"},{"lineNumber":209,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws InvalidInputException If command is invalid.","lastModifiedDate":"2023-01-26"},{"lineNumber":210,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":211,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Command parseCommand(String input) throws IncompleteDescException, InvalidInputException {","lastModifiedDate":"2023-02-01"},{"lineNumber":212,"author":{"gitId":"HmuuMyatMoe"},"content":"        String[] splitInputs \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-27"},{"lineNumber":213,"author":{"gitId":"HmuuMyatMoe"},"content":"        CommandEnum commandType;","lastModifiedDate":"2023-01-25"},{"lineNumber":214,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":215,"author":{"gitId":"HmuuMyatMoe"},"content":"            commandType \u003d CommandEnum.valueOf(splitInputs[0].toUpperCase());","lastModifiedDate":"2023-01-27"},{"lineNumber":216,"author":{"gitId":"HmuuMyatMoe"},"content":"            switch (commandType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":217,"author":{"gitId":"HmuuMyatMoe"},"content":"            case BYE:","lastModifiedDate":"2023-01-25"},{"lineNumber":218,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":219,"author":{"gitId":"HmuuMyatMoe"},"content":"            case LIST:","lastModifiedDate":"2023-01-25"},{"lineNumber":220,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-25"},{"lineNumber":221,"author":{"gitId":"HmuuMyatMoe"},"content":"            case MARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":222,"author":{"gitId":"HmuuMyatMoe"},"content":"                if (splitInputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":223,"author":{"gitId":"HmuuMyatMoe"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-27"},{"lineNumber":224,"author":{"gitId":"HmuuMyatMoe"},"content":"                            \"Please give the index of the item to be marked.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":225,"author":{"gitId":"HmuuMyatMoe"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":226,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new MarkCommand(Integer.parseInt(splitInputs[1]) - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"HmuuMyatMoe"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-25"},{"lineNumber":228,"author":{"gitId":"HmuuMyatMoe"},"content":"                if (splitInputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":229,"author":{"gitId":"HmuuMyatMoe"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"HmuuMyatMoe"},"content":"                            \"Please give the index of the item to be unmarked.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"HmuuMyatMoe"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":232,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new UnmarkCommand(Integer.parseInt(splitInputs[1]) - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"HmuuMyatMoe"},"content":"            case DELETE:","lastModifiedDate":"2023-01-25"},{"lineNumber":234,"author":{"gitId":"HmuuMyatMoe"},"content":"                if (splitInputs.length \u003c\u003d 1) {","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"HmuuMyatMoe"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-27"},{"lineNumber":236,"author":{"gitId":"HmuuMyatMoe"},"content":"                            \"Please give the index of the item to be deleted.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":237,"author":{"gitId":"HmuuMyatMoe"},"content":"                }","lastModifiedDate":"2023-01-25"},{"lineNumber":238,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new DeleteCommand(Integer.parseInt(splitInputs[1]) - 1);","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"HmuuMyatMoe"},"content":"            case TODO:","lastModifiedDate":"2023-01-25"},{"lineNumber":240,"author":{"gitId":"HmuuMyatMoe"},"content":"                Task task \u003d this.getTodo(splitInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":241,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new AddCommand(task);","lastModifiedDate":"2023-01-25"},{"lineNumber":242,"author":{"gitId":"HmuuMyatMoe"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-25"},{"lineNumber":243,"author":{"gitId":"HmuuMyatMoe"},"content":"                Deadline deadline \u003d this.getDeadline(splitInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":244,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new AddCommand(deadline);","lastModifiedDate":"2023-01-25"},{"lineNumber":245,"author":{"gitId":"HmuuMyatMoe"},"content":"            case EVENT:","lastModifiedDate":"2023-01-25"},{"lineNumber":246,"author":{"gitId":"HmuuMyatMoe"},"content":"                Event event \u003d this.getEvent(splitInputs);","lastModifiedDate":"2023-02-01"},{"lineNumber":247,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new AddCommand(event);","lastModifiedDate":"2023-01-25"},{"lineNumber":248,"author":{"gitId":"HmuuMyatMoe"},"content":"            case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":249,"author":{"gitId":"HmuuMyatMoe"},"content":"                return new FindCommand(splitInputs[1]);","lastModifiedDate":"2023-01-28"},{"lineNumber":250,"author":{"gitId":"HmuuMyatMoe"},"content":"            default:","lastModifiedDate":"2023-01-25"},{"lineNumber":251,"author":{"gitId":"HmuuMyatMoe"},"content":"                throw new InvalidInputException(","lastModifiedDate":"2023-01-25"},{"lineNumber":252,"author":{"gitId":"HmuuMyatMoe"},"content":"                        \"I\u0027m sorry, there is no such command.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":253,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":254,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IllegalArgumentException i) {","lastModifiedDate":"2023-01-25"},{"lineNumber":255,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new InvalidInputException(","lastModifiedDate":"2023-01-25"},{"lineNumber":256,"author":{"gitId":"HmuuMyatMoe"},"content":"                    \"I\u0027m sorry, there is no such command.\");","lastModifiedDate":"2023-02-01"},{"lineNumber":257,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":258,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":259,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":259}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.storage;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.File;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents the class that reads and writes to the storage file in the hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Storage {","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String dirPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String filePath;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    private File myFile;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param dirPath The path to the directory that the file is stored in.","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param fileName The name of the storage file.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Storage(String dirPath, String fileName) {","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.dirPath \u003d dirPath;","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.fileName \u003d fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.filePath \u003d dirPath + \"/\" + this.fileName;","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Creates file at the specified file path if it does not already exist.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void createFile() {","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        File dir \u003d new File(this.dirPath);","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (!dir.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"            dir.mkdir();","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"        //create file if it does not already exist","lastModifiedDate":"2023-01-24"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"            myFile \u003d new File(this.filePath);","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (!myFile.exists()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"                myFile.createNewFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(e + \"\\nNew storage file cannot be created.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Reads data stored in the hard disk.","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return An ArrayList containing existing tasks stored in the storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws DukeException if file to be read cannot be found.","lastModifiedDate":"2023-01-25"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ArrayList\u003cTask\u003e read() throws DukeException {","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"            this.createFile();","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"            Scanner sc \u003d new Scanner(myFile);","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"            while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"                String data \u003d sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"                String[] dataArr \u003d data.split(\" \\\\| \");","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"                String type \u003d dataArr[0];","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"                boolean isDone \u003d dataArr[1].equals(\"1\");","lastModifiedDate":"2023-01-24"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"                if (type.equals(\"T\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"                    ToDo t \u003d new ToDo(dataArr[2], isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"                } else if (type.equals(\"D\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate end \u003d Parser.parseDate(dataArr[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Deadline d \u003d new Deadline(dataArr[2], end, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(d);","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"                } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate start \u003d Parser.parseDate(dataArr[3]);","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"                    LocalDate end \u003d Parser.parseDate(dataArr[4]);","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"                    Event e \u003d new Event(dataArr[2], start, end, isDone);","lastModifiedDate":"2023-01-25"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"                    tasks.add(e);","lastModifiedDate":"2023-01-25"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"                }","lastModifiedDate":"2023-01-24"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"            sc.close();","lastModifiedDate":"2023-01-24"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"            return tasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new DukeException(e + \"\\nData file not found.\");","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Updates the storage file in hard disk with the given list of tasks.","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param tasks Varargs of tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void write(Task... tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"        try {","lastModifiedDate":"2023-01-24"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"            FileWriter fileWriter \u003d new FileWriter(this.filePath);","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"            for (Task t:tasks) {","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"                fileWriter.write(t.formatForStorage());","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"            fileWriter.close();","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"            System.out.println(e + \"\\nUnable to write to data file.\");","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-24"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"HmuuMyatMoe":116}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a Deadline task,","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * a task that needs to be done before a specific date/time.","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    //The deadline given.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Deadline with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Deadline(String name, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates deadline with three arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of deadline.","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Deadline(String name, LocalDate end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [D] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this Deadline task.","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"        String toPrint \u003d String.format(\"[D]%s (by: %s)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"                super.toString(), Formatter.formatDateForPrint(this.end));","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"        return toPrint;","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"D | \" + super.formatForStorage()","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"                + String.format(\" | %s\", Formatter.formatDateForStorage(this.end)));","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":60}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.Formatter;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of an Event task.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents a task that starts and ends at a specific date/time.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    //Start time","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate start;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    //End time","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    private LocalDate end;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Event with three arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param start The start date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Event(String name, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Event with 4 arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param start The start date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param end The end date/time of event.","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Event(String name, LocalDate start, LocalDate end, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [E] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this Event task.","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        String s \u003d Formatter.formatDateForPrint(this.start);","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        String e \u003d Formatter.formatDateForPrint(this.end);","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"        String toPrint \u003d String.format(\"[E]%s (from: %s to: %s)\",","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"                super.toString(), s, e);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"        return toPrint;","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        String s \u003d Formatter.formatDateForStorage(this.start);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        String e \u003d Formatter.formatDateForStorage(this.end);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"E | \" + super.formatForStorage() + String.format(\" | %s | %s\", s, e));","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":70}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a task.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"    //name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    private String name;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    //track whether the class is marked as done.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    private boolean isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Task with one argument given.","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Task(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates a task with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Task(String name, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"        this(name);","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void markIsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void unmarkIsDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a string representing the \u0027isDone\u0027 status.","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return \"X\" if isDone is true, \" \" otherwise.","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String isDone() {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (this.isDone) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"            return \"X\";","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \" \";","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string representation of the \u0027isDone\u0027 status and the name of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The string representation of this task.","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        String status \u003d this.isDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (String.format(\"[%s] %s\", status, this.name));","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (String.format(\"%s | %s\", status, this.name));","lastModifiedDate":"2023-01-24"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Searches for given keyword string in the name of this task.","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param keyword The given keyword string.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return True if name contains keyword, false otherwise.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"    public boolean containKeyword(String keyword) {","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"        String formatName \u003d \" \" + this.name.toUpperCase() + \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"        return formatName.contains(keyword.toUpperCase());","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":90}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import duke.exception.OutOfBoundsException;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the list containing tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class TaskList {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * An ArrayList to store the tasks.","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates TaskList with no arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates TaskList with the given ArrayList.","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param taskList The list of our tasks fetched from hard drive storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns this list of tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The ArrayList containing the tasks.","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"        return this.tasks;","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Adds tasks into the list and prints out completion message when done.","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String add(Task task) {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"        String output \u003d \"Got it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have \"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"                + this.tasks.size() + \" task(s) in your list.\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"        return output;","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Deletes task at the given index.","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index of task to be deleted.","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success or failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String delete(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"HmuuMyatMoe"},"content":"                    + \"Please enter a valid index.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task removed \u003d this.tasks.remove(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \"Noted. I\u0027ve removed this task:\\n \" + \" \"","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"HmuuMyatMoe"},"content":"                + removed + \"\\nNow you have \" + this.tasks.size()","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \" task(s) in the list.\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as done.","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index number of the task given.","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success of failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String markIsDone(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"HmuuMyatMoe"},"content":"                    + \"Please enter a valid index.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.tasks.get(index).markIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n \"","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"HmuuMyatMoe"},"content":"                + this.tasks.get(index) + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Marks the task at the given index as not done.","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param index The index number of the task given.","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string message to signify the success of failure of task executed.","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @throws OutOfBoundsException If index given is less than 0","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"HmuuMyatMoe"},"content":"     *                              or more than the index of the last list element.","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String unmarkIsDone(int index) throws OutOfBoundsException {","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (index \u003c 0 || index \u003e\u003d this.tasks.size()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"HmuuMyatMoe"},"content":"            throw new OutOfBoundsException(\"Item at given index does not exist! \"","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"HmuuMyatMoe"},"content":"                    + \"Please enter a valid index.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.tasks.get(index).unmarkIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"HmuuMyatMoe"},"content":"        return \"OK, I\u0027ve marked this task as not done:\\n \"","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"HmuuMyatMoe"},"content":"                + this.tasks.get(index) + \"\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Appends all the tasks in the list into a string.","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":112,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of the list of all the tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String print() {","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"HmuuMyatMoe"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"HmuuMyatMoe"},"content":"            return \"There are no items in the list.\\n\";","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"HmuuMyatMoe"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"HmuuMyatMoe"},"content":"        sb.append(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"HmuuMyatMoe"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"HmuuMyatMoe"},"content":"            sb.append(String.format(\"\\n%d. %s\", (i + 1), this.tasks.get(i)));","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"HmuuMyatMoe"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":126,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Searches for tasks with names that contain the given keyword","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"HmuuMyatMoe"},"content":"     * and prints them out.","lastModifiedDate":"2023-01-28"},{"lineNumber":130,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":131,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-01-28"},{"lineNumber":132,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The results of the search.","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String find(String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"HmuuMyatMoe"},"content":"        int size \u003d this.tasks.size();","lastModifiedDate":"2023-01-28"},{"lineNumber":136,"author":{"gitId":"HmuuMyatMoe"},"content":"        int currIndex \u003d 0;","lastModifiedDate":"2023-01-28"},{"lineNumber":137,"author":{"gitId":"HmuuMyatMoe"},"content":"        int printIndex \u003d 1;","lastModifiedDate":"2023-02-02"},{"lineNumber":138,"author":{"gitId":"HmuuMyatMoe"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"HmuuMyatMoe"},"content":"        sb.append(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"HmuuMyatMoe"},"content":"        while (currIndex \u003c size) {","lastModifiedDate":"2023-01-28"},{"lineNumber":141,"author":{"gitId":"HmuuMyatMoe"},"content":"            Task curr \u003d this.tasks.get(currIndex);","lastModifiedDate":"2023-01-28"},{"lineNumber":142,"author":{"gitId":"HmuuMyatMoe"},"content":"            if (curr.containKeyword(\" \" + keyword + \" \")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":143,"author":{"gitId":"HmuuMyatMoe"},"content":"                sb.append(String.format(\"\\n%d. %s\", printIndex, curr));","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"HmuuMyatMoe"},"content":"                printIndex++;","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"HmuuMyatMoe"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"HmuuMyatMoe"},"content":"            currIndex++;","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"HmuuMyatMoe"},"content":"        if (printIndex \u003d\u003d 1) {","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"HmuuMyatMoe"},"content":"            return \"None of the items in your list matches with \\\"\" + keyword + \"\\\"\";","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"HmuuMyatMoe"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"HmuuMyatMoe"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":153,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":153}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of a ToDo task.","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":" * Represents a task without any date/time attached.","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates ToDo with one argument given.","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates ToDo with two arguments given.","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param name The name of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @param isDone Status of the task.","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    public ToDo(String name, boolean isDone) {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"        super(name, isDone);","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns the string with a [T] icon representing this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this ToDo task.","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Returns a formatted string representation of this task for storage.","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return A string representation of this task.","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String formatForStorage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        return (\"T | \" + super.formatForStorage());","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":46}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.ui;","lastModifiedDate":"2023-01-25"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":" * Encapsulates the related fields and behavior of the Ui","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":" * that handles interaction with user.","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"public class Ui {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    private Scanner scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Instantiates Ui.","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public Ui() {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        this.scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out the welcome message onto the screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void printWelcome() {","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Hi! I am Duke. How may I help you today?\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out goodbye message onto screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void printBye() {","lastModifiedDate":"2023-01-25"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Reads input from the user.","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"     *","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"     * @return The input string read.","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"        return this.scanner.nextLine();","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Prints out the given string to screen.","lastModifiedDate":"2023-01-25"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-01-25"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void printMsg(String errMessage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"        System.out.println(errMessage + \"\\n\");","lastModifiedDate":"2023-01-25"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"HmuuMyatMoe":55}},{"path":"src/main/resources/images/Credit.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"All images used are taken from https://www.flaticon.com/","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"DukeIcon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/apple\" title\u003d\"apple icons\"\u003eApple icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"UserIcon.png : \u003ca href\u003d\"https://www.flaticon.com/free-icons/cloudy\" title\u003d\"cloudy icons\"\u003eCloudy icons created by Freepik - Flaticon\u003c/a\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":3}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"HmuuMyatMoe":19}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Test the behavior of Deadline class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of toString().","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[D][ ] get food (by: 11 NOVEMBER 2024)\",","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Deadline(\"get food\", ld).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of formatForStorage().","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate ld \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"D | 0 | get food | 2024/11/11\",","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Deadline(\"get food\", ld).formatForStorage());","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":35}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":" * Test the behavior of Event class.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"public class EventTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of toString().","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate start \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate end \u003d LocalDate.parse(\"2024/11/25\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[E][ ] school (from: 11 NOVEMBER 2024 to: 25 NOVEMBER 2024)\",","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Event(\"school\", start, end).toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of formatForStorage().","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"        DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"yyyy/MM/dd\");","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate start \u003d LocalDate.parse(\"2024/11/11\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"        LocalDate end \u003d LocalDate.parse(\"2024/11/25\", dtf);","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"E | 0 | school event | 2024/11/11 | 2024/11/25\",","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Event(\"school event\", start, end).formatForStorage());","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":37}},{"path":"src/test/java/duke/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of mark().","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testMark() {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"get food\");","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.markIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[X] get food\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of unmark().","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testUnmark() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"get food\");","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.markIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.unmarkIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[ ] get food\", task.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of isDone() when a task is not marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void isDone_unmarked_whiteSpace() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\" \", new Task(\"a\").isDone());","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of isDone() when a task is marked.","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void isDone_marked_markedX() {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"HmuuMyatMoe"},"content":"        Task task \u003d new Task(\"a\");","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"HmuuMyatMoe"},"content":"        task.markIsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"X\", task.isDone());","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of toString().","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[ ] get food\",","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Task(\"get food\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of formatForStorage().","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"0 | get food\",","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"HmuuMyatMoe"},"content":"                new Task(\"get food\").formatForStorage());","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":64}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"package duke.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":" * Tests the behavior of ToDo class.","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of toString().","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"[T][ ] get food\",","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"                new ToDo(\"get food\").toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"    /**","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"     * Test the behaviour of formatForStorage().","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"     */","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"    @Test","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"    public void testFormatStore() {","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"        assertEquals(\"T | 0 | get food\",","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"                new ToDo(\"get food\").formatForStorage());","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"HmuuMyatMoe":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"HmuuMyatMoe"},"content":"todo buy food","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline do hw /by Monday","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"HmuuMyatMoe"},"content":"event cca /from Jan 1 /to Jan 5","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"HmuuMyatMoe"},"content":"t","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"HmuuMyatMoe"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"HmuuMyatMoe"},"content":"tdo drink water","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline a","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline /by","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"HmuuMyatMoe"},"content":"deadline a /by","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"HmuuMyatMoe"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"HmuuMyatMoe"},"content":"event a","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from /to","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /to 4","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from 4","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"HmuuMyatMoe"},"content":"event a /from 4 /to","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from /to","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"HmuuMyatMoe"},"content":"event /from 2 /to 4","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"HmuuMyatMoe"},"content":"todo a","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"HmuuMyatMoe"},"content":"todo b","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 4","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"HmuuMyatMoe"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"HmuuMyatMoe"},"content":"mark -1","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"HmuuMyatMoe"},"content":"mark 8","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 0","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark -3","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"HmuuMyatMoe"},"content":"unmark 10","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 0","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"HmuuMyatMoe"},"content":"delete -5","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"HmuuMyatMoe"},"content":"delete 9","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"HmuuMyatMoe"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"HmuuMyatMoe":40}}]
