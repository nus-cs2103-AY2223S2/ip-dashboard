[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    mainClassName \u003d \"duke.gui.Launcher\"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"jar {","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    manifest {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        attributes(","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"                \u0027Main-Class\u0027: \u0027duke.gui.Launcher\u0027","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        )","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    archiveVersion \u003d \"v0.2\"","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"checkstyle {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Huggenguggen":29,"-":39}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"## Description","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"---","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"A virtual assistant for tracking tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"![](Ui.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"---","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"### Adding Task","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"- You can add as a task of 3 possible types, Todo/Event/Deadline to `duke.txt`.","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"### Delete Task","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"- You can delete tasks from the list.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"### List Task","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"- You can list all tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"### Find Task","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"- You can find your task by title.","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"### Sorting tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"- Your tasks will be stored onto hard disk in the file `duke.txt` in the `data` folder. ","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"- Data from this file will be loaded upon start up.","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"### Exit the program","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"- You can close the GUI by typing `bye`.","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"---","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"### `todo` - Add todo to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to add a todo with description provided.","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"To add a **Todo**, type in ","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"todo {title}","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"todo read book","lastModifiedDate":"2023-02-07"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"![](Ui.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"### `deadline` - Add deadline to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to add a deadline with description and date provided.","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"To add a **Deadline**, type in ","lastModifiedDate":"2023-02-07"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"deadline {title} /by {date}","lastModifiedDate":"2023-02-07"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"where date is in the format `dd/MM/yyyy HHmm`","lastModifiedDate":"2023-02-07"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"deadline return book /by 03/05/2023 0800","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"![](deadline.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"### `event` - Add event to the list","lastModifiedDate":"2023-02-07"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to add a event with description and start and end date provided.","lastModifiedDate":"2023-02-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"To add an **Event**, type in ","lastModifiedDate":"2023-02-07"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"event {title} /from {date} /to {date}","lastModifiedDate":"2023-02-07"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"where date is in the format `dd/MM/yyyy HHmm`","lastModifiedDate":"2023-02-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"event meet friends /from 03/04/2023 0800 /to 03/04/2023 1000","lastModifiedDate":"2023-02-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"![](event.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"### `delete` - delete item from list","lastModifiedDate":"2023-02-07"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to delete a task at index provided.","lastModifiedDate":"2023-02-07"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"To **delete** a task, ","lastModifiedDate":"2023-02-07"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"delete {index}","lastModifiedDate":"2023-02-07"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"delete 1","lastModifiedDate":"2023-02-07"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"![](delete.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"### `list` - list all items","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to list all tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"To **list** all available tasks,","lastModifiedDate":"2023-02-07"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"list ","lastModifiedDate":"2023-02-07"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"![](list.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"### `mark` - mark an item as done","lastModifiedDate":"2023-02-07"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to mark a task as done.","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"To **mark** a task, ","lastModifiedDate":"2023-02-07"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"mark {index}","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"mark 1","lastModifiedDate":"2023-02-07"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"![](mark.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"### `unmark` - unmark an item ","lastModifiedDate":"2023-02-07"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to unmark a task that was previously marked as done.","lastModifiedDate":"2023-02-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"- To **unmark** a task, ","lastModifiedDate":"2023-02-07"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"unmark {index}","lastModifiedDate":"2023-02-07"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"unmark 1","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"![](unmark.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"### `find` - find a task","lastModifiedDate":"2023-02-07"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"Inform Ai-chan to find tasks whose title match the search term.","lastModifiedDate":"2023-02-07"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"- To **find** tasks, ","lastModifiedDate":"2023-02-07"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"find {search term}","lastModifiedDate":"2023-02-07"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"find book","lastModifiedDate":"2023-02-07"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"![](find.png)","lastModifiedDate":"2023-02-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"### Storing tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"Your tasks will automatically be stored in a `duke.txt` file found in the `data` folder.","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"Example of data stored on file:","lastModifiedDate":"2023-02-07"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"[D] | 0 | return book | 03/05/2023 0800","lastModifiedDate":"2023-02-07"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"[E] | 0 | meet friends | 03/04/2023 0800-03/04/2023 1000","lastModifiedDate":"2023-02-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"### Exit the program","lastModifiedDate":"2023-02-07"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"Say goodbye to Ai-chan and exit the program.","lastModifiedDate":"2023-02-07"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"Example of usage:","lastModifiedDate":"2023-02-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"bye","lastModifiedDate":"2023-02-07"},{"lineNumber":169,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"Expected Outcome:","lastModifiedDate":"2023-02-07"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"Program will close.","lastModifiedDate":"2023-02-07"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-07"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"--- ","lastModifiedDate":"2023-02-07"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"Credit to Zetta Zero for the [art](https://www.youtube.com/watch?v\u003d1A5lRjr4bDg\u0026ab_channel\u003dZettaZero) for Ai-chan","lastModifiedDate":"2023-02-07"}],"authorContributionMap":{"Huggenguggen":147,"-":29}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":" * Main program of Duke program.","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":" *","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * @author Yu Heng","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    private final String LINE_BREAK \u003d \"\\n\\t ^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^\\n\";","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    private boolean hasGui;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor method for Duke Chatbot.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    public Duke() {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        storage \u003d new Storage();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"            storage.loadData(taskList);","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"     * Set Gui. If true, console off.","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"     * @param hasGui","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"    public void setGui(boolean hasGui) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        this.hasGui \u003d hasGui;","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     * Main Method to call Duke.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        duke.setGui(true);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"        duke.run();","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"     * Gets reply from bot to display in GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"     * @param input input from user.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"     * @return reply message","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"        String response;","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"            response \u003d Parser.parse(input, taskList, ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"            assert response !\u003d null : \"Response is null\";","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"            storage.writeToData(taskList.itemsToData());","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"            return response;","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"     * Get greeting from UI for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"     * @return greeting","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"    public String getGreeting() {","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        return ui.guiGreet();","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"     * Run method to start Duke. Initializes scanner and parser","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"     * and contains main loop for commands.","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"    private void run() {","lastModifiedDate":"2023-01-17"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"        ui.greet();","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        Scanner usrInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"        Parser parser \u003d new Parser(usrInput);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        while (usrInput.hasNextLine()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"            try {","lastModifiedDate":"2023-01-14"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"                parser.parse_cmds(taskList, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"                storage.writeToData(taskList.itemsToData());","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-14"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"                System.out.println(LINE_BREAK + \"\\t \" + e.getMessage() + \"\\n\" + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-13"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Huggenguggen":99,"-":3}},{"path":"src/main/java/duke/exception/AlreadyMarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":" * Represents an exception where a task is already marked.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"public class AlreadyMarkedException extends DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyMarkedException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyMarkedException(String message) {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"        super(message);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyMarkedException(Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        super(cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyMarkedException(String message, Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":22}},{"path":"src/main/java/duke/exception/AlreadyUnmarkedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":" * Represents an exception where the task is already unmarked.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"public class AlreadyUnmarkedException extends DukeException {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyUnmarkedException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyUnmarkedException(String message) {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"        super(message);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyUnmarkedException(Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        super(cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public AlreadyUnmarkedException(String message, Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":22}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.exception;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":" * Represents Exceptions arising due to Duke logic.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"        super(message);","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    public DukeException(Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        super(cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-01-14"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        super(message, cause);","lastModifiedDate":"2023-01-14"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":22}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.gui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":" * Represents a dialog box with Imageview for face and label for text.","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"     * Set the text and image based on the arguments into the dialog box.","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"     * @param text text to display in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     * @param img  image to display in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        loadFxml();","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"        dialog.setPrefWidth(350);","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        dialog.setStyle(\"-fx-border-color: #349beb; -fx-border-width: 3px; -fx-border-style: solid;\"","lastModifiedDate":"2023-02-07"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"                + \"-fx-border-radius: 5px;\");","lastModifiedDate":"2023-02-07"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * Load the style from DialogBox.fxml and set the controller to this instance and load it.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     * Print out any IOException.","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    private void loadFxml() {","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    private void flip() {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     * Return user Dialog Box with the text and image in it.","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"     * @param text text to be print out in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"     * @param img  image to be display in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"     * @return DialogBox with the text and image in it","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        DialogBox usrDialog \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-07"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        return usrDialog;","lastModifiedDate":"2023-02-07"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"     * Return Ai-chan Dialog Box with the text and image in it. Invert the dialog object around the vertical axis.","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"     * @param text text to be print out in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"     * @param img  image to be display in dialog box","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"     * @return DialogBox with the text and image in it","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"    public static DialogBox getBotDialog(String text, Image img) {","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"        DialogBox db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        db.flip();","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"        return db;","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":91}},{"path":"src/main/java/duke/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.gui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":" * Launcher class for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"public class Launcher {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"     * Main program starts here.","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"     * @param args user input from GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":18}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.gui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-07"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":" * GUI for Duke using FXML.","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"     * Where the program will run when starting up for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"     * @param stage the primary stage for this application, onto which the application scene can be set.","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/bot.PNG\")));","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"            stage.setTitle(\"Ai-Chan\");","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"            stage.show();","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":40}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.gui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.concurrent.TimeUnit;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import duke.Duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" * Controller for MainWindow.","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"    private Duke duke;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    private Image botImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/bot.PNG\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"     * Initialise the scrollPane.","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * Set Duke object to current duke and print the display message to the user with the dukeImage.","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"     * @param d Duke object to be stored","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        duke \u003d d;","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        dialogContainer.getChildren().add(DialogBox.getBotDialog(d.getGreeting(), botImage));","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    @FXML","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"    private void handleUserInput() throws Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"        showDialogueBoxes(input, response);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        checkExit(response);","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"     * Handle dialogue boxes visuals.","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * @param usrInput user input.","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     * @param response response from Ai-chan.","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    private void showDialogueBoxes(String usrInput, String response) {","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"                DialogBox.getUserDialog(usrInput, userImage),","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"                DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"        );","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"     * Check if response needs an exit.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"     * @param response response from Ai-chan.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"    private void checkExit(String response) throws Exception {","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        if (response.equals(\"\\t Bye. See you next time! :)\\n\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"            dialogContainer.getChildren().add(","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"                    DialogBox.getBotDialog(response, botImage)","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"            );","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"            TimeUnit.MILLISECONDS.sleep(800);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"            Platform.exit();","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":87}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.parser;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" * Parser class","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":" * To process the data in String format","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"public class Parser {","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    private Scanner userIn;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor method for Parser.","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     * @param userIn Scanner object that takes in user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    public Parser(Scanner userIn) {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        this.userIn \u003d userIn;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"     * Main method for parsing commands.","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList TaskList containing list of all tasks in the program.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui ui to show user messages.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException if there is an error (usually user input error).","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    public void parse_cmds(TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"        String currIn \u003d userIn.nextLine().trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        String[] curr \u003d new String[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"        if (currIn.contains(\"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d currIn.split(\"/by\"); //split into title and time-related","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currIn.contains(\"/from\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d currIn.split(\"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d new String[]{currIn};","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        String[] currTitle \u003d curr[0].split(\" \"); //split title by word","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        if (currIn.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"            taskList.end(ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currIn.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"            ui.print(taskList);","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"            taskList.mark(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"            taskList.unmark(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"            taskList.addToDo(curr, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"            taskList.addDeadline(curr, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"            taskList.addEvent(curr, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"            taskList.deleteTask(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"            taskList.findTask(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Hmmm, I don\u0027t understand what you want to do\");","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"     * Process string data and return appropriate command.","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList taskList containing tasks","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui process and return appropriate UI.","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representing command","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"    public static String parse(String input, TaskList taskList, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"        String currIn \u003d input;","lastModifiedDate":"2023-01-31"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        String[] curr \u003d new String[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"        if (currIn.contains(\"/by\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d currIn.split(\"/by\"); //split into title and time-related","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currIn.contains(\"/from\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d currIn.split(\"/from\");","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"            curr \u003d new String[]{currIn};","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        String[] currTitle \u003d curr[0].split(\" \"); //split title by word","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"        if (currIn.equals(\"bye\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"            return \"\\t Bye. See you next time! :)\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currIn.equals(\"list\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"            return ui.guiPrint(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"mark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiMark(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"unmark\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiUnmark(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"todo\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiAddToDo(curr, ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"deadline\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiAddDeadline(curr, ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"event\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiAddEvent(curr, ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"delete\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiDeleteTask(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"        } else if (currTitle[0].equals(\"find\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"            return taskList.guiFindTask(currTitle, ui);","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Hmmm, I don\u0027t understand what you want to do\");","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":105}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.storage;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.io.File;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":" * Class for handling storing of tasks.","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"public class Storage {","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor method for Storage.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"    public Storage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"     * Method to load data from hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList TaskList to contain list of tasks loaded from hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"     * @throws IOException If there is an error retrieving the file.","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    public void loadData(TaskList taskList) throws IOException {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"            Scanner in \u003d new Scanner(Paths.get(\"data\", \"duke.txt\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"            while (in.hasNextLine()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"                String line \u003d in.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"                assert line !\u003d null : \"Line is null\";","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"                parse_data(line, taskList);","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"            File file \u003d new File(\"data/duke.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"            fw.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     * Method for writing String to file on hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"     * @param newData data to be written.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     * @throws IOException If there is an error retrieving the file.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"    public void writeToData(String newData) throws IOException {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        FileWriter fw \u003d new FileWriter(\"data/duke.txt\");","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"        fw.write(newData);","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        fw.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"     * Method for parsing the data from the file on hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"     * @param line line to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList TaskList to contain list of tasks loaded.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    public void parse_data(String line, TaskList taskList) {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"        String[] parts \u003d line.split(\"\\\\|\");","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        if (parts[0].trim().equals(\"[T]\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"            taskList.initAdd(new ToDo(parts[2].trim(), parts[1].trim().equals(\"1\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"        } else if (parts[0].trim().equals(\"[D]\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"            taskList.initAdd(new Deadline(parts[2].trim(), parts[3].trim(), parts[1].trim().equals(\"1\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"        } else if (parts[0].trim().equals(\"[E]\")) {","lastModifiedDate":"2023-01-17"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"            String[] fromAndTo \u003d parts[3].trim().split(\"-\");","lastModifiedDate":"2023-01-17"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"            taskList.initAdd(new Event(parts[2].trim(), fromAndTo[0], fromAndTo[1], parts[1].trim().equals(\"1\")));","lastModifiedDate":"2023-01-17"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":76}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":" * Represents Deadline task with an end date.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private String deadline;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    private LocalDateTime dateline;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor method for Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     * @param title    title of the Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     * @param deadline deadline of the Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    public Deadline(String title, String deadline) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-14"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-14"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[D]\";","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"            this.dateline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"            throw e;","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"     * Overloaded constructor method for Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"     * Primarily for when loading on startup.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"     * @param title    title of the Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"     * @param deadline deadline of the Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     * @param done     status of the Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    public Deadline(String title, String deadline, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[D]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"            this.dateline \u003d LocalDateTime.parse(deadline, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"            throw e;","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"     * Alternative toString method purely for writing to hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"     * Can also be used for testing.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the task with all attribute information.","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"    public String toData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        return this.type + \" | \" + (this.done ? \"1\" : \"0\") + \" | \" + this.title + \" | \" + this.deadline;","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * Method for getting String representation of Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"        return super.toString() + \" (by: \" + this.dateline.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":71}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":" * Represents an Event task with a from time and to time.","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    private String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    private LocalDateTime fromDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    private LocalDateTime toDate;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor method for Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"     * @param title title of the Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"     * @param from  starting date-time of the event.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"     * @param to    ending date-time of the event.","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    public Event(String title, String from, String to) {","lastModifiedDate":"2023-01-14"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-14"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[E]\";","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"            this.fromDate \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"            this.toDate \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"            throw e;","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     * Overloaded constructor method for Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"     * Primarily for when loading on startup.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"     * @param title title of the Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"     * @param from  starting date-time of the Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * @param to    ending date-time of the Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     * @param done  status of the Event.","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"    public Event(String title, String from, String to, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-17"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[E]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"            this.fromDate \u003d LocalDateTime.parse(from, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"            this.toDate \u003d LocalDateTime.parse(to, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"            throw e;","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"     * Alternative toString method purely for writing to hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"     * Can also be used for testing.","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the task with all attribute information.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"    public String toData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"        return this.type + \" | \" + (this.done ? \"1\" : \"0\") + \" | \" + this.title + \" | \" + this.from + \"-\" + this.to;","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"     * Method for getting String representation of Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-14"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-14"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"        return super.toString() + \" (from: \" + this.fromDate.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\"))","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"              + \" to: \" + this.toDate.format(DateTimeFormatter.ofPattern(\"HHmm MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":80}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":" * Represents over-arching Task type.","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"public class Task {","lastModifiedDate":"2023-01-13"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    protected String title;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"    protected String type;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    protected boolean done;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    private final String CHECKED \u003d \"[X]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    private final String UNCHECKED \u003d \"[ ]\";","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor Method for Task.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"     * @param title title of the Task.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    public Task(String title) {","lastModifiedDate":"2023-01-13"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-01-13"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"\";","lastModifiedDate":"2023-01-14"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"     * Method for marking the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    public void mark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d true;","lastModifiedDate":"2023-01-13"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"     * Method for unmarking the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    public void unmark() {","lastModifiedDate":"2023-01-13"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d false;","lastModifiedDate":"2023-01-13"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"     * Method to get the status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"     * @return boolean representing the status of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isMarked() {","lastModifiedDate":"2023-01-14"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"        return this.done;","lastModifiedDate":"2023-01-14"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     * Method for checking if a substring exists in the title.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"     * @param subString to search for.","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"     * @return boolean representing result of the search.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    public boolean contains(String subString) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        //Add support for searching case-insensitive search.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"        return Pattern.compile(Pattern.quote(subString), Pattern.CASE_INSENSITIVE).matcher(this.title).find();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"        //return this.title.contains(subString);","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * Alternative toString method purely for writing to hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     * Can also be used for testing.","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the task with all attribute information.","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    public String toData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"        return this.type + \" | \" + (this.done ? \"1\" : \"0\") + \" | \" + this.title;","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"     * Method for getting String representation of Deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-13"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-13"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"        return this.type + (done ? CHECKED : UNCHECKED) + \" \" + this.title;","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-13"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-13"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-13"}],"authorContributionMap":{"Huggenguggen":82}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import duke.exception.AlreadyMarkedException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import duke.exception.AlreadyUnmarkedException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":" * Represents List of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"public class TaskList {","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    private ArrayList\u003cTask\u003e items;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor for TaskList to initialize the internal arraylist of Tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"        items \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add a Task directly to TaskList.","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"     * @param task Task to be added to TaskList.","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    public void add(Task task, Ui ui) {","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"        items.add(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"        ui.addTask(task, items.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"     * Add task method for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     * @param task to be added.","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui ui for messages.","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"    public String guiAdd(Task task, Ui ui) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        items.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        return ui.guiAddTask(task, items.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add an Event to the TaskList via the input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"    public void addEvent(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"            String descr \u003d curr[0].substring(6).trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"            String[] newCurr \u003d curr[1].split(\"/to\");","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"            String from \u003d newCurr[0].trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"            String to \u003d newCurr[1].trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"            add(new Event(descr, from, to), ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"                    \"You need to fill in an event with format \"","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"                            + \"`event {title} /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm`\");","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add an Event to the TaskList via the input String array for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"    public String guiAddEvent(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"            String descr \u003d curr[0].substring(6).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"            String[] newCurr \u003d curr[1].split(\"/to\");","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"            String from \u003d newCurr[0].trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"            String to \u003d newCurr[1].trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"            return guiAdd(new Event(descr, from, to), ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"                    \"You need to fill in an event with format \"","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"                            + \"`event {title} /from dd/MM/yyyy HHmm /to dd/MM/yyyy HHmm`\");","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add a Deadline to the TaskList via the input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"    public void addDeadline(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"            String descr \u003d curr[0].substring(9).trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"            String by \u003d curr[1].trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"            add(new Deadline(descr, by), ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"                    \"You need to fill in a deadline with format `deadline {title} /by dd/MM/yyyy HHmm`\");","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add a Deadline to the TaskList via the input String array for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"    public String guiAddDeadline(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"            String descr \u003d curr[0].substring(9).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"            String by \u003d curr[1].trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"            return guiAdd(new Deadline(descr, by), ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"                    \"You need to fill in a deadline with format `deadline {title} /by dd/MM/yyyy HHmm`\");","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add a ToDo to the TaskList via the input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"    public void addToDo(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"        String todo \u003d curr[0].substring(5).trim();","lastModifiedDate":"2023-01-17"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"        if (todo.isBlank()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"You need to add a todo with format `todo {title}`\");","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"        } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"            add(new ToDo(todo), ui);","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"     * Add ToDo for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"     * @param curr a String array from user input to be parsed.","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui   ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"    public String guiAddToDo(String[] curr, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"        String todo \u003d curr[0].substring(5).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"        if (!todo.isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"            return guiAdd(new ToDo(todo), ui);","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"        throw new DukeException(\"You need to add a todo with format `todo {title}`\");","lastModifiedDate":"2023-01-31"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"     * Method to delete a Task from the TaskList via input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"    public void deleteTask(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"            if (idx \u003e\u003d items.size() || idx \u003c 0) {","lastModifiedDate":"2023-01-17"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"                throw new DukeException();","lastModifiedDate":"2023-01-17"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"                ui.deleteMessage(items.get(idx), items.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"                items.remove(idx);","lastModifiedDate":"2023-01-17"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid index between 1 and \" + items.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"Huggenguggen"},"content":"     * Method to delete a Task from the TaskList via input String array for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":186,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"    public String guiDeleteTask(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":189,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"Huggenguggen"},"content":"            if (idx \u003e\u003d items.size() || idx \u003c 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":"                throw new DukeException();","lastModifiedDate":"2023-01-27"},{"lineNumber":192,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":193,"author":{"gitId":"Huggenguggen"},"content":"                String guiMessage \u003d ui.guiDeleteMessage(items.get(idx), items.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":194,"author":{"gitId":"Huggenguggen"},"content":"                items.remove(idx);","lastModifiedDate":"2023-01-27"},{"lineNumber":195,"author":{"gitId":"Huggenguggen"},"content":"                return guiMessage;","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid index between 1 and \" + items.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"Huggenguggen"},"content":"     * Method to mark Task in TaskList via input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed","lastModifiedDate":"2023-01-31"},{"lineNumber":206,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"Huggenguggen"},"content":"    public void mark(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":210,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":211,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"Huggenguggen"},"content":"            if (items.get(idx).isMarked()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"Huggenguggen"},"content":"                throw new AlreadyMarkedException();","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":215,"author":{"gitId":"Huggenguggen"},"content":"                items.get(idx).mark();","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"Huggenguggen"},"content":"                ui.markMessage(items.get(idx));","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":218,"author":{"gitId":"Huggenguggen"},"content":"        } catch (AlreadyMarkedException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":219,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyMarkedException(\"Already Marked!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid input with index between 1 and \" + items.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":222,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":223,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":226,"author":{"gitId":"Huggenguggen"},"content":"     * Mark task in GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":227,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":228,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed","lastModifiedDate":"2023-01-31"},{"lineNumber":229,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":230,"author":{"gitId":"Huggenguggen"},"content":"     * @return String for mark message.","lastModifiedDate":"2023-01-27"},{"lineNumber":231,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":232,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":233,"author":{"gitId":"Huggenguggen"},"content":"    public String guiMark(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":234,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":235,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":236,"author":{"gitId":"Huggenguggen"},"content":"            if (!items.get(idx).isMarked()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":237,"author":{"gitId":"Huggenguggen"},"content":"                items.get(idx).mark();","lastModifiedDate":"2023-01-27"},{"lineNumber":238,"author":{"gitId":"Huggenguggen"},"content":"                return ui.guiMarkMessage(items.get(idx));","lastModifiedDate":"2023-01-27"},{"lineNumber":239,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":240,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyMarkedException();","lastModifiedDate":"2023-01-31"},{"lineNumber":241,"author":{"gitId":"Huggenguggen"},"content":"        } catch (AlreadyMarkedException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":242,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyMarkedException(\"Already Marked!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":243,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":244,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid input with index between 1 and \" + items.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":245,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":246,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":247,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":248,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":249,"author":{"gitId":"Huggenguggen"},"content":"     * Method to unmark Task in TaskList via input String array.","lastModifiedDate":"2023-01-18"},{"lineNumber":250,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":252,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-18"},{"lineNumber":254,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":255,"author":{"gitId":"Huggenguggen"},"content":"    public void unmark(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":256,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":257,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":258,"author":{"gitId":"Huggenguggen"},"content":"            if (!items.get(idx).isMarked()) {","lastModifiedDate":"2023-01-17"},{"lineNumber":259,"author":{"gitId":"Huggenguggen"},"content":"                throw new AlreadyUnmarkedException();","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"Huggenguggen"},"content":"                items.get(idx).unmark();","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"Huggenguggen"},"content":"                ui.unmarkMessage(items.get(idx));","lastModifiedDate":"2023-01-17"},{"lineNumber":263,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":264,"author":{"gitId":"Huggenguggen"},"content":"        } catch (AlreadyUnmarkedException e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyUnmarkedException(\"Already unmarked!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid input with index between 1 and \" + items.size());","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":272,"author":{"gitId":"Huggenguggen"},"content":"     * Unmark in GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":273,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":274,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle a String array from user input to be parsed.","lastModifiedDate":"2023-01-31"},{"lineNumber":275,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to give user the message.","lastModifiedDate":"2023-01-27"},{"lineNumber":276,"author":{"gitId":"Huggenguggen"},"content":"     * @return String for unmark message.","lastModifiedDate":"2023-01-27"},{"lineNumber":277,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException If user input is erroneous.","lastModifiedDate":"2023-01-27"},{"lineNumber":278,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":279,"author":{"gitId":"Huggenguggen"},"content":"    public String guiUnmark(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":280,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":281,"author":{"gitId":"Huggenguggen"},"content":"            int idx \u003d Integer.parseInt(currTitle[1]) - 1;","lastModifiedDate":"2023-01-31"},{"lineNumber":282,"author":{"gitId":"Huggenguggen"},"content":"            if (items.get(idx).isMarked()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":283,"author":{"gitId":"Huggenguggen"},"content":"                items.get(idx).unmark();","lastModifiedDate":"2023-01-27"},{"lineNumber":284,"author":{"gitId":"Huggenguggen"},"content":"                return ui.guiUnmarkMessage(items.get(idx));","lastModifiedDate":"2023-01-27"},{"lineNumber":285,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":286,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyUnmarkedException();","lastModifiedDate":"2023-01-31"},{"lineNumber":287,"author":{"gitId":"Huggenguggen"},"content":"        } catch (AlreadyUnmarkedException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":288,"author":{"gitId":"Huggenguggen"},"content":"            throw new AlreadyUnmarkedException(\"Already unmarked!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":289,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":290,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"Please give a valid input with index between 1 and \" + items.size());","lastModifiedDate":"2023-01-27"},{"lineNumber":291,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":292,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":293,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":294,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":295,"author":{"gitId":"Huggenguggen"},"content":"     * Method to find a keyword within tasks via String array from user input.","lastModifiedDate":"2023-01-18"},{"lineNumber":296,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":297,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle String array with user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":298,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to show user messages.","lastModifiedDate":"2023-01-18"},{"lineNumber":299,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException if there is error in the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":300,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":301,"author":{"gitId":"Huggenguggen"},"content":"    public void findTask(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":302,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":303,"author":{"gitId":"Huggenguggen"},"content":"            String searchFor \u003d currTitle[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":304,"author":{"gitId":"Huggenguggen"},"content":"            TaskList temp \u003d new TaskList();","lastModifiedDate":"2023-01-18"},{"lineNumber":305,"author":{"gitId":"Huggenguggen"},"content":"            for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-18"},{"lineNumber":306,"author":{"gitId":"Huggenguggen"},"content":"                if (items.get(i).contains(searchFor)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":307,"author":{"gitId":"Huggenguggen"},"content":"                    temp.initAdd(items.get(i));","lastModifiedDate":"2023-01-18"},{"lineNumber":308,"author":{"gitId":"Huggenguggen"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":309,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":310,"author":{"gitId":"Huggenguggen"},"content":"            if (temp.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":311,"author":{"gitId":"Huggenguggen"},"content":"                ui.failedSearch();","lastModifiedDate":"2023-01-18"},{"lineNumber":312,"author":{"gitId":"Huggenguggen"},"content":"            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":313,"author":{"gitId":"Huggenguggen"},"content":"                ui.printSearch(temp);","lastModifiedDate":"2023-01-18"},{"lineNumber":314,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":315,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":316,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":317,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"You need to do a search with the format `find {substring}`\");","lastModifiedDate":"2023-01-18"},{"lineNumber":318,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":319,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":320,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":321,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":322,"author":{"gitId":"Huggenguggen"},"content":"     * Method to find a keyword within tasks via String array from user input for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":323,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":324,"author":{"gitId":"Huggenguggen"},"content":"     * @param currTitle String array with user input.","lastModifiedDate":"2023-01-31"},{"lineNumber":325,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui         ui to show user messages.","lastModifiedDate":"2023-01-27"},{"lineNumber":326,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":327,"author":{"gitId":"Huggenguggen"},"content":"     * @throws DukeException if there is error in the command.","lastModifiedDate":"2023-01-27"},{"lineNumber":328,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":329,"author":{"gitId":"Huggenguggen"},"content":"    public String guiFindTask(String[] currTitle, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":330,"author":{"gitId":"Huggenguggen"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":331,"author":{"gitId":"Huggenguggen"},"content":"            String searchFor \u003d currTitle[1].trim();","lastModifiedDate":"2023-01-31"},{"lineNumber":332,"author":{"gitId":"Huggenguggen"},"content":"            TaskList temp \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":333,"author":{"gitId":"Huggenguggen"},"content":"            for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":334,"author":{"gitId":"Huggenguggen"},"content":"                if (items.get(i).contains(searchFor)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":335,"author":{"gitId":"Huggenguggen"},"content":"                    temp.initAdd(items.get(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":336,"author":{"gitId":"Huggenguggen"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":337,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":338,"author":{"gitId":"Huggenguggen"},"content":"            if (!temp.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":339,"author":{"gitId":"Huggenguggen"},"content":"                return ui.guiPrintSearch(temp);","lastModifiedDate":"2023-01-27"},{"lineNumber":340,"author":{"gitId":"Huggenguggen"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":341,"author":{"gitId":"Huggenguggen"},"content":"            return ui.guiFailedSearch();","lastModifiedDate":"2023-01-31"},{"lineNumber":342,"author":{"gitId":"Huggenguggen"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":343,"author":{"gitId":"Huggenguggen"},"content":"            throw new DukeException(\"You need to do a search with the format `find {substring}`\");","lastModifiedDate":"2023-01-27"},{"lineNumber":344,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":345,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":346,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":347,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":348,"author":{"gitId":"Huggenguggen"},"content":"     * Method to check if TaskList is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":349,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":350,"author":{"gitId":"Huggenguggen"},"content":"     * @return boolean representing whether the list is empty.","lastModifiedDate":"2023-01-18"},{"lineNumber":351,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":352,"author":{"gitId":"Huggenguggen"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-01-18"},{"lineNumber":353,"author":{"gitId":"Huggenguggen"},"content":"        return this.items.isEmpty();","lastModifiedDate":"2023-01-18"},{"lineNumber":354,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":355,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":356,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":357,"author":{"gitId":"Huggenguggen"},"content":"     * Method to add tasks without giving the UI messages.","lastModifiedDate":"2023-01-18"},{"lineNumber":358,"author":{"gitId":"Huggenguggen"},"content":"     * Primarily for when loading from hard drive data.","lastModifiedDate":"2023-01-18"},{"lineNumber":359,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":360,"author":{"gitId":"Huggenguggen"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-18"},{"lineNumber":361,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":362,"author":{"gitId":"Huggenguggen"},"content":"    public void initAdd(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":363,"author":{"gitId":"Huggenguggen"},"content":"        items.add(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":364,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":365,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":366,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":367,"author":{"gitId":"Huggenguggen"},"content":"     * Method to get the String representation of entire list for writing to hard","lastModifiedDate":"2023-01-18"},{"lineNumber":368,"author":{"gitId":"Huggenguggen"},"content":"     * drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":369,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":370,"author":{"gitId":"Huggenguggen"},"content":"     * @return alternative String representation of list.","lastModifiedDate":"2023-01-18"},{"lineNumber":371,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":372,"author":{"gitId":"Huggenguggen"},"content":"    public String itemsToData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":373,"author":{"gitId":"Huggenguggen"},"content":"        String data \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":374,"author":{"gitId":"Huggenguggen"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":375,"author":{"gitId":"Huggenguggen"},"content":"            data +\u003d items.get(i).toData();","lastModifiedDate":"2023-01-17"},{"lineNumber":376,"author":{"gitId":"Huggenguggen"},"content":"            data +\u003d \"\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":377,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":378,"author":{"gitId":"Huggenguggen"},"content":"        return data;","lastModifiedDate":"2023-01-17"},{"lineNumber":379,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":380,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":381,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":382,"author":{"gitId":"Huggenguggen"},"content":"     * Method to end the program.","lastModifiedDate":"2023-01-18"},{"lineNumber":383,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":384,"author":{"gitId":"Huggenguggen"},"content":"     * @param ui ui to give user the message.","lastModifiedDate":"2023-01-18"},{"lineNumber":385,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":386,"author":{"gitId":"Huggenguggen"},"content":"    public void end(Ui ui) {","lastModifiedDate":"2023-01-17"},{"lineNumber":387,"author":{"gitId":"Huggenguggen"},"content":"        ui.end();","lastModifiedDate":"2023-01-17"},{"lineNumber":388,"author":{"gitId":"Huggenguggen"},"content":"        System.exit(0);","lastModifiedDate":"2023-01-17"},{"lineNumber":389,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":390,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":391,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":392,"author":{"gitId":"Huggenguggen"},"content":"     * Overloaded String method to get representation of entire list for user.","lastModifiedDate":"2023-01-18"},{"lineNumber":393,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":394,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of list for user.","lastModifiedDate":"2023-01-18"},{"lineNumber":395,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":396,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":397,"author":{"gitId":"Huggenguggen"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":398,"author":{"gitId":"Huggenguggen"},"content":"        String res \u003d \"\";","lastModifiedDate":"2023-01-17"},{"lineNumber":399,"author":{"gitId":"Huggenguggen"},"content":"        for (int i \u003d 0; i \u003c items.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":400,"author":{"gitId":"Huggenguggen"},"content":"            Task item \u003d items.get(i);","lastModifiedDate":"2023-01-17"},{"lineNumber":401,"author":{"gitId":"Huggenguggen"},"content":"            res +\u003d \"\\t \" + (i + 1) + \". \" + item + \"\\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":402,"author":{"gitId":"Huggenguggen"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":403,"author":{"gitId":"Huggenguggen"},"content":"        return res;","lastModifiedDate":"2023-01-17"},{"lineNumber":404,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":405,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":405}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":" * Represents the simplest type of task.","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"     * Constructor Method for ToDo.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"     * @param title title of the ToDo.","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    public ToDo(String title) {","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[T]\";","lastModifiedDate":"2023-01-14"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"     * Overloaded Constructor for when loading from hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"     * @param title title of the ToDo.","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"     * @param done boolean to represent if task is done or not;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    public ToDo(String title, boolean done) {","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"        super(title);","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        this.type \u003d \"[T]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"        this.done \u003d done;","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"     * Alternative toString method purely for writing to hard drive.","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"     * Can also be used for testing.","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of the task with all attribute information.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    public String toData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"        return this.type + \" | \" + (this.done ? \"1\" : \"0\") + \" | \" + this.title;","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":40}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.ui;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":" * Class for handling UI (user facing interface)","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"public class Ui {","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    private final String UI_LOGO \u003d \"             _____             _____   _    _              _   _ \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"            + \"     /\\\\     |_   _|           / ____| | |  | |     /\\\\     | \\\\ | |\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"            + \"    /  \\\\      | |    ______  | |      | |__| |    /  \\\\    |  \\\\| |\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"            + \"   / /\\\\ \\\\     | |   |______| | |      |  __  |   / /\\\\ \\\\   | . ` |\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"            + \"  / ____ \\\\   _| |_           | |____  | |  | |  / ____ \\\\  | |\\\\  |\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"            + \" /_/    \\\\_\\\\ |_____|           \\\\_____| |_|  |_| /_/    \\\\_\\\\ |_| \\\\_|\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"            + \"                                                                 \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"            + \"                                                                 \";","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"    private final String GUI_LOGO \u003d","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"                      \"              _____             _____   _    _              _   _       \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"                    + \"     /\\\\       |_   _|           / ____| | |  | |     /\\\\      | \\\\ | |        \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"                    + \"    /  \\\\        | |    ______  | |      | |__| |    /  \\\\     |  \\\\| |        \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"                    + \"   / /\\\\ \\\\      | |   |______| | |       |  __  |   / /\\\\ \\\\    | . ` |       \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"                    + \"  / ____ \\\\   _| |_           | |____  | |  | |  / ____ \\\\   | |\\\\  |          \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                    + \" /_/    \\\\_\\\\ |_____|         \\\\_____| |_|  |_| /_/    \\\\_\\\\ |_| \\\\_|          \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"                    + \"                                                                               \\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"                    + \"                                                                                 \";","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    private final String LINE_BREAK \u003d \"\\n\\t ^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"     * Default constructor.","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"    public Ui() {","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"     * Method for first greet message.","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    public void greet() {","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(\"\\t Hello I\u0027m\\n\" + UI_LOGO);","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(\"\\t What can I do for you?\" + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"     * Gives greet message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"    public String guiGreet() {","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\t Hello I\u0027m\\n\" + GUI_LOGO + \"\\n\\t What can I do for you?\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"Huggenguggen"},"content":"     * Method for ending message.","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Huggenguggen"},"content":"    public void end() {","lastModifiedDate":"2023-01-17"},{"lineNumber":57,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\t Bye. See you next time! :)\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Huggenguggen"},"content":"                + LINE_BREAK);","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":62,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when adding task to taskList.","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"Huggenguggen"},"content":"     * @param task task to be added to list.","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Huggenguggen"},"content":"     * @param size size of list with new task.","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"Huggenguggen"},"content":"    public void addTask(Task task, int size) {","lastModifiedDate":"2023-01-17"},{"lineNumber":69,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\t Adding the task:\\n\\t\\t\" + task","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\n\\t You now have \" + size + \" task(s).\" + LINE_BREAK);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when adding task to taskList for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Huggenguggen"},"content":"     * @param task task to be added to list.","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Huggenguggen"},"content":"     * @param size size of list with new task.","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Huggenguggen"},"content":"    public String guiAddTask(Task task, int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\t Adding the task:\\n\\t\\t\" + task","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\n\\t You now have \" + size + \" task(s).\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":84,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":85,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when deleting task.","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"Huggenguggen"},"content":"     * @param item item to be deleted.","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"Huggenguggen"},"content":"     * @param size size of list with the task included.","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"Huggenguggen"},"content":"    public void deleteMessage(Task item, int size) {","lastModifiedDate":"2023-01-17"},{"lineNumber":92,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\t 1 less task! :)\");","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(\"\\t\\t\" + item + \"\\n\\tNow you have \" + (size - 1) + \" tasks left!\" + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":95,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":96,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when deleting task for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Huggenguggen"},"content":"     * @param item item to be deleted.","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Huggenguggen"},"content":"     * @param size size of list with the task included.","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Huggenguggen"},"content":"    public String guiDeleteMessage(Task item, int size) {","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\t 1 less task! :)\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\t\\t\" + item + \"\\n\\tNow you have \" + (size - 1) + \" tasks left!\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when marking task as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Huggenguggen"},"content":"     * @param item item to be marked as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"Huggenguggen"},"content":"    public void markMessage(Task item) {","lastModifiedDate":"2023-01-17"},{"lineNumber":114,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\t Great job completing your task! :)\");","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(\"\\t\\t\" + item + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":117,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":118,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Huggenguggen"},"content":"     * Return mark message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Huggenguggen"},"content":"     * @param item","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Huggenguggen"},"content":"     * @return","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Huggenguggen"},"content":"    public String guiMarkMessage(Task item) {","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\t Great job completing your task! :)\\n\\t\\t\" + item;","lastModifiedDate":"2023-01-27"},{"lineNumber":125,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when marking task as undone.","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"Huggenguggen"},"content":"     * @param item to be unmarked.","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"Huggenguggen"},"content":"    public void unmarkMessage(Task item) {","lastModifiedDate":"2023-01-17"},{"lineNumber":133,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\t I see you want to redo this task...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(\"\\t\\t\" + item + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":136,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":137,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Huggenguggen"},"content":"     * Return mark message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"Huggenguggen"},"content":"     * @param item","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"Huggenguggen"},"content":"     * @return","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Huggenguggen"},"content":"    public String guiUnmarkMessage(Task item) {","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\t I see you want to redo this task...\\n\\t\\t\" + item;","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"Huggenguggen"},"content":"     * Method for message when user asks for whole list.","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList list to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"Huggenguggen"},"content":"    public void print(TaskList taskList) {","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\tHere are all your tasks, good luck!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"Huggenguggen"},"content":"        System.out.print(taskList.toString());","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":156,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"Huggenguggen"},"content":"     * Returns tasklist in string representation for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"Huggenguggen"},"content":"     * @param taskList tasklist to print.","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"Huggenguggen"},"content":"     * @return String representation of tasklist.","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"Huggenguggen"},"content":"    public String guiPrint(TaskList taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\tHere are all your tasks, good luck!\\n\" + taskList.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"Huggenguggen"},"content":"     * Method to show user a failed search.","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"Huggenguggen"},"content":"    public void failedSearch() {","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\tThere are no matching tasks in your list :(\\n\"","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"Huggenguggen"},"content":"                + LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"Huggenguggen"},"content":"     * Method to show user a failed search for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"Huggenguggen"},"content":"    public String guiFailedSearch() {","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\tThere are no matching tasks in your list :(\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":183,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":184,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"Huggenguggen"},"content":"     * Method to print results of a word search.","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"Huggenguggen"},"content":"     * @param temp taskList to be printed.","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"Huggenguggen"},"content":"    public void printSearch(TaskList temp) {","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\tHere are the matching tasks!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"Huggenguggen"},"content":"        System.out.print(temp.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":191,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":195,"author":{"gitId":"Huggenguggen"},"content":"     * Method to print results of a word search for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":196,"author":{"gitId":"Huggenguggen"},"content":"     *","lastModifiedDate":"2023-01-27"},{"lineNumber":197,"author":{"gitId":"Huggenguggen"},"content":"     * @param temp taskList to be printed.","lastModifiedDate":"2023-01-27"},{"lineNumber":198,"author":{"gitId":"Huggenguggen"},"content":"     * @return String message for GUI.","lastModifiedDate":"2023-01-27"},{"lineNumber":199,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":200,"author":{"gitId":"Huggenguggen"},"content":"    public String guiPrintSearch(TaskList temp) {","lastModifiedDate":"2023-01-27"},{"lineNumber":201,"author":{"gitId":"Huggenguggen"},"content":"        return \"\\tHere are the matching tasks!\\n\"","lastModifiedDate":"2023-01-27"},{"lineNumber":202,"author":{"gitId":"Huggenguggen"},"content":"                + temp.toString() + \"\\n\";","lastModifiedDate":"2023-01-27"},{"lineNumber":203,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":204,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":205,"author":{"gitId":"Huggenguggen"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"Huggenguggen"},"content":"     * Method for loading error on startup.","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"Huggenguggen"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"Huggenguggen"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-17"},{"lineNumber":209,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK + \"\\tLoading error :(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"Huggenguggen"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":212,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":213}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" spacing\u003d\"2\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"90\"/\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90.0\" fitWidth\u003d\"90.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"AS_NEEDED\" hvalue\u003d\"1.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" fitToHeight\u003d\"true\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Huggenguggen":19}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"    private TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"    public void init() {","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Huggenguggen"},"content":"        taskList.initAdd(new ToDo(\"Thing\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"        taskList.initAdd(new Deadline(\"Next Thing\",","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"                \"02/12/2019 1730\", true));","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"        taskList.initAdd(new Event(\"Last thing\",","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Huggenguggen"},"content":"                \"02/12/2019 1730\", \"03/12/2019 1730\"));","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Huggenguggen"},"content":"    public void addTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Huggenguggen"},"content":"        String expected \u003d \"\\t 1. [T][ ] Thing\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\t 2. [D][X] Next Thing (by: 1730 Dec 2 2019)\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Huggenguggen"},"content":"                + \"\\t 3. [E][ ] Last thing (from: 1730 Dec 2 2019 to: 1730 Dec 3 2019)\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(taskList.toString(), expected);","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Huggenguggen"},"content":"    public void toData() {","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"Huggenguggen"},"content":"        String expected \u003d \"[T] | 0 | Thing\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Huggenguggen"},"content":"                + \"[D] | 1 | Next Thing | 02/12/2019 1730\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Huggenguggen"},"content":"                + \"[E] | 0 | Last thing | 02/12/2019 1730-03/12/2019 1730\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(taskList.itemsToData(), expected);","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Huggenguggen"},"content":"    public void markAndUnmark() throws DukeException {","lastModifiedDate":"2023-01-17"},{"lineNumber":41,"author":{"gitId":"Huggenguggen"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-01-17"},{"lineNumber":42,"author":{"gitId":"Huggenguggen"},"content":"        taskList.mark(new String[]{\"mark\", \"3\"}, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":43,"author":{"gitId":"Huggenguggen"},"content":"        taskList.unmark(new String[]{\"unmark\", \"2\"}, ui);","lastModifiedDate":"2023-01-17"},{"lineNumber":44,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"Huggenguggen"},"content":"        String expected \u003d \"[T] | 0 | Thing\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Huggenguggen"},"content":"                + \"[D] | 0 | Next Thing | 02/12/2019 1730\\n\"","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"Huggenguggen"},"content":"                + \"[E] | 1 | Last thing | 02/12/2019 1730-03/12/2019 1730\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(taskList.itemsToData(), expected);","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":51}},{"path":"src/test/java/duke/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"package duke.task;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"    @Test","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"    public void stringTest() {","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"        assertEquals(new ToDo(\"Thing\", true).toString(), \"[T][X] Thing\");","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Huggenguggen":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Huggenguggen"},"content":"todo borrow book","lastModifiedDate":"2023-01-14"},{"lineNumber":2,"author":{"gitId":"Huggenguggen"},"content":"event read book /from 17/01/2023 1720 /to 18/01/2023 1720","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Huggenguggen"},"content":"deadline return book /by 20/01/2023 1830","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Huggenguggen"},"content":"mark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":5,"author":{"gitId":"Huggenguggen"},"content":"mark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":6,"author":{"gitId":"Huggenguggen"},"content":"unmark 2","lastModifiedDate":"2023-01-14"},{"lineNumber":7,"author":{"gitId":"Huggenguggen"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":8,"author":{"gitId":"Huggenguggen"},"content":"mark 1","lastModifiedDate":"2023-01-14"},{"lineNumber":9,"author":{"gitId":"Huggenguggen"},"content":"unmark -1","lastModifiedDate":"2023-01-14"},{"lineNumber":10,"author":{"gitId":"Huggenguggen"},"content":"event party","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"Huggenguggen"},"content":"delete 0","lastModifiedDate":"2023-01-14"},{"lineNumber":12,"author":{"gitId":"Huggenguggen"},"content":"delete 2","lastModifiedDate":"2023-01-14"},{"lineNumber":13,"author":{"gitId":"Huggenguggen"},"content":"list","lastModifiedDate":"2023-01-14"},{"lineNumber":14,"author":{"gitId":"Huggenguggen"},"content":"bye","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Huggenguggen"},"content":"ECHO \"Testcase 1: Add 1 of each task, mark 2 tasks and unmark 1 task, list\"","lastModifiedDate":"2023-01-14"},{"lineNumber":17,"author":{"gitId":"Huggenguggen"},"content":"ECHO \"To test errors, tries to mark alr marked task and unmark out of index\"","lastModifiedDate":"2023-01-14"},{"lineNumber":18,"author":{"gitId":"Huggenguggen"},"content":"ECHO \"Also tries to add tasks without full command\"","lastModifiedDate":"2023-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Huggenguggen"},"content":"FC ACTUAL.TXT EXPECTED.TXT \u003eNUL \u0026\u0026 Echo Same || Echo Different or error","lastModifiedDate":"2023-01-14"}],"authorContributionMap":{"Huggenguggen":4,"-":19}}]
