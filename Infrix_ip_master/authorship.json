[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    mainClassName \u003d \"lulu.Main\"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    archiveBaseName \u003d \"lulu\"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Infrix":2,"-":39}},{"path":"data/lulu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"T`1`sleep","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"D`0`sleep ` today","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"E`0`sleep ` today ` tomorrow","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"T`1`sleep tomorrow","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"D`0`run ` 2022-05-12","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"E`1`running ` 2023-05-12` 2080-05-12","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"D`0`run ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"D`0`run ` tomorrowwww qasfawr","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"E`0`run ` today ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"E`1`run ` today to to to ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"T`1`runn run run","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"E`1`run ` 2000-05-12` 2010-06-12","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"T`0`run","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"D`0`run ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"E`0`run ` today ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"T`0`run","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":16}},{"path":"src/main/java/lulu/Lulu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.command.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.command.LoadCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class Lulu {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    private static String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    private static final String NAME \u003d \"./data/lulu.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private UI ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    public Lulu(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        //this.list \u003d list;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"     * This method runs the chatbot task manager.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    public void run() {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        ui.showGreetText();","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        if (storage.isSavePresent()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"            Command c \u003d new LoadCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"            c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"            try {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"                String fullCommand \u003d sc.nextLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            } catch (LuluException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"                ui.showOutOfBounds();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":54}},{"path":"src/main/java/lulu/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"public class Main {","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"    public static void main(String[] args) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"        Lulu lulu \u003d new Lulu(\"./data/lulu.txt\");","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"        lulu.run();","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":9}},{"path":"src/main/java/lulu/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    private String path;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        path \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * Returns true or false for whether a file at a specified location is present.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * This method checks if a file at a specified directory is present. If it is not, a file will be created at the","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * specified location.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     * @return true if file at specified location is present, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public boolean isSavePresent() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"            boolean isPresent \u003d !(file.createNewFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            if (!isPresent) {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"                System.out.println(\"Installing text file...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"            return isPresent;","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * This method writes whatever is in the list to the file at the specified location","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"     * @param list the array of string to be written","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    public void writeSave(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"            FileWriter myWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"            int size \u003d list.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"            for (int i \u003d 0; i \u003c size; i ++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"                myWriter.write(list.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"     * This method reads the file at the specified location and loads it into a TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList which loads the data","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"    public void readSave(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"                tasks.load(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Infrix":72}},{"path":"src/main/java/lulu/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        this.list.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        return this.list.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    public String getRecentTaskDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        return this.list.get(list.size() - 1).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"    public String getTaskDescription(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        return this.list.get(taskNumber - 1).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    public void markTask(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        this.list.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        list.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    public TaskList find(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        this.list.forEach((task) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"            if (task.containsDescription(description)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"    /** this method may be in the wrong spot but will be left here for now */","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"     * This method loads tasks into the TaskList, provided it follows a given convention.","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"     * The convention must be as follows \"X`i`Y\",","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"     * where X is the type of task, todo, event or deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"     * i is whether the task has been completed, 0 or 1","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"     * Y is the task description, additional description can be separated by `.","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"     * @param s the task to be loaded","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"    public void load(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        String[] command \u003d s.split(\"`\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"            this.add(new Deadline(command[2], command[3]));","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"        case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"            this.add(new Event(command[2], command[3], command[4]));","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"        case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"            this.add(new Todo(command[2]));","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":92}},{"path":"src/main/java/lulu/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"public class UI {","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"    private static final String LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    public void showGreetText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Hello! I am lulu (\u003d◕ᆽ◕ฺ\u003d)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public void showExitText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Bye! Hope to see you again soon! (\u003d◉ᆽ◉\u003d)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    public void showAddText(String taskDescription, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"  \" + taskDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list. ฅ(\u003dචᆽච\u003dฅ)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    public void showDeleteText(String taskDescription, int size) {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Noted! I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"  \" + taskDescription);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Now you have \" + size + \" tasks in the list. ฅ(\u003dචᆽච\u003dฅ)\");","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    public void listText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"ฅ(\u003dචᆽච\u003dฅ) Here are the tasks in your list: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    public void listMatchText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"ฅ(\u003dචᆽච\u003dฅ) Here are the matching tasks in your list: \");","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    public void showMarkText(String taskMark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"(₌♥ᆽ♥₌) Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        System.out.println(\" \" + taskMark);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"    public void showUnmarkText(String taskUnmark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"(₌ ᵕ̣̣̣̣̣ ᆽ ᵕ̣̣̣̣̣₌) OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        System.out.println(\" \" + taskUnmark);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"    public void showLoad() {","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"loading...\");","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"    public void showLoadComplete() {","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"loading complete.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"    public void showOutOfBounds() {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"(\u003dಠᆽಠ\u003d) That is out of bounds!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":72}},{"path":"src/main/java/lulu/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    public ByeCommand() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * This method closes the chatbot upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that writes data in tasks to the specified file location","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        ArrayList\u003cString\u003e toWrite \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        for (int i \u003d 0; i \u003c size; i ++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            toWrite.add(tasks.get(i).toMemory());","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        storage.writeSave(toWrite);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        ui.showExitText();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":33}},{"path":"src/main/java/lulu/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"     * This method executes the command on the given parameters, depending on the type of command.","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be edited","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that loads data to the TaskList or writes data from the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     *                to the specified location","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    public abstract void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * @return true if the command is bye, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":23}},{"path":"src/main/java/lulu/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import lulu.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    public DeadlineCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        String[] deadlineDetails \u003d rest.split(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        if (deadlineDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) Please include a deadline using /by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        this.description \u003d deadlineDetails[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        this.by \u003d deadlineDetails[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     * This method adds a deadline task to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be added with a deadline task","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":39}},{"path":"src/main/java/lulu/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    public DeleteCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"     * This method deletes a task from tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be deleted with a task","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        ui.showDeleteText(tasks.getTaskDescription(taskNumber), tasks.getSize()-1);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":37}},{"path":"src/main/java/lulu/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import lulu.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    public EventCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        String[] eventDetails \u003d rest.split(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        if (eventDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) Please include a timing using /from and /to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        String[] toFrom \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        if (toFrom.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) You included /from but missed out /to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        this.description \u003d eventDetails[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        this.from \u003d toFrom[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        this.to \u003d toFrom[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * This method adds an event task to tasks upon execution","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be added with an event task","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":44}},{"path":"src/main/java/lulu/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public FindCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        this.description \u003d rest;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        TaskList matched \u003d tasks.find(this.description);","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        ui.listMatchText();","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        int length \u003d matched.getSize();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"            System.out.print(i + 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            System.out.println(\". \" + matched.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":30}},{"path":"src/main/java/lulu/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    public ListCommand() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"     * This method lists the tasks in tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be listed","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        ui.listText();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        int length \u003d tasks.getSize();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            System.out.print(i+1);","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            System.out.println(\". \" + tasks.get(i));","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        ui.showLine();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":27}},{"path":"src/main/java/lulu/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    public LoadCommand() {}","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"     * This method loads data from storage to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be loaded with data","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that loads data in the specified file location to tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        ui.showLoad();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        storage.readSave(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        ui.showLoadComplete();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":21}},{"path":"src/main/java/lulu/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    public MarkCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"     * This method marks the specified task upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList with the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * @param storage the storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        tasks.markTask(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        ui.showMarkText(tasks.getTaskDescription(taskNumber));","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":36}},{"path":"src/main/java/lulu/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    private enum Commands {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"        LIST, MARK, UNMARK, DELETE, DEADLINE, EVENT, TODO, BYE, FIND","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"     * This method parses the string of text by the user into a given command.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * If no command is found in the text, an InvalidCommandException will be thrown.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"     * @param inputCommand the string provided by the user","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"     * @return the command generated from the users\u0027 text","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     * @throws LuluException when command is invalid or command is valid with subsequent invalid inputs","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    public static Command parse(String inputCommand) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        int size \u003d inputCommand.length();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        int i \u003d inputCommand.indexOf(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            Commands cmd \u003d Commands.valueOf(","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"                    i \u003d\u003d -1","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"                            ? inputCommand.toUpperCase()","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"                            : inputCommand.substring(0, i).toUpperCase());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            String restOfCommand \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"                    i \u003d\u003d -1","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"                            ? \"\"","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"                            : inputCommand.substring(i + 1, size);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"            switch (cmd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            case LIST:","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"            case MARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"                return new MarkCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"                return new UnmarkCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            case DELETE:","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"                return new DeleteCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"                return new DeadlineCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"                return new EventCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"            case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"                return new TodoCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            case BYE:","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"            case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"                return new FindCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":59}},{"path":"src/main/java/lulu/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    public TodoCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        this.description \u003d rest;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * This method adds a todo task to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList to be added with a todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Todo(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize());","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":32}},{"path":"src/main/java/lulu/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.UI;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    public UnmarkCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"     * This method unmarks the specified task upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList with the task to be unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * @param ui the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * @param storage the storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        tasks.unmarkTask(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        ui.showUnmarkText(tasks.getTaskDescription(taskNumber).toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":36}},{"path":"src/main/java/lulu/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"public class InvalidCommandException extends LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"        super(\"(\u003d✖ ᆺ ✖\u003d) That\u0027s not a valid command.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":14}},{"path":"src/main/java/lulu/exception/LuluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"public class LuluException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"    public LuluException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":11}},{"path":"src/main/java/lulu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"            if (by.split(\"-\").length \u003d\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"                this.byDate \u003d LocalDate.parse(by.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"                this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"INVALID DATE FORMAT, please use xxxx-xx-xx\");","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        String s;","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        if (byDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            s \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            s \u003d byDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        return (\"[D]\" + super.toString() + \"(by: \" + s + \")\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        String s;","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        if (byDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            s \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"            s \u003d byDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            s \u003d \u0027 \u0027 + s;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        return (\"D`\" + i + \"`\" + this.description + \"`\" + s + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":48}},{"path":"src/main/java/lulu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"            if (from.split(\"-\").length \u003d\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"                this.fromDate \u003d LocalDate.parse(from.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"                this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            if (to.split(\"-\").length \u003d\u003d 3) {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"                this.toDate \u003d LocalDate.parse(to.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"                this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"INVALID DATE FORMAT, please use xxxx-xx-xx\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        String s1, s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        if (fromDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            s1 \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"            s1 \u003d fromDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        if (toDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            s2 \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"            s2 \u003d toDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        return (\"[E]\" + super.toString() + \"(from: \" + s1 + \" to: \" + s2 + \")\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        String s1, s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        if (fromDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"            s1 \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"            s1 \u003d fromDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"            s1 \u003d \u0027 \u0027 + s1;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        if (toDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"            s2 \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"            s2 \u003d toDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"            s2 \u003d \u0027 \u0027 + s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        return (\"E`\" + i + \"`\" + this.description + \"`\" + s1 + \"`\" + s2 + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":66}},{"path":"src/main/java/lulu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public boolean containsDescription(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        return this.description.contains(s);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":36}},{"path":"src/main/java/lulu/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        return (\"T`\" + i + \"`\" + this.description + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":19}},{"path":"src/test/java/lulu/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    public void testRecentDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        assertEquals(new Todo(\"run\").toString(), list.getRecentTaskDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":17}},{"path":"src/test/java/lulu/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[D][ ] run (by:  tomorrow)\", new Deadline(\"run \", \" tomorrow\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":12}},{"path":"src/test/java/lulu/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[E][ ] run (from:  today  to:  tomorrow)\",","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"                new Event(\"run \", \" today \", \" tomorrow\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":13}},{"path":"src/test/java/lulu/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[T][ ] run\", new Todo(\"run\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"blabla","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"deadline return","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"event project","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Infrix":1,"-":20}}]
