[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    mainClassName \u003d \"lulu.Launcher\"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"    archiveBaseName \u003d \"lulu\"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Infrix":15,"-":39}},{"path":"data/lulu.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"T`1`run","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"T`1`run","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"T`0`run2","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"T`1`run","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"T`0`run3","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"T`1`run","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"D`0`run ` tomorrow","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"T`1`run","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"T`0`run","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"T`0`study","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"D`0`study ` tomorrow","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"T`0`take mrt","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"T`0`run","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"T`0`run","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":14}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"### Feature-Add tasks to do!","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"You can add different tasks to manage your time.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"ToDo task: a simple task to be done at any time","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"Deadline task: a task that has a due date","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"Event task: a task that lasts during a certain period","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"### Feature-Mark tasks as completed!","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"You can mark tasks as completed to keep yourself on track.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"It is also possible to unmark tasks if you realise that it is actually not yet completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"### Feature-List the tasks you have!","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"You can list the tasks you have for a general overview of what you have to do.","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"### Feature-Too many tasks? Find the task you have!","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"You can find the tasks that matches a particular description for easier reference.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"### Feature-Task changed? Update your task details!","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"You can update your task details without having to create a new one.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"### Feature-Absolutely sure you are done with the task? Delete your task!","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"You can delete your task from your task list when you are done.","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"### Feature-Save your tasks for future reference!","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"You can save your tasks so that you can return in the future to reference it or update it.","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"Like most cats, Lulu is a cranky cat, so make sure to say bye to him before closing the application to make sure he saves your tasks!","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"### `todo` - Add a todo task","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"Adds a todo task to your task list that has a description.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"todo (description)","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"`todo run`","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"Prints the description of the todo task and adds it to your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":" [T][ ] run","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"Now you have 1 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"### `deadline` - Add a deadline task","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"Adds a deadline task to your task list that has a description and a due date.","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"deadline (description) /by (due date)","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"`deadline run /by today`","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"Prints the description of the deadline task and adds it to your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":" [D][ ] run (by: today)","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"### `event` - Add an event task","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"Adds an event task to your task list that has a description and the period of the event.","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"event (description) /from (starting time) /to (ending time)","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"`event run /from afternonon /to evening`","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"Prints the description of the event task and adds it to your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":" [E][ ] run (from : afternoon to: evening)","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"### `mark` - mark a task as completed","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"Marks a task in your tasklist as completed, using its relative number in the tasklist.","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"mark (the number of the task to be marked)","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"`mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"Infrix"},"content":"Prints the description of the marked task and keeps it marked in your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":" [T][X] run","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"Infrix"},"content":"### `unmark` - mark a task as uncompleted","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"Infrix"},"content":"Marks a task in your tasklist as uncompleted, using its relative number in the tasklist.","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"Infrix"},"content":"Note that all tasks added are initially marked as uncompleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"Infrix"},"content":"unmark (the number of the task to be marked)","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"Infrix"},"content":"`unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"Infrix"},"content":"Prints the description of the unmarked task and keeps it unmarked in your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"Infrix"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"Infrix"},"content":" [T][ ] run","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":144,"author":{"gitId":"Infrix"},"content":"### `list` - List your current tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"Infrix"},"content":"Lists the tasks that you currently have, both marked as completed and uncompleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"Infrix"},"content":"This command has no arguments, simply use","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":152,"author":{"gitId":"Infrix"},"content":"`list`","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":156,"author":{"gitId":"Infrix"},"content":"Prints the description of every task in a list format, with their corresponding number.","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":158,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":159,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":160,"author":{"gitId":"Infrix"},"content":"Here are the tasks in your list:","lastModifiedDate":"2023-02-18"},{"lineNumber":161,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":162,"author":{"gitId":"Infrix"},"content":"1. [T][ ] run","lastModifiedDate":"2023-02-18"},{"lineNumber":163,"author":{"gitId":"Infrix"},"content":"2. [D][ ] run (by: today)","lastModifiedDate":"2023-02-18"},{"lineNumber":164,"author":{"gitId":"Infrix"},"content":"3. [E][ ] run (from : afternoon to: evening)","lastModifiedDate":"2023-02-18"},{"lineNumber":165,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":167,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":168,"author":{"gitId":"Infrix"},"content":"### `find` - find tasks that matches a certain description","lastModifiedDate":"2023-02-18"},{"lineNumber":169,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":170,"author":{"gitId":"Infrix"},"content":"Finds the tasks that matches a given description.","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"Infrix"},"content":"find (description)","lastModifiedDate":"2023-02-18"},{"lineNumber":172,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":174,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"Infrix"},"content":"`find run`","lastModifiedDate":"2023-02-18"},{"lineNumber":176,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":178,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"Infrix"},"content":"Prints the description of every matching task in a list format.","lastModifiedDate":"2023-02-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":181,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":183,"author":{"gitId":"Infrix"},"content":"Here are the matching tasks in your list:","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"Infrix"},"content":"1. [T][ ] run","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"Infrix"},"content":"2. [D][ ] run (by: today)","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"Infrix"},"content":"3. [E][ ] run (from : afternoon to: evening)","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":189,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":190,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":191,"author":{"gitId":"Infrix"},"content":"### `update` - update a task\u0027s details","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"Infrix"},"content":"Updates the details of a task that is already in your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":194,"author":{"gitId":"Infrix"},"content":"Depending on the type of task (todo/deadline/event), you can update the respective task\u0027s details.","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"Infrix"},"content":"todo: update (the number of the task to be marked) DESCRIPTION (description)","lastModifiedDate":"2023-02-18"},{"lineNumber":196,"author":{"gitId":"Infrix"},"content":"deadline: update (the number of the task to be marked) DESCRIPTION/BY (description/due date)","lastModifiedDate":"2023-02-18"},{"lineNumber":197,"author":{"gitId":"Infrix"},"content":"event: update (the number of the task to be marked) DESCRIPTION/TO/FROM (description/start time/end time)","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":201,"author":{"gitId":"Infrix"},"content":"`update 2 BY tomorrow`","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":203,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":204,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":205,"author":{"gitId":"Infrix"},"content":"Prints the updated description of the task and keeps the updated details in your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":206,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":207,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":209,"author":{"gitId":"Infrix"},"content":" [D][ ] run (by: tomorrow)","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":212,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":213,"author":{"gitId":"Infrix"},"content":"### `delete` - Deletes a task","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":215,"author":{"gitId":"Infrix"},"content":"Deletes a task from your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"Infrix"},"content":"Use this command when you are done with the task and no longer want the task to appear in your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":217,"author":{"gitId":"Infrix"},"content":"delete (the number of the task to be deleted)","lastModifiedDate":"2023-02-18"},{"lineNumber":218,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":219,"author":{"gitId":"Infrix"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":220,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":221,"author":{"gitId":"Infrix"},"content":"`delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":223,"author":{"gitId":"Infrix"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":224,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":225,"author":{"gitId":"Infrix"},"content":"Prints the description of the deleted task and removes it from your task list.","lastModifiedDate":"2023-02-18"},{"lineNumber":226,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":227,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":228,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":229,"author":{"gitId":"Infrix"},"content":"Noted! I\u0027ve removed this task:","lastModifiedDate":"2023-02-18"},{"lineNumber":230,"author":{"gitId":"Infrix"},"content":" [T][ ] run","lastModifiedDate":"2023-02-18"},{"lineNumber":231,"author":{"gitId":"Infrix"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-18"},{"lineNumber":232,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":233,"author":{"gitId":"Infrix"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":234,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":235,"author":{"gitId":"Infrix"},"content":"### `bye` - Save your tasks","lastModifiedDate":"2023-02-18"},{"lineNumber":236,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":237,"author":{"gitId":"Infrix"},"content":"Save your tasks as a txt file in ./data/lulu.txt","lastModifiedDate":"2023-02-18"},{"lineNumber":238,"author":{"gitId":"Infrix"},"content":"You must use this command if you want your tasks to be saved, so that your tasks can be loaded for future reference.","lastModifiedDate":"2023-02-18"},{"lineNumber":239,"author":{"gitId":"Infrix"},"content":"If you close the application without the bye command, your tasks will not be saved.","lastModifiedDate":"2023-02-18"},{"lineNumber":240,"author":{"gitId":"Infrix"},"content":"bye","lastModifiedDate":"2023-02-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":242,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":244,"author":{"gitId":"Infrix"},"content":"`bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-18"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":248,"author":{"gitId":"Infrix"},"content":"Prints the goodbye text and saves your tasks to ./data/lulu/txt","lastModifiedDate":"2023-02-18"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":251,"author":{"gitId":"Infrix"},"content":"______________________________________","lastModifiedDate":"2023-02-18"},{"lineNumber":252,"author":{"gitId":"Infrix"},"content":"Bye! Hope to see you again soon!","lastModifiedDate":"2023-02-18"},{"lineNumber":253,"author":{"gitId":"Infrix"},"content":"______________________________________ ","lastModifiedDate":"2023-02-18"},{"lineNumber":254,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-18"},{"lineNumber":255,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":256,"author":{"gitId":"Infrix"},"content":"### `Keyword` - Describe action","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Infrix":226,"-":30}},{"path":"src/main/java/lulu/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":61}},{"path":"src/main/java/lulu/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"    public static void main(String[] args) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":11}},{"path":"src/main/java/lulu/Lulu.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.command.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.command.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.command.LoadCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * Represents the chatbot, Lulu.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * This class has its own TaskList, Storage and Ui to be passed as arguments for Commands.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * The Commands will then manipulate the data in these arguments, or utilise the information from the arguments","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" * to achieve their respective execution.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"public class Lulu {","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private static final String SAVE \u003d \"./data/lulu.txt\";","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    private boolean isSaveLoaded \u003d false;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    public Lulu() {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        this.tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        this.storage \u003d new Storage(SAVE);","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * Returns the String response from the chatbot to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * @param fullCommand a command input by the user, that may or may not be a valid command","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     * @return the String response to be printed","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public String getResponse(String fullCommand) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        if (!this.isSaveLoaded) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"            if (storage.isSavePresent()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"                Command c \u003d new LoadCommand();","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            isSaveLoaded \u003d true;","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            return c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        } catch (LuluException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"            return ui.showContainer(e.toString());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            return ui.showContainer(ui.showOutOfBounds());","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":51}},{"path":"src/main/java/lulu/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private Lulu lulu \u003d new Lulu();","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * Starts the application.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @param stage the primary stage for this application, onto which","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     *              the application scene can be set.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     *              Applications may create other stages, if needed, but they will not be","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     *              primary stages.","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(lulu);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":38}},{"path":"src/main/java/lulu/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    private Lulu lulu;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    private Image luluImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public void setDuke(Lulu d) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        lulu \u003d d;","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        String response \u003d lulu.getResponse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"                DialogBox.getDukeDialog(response, luluImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":52}},{"path":"src/main/java/lulu/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * This class is used mainly during the start of the chatbot and the end of the chatbot when the ByeCommand is executed.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * Representative of a storage, it helps to read and write to the file, specified by the String path.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class Storage {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private String path;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    private File directoryFile;","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    private static final String DIRECTORY \u003d \"./data\";","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        path \u003d filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        directoryFile \u003d new File(DIRECTORY);","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        directoryFile.mkdir();","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     * Returns true or false for whether a file at a specified location is present.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * This method checks if a file at a specified directory is present. If it is not, a file will be created at the","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * specified location.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * @return true if file at specified location is present, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    public boolean isSavePresent() {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"            boolean isPresent \u003d !(file.createNewFile());","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"            if (!isPresent) {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"                System.out.println(\"Installing text file...\");","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"            return isPresent;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"     * This method writes whatever is in the list to the file at the specified location","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"     * @param list the array of string to be written","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    public void writeSave(ArrayList\u003cString\u003e list) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"            FileWriter myWriter \u003d new FileWriter(path);","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"            int size \u003d list.size();","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"            for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"                myWriter.write(list.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"            myWriter.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"     * This method reads the file at the specified location and loads it into a TaskList.","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"     * @param tasks the TaskList which loads the data","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"    public void readSave(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"            Scanner myReader \u003d new Scanner(file);","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"            while (myReader.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"                String data \u003d myReader.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"                tasks.load(data);","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"Infrix":82}},{"path":"src/main/java/lulu/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * Represents a TaskList that tracks the users\u0027 tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"public class TaskList {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        this.list.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public void remove(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        assert (taskNumber \u003e 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        list.remove(taskNumber - 1);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public int getSize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        return this.list.size();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    public Task get(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        assert (index \u003e\u003d 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        return this.list.get(index);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    public String getRecentTaskDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        assert (list.size() - 1 \u003e\u003d 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        return this.list.get(list.size() - 1).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    public String getTaskDescription(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        assert (taskNumber \u003e 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        return this.list.get(taskNumber - 1).toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"    public void markTask(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        assert (taskNumber \u003e 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        this.list.get(taskNumber - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    public void unmarkTask(int taskNumber) {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        assert (taskNumber \u003e 0);","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"        list.get(taskNumber - 1).markAsUndone();","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"     * Returns a new TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"     * @param description the description of the tasks that the user wishes to find","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"     * @return a new TaskList, with descriptions matching the input","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"    public TaskList find(String description) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        this.list.forEach((task) -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"            if (task.containsDescription(description)) {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"        });","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        return tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"     * Returns a string to display the TaskList, starting from 1., 2., 3.","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the TaskList in a list format","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"    public String printList() {","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"        return this.list.stream()","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"                .map(task -\u003e String.format(\"\\n%d. %s\", list.indexOf(task) + 1, task.toString()))","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"                .reduce(\"\", String::concat);","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"    public void update(int taskNumber, String updateText) {","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"        list.get(taskNumber - 1).update(updateText);","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"     * This method loads tasks into the TaskList, provided it follows a given convention.","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"     * The convention must be as follows \"X`i`Y\",","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"     * where X is the type of task, todo, event or deadline","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"     * i is whether the task has been completed, 0 or 1","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"     * Y is the task description, additional description can be separated by `.","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"     * @param s the task to be loaded","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"    public void load(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"        String[] command \u003d s.split(\"`\");","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"        assert (command[0] \u003d\u003d \"D\" || command[0] \u003d\u003d \"E\" || command[0] \u003d\u003d \"T\");","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"        switch (command[0]) {","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"        case \"D\":","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"            this.add(new Deadline(command[2], command[3]));","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"        case \"E\":","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"            this.add(new Event(command[2], command[3], command[4]));","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Infrix"},"content":"        case \"T\":","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"            this.add(new Todo(command[2]));","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Infrix"},"content":"            if (Integer.valueOf(command[1]) \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"                list.get(list.size() - 1).markAsDone();","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":122}},{"path":"src/main/java/lulu/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.lang.StringBuilder;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":" * This class mainly handles String output to be printed to the User.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":" * It is representative of the chatbot, Lulu, communicating with the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class Ui {","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    private static final String LINE \u003d \"______________________________________\";","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     * Returns a String that can then be printed.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * @param content a variable number of string to be wrapped","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @return the String wrapped around by lines","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    public String showContainer(String... content) {","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        StringBuilder container \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        container.append(LINE);","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        container.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        for (String s : content) {","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"            container.append(s);","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            container.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        container.append(LINE);","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        return container.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public void showGreetText() {","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"Hello! I am lulu (\u003d◕ᆽ◕ฺ\u003d)\");","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the ByeCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"     * @return a String that bids goodbye to the user","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"    public String showExitText() {","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"        return (\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"     * Primarily used by any Command that adds a new task.","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"     * @param taskDescription the description of the task to be added","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"     * @param size            the total number of tasks in the list, after addition","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"     * @return a String to tell the user the task added, and the total number of tasks in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"    public String showAddText(String taskDescription, int size) {","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        text.append(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        text.append(\"  \" + taskDescription);","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        text.append(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"        return text.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the DeleteCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"     * @param taskDescription the description of the task to be deleted","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"     * @param size            the total number of tasks in the list, after deletion","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"     * @return a String to tell the user the task that was deleted, and the total number of tasks in the list","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"    public String showDeleteText(String taskDescription, int size) {","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"        text.append(\"Noted! I\u0027ve removed this task:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"        text.append(\"  \" + taskDescription);","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"        text.append(\"Now you have \" + size + \" tasks in the list.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"        return text.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the ListCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"     * Should be used with the printList() method from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"     * @return a String that comes before the printList() method from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"    public String listText() {","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"        return (\" Here are the tasks in your list: \");","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the FindCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"     * Should be used with the printList() method from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"     * @return a String that comes before the printList() method from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"Infrix"},"content":"    public String listMatchText() {","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"Infrix"},"content":"        return (\"Here are the matching tasks in your list: \");","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the MarkCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"Infrix"},"content":"     * @param taskMark the description of the task to be marked","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"Infrix"},"content":"     * @return a String that tells the user the task that was marked","lastModifiedDate":"2023-02-18"},{"lineNumber":115,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":116,"author":{"gitId":"Infrix"},"content":"    public String showMarkText(String taskMark) {","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"Infrix"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"Infrix"},"content":"        text.append(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"Infrix"},"content":"        text.append(\" \" + taskMark);","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"Infrix"},"content":"        return text.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"Infrix"},"content":"     * Primarily used by the UnmarkCommand class.","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"Infrix"},"content":"     * @param taskUnmark the description of the task to be unmarked","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"Infrix"},"content":"     * @return a String that tells the user the task that was unmarked","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"Infrix"},"content":"    public String showUnmarkText(String taskUnmark) {","lastModifiedDate":"2023-02-18"},{"lineNumber":132,"author":{"gitId":"Infrix"},"content":"        StringBuilder text \u003d new StringBuilder();","lastModifiedDate":"2023-02-18"},{"lineNumber":133,"author":{"gitId":"Infrix"},"content":"        text.append(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"Infrix"},"content":"        text.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"Infrix"},"content":"        text.append(\" \" + taskUnmark);","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"Infrix"},"content":"        return text.toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":137,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":141,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":142,"author":{"gitId":"Infrix"},"content":"     * @return a String tha tells the user that data from save file has been loaded","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"Infrix"},"content":"    public String showLoadComplete() {","lastModifiedDate":"2023-02-18"},{"lineNumber":145,"author":{"gitId":"Infrix"},"content":"        return (\"loading complete.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":146,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":147,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":149,"author":{"gitId":"Infrix"},"content":"     * Returns a String to be printed on the screen.","lastModifiedDate":"2023-02-18"},{"lineNumber":150,"author":{"gitId":"Infrix"},"content":"     * Primarily used for exceptions.","lastModifiedDate":"2023-02-18"},{"lineNumber":151,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"Infrix"},"content":"     * @return a String that tells the user the input command was invalid","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":154,"author":{"gitId":"Infrix"},"content":"    public String showOutOfBounds() {","lastModifiedDate":"2023-02-18"},{"lineNumber":155,"author":{"gitId":"Infrix"},"content":"        return (\"(\u003dಠᆽಠ\u003d) That is out of bounds!\");","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":157,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"Infrix":157}},{"path":"src/main/java/lulu/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used before closing the chatbot to save the users\u0027 tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, the tasks are saved to a save file, specified in the storage attribute.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    public ByeCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * This is the last method to be run before the user closes the chatbot.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be saved","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that writes data in tasks to the specified file location","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     * @return a String that bids goodbye to the user","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        ArrayList\u003cString\u003e toWrite \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        int size \u003d tasks.getSize();","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"            toWrite.add(tasks.get(i).toMemory());","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        storage.writeSave(toWrite);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showExitText());","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":39}},{"path":"src/main/java/lulu/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * Represents a Command. A Command utilises the information from TaskList, Ui or Storage or directly edits","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * attributes within these objects to achieve its execution.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * This method executes the command on the given parameters, depending on the type of command.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be edited","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"     * @param ui      the Ui that displays messages","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that loads data to the TaskList or writes data from the TaskList","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     *                to the specified location","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * @return a String to be displayed to the user","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     * @return true if the command is bye, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":29}},{"path":"src/main/java/lulu/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import lulu.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" * This command is used to create a new Deadline task. When an invalid format has been used by the user,","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":" * the class throws exceptions to remind the user of the valid format.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":" * When executed, a new Deadline task is added to TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":" * It has additional description and by attribute for the Deadline task description and due date.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    public DeadlineCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        String[] deadlineDetails \u003d rest.split(\"/by\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        if (deadlineDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"Please include a deadline using /by\");","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        this.description \u003d deadlineDetails[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        this.by \u003d deadlineDetails[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * This method adds a deadline task to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be added with a deadline task","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the Deadline task added","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize()));","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":47}},{"path":"src/main/java/lulu/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used to delete tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, the specified task is removed from the TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * It has an additional taskNumber attribute for the task to be deleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public DeleteCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * This method deletes a task from tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be deleted with a task","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the task deleted","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        String text \u003d ui.showContainer(ui.showDeleteText(tasks.getTaskDescription(taskNumber), tasks.getSize() - 1));","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        tasks.remove(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"        return text;","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":45}},{"path":"src/main/java/lulu/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"import lulu.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" * This command is used to create a new Event task. When an invalid format has been used by the user,","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":" * the class throws exceptions to remind the user of the valid format.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":" * When executed, a new Event task is added to TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":" * It has additional description and to, from attributes for the Event task description and the period","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":" * the event lasts.","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public EventCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        String[] eventDetails \u003d rest.split(\"/from\");","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        if (eventDetails.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) Please include a timing using /from and /to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        String[] toFrom \u003d eventDetails[1].split(\"/to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        if (toFrom.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) You included /from but missed out /to\");","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        this.description \u003d eventDetails[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        this.from \u003d toFrom[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        this.to \u003d toFrom[1];","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"     * This method adds an event task to tasks upon execution","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be added with an event task","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the Event task added","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize()));","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":54}},{"path":"src/main/java/lulu/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used to find tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, a list of what the user is searching for in his/her TaskList is returned.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * It has an additional description attribute for similar tasks to be found.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public FindCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        this.description \u003d rest;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"     * This method finds matching tasks from TaskList tasks upon execution.","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be searched","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the matching tasks in a list format","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        TaskList matched \u003d tasks.find(this.description);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.listMatchText(), matched.printList());","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":36}},{"path":"src/main/java/lulu/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * This command is used to list tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * When executed, the user\u0027s TaskList is printed in a list format.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public ListCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"     * This method lists the tasks in tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be listed","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the users\u0027 TaskList in a list format.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.listText(), tasks.printList());","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":27}},{"path":"src/main/java/lulu/command/LoadCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * This command is used to load tasks from the user\u0027s Storage.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * When executed, the TaskList is loaded from the file specified in Storage.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public LoadCommand() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"     * This method loads data from storage to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be loaded with data","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage that loads data in the specified file location to tasks","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays that the loading is complete.","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        storage.readSave(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showLoadComplete());","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":27}},{"path":"src/main/java/lulu/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used to mark tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, the specified task is marked from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * It has an additional taskNumber attribute for the task to be marked.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public MarkCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * This method marks the specified task upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList with the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @param storage the storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the description of the task that is marked as completed","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        tasks.markTask(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showMarkText(tasks.getTaskDescription(taskNumber)));","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":44}},{"path":"src/main/java/lulu/command/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":" * This class makes sense of the user\u0027s input by parsing it as valid Commands to be executed.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class Parser {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"     * The available valid commands","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    private enum Commands {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        LIST, MARK, UNMARK, DELETE, DEADLINE, EVENT, TODO, BYE, FIND, UPDATE","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"     * This method parses the string of text by the user into a given command.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"     * If no command is found in the text, an InvalidCommandException will be thrown.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * @param inputCommand the string provided by the user","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     * @return the command generated from the users\u0027 text","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     * @throws LuluException when command is invalid or command is valid with subsequent invalid inputs","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public static Command parse(String inputCommand) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        int size \u003d inputCommand.length();","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        int i \u003d inputCommand.indexOf(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"            Commands cmd \u003d Commands.valueOf(","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"                    i \u003d\u003d -1","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"                            ? inputCommand.toUpperCase()","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"                            : inputCommand.substring(0, i).toUpperCase());","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"            String restOfCommand \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"                    i \u003d\u003d -1","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"                            ? \"\"","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"                            : inputCommand.substring(i + 1, size);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            switch (cmd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"            case LIST:","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"                return new ListCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"            case MARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"                return new MarkCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            case UNMARK:","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"                return new UnmarkCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"            case DELETE:","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"                return new DeleteCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            case DEADLINE:","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"                return new DeadlineCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"            case EVENT:","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"                return new EventCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"            case TODO:","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"                return new TodoCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"            case BYE:","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"            case FIND:","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"                return new FindCommand(restOfCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"            case UPDATE:","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"                return new UpdateCommand(restOfCommand);","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"            default:","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"                throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":67}},{"path":"src/main/java/lulu/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.LuluException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"import lulu.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" * This command is used to create a new ToDo task. When an invalid format has been used by the user,","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":" * the class throws exceptions to remind the user of the valid format.","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":" * When executed, a new ToDo task is added to TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":" * It has an additional description attribute for the ToDo task description.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    private String description;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    public TodoCommand(String rest) throws LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            throw new LuluException(\"(\u003d✖ ᆺ ✖\u003d) The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        this.description \u003d rest;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"     * This method adds a todo task to tasks upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList to be added with a todo task","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * @param storage the Storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the ToDo task added","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"        Task t \u003d new Todo(description);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        tasks.add(t);","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showAddText(tasks.getRecentTaskDescription(), tasks.getSize()));","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":41}},{"path":"src/main/java/lulu/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used to unmark tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, the specified task is unmarked from TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * It has an additional taskNumber attribute for the task to be unmarked.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public UnmarkCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        String[] restCommand \u003d rest.split(\" \");","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        if (restCommand.length \u003e 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(restCommand[0]);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * This method unmarks the specified task upon execution.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList with the task to be unmarked.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @param storage the storage is not relevant in this command","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the description of the task that is unmarked","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        tasks.unmarkTask(taskNumber);","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        return ui.showContainer(ui.showUnmarkText(tasks.getTaskDescription(taskNumber).toString()));","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":44}},{"path":"src/main/java/lulu/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.command;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import lulu.Ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import lulu.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import lulu.exception.InvalidCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" * This command is used to update tasks from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":" * When executed, the specified task is updated from the user\u0027s TaskList.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":" * It has an additional taskNumber attribute for the task to be updated.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private int taskNumber;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private String restOfCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    public UpdateCommand(String rest) throws InvalidCommandException {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        if (rest.isEmpty()) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        int i \u003d rest.indexOf(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        String number \u003d rest.substring(0, i);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        String restOfText \u003d rest.substring(i + 1);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            this.taskNumber \u003d Integer.valueOf(number);","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"            this.restOfCommand \u003d restOfText;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            System.out.println(this.taskNumber);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"            System.out.println(this.restOfCommand);","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     * This method updates the specified task upon execution.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     * @param tasks   the TaskList with the task to be updated.","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"     * @param ui      the UI that displays messages","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"     * @param storage the storage is not relevant in this command","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"     * @return a String that displays the description of the task to be updated","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"            tasks.update(taskNumber, restOfCommand);","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"            return ui.showContainer(tasks.getTaskDescription(taskNumber).toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            return this.restOfCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Infrix":51}},{"path":"src/main/java/lulu/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":" * Represents an exception to be thrown, when the Command given by the user is invalid.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class InvalidCommandException extends LuluException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"        super(\"That\u0027s not a valid command.\");","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":15}},{"path":"src/main/java/lulu/exception/LuluException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.exception;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":" * The general exception to be thrown for the chatbot, Lulu.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class LuluException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"    public LuluException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        return this.getMessage();","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":15}},{"path":"src/main/java/lulu/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":" * Represents a Deadline task. A deadline has an additional attribute, by, to indicate when the task is","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * supposed to be completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * It has an alternative way to display the deadline, utilising the Java LocalDate class.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    final int NUMBER_HYPHENS_IN_DATE \u003d 3;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private String by;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            if (by.split(\"-\").length \u003d\u003d NUMBER_HYPHENS_IN_DATE) {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"                this.byDate \u003d LocalDate.parse(by.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"                this.by \u003d by;","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"INVALID DATE FORMAT, please use xxxx-xx-xx\");","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"     * @return a String representation of a Deadline","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        String s;","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"        if (byDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"            s \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"            s \u003d byDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        return (\"[D]\" + super.toString() + \"(by: \" + s + \")\");","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"     * This method is used to convert a Deadline\u0027s task description and details to a String","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"     * to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"     * @return a String to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"        String s;","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"        if (byDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"            s \u003d by;","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"            s \u003d byDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"            s \u003d \u0027 \u0027 + s;","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"        return (\"D`\" + i + \"`\" + this.description + \"`\" + s + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"     * This method is used to update the description of a Deadline.","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"     * @param text the new description of the Deadline","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"    public void update(String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        String[] updateInformation \u003d text.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        String update \u003d updateInformation[0].toUpperCase();","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"        switch (update) {","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"        case \"DESCRIPTION\":","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"            this.description \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"        case \"BY\":","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"            this.by \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":82}},{"path":"src/main/java/lulu/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":" * Represents an Event task. An Event has additional attributes, from and to, to indicate when","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":" * the task starts and ends.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":" * It has an alternative way to display the starting and ending, utilising the Java LocalDate class.","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    final int NUMBER_HYPHENS_IN_DATE \u003d 3;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"    private String from;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    private String to;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            if (from.split(\"-\").length \u003d\u003d NUMBER_HYPHENS_IN_DATE) {","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"                this.fromDate \u003d LocalDate.parse(from.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"                this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"            if (to.split(\"-\").length \u003d\u003d NUMBER_HYPHENS_IN_DATE) {","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"                this.toDate \u003d LocalDate.parse(to.substring(1, 11));","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"                this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"            System.out.println(\"INVALID DATE FORMAT, please use xxxx-xx-xx\");","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"     * @return a String representation of an Event","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        String s1, s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        if (fromDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            s1 \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"            s1 \u003d fromDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"        if (toDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Infrix"},"content":"            s2 \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Infrix"},"content":"            s2 \u003d toDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Infrix"},"content":"        return (\"[E]\" + super.toString() + \"(from: \" + s1 + \" to: \" + s2 + \")\");","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Infrix"},"content":"     * This method is used to convert an Event\u0027s task description and details to a String","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"Infrix"},"content":"     * to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"Infrix"},"content":"     * @return a String to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"Infrix"},"content":"        String s1, s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Infrix"},"content":"        if (fromDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Infrix"},"content":"            s1 \u003d from;","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"Infrix"},"content":"            s1 \u003d fromDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"Infrix"},"content":"            s1 \u003d \u0027 \u0027 + s1;","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Infrix"},"content":"        if (toDate \u003d\u003d null) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Infrix"},"content":"            s2 \u003d to;","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"Infrix"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Infrix"},"content":"            s2 \u003d toDate.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"Infrix"},"content":"            // space necessary for loading data the next time","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"Infrix"},"content":"            s2 \u003d \u0027 \u0027 + s2;","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Infrix"},"content":"        return (\"E`\" + i + \"`\" + this.description + \"`\" + s1 + \"`\" + s2 + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"Infrix"},"content":"     * This method is used to update the description of an Event.","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"Infrix"},"content":"     * @param text the new description of the Event","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"Infrix"},"content":"    public void update(String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"Infrix"},"content":"        String[] updateInformation \u003d text.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"Infrix"},"content":"        String update \u003d updateInformation[0].toUpperCase();","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"Infrix"},"content":"        switch (update) {","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"Infrix"},"content":"        case \"DESCRIPTION\":","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"Infrix"},"content":"            this.description \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"Infrix"},"content":"        case \"FROM\":","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"Infrix"},"content":"            this.from \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"Infrix"},"content":"        case \"TO\":","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"Infrix"},"content":"            this.to \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":103}},{"path":"src/main/java/lulu/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":" * Represents a task. A task has a description, and a isDone attribute to indicate whether the task has been completed.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":" * All tasks are initially marked as uncompleted.","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":" * A task has methods to update its description and mark or unmark its completion.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"public abstract class Task {","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"    public boolean containsDescription(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"        return this.description.contains(s);","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"    public abstract void update(String updateInformation);","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":43}},{"path":"src/main/java/lulu/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":" * Represents a ToDo task.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"     * @return a String representation of a ToDo","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        return (\"[T]\" + super.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"     * This method is used to convert a ToDo\u0027s task description and details to a String","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"     * to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"     * @return a String to be written to a save file.","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"    public String toMemory() {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"        int i \u003d this.isDone ? 1 : 0;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"        return (\"T`\" + i + \"`\" + this.description + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Infrix"},"content":"    /**","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"Infrix"},"content":"     * This method is used to update the description of a ToDo.","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"Infrix"},"content":"     *","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"Infrix"},"content":"     * @param text the new description of the ToDo","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"Infrix"},"content":"     */","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"Infrix"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Infrix"},"content":"    public void update(String text) {","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Infrix"},"content":"        String[] updateInformation \u003d text.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Infrix"},"content":"        String update \u003d updateInformation[0].toUpperCase();","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Infrix"},"content":"        switch (update) {","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Infrix"},"content":"        case \"DESCRIPTION\":","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Infrix"},"content":"            this.description \u003d updateInformation[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Infrix"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Infrix"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":47}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"         prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        \u003cHBox maxHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: #60f0f7; -fx-background-radius: 10px;\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"                    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"                    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"Infrix"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"Infrix"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"Infrix"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"Infrix"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"Infrix"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":29}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\"","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"            fx:controller\u003d\"lulu.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\"","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\"","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"                prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"                    vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\"/\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"Infrix"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"Infrix"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"Infrix":24}},{"path":"src/test/java/lulu/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import lulu.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    public void testRecentDescription() {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"        list.add(new Todo(\"run\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"        assertEquals(new Todo(\"run\").toString(), list.getRecentTaskDescription());","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":17}},{"path":"src/test/java/lulu/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[D][ ] run (by:  tomorrow)\", new Deadline(\"run \", \" tomorrow\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":12}},{"path":"src/test/java/lulu/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class EventTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[E][ ] run (from:  today  to:  tomorrow)\",","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"                new Event(\"run \", \" today \", \" tomorrow\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":13}},{"path":"src/test/java/lulu/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"package lulu.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"    @Test","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"    public void testStringConversion() {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"        assertEquals(\"[T][ ] run\", new Todo(\"run\").toString());","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Infrix":12}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Infrix"},"content":"blabla","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Infrix"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"Infrix"},"content":"todo borrow book","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"Infrix"},"content":"deadline","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Infrix"},"content":"deadline return","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"Infrix"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Infrix"},"content":"event","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Infrix"},"content":"event project","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Infrix"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"Infrix"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Infrix"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Infrix"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Infrix"},"content":"mark 3","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Infrix"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Infrix"},"content":"delete 2","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"Infrix"},"content":"bye","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"Infrix"},"content":"","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Infrix":22}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Infrix"},"content":"java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Infrix":1,"-":20}}]
