[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"checkstyle {","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    testImplementation \u0027junit:junit:4.13.1\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"    mainClassName \u003d \"berry.Launcher\"","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    archiveBaseName \u003d \"berry\"","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"IsabelChong":27,"-":36}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"# üìñ Guide to Berry the Task Manager Bot","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"## üçíFeaturesüçí","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"### 1. Quick Task Management","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"\u003cp\u003e Use Berry just like a Command Line Interface (CLI)! \u003c/p\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"\u003cp\u003e This means that if you are a quick typer, Berry makes your task managament even faster! ‚ö°Ô∏è \u003c/p\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"### 2. Interactive ChatBot","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"\u003cp\u003e Finished your task and want to finally delete it or mark it as done?\u003c/p\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"\u003cp\u003e Berry feels happy for you~ See how her apperance changes when you are being productive!\u003c/p\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"### 3. Categorise Your Tasks `#amazing`","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"\u003cp\u003e Why put all your tasks together? \u003c/p\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"You can hashtag them and put them into categories","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"## üçíUsageüçí","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"### `help` - shows help menu","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"Got stuck in between and don\u0027t feel like opening this website?","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"Just ask berry to help you in app \u003c:","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"### `todo \u003ctask_name\u003e [#\u003chash_tag\u003e]` - adds a task to do ","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"This adds a new task for berry to manage.","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"`todo get dinner for family`","lastModifiedDate":"2023-02-16"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"You can do it! I\u0027ve added this task for ya","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    [T][ ] get dinner for family","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"### `deadline \u003ctask_name\u003e /by\u003cYYYY-MM-DD\u003e [#\u003chash_tag\u003e]` - adds a task with a deadline","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"This adds a new task with a deadline for berry to manage.","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"`deadline finish assignment /by 2023-12-30`","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"You can do it! I\u0027ve added this task for ya","lastModifiedDate":"2023-02-16"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"    [D][ ] finish assignment (by: Dec 30 2023)","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"### `event \u003ctask_name\u003e /from\u003cYYYY-MM-DD\u003e /to\u003cYYYY-MM-DD\u003e [#\u003chash_tag\u003e]` - adds an event","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"This adds a new task as an event between a time period for berry to manage.","lastModifiedDate":"2023-02-16"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"`event flea market popup /from 2023-02-19 /to 2023-03-19`","lastModifiedDate":"2023-02-16"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"You can do it! I\u0027ve added this task for ya","lastModifiedDate":"2023-02-16"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"    [E][ ] flea market popup (from: Feb 19 2023 to: Mar 19 2023)","lastModifiedDate":"2023-02-16"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"### `list` - show all tasks","lastModifiedDate":"2023-02-16"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"This asks berry to show all tasks that is being managed at the moment.","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"`list`","lastModifiedDate":"2023-02-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"Here\u0027s what I have for you:","lastModifiedDate":"2023-02-16"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"    1. [T][ ] get dinner for family","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"    2. [D][ ] finish assignment (by: Dec 30 2023)","lastModifiedDate":"2023-02-16"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"    3. [E][ ] flea market popup (from: Feb 19 2023 to: Mar 19 2023) ","lastModifiedDate":"2023-02-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"### `mark \u003cindex\u003e` - mark a task with the list index as done","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"This asks berry to mark the task indexed by the _list index_, that is seen in your most recent call to `list`, as done.","lastModifiedDate":"2023-02-16"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"`mark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":112,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":113,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":114,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":115,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":116,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":117,"author":{"gitId":"IsabelChong"},"content":"Alright~ I\u0027ll set the task as done!","lastModifiedDate":"2023-02-16"},{"lineNumber":118,"author":{"gitId":"IsabelChong"},"content":"    [T][X] get dinner for family","lastModifiedDate":"2023-02-16"},{"lineNumber":119,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":120,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":121,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":122,"author":{"gitId":"IsabelChong"},"content":"### `unmark \u003cindex\u003e` - mark a task with the list index as not done","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":124,"author":{"gitId":"IsabelChong"},"content":"This asks berry to mark the task indexed by the _list index_, that is seen in your most recent call to `list`, as not done.","lastModifiedDate":"2023-02-16"},{"lineNumber":125,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":126,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":127,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":128,"author":{"gitId":"IsabelChong"},"content":"`unmark 1`","lastModifiedDate":"2023-02-16"},{"lineNumber":129,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":130,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":131,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":132,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":133,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":134,"author":{"gitId":"IsabelChong"},"content":"Okay! I\u0027ll set the task as not done","lastModifiedDate":"2023-02-16"},{"lineNumber":135,"author":{"gitId":"IsabelChong"},"content":"    [T][ ] get dinner for family","lastModifiedDate":"2023-02-16"},{"lineNumber":136,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":137,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":138,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":139,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":140,"author":{"gitId":"IsabelChong"},"content":"### `delete \u003cindex\u003e` - deletes a task with the list index","lastModifiedDate":"2023-02-17"},{"lineNumber":141,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":142,"author":{"gitId":"IsabelChong"},"content":"This asks berry to delete the task indexed by the _list index_, that is seen in your most recent call to `list`.","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":144,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"IsabelChong"},"content":"`delete 1`","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":151,"author":{"gitId":"IsabelChong"},"content":"Here you go! I\u0027ve deleted this task for ya","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"IsabelChong"},"content":"    [T][ ] get dinner for family","lastModifiedDate":"2023-02-17"},{"lineNumber":153,"author":{"gitId":"IsabelChong"},"content":"You now have 2 task(s) in the list","lastModifiedDate":"2023-02-17"},{"lineNumber":154,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-17"},{"lineNumber":155,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":156,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":157,"author":{"gitId":"IsabelChong"},"content":"### `find \u003ckeyword\u003e` - searches for tasks which contain the keyword","lastModifiedDate":"2023-02-16"},{"lineNumber":158,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":159,"author":{"gitId":"IsabelChong"},"content":"This asks berry to search for tasks which contains the keyword given.","lastModifiedDate":"2023-02-16"},{"lineNumber":160,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":161,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":162,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":163,"author":{"gitId":"IsabelChong"},"content":"`find dinner`","lastModifiedDate":"2023-02-16"},{"lineNumber":164,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":165,"author":{"gitId":"IsabelChong"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":166,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":167,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":168,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":169,"author":{"gitId":"IsabelChong"},"content":"Here\u0027s what I found for ya","lastModifiedDate":"2023-02-16"},{"lineNumber":170,"author":{"gitId":"IsabelChong"},"content":"    1. [T][ ] get dinner for family","lastModifiedDate":"2023-02-16"},{"lineNumber":171,"author":{"gitId":"IsabelChong"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":172,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":173,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":174,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":175,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":176,"author":{"gitId":"IsabelChong"},"content":"### `bye` - exits the program","lastModifiedDate":"2023-02-16"},{"lineNumber":177,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":178,"author":{"gitId":"IsabelChong"},"content":"Berry will say its goodbyes and wait for your return!","lastModifiedDate":"2023-02-16"},{"lineNumber":179,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":180,"author":{"gitId":"IsabelChong"},"content":"Example of usage:","lastModifiedDate":"2023-02-16"},{"lineNumber":181,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":182,"author":{"gitId":"IsabelChong"},"content":"`bye`","lastModifiedDate":"2023-02-16"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":184,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-16"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":188,"author":{"gitId":"IsabelChong"},"content":"Bye! I hope Berry was helpful to you \u003c:","lastModifiedDate":"2023-02-16"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-16"},{"lineNumber":190,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":191,"author":{"gitId":"IsabelChong"},"content":"---","lastModifiedDate":"2023-02-16"},{"lineNumber":192,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":193,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":194,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"IsabelChong":166,"-":28}},{"path":"src/main/java/berry/Berry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.parser.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"public class Berry {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    // Default path for if given file path throws an {@code InvalidStorageFilePathException}","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public static final String DEFAULT_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    // Functionality","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public Berry() throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        this(DEFAULT_PATH);","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"     * Initialises user interaction interface, storage files and task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"     * @param filePath is the file path to load data from/save data into","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"     * @throws Storage.InvalidStorageFilePathException if the given file path is not valid","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    public Berry(String filePath) throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        } catch (IncorrectDateException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"            ui.show(e.getMessage());","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"            String berryOutput \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"            return berryOutput;","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"        } catch (BerryException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"IsabelChong":57}},{"path":"src/main/java/berry/Gui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.MainWindow;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":" * A GUI for Berry using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"public class Gui extends Application {","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    private Berry berry \u003d new Berry();","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    public Gui() throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Gui.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"            mainWindow.setBerry(berry);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            mainWindow.setStage(stage);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"            stage.setTitle(\"üçíBerryüçí\");","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"IsabelChong":39}},{"path":"src/main/java/berry/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"        Application.launch(Gui.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":12}},{"path":"src/main/java/berry/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * Adds a task to the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    /** The task to be added */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private final Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public AddTaskCommand(Task taskToAdd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        this.task \u003d taskToAdd;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d ui.showAdd() + \"\\t\" + tasks.addTask(task);","lastModifiedDate":"2023-02-16"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \"\\n\" + tasks.getNumberOfTasks();","lastModifiedDate":"2023-02-16"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":34}},{"path":"src/main/java/berry/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Represents an executable command.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"     * Sets isExit to true or false.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * @param isExit is the exit status of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":32}},{"path":"src/main/java/berry/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Deletes a task identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    /** The index of the task to be deleted */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showDelete();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":40}},{"path":"src/main/java/berry/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Terminates the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        setExit(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":26}},{"path":"src/main/java/berry/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":" * Finds a task with the keywords given.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    private static String[] listOfKeywords;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    public FindCommand(String[] listOfKeywords) {","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        assert listOfKeywords !\u003d null : \"listOfKeywords should not be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        this.listOfKeywords \u003d listOfKeywords;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d ui.showFind();","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        String listOfTasksWithKeyword \u003d tasks.findTaskIndexWithKeyword(listOfKeywords);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        return output + \"\\t\" + listOfTasksWithKeyword;","lastModifiedDate":"2023-02-16"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":29}},{"path":"src/main/java/berry/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Shows the help menu","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        return ui.showHelpMenu();","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"IsabelChong":24}},{"path":"src/main/java/berry/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Lists all the tasks in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        return ui.showListOfTasks(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":24}},{"path":"src/main/java/berry/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Marks the task as done as identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    // The index of the task to be marked","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showMark() + \"\\t\" + tasks.markTaskDone(taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":39}},{"path":"src/main/java/berry/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Unmarks the task as done as identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    /** The index of the task to be unmarked */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        assert tasks !\u003d null : \"Tasks should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        assert ui !\u003d null : \"Ui should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        assert storage !\u003d null : \"Storage should not be null\";","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showUnmark() + \"\\t\" + tasks.markTaskNotDone(taskIndex);","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":39}},{"path":"src/main/java/berry/exception/BerryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals an exception associated with Berry.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class BerryException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"     * Initialises {@code BerryException}","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"     * @param errorMessage Message to be printed by Berry to show error.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    public BerryException(String errorMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":15}},{"path":"src/main/java/berry/exception/EmptyClauseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the clause input is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class EmptyClauseException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public EmptyClauseException(String clause) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You cannot leave your \u0027\" + clause + \"\u0027 clause empty \u003e\u003c\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the description input is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class EmptyDescriptionException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public EmptyDescriptionException(String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You cannot leave your \" + taskType + \" description blank!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/ExtraArgsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given string as date is not in the acceptable format.","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class ExtraArgsException extends BerryException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public ExtraArgsException(String command) {","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"Please remove any arguments after your \u0027\" + command + \"\u0027 command \u003e\u003c\");","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data is not acceptable and does not fulfil certain constraints.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IllegalValueException extends BerryException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":14}},{"path":"src/main/java/berry/exception/IncorrectDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given string as date is not in the acceptable format.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IncorrectDateException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public IncorrectDateException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"urm... ‚Çç ¬¥‚Ä¢ Àï ‚Ä¢` ‚Çé could I get you to key in your valid date in the format YYYY-MM-DD ?\");","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given index is not present in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IndexOutOfRangeException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public IndexOutOfRangeException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        super(\"Oh no! \\nI cannot find a task with that task number.\\n\"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"                + \"You can check them again by asking me to \u0027list\u0027\");","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":15}},{"path":"src/main/java/berry/exception/MissingClauseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the clause input is missing.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class MissingClauseException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public MissingClauseException(String clause) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You have to include your \u0027\" + clause + \"\u0027 clause \u003e\u003c\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/NoTasksException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that there are no tasks available to list.","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class NoTasksException extends BerryException {","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public NoTasksException() {","lastModifiedDate":"2023-02-16"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"There\u0027s no tasks at the moment!\\nGo take a break, take a kitkat \u003c:\");","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given input cannot be read by Berry.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class UnknownCommandException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"Aww... \u0027\u0027À∂‚Ä¢‚§ô‚Ä¢À∂   I can\u0027t help you with this.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.util.List;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.command.AddTaskCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import berry.command.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import berry.command.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import berry.command.HelpCommand;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"import berry.command.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"import berry.command.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.EmptyClauseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.ExtraArgsException;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IllegalValueException;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.MissingClauseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.UnknownCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":" * Parses user input into {@code Commands}.","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    private static String PREFIX_TAG \u003d \"#\";","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    private static String PREFIX_BY \u003d \"/by\";","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    private static String PREFIX_FROM \u003d \"/from\";","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    private static String PREFIX_TO \u003d \"/to\";","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_COMMAND_TYPE \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_DESCRIPTION \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"     * Types of commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"    private enum CommandType {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, BYE, HELP","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"     * Parses user input into a {@code Command}.","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     * @return command based on the user input","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException if the given string cannot be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    public static Command parseInput(String userInput) throws BerryException {","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        assert userInput !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        assert userInput.length() \u003e 0 : \"Input must contain at least one element\";","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        // Validates for present and valid arguments, else throws BerryException.","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        CommandType commandType \u003d validateCommandType(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"        validateCommand(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"        return parseCommands(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     * Parses the valid input command and returns a corresponding {@code Command}.","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"     * @param commandType type of command given by user","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput the full user input","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresponding {@code Command} based on user input","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException raised when there are invalid commands given","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"    private static Command parseCommands(CommandType commandType,","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"                                         String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        if (isIndexCommands(commandType)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"            return parseIndexCommands(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"        case BYE:","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"        case HELP:","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"        case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"        case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"            return parseTodoCommand(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"            return parseDeadlineCommand(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"        case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"            return parseEventCommand(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"        case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"            return parseFindCommand(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"     * Parses and returns a {@code FindCommand}.","lastModifiedDate":"2023-02-15"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresonding {@code FindCommand}","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"    private static FindCommand parseFindCommand(String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"        String[] keywords \u003d userInput.split(\" \").length \u003e 2","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"                ? userInput.split(\" \", 2)[1].split(\" \") // has more than 1 keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"                : new String[] {userInput.split(\" \")[1]}; // only one keyword","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"        return new FindCommand(keywords);","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"IsabelChong"},"content":"     * Parses and returns a {@code AddTaskCommand} based on the event command given by user.","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresponding {@code AddTaskCommand}","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"IsabelChong"},"content":"    private static AddTaskCommand parseEventCommand(String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"IsabelChong"},"content":"        HashSet\u003cString\u003e tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"IsabelChong"},"content":"        String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"IsabelChong"},"content":"        String stringOfTags;","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"IsabelChong"},"content":"        description \u003d userInput.split(\" \", 2)[1].split(PREFIX_FROM)[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"IsabelChong"},"content":"        String fromDate \u003d userInput.split(PREFIX_FROM)[1].split(PREFIX_TO)[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"IsabelChong"},"content":"        String toDate \u003d containsTag(userInput)","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"IsabelChong"},"content":"                ? userInput.split(PREFIX_TO)[1].split(PREFIX_TAG)[0].trim()","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"IsabelChong"},"content":"                : userInput.split(PREFIX_TO)[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"IsabelChong"},"content":"        // If there is no tags. Exception thrown if description contains tags.","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"IsabelChong"},"content":"        if (!containsTag(userInput)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Event(description, fromDate, toDate));","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"IsabelChong"},"content":"        // Contain tags","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"IsabelChong"},"content":"        stringOfTags \u003d userInput.split(toDate)[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"IsabelChong"},"content":"        tags \u003d splitTags(stringOfTags);","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"IsabelChong"},"content":"        return new AddTaskCommand(new Event(description, fromDate, toDate, tags));","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"IsabelChong"},"content":"     * Parses and returns a {@code AddTaskCommand} based on the deadline command given by user.","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresponding {@code AddTaskCommand}","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"IsabelChong"},"content":"    private static AddTaskCommand parseDeadlineCommand(String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"IsabelChong"},"content":"        String stringOfTags;","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"IsabelChong"},"content":"        HashSet\u003cString\u003e tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"IsabelChong"},"content":"        String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"IsabelChong"},"content":"        description \u003d userInput.split(\" \", 2)[1].split(PREFIX_BY)[0].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"IsabelChong"},"content":"        String byDate \u003d containsTag(userInput)","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"IsabelChong"},"content":"                ? userInput.split(PREFIX_BY)[1].split(PREFIX_TAG)[0].trim()","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"IsabelChong"},"content":"                : userInput.split(PREFIX_BY)[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":155,"author":{"gitId":"IsabelChong"},"content":"        // If there is no tags. Exception thrown if description contains tags.","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"IsabelChong"},"content":"        if (!containsTag(userInput)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Deadline(description, byDate));","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"IsabelChong"},"content":"        // Contain tags","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"IsabelChong"},"content":"        stringOfTags \u003d userInput.split(byDate)[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"IsabelChong"},"content":"        tags \u003d splitTags(stringOfTags);","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"IsabelChong"},"content":"        return new AddTaskCommand(new Deadline(description, byDate, tags));","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":165,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":166,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":167,"author":{"gitId":"IsabelChong"},"content":"     * Parses and returns a {@code AddTaskCommand} based on the todo command given by user.","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresponding {@code AddTaskCommand}","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"IsabelChong"},"content":"    private static AddTaskCommand parseTodoCommand(String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"IsabelChong"},"content":"        String description;","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"IsabelChong"},"content":"        String stringOfTags;","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"IsabelChong"},"content":"        HashSet\u003cString\u003e tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"IsabelChong"},"content":"        description \u003d containsTag(userInput)","lastModifiedDate":"2023-02-15"},{"lineNumber":178,"author":{"gitId":"IsabelChong"},"content":"                ? userInput.split(\" \", 2)[1].split(PREFIX_TAG)[0].trim()","lastModifiedDate":"2023-02-15"},{"lineNumber":179,"author":{"gitId":"IsabelChong"},"content":"                : userInput.split(\" \", 2)[1].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":180,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":181,"author":{"gitId":"IsabelChong"},"content":"        // If there is no tags. Exception thrown if description contains \"#\"","lastModifiedDate":"2023-02-15"},{"lineNumber":182,"author":{"gitId":"IsabelChong"},"content":"        if (!containsTag(userInput)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":183,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Todo(description));","lastModifiedDate":"2023-02-15"},{"lineNumber":184,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":185,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":186,"author":{"gitId":"IsabelChong"},"content":"        // Contain tags","lastModifiedDate":"2023-02-15"},{"lineNumber":187,"author":{"gitId":"IsabelChong"},"content":"        stringOfTags \u003d userInput.split(\"#\")[1];","lastModifiedDate":"2023-02-15"},{"lineNumber":188,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":189,"author":{"gitId":"IsabelChong"},"content":"        tags \u003d splitTags(stringOfTags);","lastModifiedDate":"2023-02-15"},{"lineNumber":190,"author":{"gitId":"IsabelChong"},"content":"        return new AddTaskCommand(new Todo(description, tags));","lastModifiedDate":"2023-02-15"},{"lineNumber":191,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":192,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":193,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":194,"author":{"gitId":"IsabelChong"},"content":"     * Parses and returns a {@code Command} based on a {@code IndexCommand} given by user.","lastModifiedDate":"2023-02-15"},{"lineNumber":195,"author":{"gitId":"IsabelChong"},"content":"     * An {@code IndexCommand} represents a command which takes in an index as argument and include","lastModifiedDate":"2023-02-15"},{"lineNumber":196,"author":{"gitId":"IsabelChong"},"content":"     * {@code MarkCommand}, {@code UnmarkCommand}, {@code DeleteCommand}.","lastModifiedDate":"2023-02-15"},{"lineNumber":197,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":198,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":199,"author":{"gitId":"IsabelChong"},"content":"     * @return a corresponding {@code FindCommand}","lastModifiedDate":"2023-02-15"},{"lineNumber":200,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":201,"author":{"gitId":"IsabelChong"},"content":"    private static Command parseIndexCommands(CommandType commandType, String userInput) {","lastModifiedDate":"2023-02-15"},{"lineNumber":202,"author":{"gitId":"IsabelChong"},"content":"        int index \u003d Integer.parseInt(userInput.split(\" \")[INDEX_DESCRIPTION]);","lastModifiedDate":"2023-02-15"},{"lineNumber":203,"author":{"gitId":"IsabelChong"},"content":"        switch (commandType) {","lastModifiedDate":"2023-02-15"},{"lineNumber":204,"author":{"gitId":"IsabelChong"},"content":"        case MARK:","lastModifiedDate":"2023-02-15"},{"lineNumber":205,"author":{"gitId":"IsabelChong"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":206,"author":{"gitId":"IsabelChong"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-15"},{"lineNumber":207,"author":{"gitId":"IsabelChong"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":208,"author":{"gitId":"IsabelChong"},"content":"        case DELETE:","lastModifiedDate":"2023-02-15"},{"lineNumber":209,"author":{"gitId":"IsabelChong"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2023-02-15"},{"lineNumber":210,"author":{"gitId":"IsabelChong"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":211,"author":{"gitId":"IsabelChong"},"content":"            assert false : \"code should not reach this line\";","lastModifiedDate":"2023-02-15"},{"lineNumber":212,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":213,"author":{"gitId":"IsabelChong"},"content":"        return null;","lastModifiedDate":"2023-02-15"},{"lineNumber":214,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":215,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":216,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":217,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the input string given contains tags, or \u0027#\u0027.","lastModifiedDate":"2023-02-15"},{"lineNumber":218,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":219,"author":{"gitId":"IsabelChong"},"content":"     * @param descriptionAndMaybeTags user input without the initial command type. It will contain a description","lastModifiedDate":"2023-02-15"},{"lineNumber":220,"author":{"gitId":"IsabelChong"},"content":"     *                                and may contain tags","lastModifiedDate":"2023-02-15"},{"lineNumber":221,"author":{"gitId":"IsabelChong"},"content":"     * @return true if there are tags","lastModifiedDate":"2023-02-15"},{"lineNumber":222,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException thrown when \u0027#\u0027 appears in the description of the code. The current version does not","lastModifiedDate":"2023-02-15"},{"lineNumber":223,"author":{"gitId":"IsabelChong"},"content":"     *                          support description containing \u0027#\u0027 in any way.","lastModifiedDate":"2023-02-15"},{"lineNumber":224,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":225,"author":{"gitId":"IsabelChong"},"content":"    private static boolean containsTag(String descriptionAndMaybeTags) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":226,"author":{"gitId":"IsabelChong"},"content":"        if (!descriptionAndMaybeTags.contains(PREFIX_TAG)) { // there is only one word after the command","lastModifiedDate":"2023-02-15"},{"lineNumber":227,"author":{"gitId":"IsabelChong"},"content":"            return false;","lastModifiedDate":"2023-02-15"},{"lineNumber":228,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":229,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":230,"author":{"gitId":"IsabelChong"},"content":"        // check if \"#\" is contained in the description, if yes, throw error.","lastModifiedDate":"2023-02-15"},{"lineNumber":231,"author":{"gitId":"IsabelChong"},"content":"        if (descriptionAndMaybeTags.split(\" \" + PREFIX_TAG, 2)[0].contains(PREFIX_TAG)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":232,"author":{"gitId":"IsabelChong"},"content":"            throw new BerryException(\"Your description should not contain \u0027#\u0027!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":233,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":234,"author":{"gitId":"IsabelChong"},"content":"        return true;","lastModifiedDate":"2023-02-15"},{"lineNumber":235,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":236,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":237,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":238,"author":{"gitId":"IsabelChong"},"content":"     * Takes in a string of tags separated by \u0027#\u0027 and returns a hash set of tags.","lastModifiedDate":"2023-02-15"},{"lineNumber":239,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":240,"author":{"gitId":"IsabelChong"},"content":"     * @param stringOfTags given by user input to represent tags seperated by \u0027#\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":241,"author":{"gitId":"IsabelChong"},"content":"     * @return a hash set of tags","lastModifiedDate":"2023-02-15"},{"lineNumber":242,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":243,"author":{"gitId":"IsabelChong"},"content":"    private static HashSet\u003cString\u003e splitTags(String stringOfTags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":244,"author":{"gitId":"IsabelChong"},"content":"        ArrayList\u003cString\u003e tags \u003d new ArrayList\u003cString\u003e(List.of(stringOfTags.trim().split(\"#\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":245,"author":{"gitId":"IsabelChong"},"content":"        return new HashSet\u003cString\u003e(tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":246,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":247,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":248,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":249,"author":{"gitId":"IsabelChong"},"content":"     * Validates the command type given by the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":250,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":251,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":252,"author":{"gitId":"IsabelChong"},"content":"     * @return a {@code CommandType} based on user input","lastModifiedDate":"2023-02-15"},{"lineNumber":253,"author":{"gitId":"IsabelChong"},"content":"     * @throws UnknownCommandException when the {@code CommandType} is not valid","lastModifiedDate":"2023-02-15"},{"lineNumber":254,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":255,"author":{"gitId":"IsabelChong"},"content":"    private static CommandType validateCommandType(String userInput) throws UnknownCommandException {","lastModifiedDate":"2023-02-15"},{"lineNumber":256,"author":{"gitId":"IsabelChong"},"content":"        String command;","lastModifiedDate":"2023-02-15"},{"lineNumber":257,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":258,"author":{"gitId":"IsabelChong"},"content":"        if (userInput.contains(\" \") \u0026\u0026 userInput.split(\" \").length \u003e 1) { // if there are more than 1 word","lastModifiedDate":"2023-02-15"},{"lineNumber":259,"author":{"gitId":"IsabelChong"},"content":"            command \u003d userInput.split(\" \")[INDEX_COMMAND_TYPE]; // obtain the command type from first word","lastModifiedDate":"2023-02-15"},{"lineNumber":260,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":261,"author":{"gitId":"IsabelChong"},"content":"            command \u003d userInput.trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":262,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":263,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":264,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":265,"author":{"gitId":"IsabelChong"},"content":"            return CommandType.valueOf(command.toUpperCase()); //check if its a valid command type","lastModifiedDate":"2023-02-15"},{"lineNumber":266,"author":{"gitId":"IsabelChong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":267,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-15"},{"lineNumber":268,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":269,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":270,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":271,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":272,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the given arguments are valid for its task to be created.","lastModifiedDate":"2023-01-28"},{"lineNumber":273,"author":{"gitId":"IsabelChong"},"content":"     * Throws {@code BerryException} if the given command is not valid.","lastModifiedDate":"2023-02-15"},{"lineNumber":274,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":275,"author":{"gitId":"IsabelChong"},"content":"     * @param commandType is the type of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":276,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput is the full user input string","lastModifiedDate":"2023-02-15"},{"lineNumber":277,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException if the given string has missing or incomplete arguments","lastModifiedDate":"2023-01-28"},{"lineNumber":278,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":279,"author":{"gitId":"IsabelChong"},"content":"    private static void validateCommand(CommandType commandType, String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":280,"author":{"gitId":"IsabelChong"},"content":"        if (isCommandWithNoArgs(commandType)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":281,"author":{"gitId":"IsabelChong"},"content":"            validateCommandWithNoArgs(userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":282,"author":{"gitId":"IsabelChong"},"content":"            return;","lastModifiedDate":"2023-02-04"},{"lineNumber":283,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":284,"author":{"gitId":"IsabelChong"},"content":"        validateCommandWithArgs(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":285,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":286,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":287,"author":{"gitId":"IsabelChong"},"content":"    // With no args include: LIST, BYE","lastModifiedDate":"2023-02-17"},{"lineNumber":288,"author":{"gitId":"IsabelChong"},"content":"    private static void validateCommandWithNoArgs(String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":289,"author":{"gitId":"IsabelChong"},"content":"        if (!userInput.contains(\" \")) {","lastModifiedDate":"2023-02-17"},{"lineNumber":290,"author":{"gitId":"IsabelChong"},"content":"            return;","lastModifiedDate":"2023-02-17"},{"lineNumber":291,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":292,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":293,"author":{"gitId":"IsabelChong"},"content":"        String[] splitUserInput \u003d userInput.split(\" \");","lastModifiedDate":"2023-02-17"},{"lineNumber":294,"author":{"gitId":"IsabelChong"},"content":"        String command \u003d splitUserInput[INDEX_COMMAND_TYPE];","lastModifiedDate":"2023-02-17"},{"lineNumber":295,"author":{"gitId":"IsabelChong"},"content":"        int length \u003d splitUserInput.length;","lastModifiedDate":"2023-02-17"},{"lineNumber":296,"author":{"gitId":"IsabelChong"},"content":"        if (length \u003d\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":297,"author":{"gitId":"IsabelChong"},"content":"            return;","lastModifiedDate":"2023-02-17"},{"lineNumber":298,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":299,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":300,"author":{"gitId":"IsabelChong"},"content":"        throw new ExtraArgsException(command);","lastModifiedDate":"2023-02-17"},{"lineNumber":301,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":302,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":303,"author":{"gitId":"IsabelChong"},"content":"    // With args include: MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND","lastModifiedDate":"2023-02-15"},{"lineNumber":304,"author":{"gitId":"IsabelChong"},"content":"    private static void validateCommandWithArgs(CommandType commandType,","lastModifiedDate":"2023-02-15"},{"lineNumber":305,"author":{"gitId":"IsabelChong"},"content":"                                                String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":306,"author":{"gitId":"IsabelChong"},"content":"        assert !isCommandWithNoArgs(commandType) : \"commands should not be of type bye or list\";","lastModifiedDate":"2023-02-15"},{"lineNumber":307,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":308,"author":{"gitId":"IsabelChong"},"content":"        if (isIndexCommands(commandType)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":309,"author":{"gitId":"IsabelChong"},"content":"            validateIndexCommands(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":310,"author":{"gitId":"IsabelChong"},"content":"        } else if (isTaskOrFindCommands(commandType)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":311,"author":{"gitId":"IsabelChong"},"content":"            validateTaskFindCommands(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":312,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":313,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException(); // Not a command Berry knows how to handle","lastModifiedDate":"2023-02-15"},{"lineNumber":314,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":315,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":316,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":317,"author":{"gitId":"IsabelChong"},"content":"    private static void validateIndexCommands(CommandType commandType,","lastModifiedDate":"2023-02-15"},{"lineNumber":318,"author":{"gitId":"IsabelChong"},"content":"                                              String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":319,"author":{"gitId":"IsabelChong"},"content":"        String command \u003d commandType.toString().toLowerCase();","lastModifiedDate":"2023-02-15"},{"lineNumber":320,"author":{"gitId":"IsabelChong"},"content":"        if (userInput.endsWith(command)","lastModifiedDate":"2023-02-15"},{"lineNumber":321,"author":{"gitId":"IsabelChong"},"content":"               || userInput.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":322,"author":{"gitId":"IsabelChong"},"content":"            throw new MissingClauseException(\"task index\");","lastModifiedDate":"2023-02-17"},{"lineNumber":323,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":324,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":325,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":326,"author":{"gitId":"IsabelChong"},"content":"            int placeholderToCheckIfInt \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-02-15"},{"lineNumber":327,"author":{"gitId":"IsabelChong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":328,"author":{"gitId":"IsabelChong"},"content":"            throw new IllegalValueException(\"Your task index has to be a number!\");","lastModifiedDate":"2023-02-17"},{"lineNumber":329,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":330,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":331,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":332,"author":{"gitId":"IsabelChong"},"content":"    private static void validateTaskFindCommands(CommandType commandType,","lastModifiedDate":"2023-02-15"},{"lineNumber":333,"author":{"gitId":"IsabelChong"},"content":"                                                 String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":334,"author":{"gitId":"IsabelChong"},"content":"        validateDescription(commandType, userInput);","lastModifiedDate":"2023-02-15"},{"lineNumber":335,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":336,"author":{"gitId":"IsabelChong"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":337,"author":{"gitId":"IsabelChong"},"content":"        case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":338,"author":{"gitId":"IsabelChong"},"content":"            // This case is left empty as the only clause - description, is checked by validateDescription.","lastModifiedDate":"2023-02-15"},{"lineNumber":339,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":340,"author":{"gitId":"IsabelChong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":341,"author":{"gitId":"IsabelChong"},"content":"            checkEmptyOrMissingSingleDateClause(userInput, PREFIX_BY);","lastModifiedDate":"2023-02-15"},{"lineNumber":342,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":343,"author":{"gitId":"IsabelChong"},"content":"        case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":344,"author":{"gitId":"IsabelChong"},"content":"            checkEmptyOrMissingSingleDateClause(userInput, PREFIX_FROM);","lastModifiedDate":"2023-02-15"},{"lineNumber":345,"author":{"gitId":"IsabelChong"},"content":"            checkEmptyOrMissingSingleDateClause(userInput, PREFIX_TO);","lastModifiedDate":"2023-02-15"},{"lineNumber":346,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":347,"author":{"gitId":"IsabelChong"},"content":"            // check missing clause for /from when /to also exists.","lastModifiedDate":"2023-02-15"},{"lineNumber":348,"author":{"gitId":"IsabelChong"},"content":"            // \u0027/to\u0027 has been checked by {@code checkEmptyOrMissingSingleClause(userInput, PREFIX_TO)}","lastModifiedDate":"2023-02-15"},{"lineNumber":349,"author":{"gitId":"IsabelChong"},"content":"            String fromClause \u003d userInput.split(PREFIX_FROM)[1].split(PREFIX_TO)[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":350,"author":{"gitId":"IsabelChong"},"content":"            if (fromClause.trim().isBlank() || fromClause.startsWith(\"#\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":351,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyClauseException(PREFIX_FROM);","lastModifiedDate":"2023-02-15"},{"lineNumber":352,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":353,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":354,"author":{"gitId":"IsabelChong"},"content":"        case FIND:","lastModifiedDate":"2023-02-10"},{"lineNumber":355,"author":{"gitId":"IsabelChong"},"content":"            // This case is left empty as the only clause - keyword, is checked by validateDescription.","lastModifiedDate":"2023-02-15"},{"lineNumber":356,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-02-10"},{"lineNumber":357,"author":{"gitId":"IsabelChong"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":358,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":359,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":360,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":361,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":362,"author":{"gitId":"IsabelChong"},"content":"    private static void checkEmptyOrMissingSingleDateClause(String userInput, String prefix) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":363,"author":{"gitId":"IsabelChong"},"content":"        if (!userInput.contains(prefix)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":364,"author":{"gitId":"IsabelChong"},"content":"            throw new MissingClauseException(prefix);","lastModifiedDate":"2023-02-15"},{"lineNumber":365,"author":{"gitId":"IsabelChong"},"content":"        } else if (userInput.trim().endsWith(prefix) // Empty by clause","lastModifiedDate":"2023-02-15"},{"lineNumber":366,"author":{"gitId":"IsabelChong"},"content":"                || userInput.split(prefix)[1].trim().startsWith(\"#\")) { // Empty by clause - followed by tags","lastModifiedDate":"2023-02-15"},{"lineNumber":367,"author":{"gitId":"IsabelChong"},"content":"            throw new EmptyClauseException(prefix);","lastModifiedDate":"2023-02-15"},{"lineNumber":368,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":369,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":370,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":371,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":372,"author":{"gitId":"IsabelChong"},"content":"     * Checks if description is valid. An invalid description is empty, or includes \"#\".","lastModifiedDate":"2023-02-15"},{"lineNumber":373,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":374,"author":{"gitId":"IsabelChong"},"content":"     * @param commandType the type of command as interpreted by the user input.","lastModifiedDate":"2023-02-15"},{"lineNumber":375,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput User input.","lastModifiedDate":"2023-02-15"},{"lineNumber":376,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException thrown when description is invalid.","lastModifiedDate":"2023-02-15"},{"lineNumber":377,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":378,"author":{"gitId":"IsabelChong"},"content":"    private static void validateDescription(CommandType commandType,","lastModifiedDate":"2023-02-15"},{"lineNumber":379,"author":{"gitId":"IsabelChong"},"content":"                                            String userInput) throws BerryException {","lastModifiedDate":"2023-02-15"},{"lineNumber":380,"author":{"gitId":"IsabelChong"},"content":"        assert commandType \u003d\u003d CommandType.TODO","lastModifiedDate":"2023-02-15"},{"lineNumber":381,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.DEADLINE","lastModifiedDate":"2023-02-15"},{"lineNumber":382,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.EVENT","lastModifiedDate":"2023-02-16"},{"lineNumber":383,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.FIND : \"Only todo, deadline and event has a description clause\";","lastModifiedDate":"2023-02-16"},{"lineNumber":384,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":385,"author":{"gitId":"IsabelChong"},"content":"        String command \u003d commandType.toString().toLowerCase();","lastModifiedDate":"2023-02-15"},{"lineNumber":386,"author":{"gitId":"IsabelChong"},"content":"        if (userInput.trim().endsWith(command)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":387,"author":{"gitId":"IsabelChong"},"content":"            throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-02-15"},{"lineNumber":388,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":389,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":390,"author":{"gitId":"IsabelChong"},"content":"        String description \u003d userInput.split(\" \", 2)[1]; // remove command from userInput","lastModifiedDate":"2023-02-15"},{"lineNumber":391,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":392,"author":{"gitId":"IsabelChong"},"content":"        if (description.isBlank() || description.trim().startsWith(\"#\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":393,"author":{"gitId":"IsabelChong"},"content":"            throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-02-15"},{"lineNumber":394,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":395,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":396,"author":{"gitId":"IsabelChong"},"content":"        if (commandType \u003d\u003d CommandType.DEADLINE \u0026\u0026 description.contains(PREFIX_BY)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":397,"author":{"gitId":"IsabelChong"},"content":"            description \u003d description.split(\"/by\")[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":398,"author":{"gitId":"IsabelChong"},"content":"        } else if (commandType \u003d\u003d CommandType.EVENT \u0026\u0026 description.contains(PREFIX_FROM)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":399,"author":{"gitId":"IsabelChong"},"content":"            description \u003d description.split(\"/from\")[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":400,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":401,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":402,"author":{"gitId":"IsabelChong"},"content":"        if (description.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":403,"author":{"gitId":"IsabelChong"},"content":"            throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-02-15"},{"lineNumber":404,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":405,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":406,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":407,"author":{"gitId":"IsabelChong"},"content":"    private static boolean isCommandWithNoArgs(CommandType commandType) {","lastModifiedDate":"2023-02-15"},{"lineNumber":408,"author":{"gitId":"IsabelChong"},"content":"        return commandType \u003d\u003d CommandType.LIST","lastModifiedDate":"2023-02-17"},{"lineNumber":409,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.BYE","lastModifiedDate":"2023-02-17"},{"lineNumber":410,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.HELP;","lastModifiedDate":"2023-02-17"},{"lineNumber":411,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":412,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":413,"author":{"gitId":"IsabelChong"},"content":"    private static boolean isIndexCommands(CommandType commandType) {","lastModifiedDate":"2023-02-15"},{"lineNumber":414,"author":{"gitId":"IsabelChong"},"content":"        return commandType \u003d\u003d CommandType.MARK","lastModifiedDate":"2023-02-15"},{"lineNumber":415,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.UNMARK","lastModifiedDate":"2023-02-15"},{"lineNumber":416,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.DELETE;","lastModifiedDate":"2023-02-15"},{"lineNumber":417,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":418,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":419,"author":{"gitId":"IsabelChong"},"content":"    private static boolean isTaskOrFindCommands(CommandType commandType) {","lastModifiedDate":"2023-02-15"},{"lineNumber":420,"author":{"gitId":"IsabelChong"},"content":"        return commandType \u003d\u003d CommandType.TODO","lastModifiedDate":"2023-02-15"},{"lineNumber":421,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.DEADLINE","lastModifiedDate":"2023-02-15"},{"lineNumber":422,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.EVENT","lastModifiedDate":"2023-02-15"},{"lineNumber":423,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.FIND;","lastModifiedDate":"2023-02-15"},{"lineNumber":424,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":425,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":425}},{"path":"src/main/java/berry/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IllegalValueException;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    // Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"berry.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    // The filePath given by Berry","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    private String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public Storage() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        if (!isValidPath(filePath)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"            throw new InvalidStorageFilePathException(\"file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"     * Returns true if the given path is valid as a storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"     * The file path is considered valid if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    private static boolean isValidPath(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        return filePath.endsWith(\".txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     * Saves the data in the task list into the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"     * @param tasks are the tasks to be added into the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"            FileWriter writer \u003d new FileWriter(createFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"            for (Task taskToAdd : tasks.getList()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"                writer.write(taskToAdd.interpretTaskToText() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     * Loads the data from this storage file to store into the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     * @return an empty task list if the file does not exist, or is not a regular file.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     *      else returns a task list filled with tasks from the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"     * @throws FileNotFoundException if the file could not be found.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        Scanner sc \u003d new Scanner(createFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"            Task taskToLoad \u003d Task.interpretTextToTask(sc.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"            listOfTasks.add(taskToLoad);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new file.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"     * @return the new file created if it does not exist, else returns the existing file.","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"    private File createFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        File folder \u003d new File(filePath.split(\"/\")[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"            folder.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"            System.err.println(\"Berry cannot open your file :\u003c\");","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"        return dataFile;","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"    public static class InvalidStorageFilePathException extends IllegalValueException {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"            super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":111}},{"path":"src/main/java/berry/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    // The date to do the task by","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, String by) throws IncorrectDateException {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignDate(by);","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, boolean isDone, String by) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignDate(by);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, String by, HashSet\u003cString\u003e tags) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        super(description, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignDate(by);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, boolean isDone, String by, HashSet\u003cString\u003e tags) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignDate(by);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    private void checkAndAssignDate(String by) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing a deadline task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"D | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \" |t\";","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":85}},{"path":"src/main/java/berry/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * Represents an event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    // The date the task will range from and to","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, String from, String to) throws IncorrectDateException {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"            checkAndAssignFromDate(from);","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"            checkAndAssignToDate(to);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, boolean isDone, String from, String to) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignFromDate(from);","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignToDate(to);","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, String from, String to, HashSet\u003cString\u003e tags) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        super(description, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignFromDate(from);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignToDate(to);","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, boolean isDone, String from, String to, HashSet\u003cString\u003e tags) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignFromDate(from);","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        checkAndAssignToDate(to);","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    private void checkAndAssignFromDate(String from) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"            this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"    private void checkAndAssignToDate(String to) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"            this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing an event task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"E | \" + this.getStatusIcon() + \" | \" + this.description + \" | \"","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"                + this.from + \" | \" + this.to;","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \" |t\";","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"                        + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":100}},{"path":"src/main/java/berry/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Represents a task class.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_COMMAND_TYPE \u003d 0;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_ISDONE \u003d 1;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_DESCRIPTION \u003d 2;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_DEADLINE_BY \u003d 3;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_EVENT_FROM \u003d 3;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    private static int INDEX_EVENT_TO \u003d 4;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    protected HashSet\u003cString\u003e tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        this.tags \u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        this.tags \u003d null;","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description, HashSet\u003cString\u003e tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description, boolean isDone, HashSet\u003cString\u003e tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskAsDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"        return this.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskAsNotDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"        return this.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     * Returns a representative string to indicate its isDone status.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing its isDone status","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        return isDone ? \"X\" : \"  \";","lastModifiedDate":"2023-01-25"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"    public HashSet\u003cString\u003e getTags() {","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        return tags;","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-10"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the task description contains the keyword.","lastModifiedDate":"2023-02-10"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"     * @param keyword the string to check if description contains it","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"     * @return true if keyword is contained","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"    public boolean hasKeyword(String ... keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"        for (String word : keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"            if (description.contains(word)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"                return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"     * Translates a task to a formatted string to be saved into a file.","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"     * @return a formatted string based on its task type","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"    public abstract String interpretTaskToText();","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"     * Translates a line in the data file to a task variable.","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"     * @param fileLine is the line read from the file","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"     * @return a task class which is interpreted based on the file input","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"    public static Task interpretTextToTask(String fileLine) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"        String[] arrOfVariables \u003d fileLine.split(\" \\\\| \"); // Splits up based on \" | \"","lastModifiedDate":"2023-02-15"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"        String taskType \u003d arrOfVariables[INDEX_COMMAND_TYPE].trim();","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"        String isDoneStatus \u003d arrOfVariables[INDEX_ISDONE];","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"        boolean isDone \u003d isDoneStatus.equals(\"X\") ? true : false;","lastModifiedDate":"2023-01-25"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"        if (containTags(fileLine)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"IsabelChong"},"content":"            String[] arrOfDetailsAndTags \u003d fileLine.split(\" \\\\|t\", 2);","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"IsabelChong"},"content":"            arrOfVariables \u003d arrOfDetailsAndTags[0].split(\" \\\\| \");","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"IsabelChong"},"content":"            HashSet\u003cString\u003e tags \u003d new HashSet\u003cString\u003e(Set.of(arrOfDetailsAndTags[1].split(\" #\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":115,"author":{"gitId":"IsabelChong"},"content":"            tags.remove(0); // Remove empty hash","lastModifiedDate":"2023-02-15"},{"lineNumber":116,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":117,"author":{"gitId":"IsabelChong"},"content":"            return interpretWithTags(taskType, arrOfVariables, tags, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":118,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":119,"author":{"gitId":"IsabelChong"},"content":"        return interpretWithoutTags(taskType, arrOfVariables, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":120,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":122,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"IsabelChong"},"content":"     * Interprets a line from the text file into a Task Object.","lastModifiedDate":"2023-02-15"},{"lineNumber":124,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":125,"author":{"gitId":"IsabelChong"},"content":"     * @param taskType The type of {@code Command}","lastModifiedDate":"2023-02-15"},{"lineNumber":126,"author":{"gitId":"IsabelChong"},"content":"     * @param arrOfVariables An array of variables which was separated by \" | \" in the file line","lastModifiedDate":"2023-02-15"},{"lineNumber":127,"author":{"gitId":"IsabelChong"},"content":"     * @param tags A set of tags which was separated by \" | \" in the file line","lastModifiedDate":"2023-02-15"},{"lineNumber":128,"author":{"gitId":"IsabelChong"},"content":"     * @param isDone Indicates the isDone status of the {@code Task} object","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"IsabelChong"},"content":"     * @return a {@code Task} object as interpreted from the file line","lastModifiedDate":"2023-02-15"},{"lineNumber":130,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"IsabelChong"},"content":"    public static Task interpretWithTags(String taskType, String[] arrOfVariables,","lastModifiedDate":"2023-02-15"},{"lineNumber":132,"author":{"gitId":"IsabelChong"},"content":"                                         HashSet\u003cString\u003e tags, boolean isDone) throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"IsabelChong"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":134,"author":{"gitId":"IsabelChong"},"content":"            return new Todo(arrOfVariables[INDEX_DESCRIPTION], isDone, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":135,"author":{"gitId":"IsabelChong"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":136,"author":{"gitId":"IsabelChong"},"content":"            return new Deadline(arrOfVariables[INDEX_DESCRIPTION], isDone, arrOfVariables[INDEX_DEADLINE_BY], tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"IsabelChong"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":138,"author":{"gitId":"IsabelChong"},"content":"            return new Event(arrOfVariables[INDEX_DESCRIPTION], isDone, arrOfVariables[INDEX_EVENT_FROM],","lastModifiedDate":"2023-02-15"},{"lineNumber":139,"author":{"gitId":"IsabelChong"},"content":"                    arrOfVariables[INDEX_EVENT_TO], tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":140,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":141,"author":{"gitId":"IsabelChong"},"content":"        assert false : \"Unreadable contents from storage file.\"; // Code should not reach this line.","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"IsabelChong"},"content":"        return null;","lastModifiedDate":"2023-02-15"},{"lineNumber":143,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":145,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"IsabelChong"},"content":"     * Interprets a line from the text file into a Task Object.","lastModifiedDate":"2023-02-15"},{"lineNumber":147,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"IsabelChong"},"content":"     * @param taskType the type of {@code Command}","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"IsabelChong"},"content":"     * @param arrOfVariables an array of variables which was separated by \" | \" in the file line","lastModifiedDate":"2023-02-15"},{"lineNumber":150,"author":{"gitId":"IsabelChong"},"content":"     * @param isDone indicates the isDone status of the {@code Task} object","lastModifiedDate":"2023-02-15"},{"lineNumber":151,"author":{"gitId":"IsabelChong"},"content":"     * @return a {@code Task} object as interpreted from the file line","lastModifiedDate":"2023-02-15"},{"lineNumber":152,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":153,"author":{"gitId":"IsabelChong"},"content":"    public static Task interpretWithoutTags(String taskType, String[] arrOfVariables, boolean isDone)","lastModifiedDate":"2023-02-15"},{"lineNumber":154,"author":{"gitId":"IsabelChong"},"content":"            throws IncorrectDateException {","lastModifiedDate":"2023-02-15"},{"lineNumber":155,"author":{"gitId":"IsabelChong"},"content":"        if (taskType.equals(\"T\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":156,"author":{"gitId":"IsabelChong"},"content":"            return new Todo(arrOfVariables[INDEX_DESCRIPTION], isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":157,"author":{"gitId":"IsabelChong"},"content":"        } else if (taskType.equals(\"D\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":158,"author":{"gitId":"IsabelChong"},"content":"            return new Deadline(arrOfVariables[INDEX_DESCRIPTION], isDone, arrOfVariables[INDEX_DEADLINE_BY]);","lastModifiedDate":"2023-02-15"},{"lineNumber":159,"author":{"gitId":"IsabelChong"},"content":"        } else if (taskType.equals(\"E\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":160,"author":{"gitId":"IsabelChong"},"content":"            return new Event(arrOfVariables[INDEX_DESCRIPTION], isDone, arrOfVariables[INDEX_EVENT_FROM],","lastModifiedDate":"2023-02-15"},{"lineNumber":161,"author":{"gitId":"IsabelChong"},"content":"                    arrOfVariables[INDEX_EVENT_TO]);","lastModifiedDate":"2023-02-15"},{"lineNumber":162,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":163,"author":{"gitId":"IsabelChong"},"content":"        assert false : \"Unreadable contents from storage file.\"; // Code should not reach this line.","lastModifiedDate":"2023-02-15"},{"lineNumber":164,"author":{"gitId":"IsabelChong"},"content":"        return null;","lastModifiedDate":"2023-02-08"},{"lineNumber":165,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":166,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":167,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":168,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the file line contains tags for the tasks","lastModifiedDate":"2023-02-15"},{"lineNumber":169,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-15"},{"lineNumber":170,"author":{"gitId":"IsabelChong"},"content":"     * @param input line of input from the file","lastModifiedDate":"2023-02-15"},{"lineNumber":171,"author":{"gitId":"IsabelChong"},"content":"     * @return true if there are tags for the task","lastModifiedDate":"2023-02-15"},{"lineNumber":172,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":173,"author":{"gitId":"IsabelChong"},"content":"    public static boolean containTags(String input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":174,"author":{"gitId":"IsabelChong"},"content":"        return input.contains(\" |t \");","lastModifiedDate":"2023-02-15"},{"lineNumber":175,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":176,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":177,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":178,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":179,"author":{"gitId":"IsabelChong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-25"},{"lineNumber":180,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":181,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":181}},{"path":"src/main/java/berry/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":" * Contains the task list.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    private static ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     * @param task is the task to be added","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        return task.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"     * Deletes an existing task.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\\t\" + listOfTasks.get(index - 1).toString();","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \"\\n\" + getNumberOfTasks();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskDone(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        return t.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskNotDone(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"        return t.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     * Prints tasks which contains the given keyword by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"     * @param keywords is the keyword to be searched against the task descriptions","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"    public String findTaskIndexWithKeyword(String ... keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"        String listTasks \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        for (Task t : listOfTasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"            for (String wordToMatch : keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"                if (t.hasKeyword(wordToMatch)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"                    listTasks +\u003d (listOfTasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"                    break;","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        return listTasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the index given is within range to be handled by commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"     * @return true if the index is within range","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"    public boolean isIndexWithinRange(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d listOfTasks.size()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"    public String getNumberOfTasks() {","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"        return \"You now have \" + listOfTasks.size() + \" task(s) in the list\";","lastModifiedDate":"2023-02-16"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":108}},{"path":"src/main/java/berry/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":" * Represents a todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        super(description, isDone);","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description, boolean isDone, HashSet\u003cString\u003e tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        super(description, isDone, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description, HashSet\u003cString\u003e tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        super(description, tags);","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing a todo task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"T | \" + this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \" |t\";","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"[T]\" + super.toString();","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"        if (this.tags \u003d\u003d null) {","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"            return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"        for (String tag : this.tags) {","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"            if (!tag.isBlank()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"                output +\u003d \" #\" + tag;","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":60}},{"path":"src/main/java/berry/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-02-09"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.Border;","lastModifiedDate":"2023-02-09"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.BorderStroke;","lastModifiedDate":"2023-02-09"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.BorderStrokeStyle;","lastModifiedDate":"2023-02-09"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.BorderWidths;","lastModifiedDate":"2023-02-09"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.CornerRadii;","lastModifiedDate":"2023-02-09"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-09"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"        this.style();","lastModifiedDate":"2023-02-09"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new dialogue box to show the user dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     * @param text user\u0027s input to berry","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     * @param img image of user","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     * @return {@code DialogueBox} which represents the user dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new dialogue box to show berry\u0027s dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"     * @param text berry\u0027s output to user","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"     * @param img image of berry","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"     * @return {@code DialogueBox} which represents berry\u0027s dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"    public static DialogBox getBerryDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-09"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"    private void style() {","lastModifiedDate":"2023-02-16"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"        this.setSpacing(5);","lastModifiedDate":"2023-02-16"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        this.setFillHeight(false);","lastModifiedDate":"2023-02-09"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"        dialog.getStyleClass().add(\"my-dialog\");","lastModifiedDate":"2023-02-16"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"        BorderStroke borderStroke \u003d new BorderStroke(Color.WHITE, BorderStrokeStyle.SOLID,","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"                new CornerRadii(10.0), new BorderWidths(1.0));","lastModifiedDate":"2023-02-09"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"        Border dialogBorder \u003d new Border(borderStroke);","lastModifiedDate":"2023-02-09"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"        dialog.setBorder(dialogBorder);","lastModifiedDate":"2023-02-09"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        dialog.setPadding(new Insets(10, 10, 10, 10));","lastModifiedDate":"2023-02-09"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-09"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":95}},{"path":"src/main/java/berry/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.Berry;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    private Berry berry;","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userDefault.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    private Image berryDefaultImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/berryDefault.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    private Image berryThinkImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/berryHappy.png\"));","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        initialiseWelcomeMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"    public void setBerry(Berry berry) {","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        this.berry \u003d berry;","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Berry\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"    public void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        String response \u003d berry.getResponse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        Image berryImageShown \u003d berryDefaultImage;","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"            pause.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"            pause.play();","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"            berryImageShown \u003d berryThinkImage;","lastModifiedDate":"2023-02-16"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"            String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"            if (command.equals(\"mark\") || command.equals(\"delete\")) {","lastModifiedDate":"2023-02-16"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"                berryImageShown \u003d berryThinkImage;","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getBerryDialog(response, berryImageShown)","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"    private void initialiseWelcomeMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        String dukeText \u003d Ui.showWelcome();","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getBerryDialog(dukeText, berryDefaultImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"IsabelChong":88}},{"path":"src/main/java/berry/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.NoTasksException;","lastModifiedDate":"2023-02-16"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"     * General command to show a string to the ui.","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     * @param toPrint string to be printed to ui","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * @return string to be printed to ui","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public static String show(String toPrint) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        return toPrint;","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        String logo \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        return logo + \"Hey there! \\nI\u0027m Berry the Bunny~ \u003c3 \"","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"                + \"\\nWhat are you looking to plan today?\"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"                + \"\\nType \u0027help\u0027 for the help menu!\";","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        return \"Bye! I hope Berry was helpful to you \u003c: \\n\";","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"    public static String showListOfTasks(TaskList tasks) throws NoTasksException {","lastModifiedDate":"2023-02-16"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d tasks.getList();","lastModifiedDate":"2023-02-16"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        int length \u003d listOfTasks.size();","lastModifiedDate":"2023-02-16"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        if (length \u003d\u003d 0) {","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"            throw new NoTasksException();","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"Here\u0027s what I have for you:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        for (int i \u003d 0; i \u003c length; i++) {","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d \"\\t\" + (i + 1) + \". \" + listOfTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    public static String showUnmark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        return \"Okay! I\u0027ll set the task as not done\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"    public static String showMark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"        return \"Alright~ I\u0027ll set the task as done!\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    public static String showAdd() {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"        return \"You can do it! I\u0027ve added this task for ya\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"    public static String showDelete() {","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"        return \"Here you go! I\u0027ve deleted this task for ya\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"    public static String showFind() {","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"        return \"Here\u0027s what I found for ya\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"        return \"I can\u0027t seem to load the file\\n\";","lastModifiedDate":"2023-02-16"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"    public static String showHelpMenu() {","lastModifiedDate":"2023-02-17"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"Here\u0027s what berry can do:\"","lastModifiedDate":"2023-02-17"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n-----------------Adding Tasks------------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"                + \"\\n1. todo \u003ctask_name\u003e [#hash_tag] \\n\\t- Adds a task you have to do\"","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n2. deadline \u003ctask_name\u003e \\n\\t/by\u003cYYYY-MM-DD\u003e [#hash_tag] \\n\\t- Adds a task with a deadline\"","lastModifiedDate":"2023-02-17"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n3. event \u003ctask_name\u003e /from\u003cYYYY-MM-DD\u003e \\n\\t/to\u003cYYYY-MM-DD\u003e [#hash_tag]\"","lastModifiedDate":"2023-02-17"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"                + \"\\n\\t- Adds an event you have to attend to\"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n----------------Showing Tasks-----------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"            + \"\\nlist \\n\\t- Shows all the tasks you have currently\"","lastModifiedDate":"2023-02-17"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n-----------------Marking tasks-----------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"                + \"\\n1. mark \u003cindex\u003e \\n\\t- Marks a task with index as done\"","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n2. unmark \u003cindex\u003e \\n\\t- Marks a task with the index as not done\"","lastModifiedDate":"2023-02-17"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n-----------------Deleting tasks-----------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"                + \"\\ndelete \u003cindex\u003e \\n\\t- Deletes a task with index\"","lastModifiedDate":"2023-02-17"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n-----------------Finding tasks:-----------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"                + \"\\nfind \u003ckeyword\u003e \"","lastModifiedDate":"2023-02-17"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"            + \"\\n\\t- Shows all the tasks with corresponding task \\n\\tindex which contains the keyword\";","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d showNotice();","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"    public static String showNotice() {","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\\n------------------------------------------------\"","lastModifiedDate":"2023-02-17"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"                + \"\\nNote that \u0027[#hash_tag]\u0027 is optional\";","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d \"\\nE.g. Berry accepts \u0027todo sweep room\u0027 and\\n\\t\\t\u0027todo sweep room #chores\u0027\";","lastModifiedDate":"2023-02-17"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-17"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":107}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        \u003cURL value\u003d\"@../style/style.css\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" minHeight\u003d\"-Infinity\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"94.0\" fitWidth\u003d\"93.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"669.0\" prefWidth\u003d\"405.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"berry.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        \u003cURL value\u003d\"@../style/style.css\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"8.0\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"How can berry help you today?\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"332.0\" layoutY\u003d\"627.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"68.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"625.0\" prefWidth\u003d\"405.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"622.0\" prefWidth\u003d\"401.0\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":20}},{"path":"src/test/java/berry/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * Tests for 0-argument commands \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public void parse_exitCommand_parsedCorrectly() throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        final String input \u003d \"bye\";","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    public void parse_listCommand_parsedCorrectly() throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        final String input \u003d \"list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        parseAndAssertCommandType(input, ListCommand.class);","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"     * @param input to be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"     * @return the parsed command object","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"            String input, Class\u003cT\u003e expectedCommandClass) throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"        final Command result \u003d parser.parseInput(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        return (T) result;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":55}},{"path":"src/test/java/berry/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IllegalValueException;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    public static final String TEST_DATA_FOLDER \u003d \"test/data/StorageTest\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public void constructor_nullFilePath_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public void constructor_noTxtExtension_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(IllegalValueException.class, () -\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"                new Storage(TEST_DATA_FOLDER + \"/\" + \"InvalidFileName\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    public void load_invalidFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        // The file contains valid txt data, but does not match the Person format","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        Storage storage \u003d new Storage(TEST_DATA_FOLDER + \"/\" + \"InvalidData.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(FileNotFoundException.class, () -\u003e storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":32}},{"path":"src/test/java/berry/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkDeadlineTask_successs() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[D][ ] some deadline (by: Feb 2 2022)\", deadline.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_deadlineTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"D |   | some deadline | 2022-02-02\", deadline.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":23}},{"path":"src/test/java/berry/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkEventTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[E][ ] some event (from: Feb 2 2022 to: Feb 2 2022)\", event.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_eventTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"E |   | some event | 2022-02-02 | 2022-02-02\", event.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":23}},{"path":"src/test/java/berry/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    private TaskList tl;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        tl \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public void addTask_correctArgs_addCorrectly() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        final Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        final Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        final Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        final Task[] taskList \u003d {todo, deadline, event};","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        addMultipleTasks(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(3, tl.getList().size());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    public void isIndexWithinRange_withinAndOutOfRange_checkCorrectly() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        final Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        final Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        final Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        final Task[] taskList \u003d {todo, deadline, event};","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        int[] indexesWithinRange \u003d {1, 2, 3};","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        int[] indexesOutOfRange \u003d {-3, 0, 4, 50};","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        addMultipleTasks(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        /* Check for indexes within range of 1 to 3 */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        for (int index : indexesWithinRange) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"            /* Check indexesWithinRange */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"            assertTrue(tl.isIndexWithinRange(index));","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        /* Check for indexes out of range of 1 to 3 */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        for (int index : indexesOutOfRange) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"            /* Check indexesOutOfRange */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"            assertFalse(tl.isIndexWithinRange(index));","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     * Adds each task from the given list into Tasklist tl","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     * @param taskList is the list of tasks to be added into TaskList tl","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    private void addMultipleTasks(Task[] taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"            tl.addTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":73}},{"path":"src/test/java/berry/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public void markAndStatus_markAndUnmarkAll_correctStatus() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        final String marked \u003d \"X\";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        final String unmarked \u003d \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        final String someDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"        Todo todoTask \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadlineTask \u003d new Deadline(\"some deadline\", someDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        Event eventTask \u003d new Event(\"some event\", someDate, someDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        todoTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        deadlineTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        eventTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, todoTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, deadlineTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, eventTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        todoTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        deadlineTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        eventTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, todoTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, deadlineTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, eventTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":36}},{"path":"src/test/java/berry/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkTodoTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[T][ ] some todo\", todo.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_todoTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"T |   | some todo\", todo.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":21}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"todo buy yarn","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"todo buy keychain","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"todo buy label","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"deadline make plushie /by Saturday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"deadline make smt","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"deadline /by Some Day","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"event popup store /from Sunday 1pm /to Monday 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"event idk /from /to 100 days later","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"event /from 10am /to 9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"mark 10","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"unmark 11","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"unmark -3","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"do something like this","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"wb this?","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"mark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"IsabelChong":32}}]
