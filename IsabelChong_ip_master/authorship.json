[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"import java.util.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"import java.io.*;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"enum TaskType {","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"    TODO,","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"    DEADLINE,","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"    EVENT","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * This exception - DukeException handles exceptions specific to Duke","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":" * This class handles the main chatbot line interface","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    public static String TAB \u003d \"    \";","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public static String HOR_BAR \u003d \"✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦✦\";","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     * This function is called at the beginning to greet the user.","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public static void greetingDialogue() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        String logo \u003d TAB + \"૮ ˶ᵔ ᵕ ᵔ˶ ა\";","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + \"Hey there! I\u0027m Berry the Bunny~\\n\" + logo + \"\\n\"","lastModifiedDate":"2023-01-17"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"                + \"    What are you looking to plan today?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * This function is called at the end to see the user off.","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    public static void byeDialogue() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + HOR_BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + \"Bye! I hope Berry was helpful to you ૮꒰˶• ༝ •˶꒱ა\");","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(TAB + HOR_BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"     * This function cuts out the task name and returns it.","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"     * @param taskType The type of command includes \u0027todo\u0027, \u0027deadline\u0027, and \u0027event\u0027.","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * @param input The input given by the user.","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     * @return The task name.","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * @throws DukeException when the input command has not been added to be handled by the chatbot.","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    public static String cutDescription(TaskType taskType, String input) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"            if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"                description \u003d input.substring(5);","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"            } else if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"                description \u003d input.substring(9);","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"            } else","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"                description \u003d input.substring(6);","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"            throw new DukeException(missingInfosMessage(taskType));","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        return description;","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     * This function prints a out of range message.","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"     * @return A message string to indicate out of range task numbers.","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"    public static String outOfRangeMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"        String message \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.HOR_BAR + \"\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"Oh no! I cannot find a task with that task number.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"You can check them again by asking me to \u0027list\u0027\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + Duke.HOR_BAR;","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"     * This function prints a general message for unreadable instructions.","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"     * @return A message string to indicate commands which cannot be handled.","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"    public static String unreadableMessage() {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        String message \u003d Duke.TAB + Duke.HOR_BAR + \"\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + \"Aww... \u0027\u0027૮₍  ˶•⤙•˶ ₎ა  I can\u0027t help you with this.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + \"key in \u0027help\u0027 for the help menu~\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.HOR_BAR;","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"     * This function prints a message for missing information in creating known tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"     * @param taskType The type of command includes \u0027todo\u0027, \u0027deadline\u0027, and \u0027event\u0027.","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"     * @return A message string to indicate missing informations in tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"    public static String missingInfosMessage(TaskType taskType) {","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"        String message \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.HOR_BAR + \"\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"There seems to be missing information(s) in your \" + taskType + \" statement.\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"If you need info, you can ask me to \u0027help\u0027 !\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + Duke.HOR_BAR;","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"     * This function prints a message for specific blank inputs in command.","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"     * @param missingInfo A string to indicate the blank clause.","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"     * @return A message string to indicate blank information in tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"IsabelChong"},"content":"    public static String blankInfoMessage(String missingInfo) {","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"IsabelChong"},"content":"        String message \u003d","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.HOR_BAR + \"\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"Your \" + missingInfo + \" cannot be left empty!\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + \"If you need info, you can ask me to \u0027help\u0027 !\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"IsabelChong"},"content":"                        Duke.TAB + Duke.HOR_BAR;","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"IsabelChong"},"content":"     * This function prints out a help menu for known instructions for the chatbot to execute.","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"IsabelChong"},"content":"     * @return A help menu.","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":125,"author":{"gitId":"IsabelChong"},"content":"    public static String helpMenu() {","lastModifiedDate":"2023-01-18"},{"lineNumber":126,"author":{"gitId":"IsabelChong"},"content":"        String message \u003d Duke.TAB + Duke.HOR_BAR + \"\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":127,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + \"ADDING TASKS\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"todo yourTaskName \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"IsabelChong"},"content":"                \"- Adds a todo task into your task list.\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":130,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"deadline yourTaskName /by yourDeadline \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"IsabelChong"},"content":"                \"- Adds a deadline task into your task list with the given deadline.\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":132,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"event yourTaskName /from eventStartTime /to eventEndTime \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"IsabelChong"},"content":"                \"- Adds an event into your task list with given start and end time.\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":134,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + \"MARKING TASKS\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"mark taskNumber \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"IsabelChong"},"content":"                \"- Marks the task given my task number from the list as done.\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":138,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"unmark taskNumber \" +","lastModifiedDate":"2023-01-18"},{"lineNumber":139,"author":{"gitId":"IsabelChong"},"content":"                \"- Marks the task given my task number from the list as not done.\\n\"+","lastModifiedDate":"2023-01-18"},{"lineNumber":140,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + \"LISTING TASKS\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.TAB + \"list - lists out all your tasks\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"IsabelChong"},"content":"                Duke.TAB + Duke.HOR_BAR;","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"IsabelChong"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"IsabelChong"},"content":"        /* Initialise BufferedReader */","lastModifiedDate":"2023-01-17"},{"lineNumber":149,"author":{"gitId":"IsabelChong"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"IsabelChong"},"content":"        /* Initialise TaskBook class */","lastModifiedDate":"2023-01-17"},{"lineNumber":151,"author":{"gitId":"IsabelChong"},"content":"        TaskBook tb \u003d new TaskBook();","lastModifiedDate":"2023-01-17"},{"lineNumber":152,"author":{"gitId":"IsabelChong"},"content":"        /* Initialise endFlag */","lastModifiedDate":"2023-01-17"},{"lineNumber":153,"author":{"gitId":"IsabelChong"},"content":"        boolean endFlag \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":154,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":155,"author":{"gitId":"IsabelChong"},"content":"        greetingDialogue();","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-17"},{"lineNumber":158,"author":{"gitId":"IsabelChong"},"content":"            while (!endFlag) {","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"IsabelChong"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"IsabelChong"},"content":"                    /* While user has not exited application */","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"IsabelChong"},"content":"                    String input \u003d br.readLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":162,"author":{"gitId":"IsabelChong"},"content":"                    String[] splitInput \u003d input.split(\" \");","lastModifiedDate":"2023-01-17"},{"lineNumber":163,"author":{"gitId":"IsabelChong"},"content":"                    String command \u003d splitInput[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"IsabelChong"},"content":"                    int index;","lastModifiedDate":"2023-01-17"},{"lineNumber":165,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":166,"author":{"gitId":"IsabelChong"},"content":"                    /* Handle commands */","lastModifiedDate":"2023-01-17"},{"lineNumber":167,"author":{"gitId":"IsabelChong"},"content":"                    switch (command) {","lastModifiedDate":"2023-01-17"},{"lineNumber":168,"author":{"gitId":"IsabelChong"},"content":"                        case \"help\":","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"IsabelChong"},"content":"                            System.out.println(helpMenu());","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"IsabelChong"},"content":"                        case \"bye\":","lastModifiedDate":"2023-01-17"},{"lineNumber":172,"author":{"gitId":"IsabelChong"},"content":"                            byeDialogue();","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"IsabelChong"},"content":"                            endFlag \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"IsabelChong"},"content":"                        case \"list\":","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"IsabelChong"},"content":"                            tb.listTasks();","lastModifiedDate":"2023-01-17"},{"lineNumber":177,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":178,"author":{"gitId":"IsabelChong"},"content":"                        case \"mark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":179,"author":{"gitId":"IsabelChong"},"content":"                            index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":180,"author":{"gitId":"IsabelChong"},"content":"                            if (tb.indexWithinRange(index)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":181,"author":{"gitId":"IsabelChong"},"content":"                                tb.markDone(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":182,"author":{"gitId":"IsabelChong"},"content":"                            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":183,"author":{"gitId":"IsabelChong"},"content":"                                throw new DukeException(outOfRangeMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"IsabelChong"},"content":"                            }","lastModifiedDate":"2023-01-17"},{"lineNumber":185,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":186,"author":{"gitId":"IsabelChong"},"content":"                        case \"unmark\":","lastModifiedDate":"2023-01-17"},{"lineNumber":187,"author":{"gitId":"IsabelChong"},"content":"                            index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-17"},{"lineNumber":188,"author":{"gitId":"IsabelChong"},"content":"                            if (tb.indexWithinRange(index)) {","lastModifiedDate":"2023-01-17"},{"lineNumber":189,"author":{"gitId":"IsabelChong"},"content":"                                tb.markNotDone(index);","lastModifiedDate":"2023-01-17"},{"lineNumber":190,"author":{"gitId":"IsabelChong"},"content":"                            } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":191,"author":{"gitId":"IsabelChong"},"content":"                                throw new DukeException(outOfRangeMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"IsabelChong"},"content":"                            }","lastModifiedDate":"2023-01-17"},{"lineNumber":193,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":194,"author":{"gitId":"IsabelChong"},"content":"                        case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"IsabelChong"},"content":"                            index \u003d Integer.parseInt(splitInput[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"IsabelChong"},"content":"                            if (tb.indexWithinRange(index)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"IsabelChong"},"content":"                                tb.deleteTask(index);","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"IsabelChong"},"content":"                            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"IsabelChong"},"content":"                                throw new DukeException(outOfRangeMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"IsabelChong"},"content":"                            }","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"IsabelChong"},"content":"                        default: // types of tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"IsabelChong"},"content":"                            String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"IsabelChong"},"content":"                            TaskType taskType;","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"IsabelChong"},"content":"                            if (command.equals(\"todo\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"IsabelChong"},"content":"                                taskType \u003d TaskType.TODO;","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"IsabelChong"},"content":"                            } else if (command.equals(\"deadline\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"IsabelChong"},"content":"                                taskType \u003d TaskType.DEADLINE;","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"IsabelChong"},"content":"                            } else if (command.equals(\"event\")) {","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"IsabelChong"},"content":"                                taskType \u003d TaskType.EVENT;","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"IsabelChong"},"content":"                            } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":213,"author":{"gitId":"IsabelChong"},"content":"                                throw new DukeException(unreadableMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"IsabelChong"},"content":"                            }","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"IsabelChong"},"content":"                            // changes","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"IsabelChong"},"content":"                            description \u003d cutDescription(taskType, input);","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"IsabelChong"},"content":"                            tb.addTask(taskType, description);","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"IsabelChong"},"content":"                            break;","lastModifiedDate":"2023-01-17"},{"lineNumber":220,"author":{"gitId":"IsabelChong"},"content":"                    }","lastModifiedDate":"2023-01-17"},{"lineNumber":221,"author":{"gitId":"IsabelChong"},"content":"                } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"IsabelChong"},"content":"                    System.out.println(e.getMessage());","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"IsabelChong"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"IsabelChong"},"content":"        } finally {","lastModifiedDate":"2023-01-17"},{"lineNumber":226,"author":{"gitId":"IsabelChong"},"content":"            /* Close the BufferedReader */","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"IsabelChong"},"content":"            br.close();","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":231,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":232,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"IsabelChong"},"content":" * This class manages the Task(s) in a TaskBook recording the number of tasks","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"IsabelChong"},"content":" * and task names.","lastModifiedDate":"2023-01-17"},{"lineNumber":235,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-17"},{"lineNumber":236,"author":{"gitId":"IsabelChong"},"content":"class TaskBook {","lastModifiedDate":"2023-01-17"},{"lineNumber":237,"author":{"gitId":"IsabelChong"},"content":"    private static int numOfTasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":238,"author":{"gitId":"IsabelChong"},"content":"    public static ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":239,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":240,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"IsabelChong"},"content":"     * This function lists out all the tasks in listOfTasks by order of","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"IsabelChong"},"content":"     * its addition into listOfTask.","lastModifiedDate":"2023-01-18"},{"lineNumber":243,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":244,"author":{"gitId":"IsabelChong"},"content":"    public void listTasks() {","lastModifiedDate":"2023-01-17"},{"lineNumber":245,"author":{"gitId":"IsabelChong"},"content":"        int counter \u003d 1;","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":247,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"Here\u0027s what I have for you:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":248,"author":{"gitId":"IsabelChong"},"content":"        for (Task t : listOfTasks) {","lastModifiedDate":"2023-01-17"},{"lineNumber":249,"author":{"gitId":"IsabelChong"},"content":"            System.out.print(Duke.TAB + Duke.TAB + counter++ + \". \");","lastModifiedDate":"2023-01-18"},{"lineNumber":250,"author":{"gitId":"IsabelChong"},"content":"            System.out.print(t.toString() + \"\\n\");","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":252,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":253,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":254,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":255,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":256,"author":{"gitId":"IsabelChong"},"content":"     * This function adds a new task into listOfTasks, and updates the number of tasks in the TaskBook.","lastModifiedDate":"2023-01-18"},{"lineNumber":257,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":258,"author":{"gitId":"IsabelChong"},"content":"     * @param taskType The type of command includes \u0027todo\u0027, \u0027deadline\u0027, and \u0027event\u0027.","lastModifiedDate":"2023-01-18"},{"lineNumber":259,"author":{"gitId":"IsabelChong"},"content":"     * @param description The input given by the user to describe the taskType.","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"IsabelChong"},"content":"     * @throws DukeException when there are missing information, thus unable to create a new task.","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"IsabelChong"},"content":"    public void addTask(TaskType taskType, String description) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":263,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d new Task(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":264,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":265,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":266,"author":{"gitId":"IsabelChong"},"content":"            if (taskType \u003d\u003d TaskType.TODO) {","lastModifiedDate":"2023-01-18"},{"lineNumber":267,"author":{"gitId":"IsabelChong"},"content":"                if (description.isBlank()) throw new DukeException(\"task name\");","lastModifiedDate":"2023-01-18"},{"lineNumber":268,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":269,"author":{"gitId":"IsabelChong"},"content":"                t \u003d new Todo(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":270,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":271,"author":{"gitId":"IsabelChong"},"content":"            } else if (taskType \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-01-18"},{"lineNumber":272,"author":{"gitId":"IsabelChong"},"content":"                String desc \u003d description.split(\"/by\")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":273,"author":{"gitId":"IsabelChong"},"content":"                if (desc.isBlank()) throw new DukeException(\"task name\");","lastModifiedDate":"2023-01-18"},{"lineNumber":274,"author":{"gitId":"IsabelChong"},"content":"                String by \u003d description.split(\"/by\")[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":275,"author":{"gitId":"IsabelChong"},"content":"                if (by.isBlank()) throw new DukeException(\"\u0027by\u0027 clause\");","lastModifiedDate":"2023-01-18"},{"lineNumber":276,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":277,"author":{"gitId":"IsabelChong"},"content":"                t \u003d new Deadline(description.split(\"/\")[0], by);","lastModifiedDate":"2023-01-18"},{"lineNumber":278,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":279,"author":{"gitId":"IsabelChong"},"content":"            } else if (taskType \u003d\u003d TaskType.EVENT) {// event","lastModifiedDate":"2023-01-18"},{"lineNumber":280,"author":{"gitId":"IsabelChong"},"content":"                String desc \u003d description.split(\"/from\")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":281,"author":{"gitId":"IsabelChong"},"content":"                if (desc.isBlank()) throw new DukeException(\"task name\");","lastModifiedDate":"2023-01-18"},{"lineNumber":282,"author":{"gitId":"IsabelChong"},"content":"                String from \u003d description.split(\"/from\")[1].split(\"/to\")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":283,"author":{"gitId":"IsabelChong"},"content":"                if (from.isBlank()) throw new DukeException(\"\u0027from\u0027 clause\");","lastModifiedDate":"2023-01-18"},{"lineNumber":284,"author":{"gitId":"IsabelChong"},"content":"                String to \u003d description.split(\"/to\")[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":285,"author":{"gitId":"IsabelChong"},"content":"                if (to.isBlank()) throw new DukeException(\"\u0027to\u0027 clause\");","lastModifiedDate":"2023-01-18"},{"lineNumber":286,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":287,"author":{"gitId":"IsabelChong"},"content":"                t \u003d new Event(description.split(\"/\")[0], from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":288,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":289,"author":{"gitId":"IsabelChong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":290,"author":{"gitId":"IsabelChong"},"content":"            throw new DukeException(Duke.blankInfoMessage(e.getMessage()));","lastModifiedDate":"2023-01-18"},{"lineNumber":291,"author":{"gitId":"IsabelChong"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":292,"author":{"gitId":"IsabelChong"},"content":"            throw new DukeException(Duke.missingInfosMessage(taskType));","lastModifiedDate":"2023-01-18"},{"lineNumber":293,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":294,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":295,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.add(t);","lastModifiedDate":"2023-01-17"},{"lineNumber":296,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":297,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":298,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"Done and ready to go! I\u0027ve added this task for ya:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":299,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.TAB + t.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":300,"author":{"gitId":"IsabelChong"},"content":"        numOfTasks++;","lastModifiedDate":"2023-01-18"},{"lineNumber":301,"author":{"gitId":"IsabelChong"},"content":"        printNumberOfTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":302,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":303,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":304,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":305,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":306,"author":{"gitId":"IsabelChong"},"content":"     * This function deletes an existing task in listOfTasks, and updates the number of tasks in the TaskBook.","lastModifiedDate":"2023-01-18"},{"lineNumber":307,"author":{"gitId":"IsabelChong"},"content":"     * @param index The index of the task in listOfTasks, starting from index 1.","lastModifiedDate":"2023-01-18"},{"lineNumber":308,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":309,"author":{"gitId":"IsabelChong"},"content":"    public void deleteTask(int index){","lastModifiedDate":"2023-01-18"},{"lineNumber":310,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":311,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"Here you go! I\u0027ve deleted this task for ya:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":312,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.TAB + listOfTasks.get(index - 1).toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":313,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.remove(index - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":314,"author":{"gitId":"IsabelChong"},"content":"        numOfTasks--;","lastModifiedDate":"2023-01-18"},{"lineNumber":315,"author":{"gitId":"IsabelChong"},"content":"        printNumberOfTasks();","lastModifiedDate":"2023-01-18"},{"lineNumber":316,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-18"},{"lineNumber":317,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":318,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":319,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":320,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":321,"author":{"gitId":"IsabelChong"},"content":"     * This function marks the given task at index as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":322,"author":{"gitId":"IsabelChong"},"content":"     * @param index The index of the task in listOfTasks, starting from index 1.","lastModifiedDate":"2023-01-17"},{"lineNumber":323,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":324,"author":{"gitId":"IsabelChong"},"content":"    public void markDone(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":325,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":326,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":327,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"Alright~ I\u0027ll set the task as done! ૮₍ ˶ᵔ ᵕ ᵔ˶ ₎ა\");","lastModifiedDate":"2023-01-18"},{"lineNumber":328,"author":{"gitId":"IsabelChong"},"content":"        t.markAsDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":329,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":330,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":331,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":332,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":333,"author":{"gitId":"IsabelChong"},"content":"     * This function marks the given task at index as not done.","lastModifiedDate":"2023-01-18"},{"lineNumber":334,"author":{"gitId":"IsabelChong"},"content":"     * @param index The index of the task in listOfTasks, starting from index 1.","lastModifiedDate":"2023-01-17"},{"lineNumber":335,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":336,"author":{"gitId":"IsabelChong"},"content":"    public void markNotDone(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":337,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-17"},{"lineNumber":338,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR );","lastModifiedDate":"2023-01-17"},{"lineNumber":339,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"Okay! I\u0027ll set the task as not done. ૮₍ ˃ ⤙ ˂ ₎ა\");","lastModifiedDate":"2023-01-18"},{"lineNumber":340,"author":{"gitId":"IsabelChong"},"content":"        t.markAsNotDone();","lastModifiedDate":"2023-01-17"},{"lineNumber":341,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.HOR_BAR);","lastModifiedDate":"2023-01-17"},{"lineNumber":342,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":343,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":344,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":345,"author":{"gitId":"IsabelChong"},"content":"     * This function checks against the number of tasks in the task book and checks if it is out of range.","lastModifiedDate":"2023-01-18"},{"lineNumber":346,"author":{"gitId":"IsabelChong"},"content":"     * @param index The index of the task in listOfTasks, starting from index 1.","lastModifiedDate":"2023-01-17"},{"lineNumber":347,"author":{"gitId":"IsabelChong"},"content":"     * @return true if index is in range","lastModifiedDate":"2023-01-17"},{"lineNumber":348,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":349,"author":{"gitId":"IsabelChong"},"content":"    public boolean indexWithinRange(int index) {","lastModifiedDate":"2023-01-17"},{"lineNumber":350,"author":{"gitId":"IsabelChong"},"content":"        return index \u003e 0 \u0026\u0026 index \u003c\u003d numOfTasks;","lastModifiedDate":"2023-01-17"},{"lineNumber":351,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":352,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":353,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":354,"author":{"gitId":"IsabelChong"},"content":"     * This function prints out the number of tasks in the task book currently.","lastModifiedDate":"2023-01-18"},{"lineNumber":355,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":356,"author":{"gitId":"IsabelChong"},"content":"    public void printNumberOfTasks() {","lastModifiedDate":"2023-01-18"},{"lineNumber":357,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + \"You now have \" + numOfTasks + \" tasks in the list ૮꒰ˊᗜˋ* ꒱ა\");","lastModifiedDate":"2023-01-18"},{"lineNumber":358,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":359,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":360,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":361,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":362,"author":{"gitId":"IsabelChong"},"content":" * This is a general task class which describes a task by its name.","lastModifiedDate":"2023-01-18"},{"lineNumber":363,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":364,"author":{"gitId":"IsabelChong"},"content":"class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":365,"author":{"gitId":"IsabelChong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":366,"author":{"gitId":"IsabelChong"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":367,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":368,"author":{"gitId":"IsabelChong"},"content":"    /** This constructor creates a Task instance.","lastModifiedDate":"2023-01-17"},{"lineNumber":369,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":370,"author":{"gitId":"IsabelChong"},"content":"     * @param description The name of the task to be created.","lastModifiedDate":"2023-01-17"},{"lineNumber":371,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":372,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":373,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":374,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":375,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":376,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":377,"author":{"gitId":"IsabelChong"},"content":"    /** This function marks the task as done */","lastModifiedDate":"2023-01-17"},{"lineNumber":378,"author":{"gitId":"IsabelChong"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":379,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":380,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.TAB + this.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":381,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":382,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":383,"author":{"gitId":"IsabelChong"},"content":"    /** This function marks the task as not done */","lastModifiedDate":"2023-01-17"},{"lineNumber":384,"author":{"gitId":"IsabelChong"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-01-17"},{"lineNumber":385,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":386,"author":{"gitId":"IsabelChong"},"content":"        System.out.println(Duke.TAB + Duke.TAB + this.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":387,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":388,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":389,"author":{"gitId":"IsabelChong"},"content":"    /** This function returns a string denoting if task is done or not.","lastModifiedDate":"2023-01-17"},{"lineNumber":390,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":391,"author":{"gitId":"IsabelChong"},"content":"     * @return [ ]: Marked as not done","lastModifiedDate":"2023-01-17"},{"lineNumber":392,"author":{"gitId":"IsabelChong"},"content":"     *      or [X]: Marked as done.","lastModifiedDate":"2023-01-17"},{"lineNumber":393,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":394,"author":{"gitId":"IsabelChong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":395,"author":{"gitId":"IsabelChong"},"content":"        if (isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":396,"author":{"gitId":"IsabelChong"},"content":"            return \"[X]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":397,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-17"},{"lineNumber":398,"author":{"gitId":"IsabelChong"},"content":"            return \"[ ]\";","lastModifiedDate":"2023-01-17"},{"lineNumber":399,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":400,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":401,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":402,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":403,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":404,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d getStatusIcon() + \" \" + description;","lastModifiedDate":"2023-01-18"},{"lineNumber":405,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-01-17"},{"lineNumber":406,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":407,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-17"},{"lineNumber":408,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":409,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":410,"author":{"gitId":"IsabelChong"},"content":" * This is a general to-do task.","lastModifiedDate":"2023-01-18"},{"lineNumber":411,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":412,"author":{"gitId":"IsabelChong"},"content":"class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":413,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":414,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":415,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":416,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":417,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":418,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":419,"author":{"gitId":"IsabelChong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":420,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":421,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":422,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":423,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":424,"author":{"gitId":"IsabelChong"},"content":" * This is a task enclosing a deadline.","lastModifiedDate":"2023-01-18"},{"lineNumber":425,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":426,"author":{"gitId":"IsabelChong"},"content":"class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":427,"author":{"gitId":"IsabelChong"},"content":"    protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":428,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":429,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":430,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":431,"author":{"gitId":"IsabelChong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":432,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":433,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":434,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":435,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":436,"author":{"gitId":"IsabelChong"},"content":"        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":437,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":438,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-18"},{"lineNumber":439,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":440,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-18"},{"lineNumber":441,"author":{"gitId":"IsabelChong"},"content":" * This is a task enclosing an event with a from and end time or date.","lastModifiedDate":"2023-01-18"},{"lineNumber":442,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-18"},{"lineNumber":443,"author":{"gitId":"IsabelChong"},"content":"class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":444,"author":{"gitId":"IsabelChong"},"content":"    protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":445,"author":{"gitId":"IsabelChong"},"content":"    protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":446,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":447,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":448,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":449,"author":{"gitId":"IsabelChong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":450,"author":{"gitId":"IsabelChong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":451,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":452,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":453,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":454,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":455,"author":{"gitId":"IsabelChong"},"content":"        return \"[E]\" + super.toString() + \" (from:\" + from + \" to:\" + to +\")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":456,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":457,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"IsabelChong":454,"-":3}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"todo buy yarn","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"todo buy keychain","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"todo buy label","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"deadline make plushie /by Saturday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"deadline make smt","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"deadline /by Some Day","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"event popup store /from Sunday 1pm /to Monday 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"event idk /from /to 100 days later","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"event /from 10am /to 9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"mark 10","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"unmark 11","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"unmark -3","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"do something like this","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"wb this?","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"mark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"IsabelChong":32}}]
