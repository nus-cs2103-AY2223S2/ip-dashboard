[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.11\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    mainClassName \u003d \"berry.Berry\"","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    archiveBaseName \u003d \"berry\"","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"    archiveClassifier \u003d null;","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"checkstyle {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"javafx {","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"    version \u003d \"17.0.2\"","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    modules \u003d [ \u0027javafx.base\u0027, \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027, \u0027javafx.graphics\u0027 ]","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"IsabelChong":29,"-":36}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"@rem limitations under the License.","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@rem  Gradle startup script for Windows","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@rem","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@rem ##########################################################################","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"@rem This is normally unused","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"set APP_HOME\u003d%DIRNAME%","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@rem Find java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":":findJavaFromJavaHome","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"echo.","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2020-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"echo location of your Java installation.","lastModifiedDate":"2020-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"goto fail","lastModifiedDate":"2020-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":":execute","lastModifiedDate":"2020-05-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@rem Setup the command line","lastModifiedDate":"2020-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar","lastModifiedDate":"2020-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"@rem Execute Gradle","lastModifiedDate":"2020-05-25"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":":end","lastModifiedDate":"2020-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2020-05-25"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":":fail","lastModifiedDate":"2020-05-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2020-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2020-05-25"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-02-04"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-02-04"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"if not \"\"\u003d\u003d\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-02-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":":mainEnd","lastModifiedDate":"2020-05-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2020-05-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":":omega","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"IsabelChong":10,"-":82}},{"path":"src/main/java/berry/Berry.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.parser.Parser;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":" * Initialises the application and starts the interaction with the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"public class Berry {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    // Default path for if given file path throws an {@code InvalidStorageFilePathException}","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public static final String DEFAULT_PATH \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    // Functionality","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public Berry() throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        this(DEFAULT_PATH);","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"     * Initialises user interaction interface, storage files and task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"     * @param filePath is the file path to load data from/save data into","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"     * @throws Storage.InvalidStorageFilePathException if the given file path is not valid","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    public Berry(String filePath) throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    public static void main(String[] args) throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        new Berry(\"data/tasks.txt\").run();","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     * Runs the program until termination.","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"    public void run() {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"                Command c \u003d Parser.parseInput(fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            } catch (BerryException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-04"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-04"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"            Command c \u003d Parser.parseInput(input);","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"            String berryOutput \u003d c.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"            return berryOutput;","lastModifiedDate":"2023-02-04"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"        } catch (BerryException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"IsabelChong":76}},{"path":"src/main/java/berry/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    private void flip() {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new dialogue box to show the user dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"     * @param text user\u0027s input to berry","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"     * @param img image of user","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"     * @return {@code DialogueBox} which represents the user dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new dialogue box to show berry\u0027s dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     * @param text berry\u0027s output to user","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"     * @param img image of berry","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"     * @return {@code DialogueBox} which represents berry\u0027s dialogue.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"    public static DialogBox getBerryDialog(String text, Image img) {","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"        db.flip();","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"        return db;","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":75}},{"path":"src/main/java/berry/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class Launcher {","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":12}},{"path":"src/main/java/berry/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":" * A GUI for Berry using FXML.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    private Berry berry \u003d new Berry();","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    public Main() throws Storage.InvalidStorageFilePathException {","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"            AnchorPane anchorPane \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"            Scene scene \u003d new Scene(anchorPane);","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"            MainWindow mainWindow \u003d fxmlLoader.getController();","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"            mainWindow.setBerry(berry);","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"            mainWindow.setStage(stage);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"            stage.show();","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":39}},{"path":"src/main/java/berry/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    private Berry berry;","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userDefault.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    private Image berryImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/berryDefault.png\"));","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        initialiseWelcomeMessage();","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    public void setBerry(Berry berry) {","lastModifiedDate":"2023-02-04"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        this.berry \u003d berry;","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Berry\u0027s reply and then appends them to","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    @FXML","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"    public void handleUserInput() {","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        String response \u003d berry.getResponse(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"            PauseTransition pause \u003d new PauseTransition(Duration.seconds(2));","lastModifiedDate":"2023-02-04"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"            pause.setOnFinished(event -\u003e stage.close());","lastModifiedDate":"2023-02-04"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            pause.play();","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"            userInput.setDisable(true);","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"            sendButton.setDisable(true);","lastModifiedDate":"2023-02-04"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getBerryDialog(response, berryImage)","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"        );","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"    private void initialiseWelcomeMessage() {","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        String dukeText \u003d Ui.showWelcome();","lastModifiedDate":"2023-02-04"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"                DialogBox.getBerryDialog(dukeText, berryImage)","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        );","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":81}},{"path":"src/main/java/berry/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" * Adds a task to the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    /** The task to be added */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private final Task task;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public AddTaskCommand(Task taskToAdd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        this.task \u003d taskToAdd;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d ui.showAdd() + tasks.addTask(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":33}},{"path":"src/main/java/berry/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Represents an executable command.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public abstract class Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    private boolean isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"        return this.isExit;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"     * Sets isExit to true or false.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * @param isExit is the exit status of the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    public void setExit(boolean isExit) {","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        this.isExit \u003d isExit;","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException;","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":32}},{"path":"src/main/java/berry/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Deletes a task identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    /** The index of the task to be deleted */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public DeleteCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showDelete();","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"            tasks.deleteTask(taskIndex);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":36}},{"path":"src/main/java/berry/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Terminates the program.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        setExit(true);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        return ui.showGoodbye();","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":22}},{"path":"src/main/java/berry/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    private static String[] listOfKeywords;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public FindCommand(String[] listOfKeywords) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        assert listOfKeywords !\u003d null : \"listOfKeywords should not be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        this.listOfKeywords \u003d listOfKeywords;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d ui.showFind();","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        String listOfTasksWithKeyword \u003d tasks.findTaskIndexWithKeyword(listOfKeywords);","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        return output + listOfTasksWithKeyword;","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":23}},{"path":"src/main/java/berry/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":" * Lists all the tasks in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        return ui.showListOfTasks(tasks);","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":20}},{"path":"src/main/java/berry/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Marks the task as done as identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    // The index of the task to be marked","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public MarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showMark() + tasks.markTaskDone(taskIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":35}},{"path":"src/main/java/berry/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.command;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IndexOutOfRangeException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.storage.Storage;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.ui.Ui;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Unmarks the task as done as identified by its last displayed index from the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    /** The index of the task to be unmarked */","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static int taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public UnmarkCommand(int taskIndex) {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws BerryException {","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        if (tasks.isIndexWithinRange(taskIndex)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d ui.showUnmark() + tasks.markTaskNotDone(taskIndex);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"            throw new IndexOutOfRangeException();","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        storage.saveTasks(tasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":35}},{"path":"src/main/java/berry/exception/BerryException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals an exception associated with Berry.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class BerryException extends Exception {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"     * Initialises {@code BerryException}","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"     * @param errorMessage Message to be printed by Berry to show error.","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    public BerryException(String errorMessage) {","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":15}},{"path":"src/main/java/berry/exception/EmptyClauseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the clause input is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class EmptyClauseException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public EmptyClauseException(String clause) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You cannot leave your \u0027\" + clause + \"\u0027 clause empty \u003e\u003c\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/EmptyDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the description input is empty.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class EmptyDescriptionException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public EmptyDescriptionException(String taskType) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You cannot leave your \" + taskType + \" description blank!\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/IllegalValueException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data is not acceptable and does not fulfil certain constraints.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":14}},{"path":"src/main/java/berry/exception/IncorrectDateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given string as date is not in the acceptable format.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IncorrectDateException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public IncorrectDateException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"urm... ૮₍ ´• ˕ •` ₎ა could I get you to key in your valid date in the format YYYY-MM-DD ?\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/IndexOutOfRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given index is not present in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class IndexOutOfRangeException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public IndexOutOfRangeException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"Oh no! I cannot find a task with that task number.\\n\"","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"                + \"You can check them again by asking me to \u0027list\u0027\");","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":12}},{"path":"src/main/java/berry/exception/MissingClauseException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that some given data in the clause input is missing.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class MissingClauseException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public MissingClauseException(String clause) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"You have to include your \u0027\" + clause + \"\u0027 clause \u003e\u003c\");","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/exception/UnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.exception;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Signals that the given input cannot be read by Berry.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class UnknownCommandException extends BerryException {","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public UnknownCommandException() {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(\"Aww... \u0027\u0027˶•⤙•˶   I can\u0027t help you with this.\");","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":11}},{"path":"src/main/java/berry/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.parser;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.command.AddTaskCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.command.DeleteCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.command.FindCommand;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import berry.command.MarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.command.UnmarkCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.EmptyClauseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.EmptyDescriptionException;","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.MissingClauseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.UnknownCommandException;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Deadline;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Event;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Todo;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":" * Parses user input into {@code Commands}.","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"     * Types of commands.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    private enum CommandType {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        LIST, MARK, UNMARK, TODO, DEADLINE, EVENT, DELETE, FIND, BYE","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"     * Parses user input into a {@code Command}.","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"     * @param userInput is the full user input string","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"     * @return command based on the user input","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException if the given string cannot be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    public static Command parseInput(String userInput) throws BerryException {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        assert userInput !\u003d null : \"Input cannot be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"        assert userInput.length() \u003e 0 : \"Input must contain at least one element\";","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        String[] splitDescriptionAndDetails \u003d userInput.split(\" \", 2);","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        String[] splitDetails;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        CommandType commandType;","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"            commandType \u003d CommandType.valueOf(splitDescriptionAndDetails[0].toUpperCase());","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        validateCommand(commandType, userInput);","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        switch (commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        case BYE:","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        case LIST:","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"            return new ListCommand();","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"        case MARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            return new MarkCommand(Integer.parseInt(splitDescriptionAndDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"        case UNMARK:","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"            return new UnmarkCommand(Integer.parseInt(splitDescriptionAndDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"        case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Todo(splitDescriptionAndDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"            splitDetails \u003d splitDescriptionAndDetails[1].split(\" /by \");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Deadline(splitDetails[0], splitDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"        case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"            splitDetails \u003d splitDescriptionAndDetails[1].split(\" /from \");","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"            String[] splitFurtherDetails \u003d splitDetails[1].split(\" /to \");","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"            return new AddTaskCommand(new Event(splitDetails[0], splitFurtherDetails[0], splitFurtherDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"        case DELETE:","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"            return new DeleteCommand(Integer.parseInt(splitDescriptionAndDetails[1]));","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"        case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"            if (splitDescriptionAndDetails[1].trim().equals(\"\")) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"                throw new BerryException(\"Please key in a keyword for me to find :\u003c\");","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"            return new FindCommand(splitDescriptionAndDetails[1].split(\" \"));","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the given arguments are valid for its task to be created.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"     * @param commandType is the type of the task","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"     * @param input is the full user input string","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"     * @throws BerryException if the given string has missing or incomplete arguments","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"    private static void validateCommand(CommandType commandType, String input) throws BerryException {","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"        String command \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"        if (!(commandType \u003d\u003d CommandType.TODO","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.DEADLINE","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"                || commandType \u003d\u003d CommandType.EVENT)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"            return;","lastModifiedDate":"2023-02-04"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"        switch(commandType) {","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"        case TODO:","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"            if (input.substring(4).isBlank()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"            if (!input.contains(\"/by \") || !input.contains(\"/by\")) {","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"                throw new MissingClauseException(\"by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"            } else if (input.split(\"/by\")[0].substring(8).isBlank()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"IsabelChong"},"content":"            } else if (input.endsWith(\"/by\") || input.split(\"/by\")[1].isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyClauseException(\"by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":117,"author":{"gitId":"IsabelChong"},"content":"        case EVENT:","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"IsabelChong"},"content":"            if (!input.contains(\"/from \") || !input.contains(\"/from\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":119,"author":{"gitId":"IsabelChong"},"content":"                throw new MissingClauseException(\"from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":120,"author":{"gitId":"IsabelChong"},"content":"            } else if (input.split(\"/from\")[0].substring(5).isBlank()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyDescriptionException(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"IsabelChong"},"content":"            } else if (!input.contains(\"/to \") || !input.contains(\"/to\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":123,"author":{"gitId":"IsabelChong"},"content":"                throw new MissingClauseException(\"to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":124,"author":{"gitId":"IsabelChong"},"content":"            } else if (input.endsWith(\"/to\") || input.split(\"/to\")[1].isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":125,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyClauseException(\"to\");","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"IsabelChong"},"content":"            } else if (input.endsWith(\"/from\") || input.split(\"/to\")[0].split(\"/from\")[1].isBlank()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"IsabelChong"},"content":"                throw new EmptyClauseException(\"from\");","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"IsabelChong"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":130,"author":{"gitId":"IsabelChong"},"content":"        default:","lastModifiedDate":"2023-02-04"},{"lineNumber":131,"author":{"gitId":"IsabelChong"},"content":"            throw new UnknownCommandException();","lastModifiedDate":"2023-02-04"},{"lineNumber":132,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":134,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":134}},{"path":"src/main/java/berry/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.storage;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IllegalValueException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import java.io.File;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":" * Deals with loading tasks from the file and saving tasks in the file.","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"public class Storage {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    // Default file path used if the user doesn\u0027t provide the file name.","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"berry.txt\";","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    // The filePath given by Berry","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    private String filePath;","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     * @throws InvalidStorageFilePathException if the default path is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public Storage() throws InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        this(DEFAULT_STORAGE_FILEPATH);","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"     * @throws InvalidStorageFilePathException if the given file path is invalid","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    public Storage(String filePath) throws InvalidStorageFilePathException {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        if (!isValidPath(filePath)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"            throw new InvalidStorageFilePathException(\"file should end with \u0027.txt\u0027\");","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"     * Returns true if the given path is valid as a storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"     * The file path is considered valid if it ends with \u0027.txt\u0027","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    private static boolean isValidPath(String filePath) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"        return filePath.endsWith(\".txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     * Saves the data in the task list into the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"     * @param tasks are the tasks to be added into the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    public void saveTasks(TaskList tasks) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"            FileWriter writer \u003d new FileWriter(createFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"            for (Task taskToAdd : tasks.getList()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"                writer.write(taskToAdd.interpretTaskToText() + \"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-25"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"            writer.close();","lastModifiedDate":"2023-01-25"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"            System.err.println(e.getMessage());","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     * Loads the data from this storage file to store into the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     * @return an empty task list if the file does not exist, or is not a regular file.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     *      else returns a task list filled with tasks from the storage file.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"     * @throws FileNotFoundException if the file could not be found.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        Scanner sc \u003d new Scanner(createFile());","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"        while (sc.hasNext()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"            Task taskToLoad\u003d Task.interpretTextToTask(sc.nextLine());","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"            listOfTasks.add(taskToLoad);","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"     * Creates a new file.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"     * @return the new file created if it does not exist, else returns the existing file.","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"    private File createFile() {","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"        File dataFile \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        File folder \u003d new File(filePath.split(\"/\")[0]);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"            folder.mkdir();","lastModifiedDate":"2023-01-25"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"            dataFile.createNewFile();","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"            System.err.println(\"Berry cannot open your file :\u003c\");","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"        return dataFile;","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"     * Signals that the given file path does not fulfill the storage filepath constraints.","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"    public static class InvalidStorageFilePathException extends IllegalValueException {","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"        public InvalidStorageFilePathException(String message) {","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"            super(message);","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":111}},{"path":"src/main/java/berry/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    // The date to do the task by","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate by;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, String by) throws IncorrectDateException {","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"            this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public Deadline(String description, boolean isDone, String by) {","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        this.by \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing a deadline task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        return \"D | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.by;","lastModifiedDate":"2023-01-25"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":46}},{"path":"src/main/java/berry/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-25"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-25"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Represents an event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    // The date the task will range from and to","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate from;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    private LocalDate to;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, String from, String to) throws IncorrectDateException {","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        try {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"            this.from \u003d LocalDate.parse(from.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"            this.to \u003d LocalDate.parse(to.trim());","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"            throw new IncorrectDateException();","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    public Event(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        this.from \u003d LocalDate.parse(from);","lastModifiedDate":"2023-01-25"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        this.to \u003d LocalDate.parse(to);","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing an event task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        return \"E | \" + this.getStatusIcon() + \" | \" + this.description + \" | \" + this.from + \" | \" + this.to;","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"                + \" to: \" + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":50}},{"path":"src/main/java/berry/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Represents a task class.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"    private static int NUMBER_VAR_IN_STORAGE_TODO \u003d 3;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    private static int NUMBER_VAR_IN_STORAGE_DEADLINE \u003d 4;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    private static int NUMBER_VAR_IN_STORAGE_EVENT \u003d 5;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    // Indicates if the task is done","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    protected String description;","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskAsDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        return this.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskAsNotDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        return this.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"     * Returns a representative string to indicate its isDone status.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing its isDone status","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-25"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-01-25"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"    /** Checks if the task description contains the keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"     * @param keyword the string to check if description contains it","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"     * @return true if keyword is contained","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"    public boolean hasKeyword(String ... keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        for (String word : keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"            if (description.contains(word)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"                return true;","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"     * Translates a task to a formatted string to be saved into a file.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     * @return a formatted string based on its task type","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"    public abstract String interpretTaskToText();","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"     * Translates a given string in a certain format to a task variable.","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"     * @param s is the line read from the file","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     * @return a task class which is interpreted based on the file input","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"    public static Task interpretTextToTask(String s) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"        String[] listOfVariables \u003d s.split(\" \\\\| \");","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"        int numOfVariables \u003d listOfVariables.length;","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"        String isDoneStatus \u003d listOfVariables[1];","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        boolean isDone \u003d isDoneStatus.equals(\"X\") ? true : false;","lastModifiedDate":"2023-01-25"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"        if (numOfVariables \u003d\u003d NUMBER_VAR_IN_STORAGE_TODO) {","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"            return new Todo(listOfVariables[2], isDone);","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"        } else if (numOfVariables \u003d\u003d NUMBER_VAR_IN_STORAGE_DEADLINE) {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"            return new Deadline(listOfVariables[2], isDone, listOfVariables[3]);","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"        } else if (numOfVariables \u003d\u003d NUMBER_VAR_IN_STORAGE_EVENT) {","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"            return new Event(listOfVariables[2], isDone, listOfVariables[3], listOfVariables[4]);","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"        assert numOfVariables \u003c 0 || numOfVariables \u003e 5 : \"Storage text file is corrupted. Unreadable contents.\";","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"        return null;","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-01-25"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":95}},{"path":"src/main/java/berry/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-25"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":" * Contains the task list.","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class TaskList {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    private static ArrayList\u003cTask\u003e listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        this.listOfTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        this.listOfTasks \u003d listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    public ArrayList\u003cTask\u003e getList() {","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        return listOfTasks;","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"     * Adds a new task into the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"     * @param task is the task to be added","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    public String addTask(Task task) {","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        assert task !\u003d null : \"Task should not be null\";","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.add(task);","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        return task.toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"     * Deletes an existing task.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d listOfTasks.get(index - 1).toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        listOfTasks.remove(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"        output +\u003d getNumberOfTasks();","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskDone(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"        return t.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"    public String markTaskNotDone(int index) {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"        assert index \u003e 0 : \"Task index should be bigger than 0\";","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        Task t \u003d listOfTasks.get(index - 1);","lastModifiedDate":"2023-01-25"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"        return t.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"     * Prints tasks which contains the given keyword by the user.","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"     * @param keywords is the keyword to be searched against the task descriptions","lastModifiedDate":"2023-02-04"},{"lineNumber":74,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":76,"author":{"gitId":"IsabelChong"},"content":"    public String findTaskIndexWithKeyword(String ... keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":77,"author":{"gitId":"IsabelChong"},"content":"        String listTasks \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":78,"author":{"gitId":"IsabelChong"},"content":"        for (Task t : listOfTasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":79,"author":{"gitId":"IsabelChong"},"content":"            for (String wordToMatch : keywords) {","lastModifiedDate":"2023-02-04"},{"lineNumber":80,"author":{"gitId":"IsabelChong"},"content":"                if (t.hasKeyword(wordToMatch)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":81,"author":{"gitId":"IsabelChong"},"content":"                    listTasks +\u003d (listOfTasks.indexOf(t) + 1) + \". \" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":82,"author":{"gitId":"IsabelChong"},"content":"                    break;","lastModifiedDate":"2023-02-04"},{"lineNumber":83,"author":{"gitId":"IsabelChong"},"content":"                }","lastModifiedDate":"2023-02-04"},{"lineNumber":84,"author":{"gitId":"IsabelChong"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"IsabelChong"},"content":"        return listTasks;","lastModifiedDate":"2023-02-04"},{"lineNumber":87,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"IsabelChong"},"content":"     * Checks if the index given is within range to be handled by commands.","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"IsabelChong"},"content":"     * @param index is the number identifying the task given by the user as seen from the task list","lastModifiedDate":"2023-01-28"},{"lineNumber":93,"author":{"gitId":"IsabelChong"},"content":"     * @return true if the index is within range","lastModifiedDate":"2023-01-28"},{"lineNumber":94,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":95,"author":{"gitId":"IsabelChong"},"content":"    public boolean isIndexWithinRange(int index) {","lastModifiedDate":"2023-01-28"},{"lineNumber":96,"author":{"gitId":"IsabelChong"},"content":"        if (index \u003e 0 \u0026\u0026 index \u003c\u003d listOfTasks.size()) {","lastModifiedDate":"2023-01-25"},{"lineNumber":97,"author":{"gitId":"IsabelChong"},"content":"            return true;","lastModifiedDate":"2023-01-25"},{"lineNumber":98,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-25"},{"lineNumber":99,"author":{"gitId":"IsabelChong"},"content":"        return false;","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":101,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":102,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":103,"author":{"gitId":"IsabelChong"},"content":"     * Prints the number of tasks in the task list.","lastModifiedDate":"2023-01-28"},{"lineNumber":104,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":105,"author":{"gitId":"IsabelChong"},"content":"    public String getNumberOfTasks() {","lastModifiedDate":"2023-02-04"},{"lineNumber":106,"author":{"gitId":"IsabelChong"},"content":"        return \"You now have \" + listOfTasks.size() + \" tasks in the list ૮꒰ˊᗜˋ* ꒱ა\";","lastModifiedDate":"2023-02-04"},{"lineNumber":107,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":108,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":108}},{"path":"src/main/java/berry/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":" * Represents a todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-25"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-25"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    public Todo(String description, boolean isDone) {","lastModifiedDate":"2023-01-25"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        super(description);","lastModifiedDate":"2023-01-25"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-25"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"     * @return a string representing a todo task to be saved into the file","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"    public String interpretTaskToText() {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        return \"T | \" + this.getStatusIcon() + \" | \" + this.description;","lastModifiedDate":"2023-01-25"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"    @Override","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"    public String toString() {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-25"}],"authorContributionMap":{"IsabelChong":31}},{"path":"src/main/java/berry/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.ui;","lastModifiedDate":"2023-01-26"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.task.Task;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.task.TaskList;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"/**","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":" * Deals with interactions with the user.","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":" */","lastModifiedDate":"2023-01-26"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    private static Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"     * Reads the user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"     * @return the user input as a string","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    public static String readCommand() {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        String logo \u003d \"\";","lastModifiedDate":"2023-02-04"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        return logo + \"\\nHey there! I\u0027m Berry the Bunny~ ૮ ˶ᵔ ᵕ ᵔ˶ ა\\n\"","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"                + \"What are you looking to plan today?\";","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    public static String showGoodbye() {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        return \"Bye! I hope Berry was helpful to you ˶• ༝ •˶\";","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"    public static String showError(String message) {","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        return message;","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"    public static String showListOfTasks(TaskList tasks) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        ArrayList\u003cTask\u003e listOfTasks \u003d tasks.getList();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        String output \u003d \"Here\u0027s what I have for you:\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        for (int i \u003d 0; i \u003c listOfTasks.size(); i++) {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"            output +\u003d (i + 1) + \". \" + listOfTasks.get(i).toString() + \"\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        return output;","lastModifiedDate":"2023-02-04"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"    public static String showUnmark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"       return \"Okay! I\u0027ll set the task as not done. ₍ ˃ ⤙ ˂ ₎\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    public static String showMark() {","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"        return \"Alright~ I\u0027ll set the task as done! ₍ ˶ᵔ ᵕ ᵔ˶ ₎\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"    public static String showAdd() {","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"        return \"Done and ready to go~ I\u0027ve added this task for ya!\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"    public static String showDelete() {","lastModifiedDate":"2023-02-04"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"        return \"Here you go! I\u0027ve deleted this task for ya.\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"    public static String showFind() {","lastModifiedDate":"2023-02-04"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"        return \"Here\u0027s what I found for ya\\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"    public static String showLoadingError() {","lastModifiedDate":"2023-02-04"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        return \"I can\u0027t seem to load the file ˶\u003e _ \u003c˶ \\n\";","lastModifiedDate":"2023-02-04"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"IsabelChong":72}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"94.0\" fitWidth\u003d\"93.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"berry.MainWindow\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"        \u003cURL value\u003d\"@../style/myStyle.css\" /\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" text\u003d\"Type here!\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"IsabelChong":21}},{"path":"src/test/java/berry/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import berry.command.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ExitCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import berry.command.ListCommand;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.BerryException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    private Parser parser;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        parser \u003d new Parser();","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"     * Tests for 0-argument commands \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"    public void parse_exitCommand_parsedCorrectly() throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        final String input \u003d \"bye\";","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        parseAndAssertCommandType(input, ExitCommand.class);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"    public void parse_listCommand_parsedCorrectly() throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        final String input \u003d \"list\";","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"        parseAndAssertCommandType(input, ListCommand.class);","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"     * Parses input and asserts the class/type of the returned command object.","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"     * @param input to be parsed","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"     * @param expectedCommandClass expected class of returned command","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"     * @return the parsed command object","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"    private \u003cT extends Command\u003e T parseAndAssertCommandType(","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"            String input, Class\u003cT\u003e expectedCommandClass) throws BerryException {","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"        final Command result \u003d parser.parseInput(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        assertTrue(result.getClass().isAssignableFrom(expectedCommandClass));","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        return (T) result;","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":55}},{"path":"src/test/java/berry/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.storage;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IllegalValueException;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"public class StorageTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"    public static final String TEST_DATA_FOLDER \u003d \"test/data/StorageTest\";","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    public void constructor_nullFilePath_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    public void constructor_noTxtExtension_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(IllegalValueException.class, () -\u003e","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"                new Storage(TEST_DATA_FOLDER + \"/\" + \"InvalidFileName\"));","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"    public void load_invalidFormat_exceptionThrown() throws Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        // The file contains valid txt data, but does not match the Person format","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        Storage storage \u003d new Storage(TEST_DATA_FOLDER + \"/\" + \"InvalidData.txt\");","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        assertThrows(FileNotFoundException.class, () -\u003e storage.load());","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":30}},{"path":"src/test/java/berry/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkDeadlineTask_successs() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[D][ ] some deadline (by: Feb 2 2022)\", deadline.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_deadlineTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"D |   | some deadline | 2022-02-02\", deadline.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":22}},{"path":"src/test/java/berry/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class EventTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkEventTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[E][ ] some event (from: Feb 2 2022 to: Feb 2 2022)\", event.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_eventTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"E |   | some event | 2022-02-02 | 2022-02-02\", event.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":22}},{"path":"src/test/java/berry/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    private TaskList tl;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    @BeforeEach","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public void setUp() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        tl \u003d new TaskList();","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"    public void addTask_correctArgs_addCorrectly() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        final Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        final Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        final Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"        final Task[] taskList \u003d {todo, deadline, event};","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        addMultipleTasks(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(3, tl.getList().size());","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    public void isIndexWithinRange_withinAndOutOfRange_checkCorrectly() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"        final String validDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"IsabelChong"},"content":"        final Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"IsabelChong"},"content":"        final Deadline deadline \u003d new Deadline(\"some deadline\", validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"IsabelChong"},"content":"        final Event event \u003d new Event(\"some event\", validDate, validDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"IsabelChong"},"content":"        final Task[] taskList \u003d {todo, deadline, event};","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"IsabelChong"},"content":"        int[] indexesWithinRange \u003d {1, 2, 3};","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"IsabelChong"},"content":"        int[] indexesOutOfRange \u003d {-3, 0, 4, 50};","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"IsabelChong"},"content":"        addMultipleTasks(taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"IsabelChong"},"content":"        /* Check for indexes within range of 1 to 3 */","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"IsabelChong"},"content":"        for (int index : indexesWithinRange) {","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"IsabelChong"},"content":"            /* Check indexesWithinRange */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"IsabelChong"},"content":"            assertTrue(tl.isIndexWithinRange(index));","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"IsabelChong"},"content":"        /* Check for indexes out of range of 1 to 3 */","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"IsabelChong"},"content":"        for (int index : indexesOutOfRange) {","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"IsabelChong"},"content":"            /* Check indexesOutOfRange */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"IsabelChong"},"content":"            assertFalse(tl.isIndexWithinRange(index));","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"IsabelChong"},"content":"    /*","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"IsabelChong"},"content":"     * Utility methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"IsabelChong"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"IsabelChong"},"content":"     * Adds each task from the given list into Tasklist tl","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"IsabelChong"},"content":"     *","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"IsabelChong"},"content":"     * @param taskList is the list of tasks to be added into TaskList tl","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"IsabelChong"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"IsabelChong"},"content":"    private void addMultipleTasks(Task[] taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"IsabelChong"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"IsabelChong"},"content":"            tl.addTask(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"IsabelChong"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":72,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":73}},{"path":"src/test/java/berry/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class TaskTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    public void markAndStatus_markAndUnmarkAll_correctStatus() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        final String marked \u003d \"X\";","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        final String unmarked \u003d \" \";","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"        final String someDate \u003d \"2022-02-02\";","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"        Todo todoTask \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"        Deadline deadlineTask \u003d new Deadline(\"some deadline\", someDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        Event eventTask \u003d new Event(\"some event\", someDate, someDate);","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"        todoTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"        deadlineTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"        eventTask.markTaskAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, todoTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, deadlineTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(marked, eventTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"        todoTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"        deadlineTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"        eventTask.markTaskAsNotDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, todoTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, deadlineTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(unmarked, eventTask.getStatusIcon());","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":35}},{"path":"src/test/java/berry/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"package berry.task;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"import berry.exception.IncorrectDateException;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"    public void toString_checkTodoTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"        Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"[T][ ] some todo\", todo.toString());","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"    @Test","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"    public void interpretTaskToString_todoTask_success() throws IncorrectDateException {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"        Todo todo \u003d new Todo(\"some todo\");","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"        assertEquals(\"T |   | some todo\", todo.interpretTaskToText());","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"IsabelChong":20}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"IsabelChong"},"content":"todo buy yarn","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"IsabelChong"},"content":"todo buy keychain","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"IsabelChong"},"content":"todo buy label","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"IsabelChong"},"content":"deadline make plushie /by Saturday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"IsabelChong"},"content":"deadline make smt","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"IsabelChong"},"content":"deadline /by Some Day","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"IsabelChong"},"content":"event popup store /from Sunday 1pm /to Monday 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"IsabelChong"},"content":"event idk /from /to 100 days later","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"IsabelChong"},"content":"event /from 10am /to 9pm","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"IsabelChong"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"IsabelChong"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"IsabelChong"},"content":"delete 2","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"IsabelChong"},"content":"mark 10","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"IsabelChong"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"IsabelChong"},"content":"unmark 11","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"IsabelChong"},"content":"unmark -3","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"IsabelChong"},"content":"do something like this","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"IsabelChong"},"content":"wb this?","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"IsabelChong"},"content":"mark 6","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"IsabelChong"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"IsabelChong"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"IsabelChong"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"IsabelChong"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"IsabelChong":32}}]
