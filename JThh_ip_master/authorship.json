[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"    mainClassName \u003d \"duke.Launcher\"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"checkstyle {","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JThh":24,"-":38}},{"path":"data/todo_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"[T][X] read book","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"[D][ ] return book (by: June 6th)","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"JThh":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"### Add Tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"Add `Todos`, `Events`, and `Deadlines` to the `Task` list.","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"### Mark tasks as done / undone","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"Mark tasks on the list as **done / undone**.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"### Delete tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"Delete tasks when they are no longer relevant.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"### Find tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"Find tasks that contain a certain keyword or key phrase.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"### Store and List tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"List all tasks currently stored in the task list, and show their completion status.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"### Check duplicate tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"Alert users when they add duplicate tasks and list all duplicates.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"### `todo` - Add todos","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"Add a `todo` task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"`todo borrow book`","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"The todo item of borrowing book gets added to the task list, initialized with a `T` badge and an unfinished status.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"\t[T][ ] borrow book","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"Now you have 1 task in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"### `event` - Add events","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"Add an `event` with starting and finishing timings to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"`event attend talk /from 2023-02-23 18:00 /to 2023-02-23 20:00`","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"The event of attending talk is added to the list, initialized with a `E` badge and an unfinished status.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"The date format also gets transformed to be more user-friendly.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"\t[E][ ] attend talk (from: Aug 30 2020, 06:00 PM to Aug 30 2020, 08:00 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"Now you have 2 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"### `deadline` - Add deadlines","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"Add an `deadline` with end timing to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"`deadline submit essay /by 2023-02-23 18:00`","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"The deadline gets added, initialized with a `D` badge and an unfinished status.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"The date format also gets transformed to be more user-friendly.","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"JThh"},"content":"Got it. I\u0027ve added this task:","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"JThh"},"content":"    [D][ ] submit essay (by: Aug 30 2020, 06:00 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"JThh"},"content":"Now you have 3 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"JThh"},"content":"### `list` - List all saved tasks","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"JThh"},"content":"List all tasks currently added to the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"JThh"},"content":"`list`","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"JThh"},"content":"All tasks inclusive of todos, deadlines, and events as well as their completion status get listed.","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"JThh"},"content":"\"Valid request:D. I\u0027ve got this for you:","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"JThh"},"content":"1.[T][ ] read book","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"JThh"},"content":"2.[D][ ] return book (by: June 6th)","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"JThh"},"content":"5.[E][ ] project meeting (from: Mon 2pm to 4pm)","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"JThh"},"content":"### `mark` - Mark task as done","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"JThh"},"content":"Mark a task as done status.","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"JThh"},"content":"`mark 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"JThh"},"content":"The first task saved on the list is marked as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"JThh"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"JThh"},"content":"\t[T][X] borrow book","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"JThh"},"content":"### `unmark` - Mark task as undone","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"JThh"},"content":"Mark a task as undone status. The opposite of `mark` operation.","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"JThh"},"content":"`unmark 2`","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"JThh"},"content":"The second task saved on the list is marked as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"JThh"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"JThh"},"content":"\t[E][ ] attend talk (from: Aug 30 2020, 06:00 PM to Aug 30 2020, 08:00 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"JThh"},"content":"### `delete` - Delete a task","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"JThh"},"content":"Delete a task when it is no longer relevant.","lastModifiedDate":"2023-02-20"},{"lineNumber":145,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":146,"author":{"gitId":"JThh"},"content":"Example of usage:","lastModifiedDate":"2023-02-20"},{"lineNumber":147,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":148,"author":{"gitId":"JThh"},"content":"`delete 1`","lastModifiedDate":"2023-02-20"},{"lineNumber":149,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":150,"author":{"gitId":"JThh"},"content":"Expected outcome:","lastModifiedDate":"2023-02-20"},{"lineNumber":151,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":152,"author":{"gitId":"JThh"},"content":"The first task of borrowing book gets deleted from the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"JThh"},"content":"Noted. I\u0027ve removed this task.","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"JThh"},"content":"    [T][X] borrow book","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"JThh"},"content":"Now you have 0 tasks in the list.","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"JThh"},"content":"```","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"JThh"},"content":"### `find` - Search a task","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"JThh"},"content":"Search tasks that contain certain keywords or key phrases.","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"JThh"},"content":"`find talk`","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":170,"author":{"gitId":"JThh"},"content":"All tasks that have descriptions that contain `talk` will be matched and returned.","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":173,"author":{"gitId":"JThh"},"content":"\"Valid request:D. I\u0027ve got this for you:","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"JThh"},"content":"[E][ ] attend talk (from: Aug 30 2020, 06:00 PM to Aug 30 2020, 08:00 PM)","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"JThh":146,"-":30}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import duke.tool.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import duke.tool.Storage;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":" * Represents a task manager bot class.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"public class Duke {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"     * Constructs a task manager Duke object.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"     * @param dirPath The directory to write tasks into.","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"     * @param filePath The file to write tasks into.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    public Duke(String dirPath, String filePath) {","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"        this.storage \u003d new Storage(dirPath, filePath);","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"     * Run the Duke object that handles input stream from command line.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"    public void run() {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"        System.out.println(this.ui.print_greet_msg());","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"        Parser.process_input(this.tasks, sc, this.ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"        this.storage.save_to_file(this.tasks);","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"     * Gets response in an interactive manner with extracted user input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"     * @param input User-input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"     * @return A string of reponse.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"            output \u003d Parser.switch_input(this.tasks, input, this.ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        if (output.isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"            return this.ui.print_empty_msg();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"            return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"     * Gets ui object saved in Duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"     * @return A Ui object","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"    public Ui getUi() {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"        return this.ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"        new Duke(\"\", \"\").run();","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"JThh":73}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"public class Launcher {","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"JThh":12}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":" *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    private Duke duke \u003d new Duke(\"\", \"\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"            stage.setTitle(\"DukeBro\");","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"            stage.show();","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"JThh":32}},{"path":"src/main/java/duke/exception/DukeCommandNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents a command not found exception local to Duke task manager.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class DukeCommandNotFoundException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"     * Constructs a command not found exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"    public DukeCommandNotFoundException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"        super(\"Command not found!!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":13}},{"path":"src/main/java/duke/exception/DukeEmptyTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents an empty task exception local to Duke bot.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class DukeEmptyTaskException extends DukeException {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"     * Constructs an empty task exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"    public DukeEmptyTaskException() {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"        super(\"The task is empty!!\");","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":13}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.exception;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents the exception thrown by duke.Duke.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"     * Constructs a duke.Duke exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"     * @param message message of the exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"        super(message);","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"     * Outputs exception as a string.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"     * @return string representation of the exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"        return \"[OOPS!!]\" + this.getMessage() + \"\\n\";","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":25}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents a deadline object with a deadline timing.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"    protected String by;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"     * Constructs a deadline object.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"     * @param description title of the deadline.","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"     * @param by deadline timing.","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    public Deadline() {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"        super();","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"     * Represents the string written into todo_list.txt.","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"     * @return A string written into the todo_list.txt.","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":35}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents an event with from and to timings.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"    private String from;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"    private String to;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"     * Constructs an event object.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"     * @param description title of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"     * @param from time of event happening time.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"     * @param to expected ending time of the event.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    public Event() {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"        super();","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"     * Represents the string written into todo_list.txt.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"     *","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"     * @return A string written into the todo_list.txt.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + from + \" to \" + to + \")\";","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":37}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents a task object to be written into a task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"    protected String description;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"     * Constructs a task object that can be either deadlines, todos, or events.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"     * @param description the contents of the tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"    public Task(String description) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"     * Constructs an empty and fake task object.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    public Task() {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"        this.description \u003d \"fake task\";","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"     * Gets descriptions string.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"     * @return A string object.","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"        return description;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"     * Signifies whether this task is null and fake.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"     * @return An indicator of whether this task is null.","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"    public boolean isNull() {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"        return this.description.equals(\"fake task\");","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"     * Gets the string representation of task status.","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"     * @return A string of task status.","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        return (isDone ? \"X\" : \" \"); // mark done duke.task with X","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"    public void markAsNotDone() {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"     * Gets the string representation of the task that is printer-friendly.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"     * @return A string object.","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-02-17"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":75}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":" * Represents a todo object that inherits from Task.","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"     * Constructs a todo object from task description.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"     * @param description The description of the todo object.","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"        super(description);","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"    public Todo() {","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"        super();","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    @Override","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    public String toString() {","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":22}},{"path":"src/main/java/duke/tool/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.tool;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":" * Constructs a command class that handles all changes to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"public class Command {","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"     * Constructs a command object.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"     * @param tasks The list of tasks to operate upon.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"     * @param ui The user interface object for printing.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"    public Command(ArrayList\u003cTask\u003e tasks, Ui ui) {","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"        assert ui !\u003d null : \"Unable to accept null user interface\";","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"        this.ui \u003d ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"     * Marks a task as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"     * @param tid The id of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"     * @return The successful or unsuccessful ui notification message.","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"    public String mark_as_done(int tid) {","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"        Task task \u003d new Task();","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"            task \u003d this.tasks.get(tid - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"            task.markAsDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"        return ui.print_done_msg(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"     * Marks a task as not done.","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"     * @param tid The id of the task.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"     * @return The successful or unsuccessful ui notification message.","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"    public String mark_as_undone(int tid) {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"        Task task \u003d new Task();","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"            task \u003d tasks.get(tid - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"            task.markAsNotDone();","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"        return ui.print_undone_msg(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"     * Add the task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"     * @return The successful or unsuccessful ui notification message.","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"    public String add_task(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e dupTasks \u003d check_duplicates(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"        if (!(dupTasks.isEmpty())) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"            return ui.print_custom_msg(\"Duplicate tasks detected! \\n\\t\")","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"                    + ui.print_task_list(dupTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"        if (!(task.isNull())) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"            tasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"        return ui.print_add_msg(task, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"     * Delete the task to the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"     * @param tid The task id to delete.","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"JThh"},"content":"     * @return The successful or unsuccessful ui notification message.","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"JThh"},"content":"    public String delete_task(int tid) {","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"JThh"},"content":"        Task task \u003d new Task();","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"JThh"},"content":"            task \u003d tasks.get(tid - 1);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"JThh"},"content":"            tasks.remove(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"JThh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"JThh"},"content":"        return ui.print_remove_msg(task, tasks.size());","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"JThh"},"content":"     * Find the task that contains match string from the task list.","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"JThh"},"content":"     * @param matchStr The string to match with.","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"JThh"},"content":"     * @return The contents of tasks found.","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"JThh"},"content":"    public String find_tasks(String matchStr) {","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"JThh"},"content":"        assert matchStr !\u003d null : \"Please provide a match string\";","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"JThh"},"content":"        if (matchStr.isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"JThh"},"content":"            return ui.print_custom_msg(\"Nothing found\");","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"JThh"},"content":"        tasks.forEach((task) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"JThh"},"content":"            String description \u003d task.getDescription();","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"JThh"},"content":"            if (description.contains(matchStr)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"JThh"},"content":"                matchedTasks.add(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"JThh"},"content":"        });","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"JThh"},"content":"        return ui.print_task_list(matchedTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"JThh"},"content":"    private ArrayList\u003cTask\u003e check_duplicates(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"JThh"},"content":"        String taskDescr \u003d task.getDescription();","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"JThh"},"content":"        List\u003cTask\u003e dupTasks \u003d tasks.stream().filter((curTask) -\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"JThh"},"content":"            return curTask.getDescription().equals(taskDescr);","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"JThh"},"content":"        }).collect(Collectors.toList());","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"JThh"},"content":"        return new ArrayList\u003c\u003e(dupTasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"JThh":121}},{"path":"src/main/java/duke/tool/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.tool;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import java.time.temporal.UnsupportedTemporalTypeException;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"import duke.exception.DukeCommandNotFoundException;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"import duke.exception.DukeEmptyTaskException;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":" * Constructs a (static) parser that parses user input strings.","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"public class Parser {","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    private static final DateTimeFormatter read_fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"    private static final DateTimeFormatter print_fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy, hh:mm a\");","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"     * Parses the date and time from input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"     * @return A string that conforms to the specified printing format.","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"    public static String parse_date(String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"            LocalDateTime lt \u003d LocalDateTime.parse(input, read_fmt);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"            return lt.format(print_fmt);","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"        } catch (DateTimeParseException | UnsupportedTemporalTypeException e) {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"            print(\"please follow the standard datetime format: yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"        return input;","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"     * Parses integer from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"     * @return Parsed integer returned as the task id.","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"     * @throws DukeEmptyTaskException Indicates that task id is not found","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"    public static int parse_task_id(String input) throws DukeEmptyTaskException {","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"        int tid;","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"            tid \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"            throw new DukeEmptyTaskException();","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"        return tid;","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"     * Parses match string from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"     * @return Parsed string returned as the matching string.","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"     * @throws DukeEmptyTaskException Indicates that match string is not found","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"    public static String parse_match_string(String input) throws DukeEmptyTaskException {","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"        String matchStr;","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"            matchStr \u003d input.split(\" \")[1].strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"            throw new DukeEmptyTaskException();","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"        return matchStr;","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"     * Parses and constructs Todo object from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"     * @param trigger Task trigger, in this case, it is \"todo\".","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"     * @return Constructed Todo object from the parsed contents.","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"    public static Todo parse_todo(String trigger, String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"        if (input.split(trigger).length \u003d\u003d 0) {","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"            return new Todo();","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"JThh"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"JThh"},"content":"            input \u003d input.split(trigger)[1].strip();","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"JThh"},"content":"            return new Todo(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"JThh"},"content":"     * Parses and constructs Deadline object from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"JThh"},"content":"     * @param trigger Task trigger, in this case, it is \"deadline\".","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"JThh"},"content":"     * @return Constructed Deadline object from the parsed contents.","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"JThh"},"content":"    public static Deadline parse_deadline(String trigger, String input) {","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"JThh"},"content":"        String content;","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"JThh"},"content":"        String deadline;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":97,"author":{"gitId":"JThh"},"content":"            input \u003d input.split(trigger)[1];","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"JThh"},"content":"            content \u003d input.split(\"/by\")[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"JThh"},"content":"            deadline \u003d parse_date(input.split(\"/by\")[1].strip());","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"JThh"},"content":"            return new Deadline(content, deadline);","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"JThh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":102,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":103,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":104,"author":{"gitId":"JThh"},"content":"        return new Deadline();","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"JThh"},"content":"     * Parses and constructs Event object from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"JThh"},"content":"     * @param trigger Task trigger, in this case, it is \"event\".","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"JThh"},"content":"     * @return Constructed Event object from the parsed contents.","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"JThh"},"content":"     * @throws DukeEmptyTaskException Indicates that task description is not found","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"JThh"},"content":"    public static Event parse_event(String trigger, String input) throws DukeEmptyTaskException {","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"JThh"},"content":"        String content;","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"JThh"},"content":"        String fromTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"JThh"},"content":"        String toTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"JThh"},"content":"        if (input.split(trigger).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":119,"author":{"gitId":"JThh"},"content":"            throw new DukeEmptyTaskException();","lastModifiedDate":"2023-02-17"},{"lineNumber":120,"author":{"gitId":"JThh"},"content":"        } else {","lastModifiedDate":"2023-02-17"},{"lineNumber":121,"author":{"gitId":"JThh"},"content":"            input \u003d input.split(trigger)[1].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":122,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":124,"author":{"gitId":"JThh"},"content":"            content \u003d input.split(\"/from\")[0].strip();","lastModifiedDate":"2023-02-17"},{"lineNumber":125,"author":{"gitId":"JThh"},"content":"            fromTime \u003d parse_date(input.split(\"/from\")[1].split(\"/to\")[0].strip());","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"JThh"},"content":"            toTime \u003d parse_date(input.split(\"/from\")[1].split(\"/to\")[1].strip());","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"JThh"},"content":"            return new Event(content, fromTime, toTime);","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"JThh"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":129,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":130,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":131,"author":{"gitId":"JThh"},"content":"        return new Event();","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":134,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":135,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"JThh"},"content":"     * Parses task id to delete from a string input.","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"JThh"},"content":"     * @param trigger Task trigger, in this case, it is \"delete\".","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"JThh"},"content":"     * @param input User-provided input string.","lastModifiedDate":"2023-02-20"},{"lineNumber":139,"author":{"gitId":"JThh"},"content":"     * @return Task id to delete from.","lastModifiedDate":"2023-02-20"},{"lineNumber":140,"author":{"gitId":"JThh"},"content":"     * @throws DukeEmptyTaskException Indicates that task description is not found","lastModifiedDate":"2023-02-20"},{"lineNumber":141,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":142,"author":{"gitId":"JThh"},"content":"    public static int parse_delete_id(String trigger, String input) throws DukeEmptyTaskException {","lastModifiedDate":"2023-02-20"},{"lineNumber":143,"author":{"gitId":"JThh"},"content":"        int tid \u003d -1;","lastModifiedDate":"2023-02-20"},{"lineNumber":144,"author":{"gitId":"JThh"},"content":"        if (input.split(trigger).length \u003d\u003d 1) {","lastModifiedDate":"2023-02-17"},{"lineNumber":145,"author":{"gitId":"JThh"},"content":"            throw new DukeEmptyTaskException();","lastModifiedDate":"2023-02-17"},{"lineNumber":146,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":147,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-17"},{"lineNumber":148,"author":{"gitId":"JThh"},"content":"            tid \u003d Integer.parseInt(input.split(trigger)[1].strip());","lastModifiedDate":"2023-02-17"},{"lineNumber":149,"author":{"gitId":"JThh"},"content":"        } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":150,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":151,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":152,"author":{"gitId":"JThh"},"content":"        return tid;","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":156,"author":{"gitId":"JThh"},"content":"     * Print a string via System.in.","lastModifiedDate":"2023-02-20"},{"lineNumber":157,"author":{"gitId":"JThh"},"content":"     * @param str The string to print.","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":159,"author":{"gitId":"JThh"},"content":"    public static void print(String str) {","lastModifiedDate":"2023-02-20"},{"lineNumber":160,"author":{"gitId":"JThh"},"content":"        System.out.println(str);","lastModifiedDate":"2023-02-20"},{"lineNumber":161,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":162,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":163,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":164,"author":{"gitId":"JThh"},"content":"     * Switch on cases where different triggering commands are met.","lastModifiedDate":"2023-02-20"},{"lineNumber":165,"author":{"gitId":"JThh"},"content":"     * @param tasks The list of tasks to operate upon.","lastModifiedDate":"2023-02-20"},{"lineNumber":166,"author":{"gitId":"JThh"},"content":"     * @param input The input user-provided instruction string.","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"JThh"},"content":"     * @param ui The user-interface object that handles printing jobs.","lastModifiedDate":"2023-02-20"},{"lineNumber":168,"author":{"gitId":"JThh"},"content":"     * @return A status string that indicates job status.","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"JThh"},"content":"     * @throws DukeCommandNotFoundException Indicates when user-provided instruction cannot be catered.","lastModifiedDate":"2023-02-20"},{"lineNumber":170,"author":{"gitId":"JThh"},"content":"     * @throws DukeEmptyTaskException Indicates when user fails to provide a concrete task description.","lastModifiedDate":"2023-02-20"},{"lineNumber":171,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":172,"author":{"gitId":"JThh"},"content":"    public static String switch_input(ArrayList\u003cTask\u003e tasks, String input, Ui ui)","lastModifiedDate":"2023-02-20"},{"lineNumber":173,"author":{"gitId":"JThh"},"content":"            throws DukeCommandNotFoundException, DukeEmptyTaskException {","lastModifiedDate":"2023-02-20"},{"lineNumber":174,"author":{"gitId":"JThh"},"content":"        String trigger \u003d input.split(\" \")[0];","lastModifiedDate":"2023-02-20"},{"lineNumber":175,"author":{"gitId":"JThh"},"content":"        Command command \u003d new Command(tasks, ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"JThh"},"content":"        int tid;","lastModifiedDate":"2023-02-20"},{"lineNumber":177,"author":{"gitId":"JThh"},"content":"        Task task;","lastModifiedDate":"2023-02-20"},{"lineNumber":178,"author":{"gitId":"JThh"},"content":"        String output;","lastModifiedDate":"2023-02-20"},{"lineNumber":179,"author":{"gitId":"JThh"},"content":"        switch (trigger) {","lastModifiedDate":"2023-02-20"},{"lineNumber":180,"author":{"gitId":"JThh"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-20"},{"lineNumber":181,"author":{"gitId":"JThh"},"content":"            output \u003d ui.print_bye_msg();","lastModifiedDate":"2023-02-20"},{"lineNumber":182,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":183,"author":{"gitId":"JThh"},"content":"        case \"list\":","lastModifiedDate":"2023-02-20"},{"lineNumber":184,"author":{"gitId":"JThh"},"content":"            output \u003d ui.print_task_list(tasks);","lastModifiedDate":"2023-02-20"},{"lineNumber":185,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":186,"author":{"gitId":"JThh"},"content":"        case \"mark\":","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"JThh"},"content":"            tid \u003d parse_task_id(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":188,"author":{"gitId":"JThh"},"content":"            output \u003d command.mark_as_done(tid);","lastModifiedDate":"2023-02-20"},{"lineNumber":189,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":190,"author":{"gitId":"JThh"},"content":"        case \"unmark\":","lastModifiedDate":"2023-02-20"},{"lineNumber":191,"author":{"gitId":"JThh"},"content":"            tid \u003d parse_task_id(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":192,"author":{"gitId":"JThh"},"content":"            output \u003d command.mark_as_undone(tid);","lastModifiedDate":"2023-02-20"},{"lineNumber":193,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"JThh"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"JThh"},"content":"            task \u003d parse_deadline(trigger, input);","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"JThh"},"content":"            output \u003d command.add_task(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"JThh"},"content":"        case \"event\":","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"JThh"},"content":"            task \u003d parse_event(trigger, input);","lastModifiedDate":"2023-02-20"},{"lineNumber":200,"author":{"gitId":"JThh"},"content":"            output \u003d command.add_task(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"JThh"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"JThh"},"content":"            task \u003d parse_todo(trigger, input);","lastModifiedDate":"2023-02-20"},{"lineNumber":204,"author":{"gitId":"JThh"},"content":"            output \u003d command.add_task(task);","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"JThh"},"content":"        case \"delete\":","lastModifiedDate":"2023-02-20"},{"lineNumber":207,"author":{"gitId":"JThh"},"content":"            tid \u003d parse_delete_id(trigger, input);","lastModifiedDate":"2023-02-20"},{"lineNumber":208,"author":{"gitId":"JThh"},"content":"            output \u003d command.delete_task(tid);","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-17"},{"lineNumber":210,"author":{"gitId":"JThh"},"content":"        case \"find\":","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"JThh"},"content":"            String matchStr \u003d parse_match_string(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"JThh"},"content":"            output \u003d command.find_tasks(matchStr);","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"JThh"},"content":"            break;","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"JThh"},"content":"        default:","lastModifiedDate":"2023-02-17"},{"lineNumber":215,"author":{"gitId":"JThh"},"content":"            throw new DukeCommandNotFoundException();","lastModifiedDate":"2023-02-17"},{"lineNumber":216,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"JThh"},"content":"        return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"JThh"},"content":"     * Processes inputs from Scanner input stream when used without GUI.","lastModifiedDate":"2023-02-20"},{"lineNumber":222,"author":{"gitId":"JThh"},"content":"     * @param tasks The list of tasks to operate upon.","lastModifiedDate":"2023-02-20"},{"lineNumber":223,"author":{"gitId":"JThh"},"content":"     * @param sc The scanner object that accepts input streams.","lastModifiedDate":"2023-02-20"},{"lineNumber":224,"author":{"gitId":"JThh"},"content":"     * @param ui The user-interface object that handles printing jobs.","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"JThh"},"content":"    public static void process_input(ArrayList\u003cTask\u003e tasks, Scanner sc, Ui ui) {","lastModifiedDate":"2023-02-20"},{"lineNumber":227,"author":{"gitId":"JThh"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":228,"author":{"gitId":"JThh"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-02-17"},{"lineNumber":229,"author":{"gitId":"JThh"},"content":"            try {","lastModifiedDate":"2023-02-17"},{"lineNumber":230,"author":{"gitId":"JThh"},"content":"                print(switch_input(tasks, input, ui));","lastModifiedDate":"2023-02-20"},{"lineNumber":231,"author":{"gitId":"JThh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":232,"author":{"gitId":"JThh"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-02-19"},{"lineNumber":233,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":234,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":235,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":236,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":236}},{"path":"src/main/java/duke/tool/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.tool;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.io.File;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":" * Represents a storage class that handles saving and loading to disk jobs.","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"public class Storage {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"    protected File dir;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"    protected File file;","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"     * Constructs a storage object.","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"     * @param dirName The name of a local directory to write. Defaults to \"data\".","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"     * @param fileName The name of a file within the directory to write into. Defaults to \"tolist.txt\"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    public Storage(String dirName, String fileName) {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"        assert ((dirName !\u003d null) \u0026\u0026 (fileName !\u003d null)) : \"please provide a valid path to save task list\";","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"        if (dirName.isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"            dirName \u003d \"data\";","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"        if (fileName.isBlank()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"            fileName \u003d \"todo_list.txt\";","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"        this.dir \u003d new File(dirName);","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"        this.file \u003d new File(fileName);","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"    public static void print(String str) {","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"        System.out.println(str);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"     * Saves list of tasks to disk.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"     * @param tasks The list of tasks to write.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"    public void save_to_file(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"        if (!this.dir.exists()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"            while (!this.dir.mkdirs()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"                print(this.dir.getName() + \" created\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"            if (this.file.createNewFile()) {","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"                print(this.file.getName() + \" created\\n\");","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"            if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"                return;","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"            FileWriter fw \u003d new FileWriter(this.file, false);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"                String desc \u003d t + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"                fw.write(desc);","lastModifiedDate":"2023-02-17"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-17"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"            fw.close();","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-02-17"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":65}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"import javafx.scene.shape.Rectangle;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":" * Represents a dialog box that contains user and duke response texts.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"        Rectangle rectangle \u003d new Rectangle(","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"                displayPicture.getFitWidth() / 1.4, displayPicture.getFitHeight() / 1.4","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"        rectangle.setArcWidth(100);","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"        rectangle.setArcHeight(100);","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"        rectangle.setStroke(Color.BLUEVIOLET);","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"        rectangle.setStrokeWidth(6);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"        displayPicture.setClip(rectangle);","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        displayPicture.setPreserveRatio(true);","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"    private void flip() {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"     * Gets user dialog box.","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"     * @param text The text to be put into the box.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"     * @param img The image representing user.","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"     * @return A DialogBox object that fits into a conversation.","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"     * Gets duke dialog box.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"     * @param text The text to be put into the box.","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"     * @param img The image representing duke.","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"     * @return A DialogBox object that fits into a conversation.","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"        db.flip();","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"        return db;","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JThh":80}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.ui;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":" *","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"     * Initializes window interface.","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.getUi().print_greet_msg(), dukeImage));","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"    @FXML","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"        );","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"        if (input.equals(\"bye\")) {","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"            closeDuke();","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"     * Exit the programme.","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"    private void closeDuke() {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"        userInput.setOnAction(null);","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"        sendButton.setOnAction(null);","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(0.5));","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"        delay.setOnFinished(event -\u003e System.exit(0));","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"        delay.play();","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JThh":70}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.ui;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":" * Represents the user interface class that handles all message construction and printing.","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"public class Ui {","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"     * Prints customized message through UI.","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"     * @param msg Message to print.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"     * @return String object.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"    public String print_custom_msg(String msg) {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        return \"[Custom message] \" + msg;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"     * Prints message signifying empty inputs","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"    public String print_empty_msg() {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"        return \"Nothing to say about this!!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"     * Prints greeting message.","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"    public String print_greet_msg() {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"        return \"Hello! I\u0027m Duke\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"                + \"     What can I do for you?\";","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"     * Prints bye message.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"    public String print_bye_msg() {","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"    public String print_task_list(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"        StringBuilder output \u003d new StringBuilder();","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"            output.append(\"None yet.\");","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        } else {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"                String strToAppend \u003d i + \".\" + t.toString() + \"\\n\";","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"                output.append(strToAppend);","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"                i++;","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"        return \"Valid request:D. I\u0027ve got this for you: \\n\\n\"","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"                + output;","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"     * Prints mark-as-done message.","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"     * @param task The task to mark as done.","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"    public String print_done_msg(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"        String output;","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"        if (task.isNull()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"            output \u003d \"Unsuccessfully marked.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"            return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"        output \u003d \"Nice! I\u0027ve marked this task as done: \\n\\t\" + task;","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"        return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"JThh"},"content":"     * Prints mark-as-not-done message.","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"JThh"},"content":"     * @param task The task to mark as not done.","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"JThh"},"content":"    public String print_undone_msg(Task task) {","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"JThh"},"content":"        String output;","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"JThh"},"content":"        if (task.isNull()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"JThh"},"content":"            output \u003d \"Unsuccessfully unmarked.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"JThh"},"content":"            return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"JThh"},"content":"        output \u003d \"OK, I\u0027ve marked this task as not done yet: \\n\\t\"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"JThh"},"content":"                + task;","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"JThh"},"content":"        return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"JThh"},"content":"     * Prints adding task status message.","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"JThh"},"content":"     * @param task The task to add.","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"JThh"},"content":"    public String print_add_msg(Task task, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"JThh"},"content":"        String output;","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"JThh"},"content":"        if (task.isNull()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"JThh"},"content":"            output \u003d \"Unsuccessfully added.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"JThh"},"content":"            return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":109,"author":{"gitId":"JThh"},"content":"        output \u003d \"Got it. I\u0027ve added this task: \\n\\t\"","lastModifiedDate":"2023-02-20"},{"lineNumber":110,"author":{"gitId":"JThh"},"content":"                + task","lastModifiedDate":"2023-02-20"},{"lineNumber":111,"author":{"gitId":"JThh"},"content":"                + \"\\nNow you have \"","lastModifiedDate":"2023-02-20"},{"lineNumber":112,"author":{"gitId":"JThh"},"content":"                + size","lastModifiedDate":"2023-02-20"},{"lineNumber":113,"author":{"gitId":"JThh"},"content":"                + \" tasks in the list.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":114,"author":{"gitId":"JThh"},"content":"        return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":115,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":116,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":117,"author":{"gitId":"JThh"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":118,"author":{"gitId":"JThh"},"content":"     * Prints removing task status message.","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"JThh"},"content":"     * @param task The task to remove.","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"JThh"},"content":"     * @return A message string.","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"JThh"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":122,"author":{"gitId":"JThh"},"content":"    public String print_remove_msg(Task task, int size) {","lastModifiedDate":"2023-02-20"},{"lineNumber":123,"author":{"gitId":"JThh"},"content":"        String output;","lastModifiedDate":"2023-02-20"},{"lineNumber":124,"author":{"gitId":"JThh"},"content":"        if (task.isNull()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":125,"author":{"gitId":"JThh"},"content":"            output \u003d \"Unsuccessfully removed.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":126,"author":{"gitId":"JThh"},"content":"            return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":127,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":128,"author":{"gitId":"JThh"},"content":"        output \u003d \"Noted. I\u0027ve removed this task: \\n\\t\"","lastModifiedDate":"2023-02-20"},{"lineNumber":129,"author":{"gitId":"JThh"},"content":"                + task","lastModifiedDate":"2023-02-20"},{"lineNumber":130,"author":{"gitId":"JThh"},"content":"                + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-02-20"},{"lineNumber":131,"author":{"gitId":"JThh"},"content":"        return output;","lastModifiedDate":"2023-02-20"},{"lineNumber":132,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":133,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":133}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefHeight\u003d\"145.0\" prefWidth\u003d\"289.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"#110f94\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"90.0\" fitWidth\u003d\"90.0\" opacity\u003d\"0.8\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"JThh":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"426.0\" styleClass\u003d\"anchor\" stylesheets\u003d\"@application.css\" xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"5.0\" layoutY\u003d\"559.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"39.0\" prefWidth\u003d\"318.0\" AnchorPane.bottomAnchor\u003d\"2.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"            \u003c/TextField\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"350.0\" layoutY\u003d\"562.0\" lineSpacing\u003d\"2.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"33.0\" prefWidth\u003d\"63.0\" text\u003d\"Send\" textFill\u003d\"#b21b1b\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"427.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"424.0\" styleClass\u003d\"anchor\" stylesheets\u003d\"@application.css\" /\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"JThh":20}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import duke.tool.Parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"    public void addDeadlineTest() {","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"        taskList.add(new Deadline(\"project meeting\", Parser.parse_date(\"2020-08-30 18:00\")));","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(taskList);","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"        String eventToWrite \u003d \"[D][ ] project meeting (by: Aug 30 2020, 06:00 PM)\";","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        String actual \u003d tl.get(0).toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"        assertEquals(eventToWrite, actual);","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JThh":22}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.task;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import duke.tool.Parser;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"public class EventTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"    public void addEventTest() {","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"        taskList.add(new Event(\"project meeting\", Parser.parse_date(\"2020-08-30 18:00\"),","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"                Parser.parse_date(\"2020-08-30 18:00\")));","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"        String eventToWrite \u003d \"[E][ ] project meeting (from: Aug 30 2020, 06:00 PM to Aug 30 2020, 06:00 PM)\";","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        String actual \u003d taskList.get(0).toString();","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"        assertEquals(eventToWrite, actual);","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JThh":21}},{"path":"src/test/java/duke/tool/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"package duke.tool;","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"JThh"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"    @Test","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"    public void switchInputTest() throws DukeException {","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"        DateTimeFormatter validFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"        taskList.add(new Event(\"project meeting \", LocalDateTime.parse(\"2020-08-30 18:00\", validFormat).toString(),","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"                LocalDateTime.parse(\"2020-08-30 20:00\", validFormat).toString()));","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"        ArrayList\u003cTask\u003e tl \u003d new ArrayList\u003c\u003e(100);","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"        Parser.switch_input(tl, \"event project meeting /from 2020-08-30 18:00 /to 2020-08-30 20:00\", ui);","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"        assertEquals(taskList.size(), tl.size());","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"}","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JThh":28}},{"path":"text-ui-test/data/todo_list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"[T][ ] read book","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"[D][ ] return book (by: June 6th)","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"[D][ ] return book (by: Sunday)","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"[E][ ] project meeting (from: Mon 2pm to 4pm)","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"[D][ ] do homework (by: no idea :-p)","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"JThh":6}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"list","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"JThh":9}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JThh":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"java -classpath ../out/production/ip Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JThh":3,"-":36}}]
