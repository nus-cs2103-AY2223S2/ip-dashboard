[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"JThh"},"content":"    public static ArrayList\u003cTask\u003e todos \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"JThh"},"content":"    public static File dir \u003d new File(\"./data/\");","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"JThh"},"content":"    public static File file \u003d new File(\"./data/todo_list.txt\");","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"JThh"},"content":"    public static class Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"JThh"},"content":"        protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"JThh"},"content":"        protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"JThh"},"content":"        public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"JThh"},"content":"            this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"JThh"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"JThh"},"content":"        public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"JThh"},"content":"            return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"JThh"},"content":"        public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":30,"author":{"gitId":"JThh"},"content":"            this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":31,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"JThh"},"content":"        public void markAsNotDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"JThh"},"content":"            this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"JThh"},"content":"        @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"JThh"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"JThh"},"content":"            return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"JThh"},"content":"    public static class Todo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"JThh"},"content":"        public Todo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"JThh"},"content":"            super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"JThh"},"content":"        @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"JThh"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"JThh"},"content":"            return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"JThh"},"content":"    public static class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":54,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":55,"author":{"gitId":"JThh"},"content":"        protected String by;","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"JThh"},"content":"        public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"JThh"},"content":"            super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"JThh"},"content":"            this.by \u003d by;","lastModifiedDate":"2023-01-18"},{"lineNumber":60,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":61,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":62,"author":{"gitId":"JThh"},"content":"        @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":63,"author":{"gitId":"JThh"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":64,"author":{"gitId":"JThh"},"content":"            return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":65,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":67,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":68,"author":{"gitId":"JThh"},"content":"    public static class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":69,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"JThh"},"content":"        protected String from;","lastModifiedDate":"2023-01-18"},{"lineNumber":71,"author":{"gitId":"JThh"},"content":"        protected String to;","lastModifiedDate":"2023-01-18"},{"lineNumber":72,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"JThh"},"content":"        public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":74,"author":{"gitId":"JThh"},"content":"            super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":75,"author":{"gitId":"JThh"},"content":"            this.from \u003d from;","lastModifiedDate":"2023-01-18"},{"lineNumber":76,"author":{"gitId":"JThh"},"content":"            this.to \u003d to;","lastModifiedDate":"2023-01-18"},{"lineNumber":77,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":78,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"JThh"},"content":"        @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":80,"author":{"gitId":"JThh"},"content":"        public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":81,"author":{"gitId":"JThh"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + from + \" to \" + to + \")\";","lastModifiedDate":"2023-01-18"},{"lineNumber":82,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":83,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":84,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"JThh"},"content":"    public static void print(String s) {","lastModifiedDate":"2023-01-18"},{"lineNumber":86,"author":{"gitId":"JThh"},"content":"        System.out.println(s);","lastModifiedDate":"2023-01-18"},{"lineNumber":87,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":88,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":89,"author":{"gitId":"JThh"},"content":"    public static class DukeCommandNotFoundException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":90,"author":{"gitId":"JThh"},"content":"        public DukeCommandNotFoundException (String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":91,"author":{"gitId":"JThh"},"content":"            super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":92,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"JThh"},"content":"    public static class DukeEmptyTaskException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"JThh"},"content":"        public DukeEmptyTaskException (String msg) {","lastModifiedDate":"2023-01-18"},{"lineNumber":97,"author":{"gitId":"JThh"},"content":"            super(msg);","lastModifiedDate":"2023-01-18"},{"lineNumber":98,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":99,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":100,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":101,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"JThh"},"content":"    public static String parse_date(String s) {","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"JThh"},"content":"        DateTimeFormatter read_fmt \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"JThh"},"content":"        DateTimeFormatter print_fmt \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"JThh"},"content":"            LocalDate lt \u003d LocalDate.parse(s, read_fmt);","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"JThh"},"content":"            return lt.format(print_fmt);","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"JThh"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"JThh"},"content":"            print(e.toString());","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"JThh"},"content":"        return s;","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":114,"author":{"gitId":"JThh"},"content":"    public static void save_to_file() {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"JThh"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"JThh"},"content":"            if (!dir.exists()){","lastModifiedDate":"2023-01-31"},{"lineNumber":117,"author":{"gitId":"JThh"},"content":"                while (!dir.mkdirs()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"JThh"},"content":"                    print(dir.getName() + \" created\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"JThh"},"content":"            if (file.createNewFile()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":123,"author":{"gitId":"JThh"},"content":"                print(file.getName() + \" created\\n\");","lastModifiedDate":"2023-01-31"},{"lineNumber":124,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":125,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":126,"author":{"gitId":"JThh"},"content":"            FileWriter fw \u003d new FileWriter(file, false);","lastModifiedDate":"2023-01-31"},{"lineNumber":127,"author":{"gitId":"JThh"},"content":"            if (todos.isEmpty()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"JThh"},"content":"                return;","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"JThh"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"JThh"},"content":"                for (Task t : todos) {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"JThh"},"content":"                    String desc \u003d t.toString() + \"\\n\";","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"JThh"},"content":"                    fw.write(desc);","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"JThh"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"JThh"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"JThh"},"content":"            e.getStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":138,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":139,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":140,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":141,"author":{"gitId":"JThh"},"content":"    public static void process_input(String input) throws DukeCommandNotFoundException, DukeEmptyTaskException {","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"JThh"},"content":"        String trigger \u003d input.split(\" \")[0];","lastModifiedDate":"2023-01-18"},{"lineNumber":143,"author":{"gitId":"JThh"},"content":"        int tid \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"JThh"},"content":"        Task task;","lastModifiedDate":"2023-01-18"},{"lineNumber":145,"author":{"gitId":"JThh"},"content":"        String content \u003d \"\", ddl \u003d \"\", from \u003d \"\", to \u003d \"\";","lastModifiedDate":"2023-01-18"},{"lineNumber":146,"author":{"gitId":"JThh"},"content":"        switch (trigger) {","lastModifiedDate":"2023-01-18"},{"lineNumber":147,"author":{"gitId":"JThh"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"JThh"},"content":"                print(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"JThh"},"content":"                System.exit(0);","lastModifiedDate":"2023-01-18"},{"lineNumber":150,"author":{"gitId":"JThh"},"content":"            case \"list\":","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"JThh"},"content":"                if (todos.isEmpty()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"JThh"},"content":"                    print(\"No items yet.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"JThh"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"JThh"},"content":"                    int i \u003d 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"JThh"},"content":"                    for (Task t : todos) {","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"JThh"},"content":"                        print(i + \".\" + t.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":157,"author":{"gitId":"JThh"},"content":"                        i++;","lastModifiedDate":"2023-01-18"},{"lineNumber":158,"author":{"gitId":"JThh"},"content":"                    }","lastModifiedDate":"2023-01-18"},{"lineNumber":159,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":160,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":161,"author":{"gitId":"JThh"},"content":"            case \"mark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"JThh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"JThh"},"content":"                    tid \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":164,"author":{"gitId":"JThh"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"JThh"},"content":"                    print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"JThh"},"content":"                    System.exit(1);","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"JThh"},"content":"                task \u003d todos.get(tid - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"JThh"},"content":"                task.markAsDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"JThh"},"content":"                print(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":171,"author":{"gitId":"JThh"},"content":"                print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":172,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":173,"author":{"gitId":"JThh"},"content":"            case \"unmark\":","lastModifiedDate":"2023-01-18"},{"lineNumber":174,"author":{"gitId":"JThh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":175,"author":{"gitId":"JThh"},"content":"                    tid \u003d Integer.parseInt(input.split(\" \")[1]);","lastModifiedDate":"2023-01-18"},{"lineNumber":176,"author":{"gitId":"JThh"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":177,"author":{"gitId":"JThh"},"content":"                    print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":178,"author":{"gitId":"JThh"},"content":"                    System.exit(1);","lastModifiedDate":"2023-01-18"},{"lineNumber":179,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":180,"author":{"gitId":"JThh"},"content":"                task \u003d todos.get(tid - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":181,"author":{"gitId":"JThh"},"content":"                task.markAsNotDone();","lastModifiedDate":"2023-01-18"},{"lineNumber":182,"author":{"gitId":"JThh"},"content":"                print(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":183,"author":{"gitId":"JThh"},"content":"                print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":184,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":185,"author":{"gitId":"JThh"},"content":"            case \"deadline\":","lastModifiedDate":"2023-01-18"},{"lineNumber":186,"author":{"gitId":"JThh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":187,"author":{"gitId":"JThh"},"content":"                    input \u003d input.split(trigger)[1];","lastModifiedDate":"2023-01-18"},{"lineNumber":188,"author":{"gitId":"JThh"},"content":"                    content \u003d input.split(\"/by\")[0].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":189,"author":{"gitId":"JThh"},"content":"                    ddl \u003d input.split(\"/by\")[1].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":190,"author":{"gitId":"JThh"},"content":"                    ddl \u003d parse_date(ddl);","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"JThh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":192,"author":{"gitId":"JThh"},"content":"                    print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":193,"author":{"gitId":"JThh"},"content":"                    System.exit(1);","lastModifiedDate":"2023-01-18"},{"lineNumber":194,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":195,"author":{"gitId":"JThh"},"content":"                task \u003d new Deadline(content, ddl);","lastModifiedDate":"2023-01-18"},{"lineNumber":196,"author":{"gitId":"JThh"},"content":"                todos.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":197,"author":{"gitId":"JThh"},"content":"                print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":198,"author":{"gitId":"JThh"},"content":"                print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":199,"author":{"gitId":"JThh"},"content":"                print(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":201,"author":{"gitId":"JThh"},"content":"            case \"event\":","lastModifiedDate":"2023-01-18"},{"lineNumber":202,"author":{"gitId":"JThh"},"content":"                if (input.split(trigger).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":203,"author":{"gitId":"JThh"},"content":"                    throw new DukeEmptyTaskException(\"☹ OOPS!!! The description of a \" + trigger + \" cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":204,"author":{"gitId":"JThh"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":205,"author":{"gitId":"JThh"},"content":"                    input \u003d input.split(trigger)[1].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":206,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"JThh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"JThh"},"content":"                    content \u003d input.split(\"/from\")[0].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"JThh"},"content":"                    from \u003d input.split(\"/from\")[1].split(\"/to\")[0].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"JThh"},"content":"                    to \u003d input.split(\"/from\")[1].split(\"/to\")[1].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"JThh"},"content":"                    from \u003d parse_date(from);","lastModifiedDate":"2023-01-31"},{"lineNumber":212,"author":{"gitId":"JThh"},"content":"                    to \u003d parse_date(to);","lastModifiedDate":"2023-01-31"},{"lineNumber":213,"author":{"gitId":"JThh"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":214,"author":{"gitId":"JThh"},"content":"                    print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"JThh"},"content":"                    System.exit(1);","lastModifiedDate":"2023-01-18"},{"lineNumber":216,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":217,"author":{"gitId":"JThh"},"content":"                task \u003d new Event(content, from, to);","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"JThh"},"content":"                todos.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"JThh"},"content":"                print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"JThh"},"content":"                print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"JThh"},"content":"                print(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"JThh"},"content":"            case \"todo\":","lastModifiedDate":"2023-01-18"},{"lineNumber":224,"author":{"gitId":"JThh"},"content":"                if (input.split(trigger).length \u003d\u003d 0) {","lastModifiedDate":"2023-01-18"},{"lineNumber":225,"author":{"gitId":"JThh"},"content":"                    throw new DukeEmptyTaskException(\"☹ OOPS!!! The description of a \" + trigger + \" cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"JThh"},"content":"                } else {","lastModifiedDate":"2023-01-18"},{"lineNumber":227,"author":{"gitId":"JThh"},"content":"                    input \u003d input.split(trigger)[1].strip();","lastModifiedDate":"2023-01-18"},{"lineNumber":228,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"JThh"},"content":"                task \u003d new Todo(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"JThh"},"content":"                todos.add(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"JThh"},"content":"                print(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"JThh"},"content":"                print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"JThh"},"content":"                print(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"JThh"},"content":"            case \"delete\":","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"JThh"},"content":"                if (input.split(trigger).length \u003d\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"JThh"},"content":"                    throw new DukeEmptyTaskException(\"☹ OOPS!!! The description of a \" + trigger + \" cannot be empty.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":239,"author":{"gitId":"JThh"},"content":"                try {","lastModifiedDate":"2023-01-18"},{"lineNumber":240,"author":{"gitId":"JThh"},"content":"                    tid \u003d Integer.parseInt(input.split(trigger)[1].strip());","lastModifiedDate":"2023-01-18"},{"lineNumber":241,"author":{"gitId":"JThh"},"content":"                    task \u003d todos.get(tid - 1);","lastModifiedDate":"2023-01-18"},{"lineNumber":242,"author":{"gitId":"JThh"},"content":"                    todos.remove(task);","lastModifiedDate":"2023-01-18"},{"lineNumber":243,"author":{"gitId":"JThh"},"content":"                    print(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-18"},{"lineNumber":244,"author":{"gitId":"JThh"},"content":"                    print(\"\\t\" + task);","lastModifiedDate":"2023-01-18"},{"lineNumber":245,"author":{"gitId":"JThh"},"content":"                    print(\"Now you have \" + todos.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":246,"author":{"gitId":"JThh"},"content":"                } catch (NumberFormatException | IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":247,"author":{"gitId":"JThh"},"content":"                    print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":248,"author":{"gitId":"JThh"},"content":"                    System.exit(1);","lastModifiedDate":"2023-01-18"},{"lineNumber":249,"author":{"gitId":"JThh"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":250,"author":{"gitId":"JThh"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"JThh"},"content":"            default:","lastModifiedDate":"2023-01-18"},{"lineNumber":252,"author":{"gitId":"JThh"},"content":"                throw new DukeCommandNotFoundException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":254,"author":{"gitId":"JThh"},"content":"        save_to_file();","lastModifiedDate":"2023-01-31"},{"lineNumber":255,"author":{"gitId":"JThh"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":256,"author":{"gitId":"JThh"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-18"},{"lineNumber":258,"author":{"gitId":"JThh"},"content":"        String greeting \u003d \"Hello! I\u0027m Duke\\n\" +","lastModifiedDate":"2023-01-18"},{"lineNumber":259,"author":{"gitId":"JThh"},"content":"                \"     What can I do for you?\";","lastModifiedDate":"2023-01-18"},{"lineNumber":260,"author":{"gitId":"JThh"},"content":"        print(greeting);","lastModifiedDate":"2023-01-18"},{"lineNumber":261,"author":{"gitId":"JThh"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-18"},{"lineNumber":262,"author":{"gitId":"JThh"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":263,"author":{"gitId":"JThh"},"content":"            String input \u003d sc.nextLine();","lastModifiedDate":"2023-01-18"},{"lineNumber":264,"author":{"gitId":"JThh"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":265,"author":{"gitId":"JThh"},"content":"                process_input(input);","lastModifiedDate":"2023-01-18"},{"lineNumber":266,"author":{"gitId":"JThh"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":267,"author":{"gitId":"JThh"},"content":"                print(e.toString());","lastModifiedDate":"2023-01-18"},{"lineNumber":268,"author":{"gitId":"JThh"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":269,"author":{"gitId":"JThh"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JThh":267,"-":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JThh"},"content":"todo read book","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"JThh"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"JThh"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"JThh"},"content":"todo borrow book","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"JThh"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"JThh"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"JThh"},"content":"unmark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"JThh"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"JThh"},"content":"list","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"JThh":9}}]
