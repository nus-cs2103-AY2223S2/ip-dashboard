[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"  protected static ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e(Arrays.asList","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"                  (\"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"list\", \"bye\", \"delete\"));","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"  public static void main(String[] args) throws EmptyInputException, InvalidCommandException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    greet();","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    run();","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"  public static void run() throws EmptyInputException, InvalidCommandException{","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    DukeList records \u003d new DukeList();","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"      while (true) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"          String input \u003d userInput.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"          ","lastModifiedDate":"2023-01-25"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"          //Check for empty input (pressing enter)","lastModifiedDate":"2023-01-25"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"          if (input \u003d\u003d \"\") {","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"            throw new EmptyInputException();","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"          }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"          String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-25"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"          //Check for invalid commands (first word)","lastModifiedDate":"2023-01-25"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"          boolean validCommand \u003d commandList.contains(inputArr[0]);","lastModifiedDate":"2023-01-25"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"          if (!validCommand) {","lastModifiedDate":"2023-01-25"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-01-25"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"          }","lastModifiedDate":"2023-01-25"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"          handleInput(input, records);","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"        }catch (EmptyInputException | InvalidCommandException exception) {","lastModifiedDate":"2023-01-25"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"          System.out.println(\"Input Error, please input a command within the list:\" +","lastModifiedDate":"2023-01-25"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"                  \"todo, deadline, event, mark, unmark, list, delete, bye/\");","lastModifiedDate":"2023-01-25"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"      }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"  public static void handleInput(String input, DukeList d) throws EmptyInputException, InvalidCommandException {","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"      if (input.contains(\"/\")) {","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"        String[] split \u003d input.split(\"/\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"        String[] secondSplit \u003d split[0].split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"        String command \u003d secondSplit[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"        String name \u003d secondSplit[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"        String time \u003d split[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"        handleThreeInputs(command, name, time, d);","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"      } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        String command \u003d split[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"        if (\"todo\".equalsIgnoreCase(command)) {","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"          d.insertToDo(split[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"        } else if (split.length \u003e 1) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"          Integer index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"          handleTwoInputs(command, index, d);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"        } else {","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"          try {","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"            handleSingleInput(command, d);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"          }catch (InvalidCommandException exception) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"Invalid command detected, please enter a value.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"          }","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"      }","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"  public static void handleSingleInput(String command, DukeList d) throws InvalidCommandException{","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"    switch (command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"      case \"bye\":","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"        exit();","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"      case \"list\":","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"        System.out.println(d.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"      default:","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"        d.insert(command);","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"  public static void handleTwoInputs(String command, Integer index, DukeList d) {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"    switch (command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"      case \"mark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"        d.mark(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"      case \"unmark\":","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"        d.unMark(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"      case \"delete\":","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"        d.deleteTask(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"  public static void handleThreeInputs(String command, String name, String time, DukeList d) {","lastModifiedDate":"2023-01-19"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"    switch (command) {","lastModifiedDate":"2023-01-19"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"      case \"deadline\":","lastModifiedDate":"2023-01-19"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"        d.insertDeadline(name, time);","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":98,"author":{"gitId":"JamesLiuZX"},"content":"      case \"event\":","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"JamesLiuZX"},"content":"        d.insertEvent(name, time);","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"JamesLiuZX"},"content":"      case \"todo\":","lastModifiedDate":"2023-01-19"},{"lineNumber":102,"author":{"gitId":"JamesLiuZX"},"content":"        d.insertToDo(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":103,"author":{"gitId":"JamesLiuZX"},"content":"        break;","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":105,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"JamesLiuZX"},"content":"  public static String format(String input) {","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"JamesLiuZX"},"content":"    return \"____________________________________________________________\\n\" +","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"JamesLiuZX"},"content":"            input +","lastModifiedDate":"2023-01-19"},{"lineNumber":110,"author":{"gitId":"JamesLiuZX"},"content":"            \"\\n____________________________________________________________\";","lastModifiedDate":"2023-01-19"},{"lineNumber":111,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":113,"author":{"gitId":"JamesLiuZX"},"content":"  public static void greet() {","lastModifiedDate":"2023-01-19"},{"lineNumber":114,"author":{"gitId":"JamesLiuZX"},"content":"    String greeting \u003d format(\"if it isn\u0027t your favourite astronaut lawyer doctor plumber cleaner, Johnny Sins.\"","lastModifiedDate":"2023-01-19"},{"lineNumber":115,"author":{"gitId":"JamesLiuZX"},"content":"    + \"\\n Ready to go on a self-exploration adventure?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":116,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(greeting);","lastModifiedDate":"2023-01-19"},{"lineNumber":117,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":118,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":119,"author":{"gitId":"JamesLiuZX"},"content":"  public static void exit(){","lastModifiedDate":"2023-01-19"},{"lineNumber":120,"author":{"gitId":"JamesLiuZX"},"content":"    String exitMsg \u003d format(\"Bye. Come back soon!\");","lastModifiedDate":"2023-01-19"},{"lineNumber":121,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(exitMsg);","lastModifiedDate":"2023-01-19"},{"lineNumber":122,"author":{"gitId":"JamesLiuZX"},"content":"    System.exit(1);","lastModifiedDate":"2023-01-19"},{"lineNumber":123,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"-":3,"JamesLiuZX":121}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"import java.lang.Exception;","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"  public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"    super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":7}},{"path":"src/main/java/DukeList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":" * Storage for user inputs up to 100 records.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"public class DukeList {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"  //Variables are kept protected and accessed only through internal getter and setter methods.","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"  protected static final int size \u003d 100;","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"  protected static ArrayList\u003cTask\u003e records;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"  //Constructor","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"  public DukeList() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    records \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"  public static void insert(String record) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"      Task t \u003d new Task(record);","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"      records.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"      System.out.println(Duke.format(\"added: \" + t));","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"  public void mark(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"    if (index \u003c 0 || index \u003e size) {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"      System.out.println(String.format(\"Indices have to be positive and less than %d.\", size));","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"      return;","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    Task task \u003d records.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"    task.markDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"  public void unMark(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"    if (index \u003c 0 || index \u003e size) {","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"      System.out.println(String.format(\"Indices have to be positive and less than %d.\", size));","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"      return;","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"    Task task \u003d records.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"    task.markUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\n\" + task.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    return;","lastModifiedDate":"2023-01-19"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"  public static void insertToDo(String name) {","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"    TaskToDo t \u003d new TaskToDo(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"    records.add(t);","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"Got it. I\u0027ve added this task:\\n\" + t.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"  public static void insertDeadline(String name, String time) {","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"    TaskDeadline d \u003d new TaskDeadline(name, time);","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"    records.add(d);","lastModifiedDate":"2023-01-19"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"Got it. I\u0027ve added this task:\\n\" + d.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"  public static void insertEvent(String name, String time) {","lastModifiedDate":"2023-01-19"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"    String[] times \u003d time.split(\"/\", 2);","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"    String from \u003d times[0];","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"    String to \u003d times[1];","lastModifiedDate":"2023-01-19"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"    TaskEvent e \u003d new TaskEvent(name, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"    records.add(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"Got it. I\u0027ve added this task:\\n\" + e.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"  public Task getTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"    return records.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"  public void deleteTask(int index) {","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"    Task t \u003d records.get(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"    records.remove(index);","lastModifiedDate":"2023-01-19"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"    System.out.println(Duke.format(\"Noted. I\u0027ve removed this task:\\n\" + t.toString()));","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"    String output \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"    if (records.isEmpty()) {","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"      return \"Please insert a task first.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"    for (int i \u003d 0; i \u003c records.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"      output +\u003d String.format(\"%s. %s\\n\", i+1, records.get(i));","lastModifiedDate":"2023-01-19"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"    return Duke.format(output);","lastModifiedDate":"2023-01-19"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":89}},{"path":"src/main/java/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"  public EmptyInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"    super(\"The input cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":5}},{"path":"src/main/java/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"public class InvalidCommandException extends DukeException{","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"  public InvalidCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"    super(\"Sorry, I don\u0027t know what that line means. You could try typing from our list of commands:\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"    + Duke.commandList.toString());","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":6}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":" * Parent Task object that represents each task inputted by the user.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * @param description     The task name to be completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" * @param isDone          The task\u0027s completion status denoted by X or \" \"","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"  protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"  protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"  public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"  public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"  public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"  public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"    return String.format(\"[%s] %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"            this.isDone ? \"X\": \" \", this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":37}},{"path":"src/main/java/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":" * The class representing a TaskDeadline task.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"  protected String time;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"  /**","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"   * Given a task and a deadline, constructs a TaskDeadline task.","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"   *","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"   * @param task     The task to be completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"   * @param time     The task\u0027s deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"   *","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"   * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"   * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"   */","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"  public TaskDeadline(String task, String time) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    this.time \u003d time;","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"            + String.format(\" (%s) \", time);","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":30}},{"path":"src/main/java/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":" * Given a task and a time range, constructs a Task event.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * @param task     The event to be completed.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" * @param from     The event\u0027s start.","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @param to     The event\u0027s end.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskEvent extends Task{","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"  protected String from;","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"  protected String to;","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"  public TaskEvent(String task, String from, String to) {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"    this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"            + String.format(\" (%s%s)\", this.from, this.to);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":27}},{"path":"src/main/java/TaskToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":" * Given a task description, construct a Task ToDo object.","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * @param s The description of the task.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" * AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"  public TaskToDo(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"    super(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"  @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"  public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"  }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":18}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"todo popeyes","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"todo mcdonald","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"todo test kfc","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"deadline popeyes /by yesterday recruit","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"event lose weight /from tomorrow /to next time","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"mark kfc","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":12}}]
