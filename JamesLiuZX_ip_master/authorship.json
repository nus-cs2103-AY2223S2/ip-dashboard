[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"# Johnny Chatbot. ","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"Welcome to the task management chatbot. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"## Setting up in Intellij IDEA","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"3. After that, locate the `src/main/java/duke.functions.Main.java` file, right-click it, and choose `Run duke.functions.Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"If it isn\u0027t your favourite astronaut lawyer doctor plumber cleaner, Johnny Sins.","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"Ready to go on a self-exploration adventure?","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"For more information on the commands available, type help.","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":14,"JamesLiuZX":7}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"checkstyle {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"    toolVersion \u003d \u002710.6\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"    mainClassName \u003d \"duke.functions.Launcher\"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"    archiveBaseName \u003d \"johnny\"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"-":39,"JamesLiuZX":23}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"T|0|sleep","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"T|1|groceries","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"T|0|groceries","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"T|0|laundry","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"T|0|more laundry","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"JamesLiuZX":5}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"# Johnny Chatbot.","lastModifiedDate":"2023-02-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"Welcome to the task management chatbot. Given below are instructions on how to use it.","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"## Content Page","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"1. [Setting Up](#1-setting-up-in-intellij)","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"2. [Features](#2-features)","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"   1. [Todo](#todo)","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"   2. [Deadline](#deadline)","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"   3. [Event](#event)","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"   4. [Help](#help)","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"3. [FAQ](#3-faq)","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"4. [Sample GUI Snapshot](#4-snapshot)","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"## 1. Setting up in Intellij","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    1. Click `Open`.","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"4. After that, locate the `src/main/java/duke.functions.Main.java` file, right-click it, and choose `Run duke.functions.Main.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"If it isn\u0027t your favourite astronaut lawyer doctor plumber cleaner, Johnny Sins.","lastModifiedDate":"2023-02-07"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"Ready to go on a self-exploration adventure?","lastModifiedDate":"2023-02-07"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"For more information on the commands available, type help.","lastModifiedDate":"2023-02-07"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"```","lastModifiedDate":"2023-02-07"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"## 2. Features","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"## `todo` ","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"Adds a todo task into your todo list.","lastModifiedDate":"2023-02-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2023-02-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"`todo read`","lastModifiedDate":"2023-02-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"Expected output:","lastModifiedDate":"2023-02-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":" Got it. I\u0027ve added this task: read","lastModifiedDate":"2023-02-07"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":" You now have 1 task left.","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":" ```","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"## `deadline` ","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"Adds a deadline task into your todo list.","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"`deadline finish homework /by 31/12/23 1200`","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"Expected output:","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":" Got it. I\u0027ve added this task: finish homework 31/12/23 1200","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":" You now have 2 tasks left.","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":" ```","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"## `event`","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"Adds a event task into your todo list.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"Example of usage:","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"`event party /from 31/12/22 1200 /to 01/01/23 2359.`","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"Expected output:","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":" Got it. I\u0027ve added this task: party from 31/12/23 1200 to 01/01/23 2359.","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":" You now have 3 tasks left.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":" ```","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"## `help`","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"Displays a help page with all commands available. ","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"## 3. `FAQ`","lastModifiedDate":"2023-02-17"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"**Q**: How can I transfer data from one computer to another?","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"**A**: The data is stored within the `duke.txt` file under `/data`. ","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"Just export it to the other device and you\u0027re good to go!","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"## 4. `Snapshot`","lastModifiedDate":"2023-02-17"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"All done properly, it should look like this.","lastModifiedDate":"2023-02-12"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"![Display](Ui.png)","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"-":21,"JamesLiuZX":75}},{"path":"src/main/java/duke/exceptions/DateTimeFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * The exception class that indicates that the DateTime format inputted is incorrect.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"public class DateTimeFormatException extends DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    public DateTimeFormatException() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        super(\"Please input the datetime format in /by DD/MM/YY HHMM.\");","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"JamesLiuZX":17}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * The main exception class for this app.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        super(message);","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":16}},{"path":"src/main/java/duke/exceptions/EmptyInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * The exception class that informs a user that the input was empty.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"public class EmptyInputException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    public EmptyInputException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        super(\"The input cannot be empty.\");","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":16}},{"path":"src/main/java/duke/exceptions/InvalidArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * The exception class that indicates that the input arguments after the command are invalid or not enough.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"public class InvalidArgumentsException extends DukeException {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"    public InvalidArgumentsException() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"        super(\"Sorry, I don\u0027t understand what you have wrote after the command\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"JamesLiuZX":17}},{"path":"src/main/java/duke/exceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import duke.functions.Ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * The exception class that indicates that the command entered is incorrect.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"        super(\"Sorry, I don\u0027t know what that line means. You could try typing from our list of commands:\\n\"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"                + Ui.commandList.toString());","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":20}},{"path":"src/main/java/duke/exceptions/MultipleArgumentsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.exceptions;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * The exception class that indicates that too many arguments were entered after the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"public class MultipleArgumentsException extends DukeException{","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     * The default constructor for this exception.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"    public MultipleArgumentsException() {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"        super(\"Too many inputs after the command!\");","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"JamesLiuZX":17}},{"path":"src/main/java/duke/functions/DatabaseWriter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.List;","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":" * The main class for manipulating the database records in duke.txt.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"public class DatabaseWriter {","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"    private static final String folderPath \u003d \"data\";","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    private static final String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    private static Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"     * Default constructor for a DatabaseWriter object.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"     * @param path File path of database.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    public DatabaseWriter(Path path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts task to database.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"     * @param t Task object to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"    public void addToDb(Task t) {","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"            FileWriter fw \u003d new FileWriter(filePath, true);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"            String formattedTask \u003d t.toStringDb();","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"            fw.write(formattedTask + \u0027\\n\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"            fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException exception) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"Error while reading database.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"     * Removes task from database.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of Task object to be removed (1-indexed).","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"    public void removeFromDb(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"            String line \u003d lines.set(index, \"\");","lastModifiedDate":"2023-01-26"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"File exception has occured.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks a task as done in the database.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of Task object to be marked done (1-indexed).","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"    public void setDone(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"            String line \u003d lines.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"            String newLine \u003d replaceChar(line, 2, \u0027X\u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"            lines.set(index, newLine);","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"File exception has occured.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks a task as undone in the database.","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of Task object to be marked undone (1-indexed).","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"    public void setUndone(int index) {","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"            List\u003cString\u003e lines \u003d Files.readAllLines(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"            String line \u003d lines.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"            String newLine \u003d replaceChar(line, 2, \u0027 \u0027);","lastModifiedDate":"2023-01-26"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"            lines.set(index, newLine);","lastModifiedDate":"2023-01-26"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"File exception has occured.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"     * Helper method to edit the done status of task records in the database.","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"     * @param s The record string in the database.","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of character to be replaced.","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"JamesLiuZX"},"content":"     * @param newValue The new char value.","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"JamesLiuZX"},"content":"     * @return The new string with updated done status.","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"JamesLiuZX"},"content":"    public static String replaceChar(String s, int index, char newValue) {","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"JamesLiuZX"},"content":"        StringBuilder string \u003d new StringBuilder(s);","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"JamesLiuZX"},"content":"        string.setCharAt(index, newValue);","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"JamesLiuZX"},"content":"        return string.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"JamesLiuZX":107}},{"path":"src/main/java/duke/functions/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":" * A dialog box represented in FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":" * This control contains a styled dialog box and 2 input components from user and bot respectively.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/style/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     * Flips the dialog box so that the text is to the right of the image.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"        var box \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"        box.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"        return box;","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":60}},{"path":"src/main/java/duke/functions/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"public class Duke {","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"    protected static final String FILEPATH \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"    private Storage storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"    private TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    public Duke() {","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"        assert FILEPATH !\u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        storage \u003d new Storage(FILEPATH);","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"            assert tasks !\u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"            storage.readDatabase(tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"        Duke d \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"        TaskList list \u003d new TaskList();","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"        d.storage.readDatabase(list);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"        d.ui.run(list);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"     * Process the input and return the server response.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     * @param input The command from the user.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     * @return The server response delivered to the UI.","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"            Duke d \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"            Parser p \u003d new Parser(d.tasks);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"            String output \u003d p.handleInput(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"            return output;","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":46}},{"path":"src/main/java/duke/functions/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":8}},{"path":"src/main/java/duke/functions/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":" * A GUI for duke.functions.Duke using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/style/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":31}},{"path":"src/main/java/duke/functions/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/johnnydepp.jpeg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/img/johnnysins.jpg\"));","lastModifiedDate":"2023-02-07"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"        assert d !\u003d null;","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"                \"If it isn\u0027t your favourite astronaut lawyer doctor plumber cleaner, Johnny Sins.\"","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"                        + \"\\n Ready to go on a self-exploration adventure?\",","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"                dukeImage));","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"        if (response.equals(\"Bye. Come back soon!\")) {","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"            Platform.exit();","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":61}},{"path":"src/main/java/duke/functions/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DateTimeFormatException;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.InvalidArgumentsException;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.MultipleArgumentsException;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.Task;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" * The main class for parsing commands via the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"public class Parser {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    private TaskList list;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"     * Default constructor for a parser object.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"     * @param list The main list initialised in Ui.java.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"    public Parser(TaskList list) {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"     * Main method to handle logic for input from command line","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     * @param input String input written in the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"     * @throws InvalidCommandException Error from an invalid command.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"    public String handleInput(String input) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        String[] split \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"        String cmd \u003d split[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"        switch (cmd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"        case \"list\":","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"        case \"mark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"            return mark(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"        case \"unmark\":","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"            return unmark(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"        case \"delete\":","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"            return delete(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"        case \"deadline\":","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"            return deadline(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        case \"event\":","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"            return event(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"        case \"todo\":","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"            return todo(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"            return bye(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"        case \"find\":","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"            return find(split);","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"        case \"help\":","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"            return Ui.help();","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"        case \"usage\":","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"            return Ui.helpDetailed();","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"        default:","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"            throw new InvalidCommandException();","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"     * Main method to parse database duke.functions.Duke.txt to populate current TaskList.","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"     * @param fileReader","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"     * @param dl TaskList from","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"    public void parseDatabase(Scanner fileReader, TaskList dl) {","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"        int index \u003d -1;","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"        while (fileReader.hasNextLine()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"            String input \u003d fileReader.nextLine();","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"            String[] split \u003d input.split(\"\\\\|\");","lastModifiedDate":"2023-02-02"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"            String cmd \u003d split[0];","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"            String status \u003d split[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"            String taskName \u003d split[2];","lastModifiedDate":"2023-02-02"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"            index++;","lastModifiedDate":"2023-02-02"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"            switch (cmd) {","lastModifiedDate":"2023-02-02"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"            case \"T\":","lastModifiedDate":"2023-02-02"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"                dl.insertToDo(taskName, true);","lastModifiedDate":"2023-02-02"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"                if (status.equals(\"X\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"                    dl.mark(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"            case \"D\":","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"                String deadline \u003d \"a\";","lastModifiedDate":"2023-02-02"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"                dl.insertDeadline(taskName, deadline, true);","lastModifiedDate":"2023-02-02"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"                if (status.equals(\"X\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"                    dl.mark(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"            case \"E\":","lastModifiedDate":"2023-02-02"},{"lineNumber":97,"author":{"gitId":"JamesLiuZX"},"content":"                String startTime \u003d split[3];","lastModifiedDate":"2023-02-02"},{"lineNumber":98,"author":{"gitId":"JamesLiuZX"},"content":"                String endTime \u003d split[3];","lastModifiedDate":"2023-02-02"},{"lineNumber":99,"author":{"gitId":"JamesLiuZX"},"content":"                dl.insertEvent(taskName, startTime, endTime, true);","lastModifiedDate":"2023-02-02"},{"lineNumber":100,"author":{"gitId":"JamesLiuZX"},"content":"                if (status.equals(\"X\")) {","lastModifiedDate":"2023-02-02"},{"lineNumber":101,"author":{"gitId":"JamesLiuZX"},"content":"                    dl.mark(index);","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"JamesLiuZX"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"JamesLiuZX"},"content":"            default:","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"JamesLiuZX"},"content":"                break;","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":108,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":109,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":110,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":111,"author":{"gitId":"JamesLiuZX"},"content":"    private String mark(String[] split) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":113,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":114,"author":{"gitId":"JamesLiuZX"},"content":"                throw new MultipleArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"JamesLiuZX"},"content":"            Integer index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.mark(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":118,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (NumberFormatException | MultipleArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":119,"author":{"gitId":"JamesLiuZX"},"content":"            return \"Please input a number after the command.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":120,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":121,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"JamesLiuZX"},"content":"    private String unmark(String[] split) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":124,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":126,"author":{"gitId":"JamesLiuZX"},"content":"                throw new MultipleArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":127,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":128,"author":{"gitId":"JamesLiuZX"},"content":"            Integer index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":129,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.unMark(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":130,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (NumberFormatException | MultipleArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":131,"author":{"gitId":"JamesLiuZX"},"content":"            return \"Please input a number after the command.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":133,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":134,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"JamesLiuZX"},"content":"    private String delete(String[] split) {","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-07"},{"lineNumber":138,"author":{"gitId":"JamesLiuZX"},"content":"                throw new MultipleArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"JamesLiuZX"},"content":"            Integer index \u003d Integer.parseInt(split[1]);","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.deleteTask(index);","lastModifiedDate":"2023-02-06"},{"lineNumber":142,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (NumberFormatException | MultipleArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"JamesLiuZX"},"content":"            return \"Please input a number after the command.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":144,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"JamesLiuZX"},"content":"    private String deadline(String[] split) {","lastModifiedDate":"2023-02-06"},{"lineNumber":148,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"JamesLiuZX"},"content":"            String[] secondSplit \u003d split[1].split(\"/by \");","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"JamesLiuZX"},"content":"            if (secondSplit.length !\u003d 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"JamesLiuZX"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":152,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":153,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.insertDeadline(secondSplit[0], secondSplit[1]);","lastModifiedDate":"2023-02-06"},{"lineNumber":154,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (InvalidArgumentsException | DateTimeFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":155,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":156,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":159,"author":{"gitId":"JamesLiuZX"},"content":"    private String event(String[] split) {","lastModifiedDate":"2023-02-06"},{"lineNumber":160,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"JamesLiuZX"},"content":"            String[] secondSplit \u003d split[1].split(\"/from |/to \", 3);","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(secondSplit);","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"JamesLiuZX"},"content":"            if (secondSplit.length !\u003d 3) {","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"JamesLiuZX"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.insertEvent(secondSplit[0], secondSplit[1], secondSplit[2]);","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (InvalidArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"JamesLiuZX"},"content":"    private String todo(String[] split) {","lastModifiedDate":"2023-02-06"},{"lineNumber":173,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"JamesLiuZX"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":177,"author":{"gitId":"JamesLiuZX"},"content":"            String todoName \u003d split[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":178,"author":{"gitId":"JamesLiuZX"},"content":"            return this.list.insertToDo(todoName);","lastModifiedDate":"2023-02-06"},{"lineNumber":179,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (InvalidArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":180,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":181,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":182,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":183,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":184,"author":{"gitId":"JamesLiuZX"},"content":"    private String find(String[] split) {","lastModifiedDate":"2023-02-06"},{"lineNumber":185,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":186,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 2) {","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"JamesLiuZX"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"JamesLiuZX"},"content":"            String name \u003d split[1];","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"JamesLiuZX"},"content":"            ArrayList\u003cTask\u003e results \u003d this.list.findMatchingTasks(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":191,"author":{"gitId":"JamesLiuZX"},"content":"            String output \u003d \"Here are the tasks in your list: \\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":192,"author":{"gitId":"JamesLiuZX"},"content":"            if (!results.isEmpty()) {","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"JamesLiuZX"},"content":"                int index \u003d 0;","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"JamesLiuZX"},"content":"                for (Task task : results) {","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"JamesLiuZX"},"content":"                    output +\u003d String.format(\"%d.%s%n\\n\", index, task);","lastModifiedDate":"2023-02-06"},{"lineNumber":196,"author":{"gitId":"JamesLiuZX"},"content":"                    index++;","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"JamesLiuZX"},"content":"            } else {","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"JamesLiuZX"},"content":"                return \"There are no matching tasks currently!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":200,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"JamesLiuZX"},"content":"            return output;","lastModifiedDate":"2023-02-06"},{"lineNumber":202,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (InvalidArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":203,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":204,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":206,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":207,"author":{"gitId":"JamesLiuZX"},"content":"    private String bye(String[] split) throws InvalidCommandException {","lastModifiedDate":"2023-02-06"},{"lineNumber":208,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":209,"author":{"gitId":"JamesLiuZX"},"content":"            if (split.length !\u003d 1) {","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"JamesLiuZX"},"content":"                throw new InvalidArgumentsException();","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":212,"author":{"gitId":"JamesLiuZX"},"content":"            return \"Bye. Come back soon!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":213,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (InvalidArgumentsException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":215,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":216,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":217,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":218,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"JamesLiuZX":218}},{"path":"src/main/java/duke/functions/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":" * Main storage class that controls the initialisation and reading of database, and the population of TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"public class Storage {","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    private String filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"     * Reads duke.txt and populates existing TaskList in the appropriate format.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"     * @param dl TaskList passed down from duke.functions.Duke main class.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    public void readDatabase(TaskList dl) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"            Scanner fileReader \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"            Parser p \u003d new Parser(dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"            p.parseDatabase(fileReader, dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"            fileReader.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"            dl.toString();","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"            this.initialiseDatabase();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"     * Creates duke.txt in filePath specified if not already existing.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    private void initialiseDatabase() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"        File f \u003d new File(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"        File dir \u003d new File(\"duke.txt\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"        dir.mkdir();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"            f.createNewFile();","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(\"Error creating database.\");","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"JamesLiuZX":55}},{"path":"src/main/java/duke/functions/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.functions;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.EmptyInputException;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.InvalidCommandException;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":" * Main UI class that controls the formatting and display of output to CLI.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"public class Ui {","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    public static ArrayList\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"            \"todo\", \"deadline\", \"event\", \"mark\", \"unmark\", \"list\", \"bye\", \"delete\", \"find\", \"help\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"     * Main method to start interaction between user and interface.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"     * @param records TaskList passed down from duke.functions.Duke main class.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    public void run(TaskList records) {","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"        greet();","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"        Scanner userInput \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"        Parser p \u003d new Parser(records);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"        while (true) {","lastModifiedDate":"2023-01-26"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"            try {","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"                String input \u003d userInput.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"                //Check for empty input (pressing enter)","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"                if (input \u003d\u003d \"\") {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"                    throw new EmptyInputException();","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"                String[] inputArr \u003d input.split(\" \", 2);","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"                //Check for invalid commands (first word)","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"                boolean isValidCommand \u003d commandList.contains(inputArr[0]);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"                if (!isValidCommand) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"                }","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"                p.handleInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"     * Auxiliary static method to format text outputs to the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"     * @param input String to be formatted.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String object to be written to the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"    public static String format(String input) {","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"        return input;","lastModifiedDate":"2023-02-07"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"     * Method to display greeting string to the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"    public void greet() {","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"        String greeting \u003d format(\"if it isn\u0027t your favourite astronaut lawyer doctor plumber cleaner, Johnny Sins.\"","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"                + \"\\n Ready to go on a self-exploration adventure?\"","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"                + \"\\n For more information on the commands available, type help.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"        System.out.println(greeting);","lastModifiedDate":"2023-01-26"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"     * Method to display help string to the command line.","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"     * @return Help string.","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"    public static String help() {","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"        String help \u003d \"The available commands are todo, deadline, event, mark, unmark, list, bye, delete, find, help.\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"                + \"For more information on the usage of the commands, please type usage.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"        return help;","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"     * Method to display a detailed help string to the command line.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"     * @return Detailed help string.","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"    public static String helpDetailed() {","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"        String help \u003d format(\"Hi.\"","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"The commands available are: \\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"todo task - add a task to your todo list\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"deadline task /by time - add a task with deadline\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"event task /from time /to time - add an event\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"mark 1 - marks first item in the list as done\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"unmark 5 - marks 5th item in the list as undone\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"list - shows all tasks in the list\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"delete 1 - deletes first task from the list\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"find task - finds all tasks containing the name\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":97,"author":{"gitId":"JamesLiuZX"},"content":"                    + \"bye - exit this application.\"","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":99,"author":{"gitId":"JamesLiuZX"},"content":"        return help;","lastModifiedDate":"2023-02-06"},{"lineNumber":100,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-26"}],"authorContributionMap":{"JamesLiuZX":101}},{"path":"src/main/java/duke/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * Parent Task object that represents each task inputted by the user.","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    private String description;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"    private boolean isDone;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"     * Constructor for creating a Task object.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    public void markDone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks a task as undone.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"    public void markUndone() {","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a Task object which users can see in the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"        return String.format(\"[%s] %s\",","lastModifiedDate":"2023-01-19"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"                this.isDone ? \"X\" : \" \", this.description);","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a task object to store in the duke.functions.Duke.txt file.","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of task.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"    public String toStringDb() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"        return String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"                \"%s|%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"                this.isDone ? \"X\" : 0,","lastModifiedDate":"2023-02-02"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"                this.description","lastModifiedDate":"2023-01-26"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":63}},{"path":"src/main/java/duke/tasks/TaskDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.tasks;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * Encapsulates a task which has a specific deadline denoted by /by.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskDeadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    private LocalDateTime time;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"     * Constructor for creating a TaskDeadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"     * @param task     The task name to be completed.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"     * @param time     The task\u0027s deadline.","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    public TaskDeadline(String task, LocalDateTime time) {","lastModifiedDate":"2023-01-26"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"        super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"        this.time \u003d time;","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a Deadline object which users can see in the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"                + String.format(\" (%s) \", time);","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a TaskDeadline object that is stored in the duke.functions.Duke.txt file.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskDeadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    public String toStringDb() {","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"        return String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"                \"%s|%s|%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"                \"D\",","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"                super.toStringDb(),","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"                this.time","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":52}},{"path":"src/main/java/duke/tasks/TaskEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * Given a task and a time range, constructs a Task event.","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskEvent extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"     * Constructor for creating a TaskEvent object.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"     * @param task     The task name to be completed.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"     * @param from     The task\u0027s start date and time.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"     * @param to       The task\u0027s end date and time.","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    public TaskEvent(String task, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"        super(task);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a TaskEvent object which users can see in the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskEvent.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"                + String.format(\" (%s%s)\", this.from, this.to);","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a TaskEvent object that is stored in the duke.functions.Duke.txt file.","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskEvent.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"    public String toStringDb() {","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"        return String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"                \"E|%s|%s|%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"                super.toStringDb(),","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"                this.from, this.to","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":53}},{"path":"src/main/java/duke/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DateTimeFormatException;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"import duke.functions.DatabaseWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"import duke.functions.Ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":" * Encapsulates a container for all tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskList {","lastModifiedDate":"2023-01-26"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    //Variables are kept private and accessed only through internal getter and setter methods.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    private static final int size \u003d 100;","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    private ArrayList\u003cTask\u003e records;","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    private final String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    private int count \u003d 0;","lastModifiedDate":"2023-02-07"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"    private Path path \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    private DatabaseWriter dw \u003d new DatabaseWriter(path);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yy HHmm\");","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    private String dateTimeRegex \u003d \"^\\\\d{2}/\\\\d{2}/\\\\d{2} \\\\d{4}$\";","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     * Constructor for initialising a new TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"        records \u003d new ArrayList\u003c\u003e(size);","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks a task in the list as done. (1-indexed)","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of task marked.","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JamesLiuZX"},"content":"    public String mark(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JamesLiuZX"},"content":"        index--;","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"JamesLiuZX"},"content":"        if (index \u003c 0 || index \u003e size) {","lastModifiedDate":"2023-01-19"},{"lineNumber":47,"author":{"gitId":"JamesLiuZX"},"content":"            return String.format(\"Indices have to be positive and less than %d.\", size);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":49,"author":{"gitId":"JamesLiuZX"},"content":"        Task task \u003d this.records.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"JamesLiuZX"},"content":"        task.markDone();","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"JamesLiuZX"},"content":"        dw.setDone(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":54,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JamesLiuZX"},"content":"     * Marks a task in the list as undone. (1-indexed)","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of task marked.","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"JamesLiuZX"},"content":"     * @return Completion announcement.","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":61,"author":{"gitId":"JamesLiuZX"},"content":"    public String unMark(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"JamesLiuZX"},"content":"        index--;","lastModifiedDate":"2023-02-02"},{"lineNumber":63,"author":{"gitId":"JamesLiuZX"},"content":"        if (index \u003c 0 || index \u003e size) {","lastModifiedDate":"2023-01-19"},{"lineNumber":64,"author":{"gitId":"JamesLiuZX"},"content":"            return String.format(\"Indices have to be positive and less than %d.\", size);","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":66,"author":{"gitId":"JamesLiuZX"},"content":"        Task task \u003d this.records.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"JamesLiuZX"},"content":"        task.markUndone();","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"JamesLiuZX"},"content":"        dw.setUndone(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":69,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(\"OK, I\u0027ve marked this task as not done yet:\\n\\n\" + task.toString());","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":71,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":72,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a generic task to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":77,"author":{"gitId":"JamesLiuZX"},"content":"    public String insertTask(String name) {","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"JamesLiuZX"},"content":"        Task t \u003d new Task(name);","lastModifiedDate":"2023-02-02"},{"lineNumber":79,"author":{"gitId":"JamesLiuZX"},"content":"        this.records.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"JamesLiuZX"},"content":"        dw.addToDb(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"JamesLiuZX"},"content":"        this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":82,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(\"added: \" + t);","lastModifiedDate":"2023-02-06"},{"lineNumber":83,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":86,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskToDo to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":87,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":88,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":89,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":90,"author":{"gitId":"JamesLiuZX"},"content":"    public String insertToDo(String name) {","lastModifiedDate":"2023-02-06"},{"lineNumber":91,"author":{"gitId":"JamesLiuZX"},"content":"        TaskToDo t \u003d new TaskToDo(name);","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"JamesLiuZX"},"content":"        this.records.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"JamesLiuZX"},"content":"        dw.addToDb(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"JamesLiuZX"},"content":"        this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":95,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":96,"author":{"gitId":"JamesLiuZX"},"content":"                        + t.toString()","lastModifiedDate":"2023-02-07"},{"lineNumber":97,"author":{"gitId":"JamesLiuZX"},"content":"                        + String.format(\"\\nYou now have %s tasks left.\", this.count)","lastModifiedDate":"2023-02-07"},{"lineNumber":98,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":99,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":102,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskToDo from the database to the TaskList, does not invoke addToDb() in avoid infinite loop.","lastModifiedDate":"2023-02-02"},{"lineNumber":103,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":104,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":105,"author":{"gitId":"JamesLiuZX"},"content":"     * @param isInitial Boolean value of whether the program is population the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":106,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":107,"author":{"gitId":"JamesLiuZX"},"content":"    public void insertToDo(String name, boolean isInitial) {","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"JamesLiuZX"},"content":"        TaskToDo t \u003d new TaskToDo(name);","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"JamesLiuZX"},"content":"        this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":110,"author":{"gitId":"JamesLiuZX"},"content":"        this.records.add(t);","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":112,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":114,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskDeadline from the database to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":115,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":116,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":117,"author":{"gitId":"JamesLiuZX"},"content":"     * @param time Deadline time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":118,"author":{"gitId":"JamesLiuZX"},"content":"     * @return Task added successfully announcement.","lastModifiedDate":"2023-02-06"},{"lineNumber":119,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":120,"author":{"gitId":"JamesLiuZX"},"content":"    public String insertDeadline(String name, String time) throws DateTimeFormatException {","lastModifiedDate":"2023-02-06"},{"lineNumber":121,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":122,"author":{"gitId":"JamesLiuZX"},"content":"            if (!time.matches(dateTimeRegex)) { // dd/mm/yy tttt","lastModifiedDate":"2023-02-02"},{"lineNumber":123,"author":{"gitId":"JamesLiuZX"},"content":"                throw new DateTimeFormatException();","lastModifiedDate":"2023-02-02"},{"lineNumber":124,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":125,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":126,"author":{"gitId":"JamesLiuZX"},"content":"            TaskDeadline d \u003d new TaskDeadline(time, dateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":127,"author":{"gitId":"JamesLiuZX"},"content":"            this.records.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":128,"author":{"gitId":"JamesLiuZX"},"content":"            dw.addToDb(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":129,"author":{"gitId":"JamesLiuZX"},"content":"            this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":130,"author":{"gitId":"JamesLiuZX"},"content":"            return Ui.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":131,"author":{"gitId":"JamesLiuZX"},"content":"                    + d.toString()","lastModifiedDate":"2023-02-07"},{"lineNumber":132,"author":{"gitId":"JamesLiuZX"},"content":"                    + String.format(\"\\nYou now have %s tasks left.\", this.count)","lastModifiedDate":"2023-02-07"},{"lineNumber":133,"author":{"gitId":"JamesLiuZX"},"content":"            );","lastModifiedDate":"2023-02-07"},{"lineNumber":134,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DateTimeFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":135,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":136,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":137,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":138,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":139,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":140,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskDeadline from the database to the TaskList, does not invoke addToDb() in avoid infinite loop.","lastModifiedDate":"2023-02-02"},{"lineNumber":141,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":142,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":143,"author":{"gitId":"JamesLiuZX"},"content":"     * @param time Deadline time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":144,"author":{"gitId":"JamesLiuZX"},"content":"     * @param isInitial Boolean value of whether the program is population the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":145,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":146,"author":{"gitId":"JamesLiuZX"},"content":"    public void insertDeadline(String name, String time, boolean isInitial) {","lastModifiedDate":"2023-01-26"},{"lineNumber":147,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"JamesLiuZX"},"content":"            if (!time.matches(dateTimeRegex)) { // dd/mm/yy tttt","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"JamesLiuZX"},"content":"                throw new DateTimeFormatException();","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-01-26"},{"lineNumber":152,"author":{"gitId":"JamesLiuZX"},"content":"            TaskDeadline d \u003d new TaskDeadline(time, dateTime);","lastModifiedDate":"2023-01-26"},{"lineNumber":153,"author":{"gitId":"JamesLiuZX"},"content":"            this.records.add(d);","lastModifiedDate":"2023-01-26"},{"lineNumber":154,"author":{"gitId":"JamesLiuZX"},"content":"            this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":155,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DateTimeFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":156,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":157,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":158,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":159,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":160,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":161,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskEvent from the database to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":162,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":163,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":164,"author":{"gitId":"JamesLiuZX"},"content":"     * @param startString Start time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":165,"author":{"gitId":"JamesLiuZX"},"content":"     * @param endString End time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":166,"author":{"gitId":"JamesLiuZX"},"content":"     * @return Task added successfully announcement.","lastModifiedDate":"2023-02-06"},{"lineNumber":167,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":168,"author":{"gitId":"JamesLiuZX"},"content":"    public String insertEvent(String name, String startString, String endString) {","lastModifiedDate":"2023-02-06"},{"lineNumber":169,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":170,"author":{"gitId":"JamesLiuZX"},"content":"            if (!startString.matches(dateTimeRegex) // dd/mm/yy tttt","lastModifiedDate":"2023-02-02"},{"lineNumber":171,"author":{"gitId":"JamesLiuZX"},"content":"                    | !endString.matches(dateTimeRegex)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":172,"author":{"gitId":"JamesLiuZX"},"content":"                throw new DateTimeFormatException();","lastModifiedDate":"2023-02-02"},{"lineNumber":173,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":174,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startString, formatter);","lastModifiedDate":"2023-02-02"},{"lineNumber":175,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endString, formatter);","lastModifiedDate":"2023-02-02"},{"lineNumber":176,"author":{"gitId":"JamesLiuZX"},"content":"            TaskEvent e \u003d new TaskEvent(name, start, end);","lastModifiedDate":"2023-01-26"},{"lineNumber":177,"author":{"gitId":"JamesLiuZX"},"content":"            this.records.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":178,"author":{"gitId":"JamesLiuZX"},"content":"            dw.addToDb(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":179,"author":{"gitId":"JamesLiuZX"},"content":"            this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":180,"author":{"gitId":"JamesLiuZX"},"content":"            return Ui.format(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":181,"author":{"gitId":"JamesLiuZX"},"content":"                    + e.toString()","lastModifiedDate":"2023-02-07"},{"lineNumber":182,"author":{"gitId":"JamesLiuZX"},"content":"                    + String.format(\"\\nYou now have %s tasks left.\", this.count)","lastModifiedDate":"2023-02-07"},{"lineNumber":183,"author":{"gitId":"JamesLiuZX"},"content":"            );","lastModifiedDate":"2023-02-07"},{"lineNumber":184,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DateTimeFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":185,"author":{"gitId":"JamesLiuZX"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":186,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":187,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":188,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":189,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":190,"author":{"gitId":"JamesLiuZX"},"content":"     * Inserts a TaskEvent from the database to the TaskList, does not invoke addToDb() in avoid infinite loop.","lastModifiedDate":"2023-02-02"},{"lineNumber":191,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":192,"author":{"gitId":"JamesLiuZX"},"content":"     * @param name Task name to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":193,"author":{"gitId":"JamesLiuZX"},"content":"     * @param startString Start time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":194,"author":{"gitId":"JamesLiuZX"},"content":"     * @param endString End time in string, according to the dateTimeRegex format.","lastModifiedDate":"2023-02-02"},{"lineNumber":195,"author":{"gitId":"JamesLiuZX"},"content":"     * @param isInitial Boolean value of whether the program is population the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":196,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":197,"author":{"gitId":"JamesLiuZX"},"content":"    public void insertEvent(String name, String startString, String endString, boolean isInitial) {","lastModifiedDate":"2023-02-02"},{"lineNumber":198,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":199,"author":{"gitId":"JamesLiuZX"},"content":"            if (!startString.matches(dateTimeRegex) // dd/mm/yy tttt","lastModifiedDate":"2023-02-02"},{"lineNumber":200,"author":{"gitId":"JamesLiuZX"},"content":"                    | !endString.matches(dateTimeRegex)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":201,"author":{"gitId":"JamesLiuZX"},"content":"                throw new DateTimeFormatException();","lastModifiedDate":"2023-02-02"},{"lineNumber":202,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":203,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime start \u003d LocalDateTime.parse(startString, formatter);","lastModifiedDate":"2023-02-02"},{"lineNumber":204,"author":{"gitId":"JamesLiuZX"},"content":"            LocalDateTime end \u003d LocalDateTime.parse(endString, formatter);","lastModifiedDate":"2023-02-02"},{"lineNumber":205,"author":{"gitId":"JamesLiuZX"},"content":"            TaskEvent e \u003d new TaskEvent(name, start, end);","lastModifiedDate":"2023-01-26"},{"lineNumber":206,"author":{"gitId":"JamesLiuZX"},"content":"            this.records.add(e);","lastModifiedDate":"2023-01-26"},{"lineNumber":207,"author":{"gitId":"JamesLiuZX"},"content":"            this.count +\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":208,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DateTimeFormatException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":209,"author":{"gitId":"JamesLiuZX"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":210,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":211,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":212,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":213,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":214,"author":{"gitId":"JamesLiuZX"},"content":"     * Removes task from TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":215,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":216,"author":{"gitId":"JamesLiuZX"},"content":"     * @param index Index of task to be deleted. (1-indexed)","lastModifiedDate":"2023-02-02"},{"lineNumber":217,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":218,"author":{"gitId":"JamesLiuZX"},"content":"    public String deleteTask(int index) {","lastModifiedDate":"2023-02-06"},{"lineNumber":219,"author":{"gitId":"JamesLiuZX"},"content":"        Task t \u003d this.records.get(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":220,"author":{"gitId":"JamesLiuZX"},"content":"        this.records.remove(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":221,"author":{"gitId":"JamesLiuZX"},"content":"        dw.removeFromDb(index);","lastModifiedDate":"2023-01-26"},{"lineNumber":222,"author":{"gitId":"JamesLiuZX"},"content":"        this.count -\u003d 1;","lastModifiedDate":"2023-02-07"},{"lineNumber":223,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(\"Got it. I\u0027ve removed this task:\\n\"","lastModifiedDate":"2023-02-07"},{"lineNumber":224,"author":{"gitId":"JamesLiuZX"},"content":"                + t.toString()","lastModifiedDate":"2023-02-07"},{"lineNumber":225,"author":{"gitId":"JamesLiuZX"},"content":"                + String.format(\"\\nYou now have %s tasks left.\", this.count)","lastModifiedDate":"2023-02-07"},{"lineNumber":226,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-02-07"},{"lineNumber":227,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":228,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":229,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":230,"author":{"gitId":"JamesLiuZX"},"content":"    public ArrayList\u003cTask\u003e findMatchingTasks(String keyword) {","lastModifiedDate":"2023-02-02"},{"lineNumber":231,"author":{"gitId":"JamesLiuZX"},"content":"        ArrayList\u003cTask\u003e selected \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-02"},{"lineNumber":232,"author":{"gitId":"JamesLiuZX"},"content":"        for (Task task: records) {","lastModifiedDate":"2023-02-02"},{"lineNumber":233,"author":{"gitId":"JamesLiuZX"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-02-02"},{"lineNumber":234,"author":{"gitId":"JamesLiuZX"},"content":"                selected.add(task);","lastModifiedDate":"2023-02-02"},{"lineNumber":235,"author":{"gitId":"JamesLiuZX"},"content":"            }","lastModifiedDate":"2023-02-02"},{"lineNumber":236,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":237,"author":{"gitId":"JamesLiuZX"},"content":"        return selected;","lastModifiedDate":"2023-02-02"},{"lineNumber":238,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":239,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":240,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":241,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation the TaskList by iterating through it.","lastModifiedDate":"2023-02-02"},{"lineNumber":242,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":243,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":244,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":245,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":246,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":247,"author":{"gitId":"JamesLiuZX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":248,"author":{"gitId":"JamesLiuZX"},"content":"        String output \u003d \"\";","lastModifiedDate":"2023-01-19"},{"lineNumber":249,"author":{"gitId":"JamesLiuZX"},"content":"        if (this.records.isEmpty()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":250,"author":{"gitId":"JamesLiuZX"},"content":"            return \"Please insert a task first.\";","lastModifiedDate":"2023-01-19"},{"lineNumber":251,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":252,"author":{"gitId":"JamesLiuZX"},"content":"        for (int i \u003d 0; i \u003c records.size(); i++) {","lastModifiedDate":"2023-01-19"},{"lineNumber":253,"author":{"gitId":"JamesLiuZX"},"content":"            output +\u003d String.format(\"%s. %s\\n\", i + 1, this.records.get(i));","lastModifiedDate":"2023-01-26"},{"lineNumber":254,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":255,"author":{"gitId":"JamesLiuZX"},"content":"        return Ui.format(output);","lastModifiedDate":"2023-01-26"},{"lineNumber":256,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":257,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":257}},{"path":"src/main/java/duke/tasks/TaskToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke.tasks;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":" * Encapsulates a simple task to be done.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":" *","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":" * @author JamesLiuZX","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":" *     AY2223-S2 CS2103T","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"public class TaskToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"     * Constructor for creating a TaskToDo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"     * @param s        The task\u0027s description.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    public TaskToDo(String s) {","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"        super(s);","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a TaskToDo object which users can see in the command line.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskToDo.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"     * Returns string representation of a TaskToDo object that is stored in the duke.functions.Duke.txt file.","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"     *","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"     * @return String representation of TaskTodo.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"    @Override","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    public String toStringDb() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"        return String.format(","lastModifiedDate":"2023-01-26"},{"lineNumber":37,"author":{"gitId":"JamesLiuZX"},"content":"                \"T|%s\",","lastModifiedDate":"2023-01-26"},{"lineNumber":38,"author":{"gitId":"JamesLiuZX"},"content":"                super.toStringDb()","lastModifiedDate":"2023-01-26"},{"lineNumber":39,"author":{"gitId":"JamesLiuZX"},"content":"        );","lastModifiedDate":"2023-01-26"},{"lineNumber":40,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":42}},{"path":"src/main/resources/style/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" graphicTextGap\u003d\"5.0\" minHeight\u003d\"0\" pickOnBounds\u003d\"false\" styleClass\u003d\"userWindow\" stylesheets\u003d\"@../css/userWindow.css\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cInsets bottom\u003d\"25.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":16}},{"path":"src/main/resources/style/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.functions.MainWindow\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cLabel fx:id\u003d\"dialog\" contentDisplay\u003d\"CENTER\" graphicTextGap\u003d\"5.0\" minHeight\u003d\"-Infinity\" pickOnBounds\u003d\"false\" styleClass\u003d\"userWindow\" stylesheets\u003d\"@../css/userWindow.css\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" styleClass\u003d\"sendButton\" stylesheets\u003d\"@../css/userWindow.css\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\" styleClass\u003d\"background\" stylesheets\u003d\"@../css/userWindow.css\"\u003e","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JamesLiuZX":21}},{"path":"src/test/java/duke/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import duke.functions.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"    public void parseDeadline_wrongFormat_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"            String input \u003d \"deadline return book /25/12-22\";","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"            TaskList dl \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"            Parser p \u003d new Parser(dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"            p.handleInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"            assertEquals(\"Please input the datetime format in /by DD/MM/YY HHMM.\", e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"JamesLiuZX":23}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"package duke;","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"import duke.functions.Parser;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"import duke.tasks.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"    public void parseTask_wrongType_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JamesLiuZX"},"content":"            String input \u003d \"delete abc\";","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JamesLiuZX"},"content":"            TaskList dl \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JamesLiuZX"},"content":"            Parser p \u003d new Parser(dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JamesLiuZX"},"content":"            p.handleInput(input);","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JamesLiuZX"},"content":"            assertEquals(\"Please input a number after the command.\", e.getMessage());","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JamesLiuZX"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JamesLiuZX"},"content":"    @Test","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JamesLiuZX"},"content":"    public void parseUserResponse_unknownCommand_exceptionThrown() {","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JamesLiuZX"},"content":"        try {","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JamesLiuZX"},"content":"            TaskList dl \u003d new TaskList();","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JamesLiuZX"},"content":"            Parser p \u003d new Parser(dl);","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JamesLiuZX"},"content":"            p.handleInput(\"boop\");","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JamesLiuZX"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JamesLiuZX"},"content":"            assertEquals(","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JamesLiuZX"},"content":"                    \"Sorry, I don\u0027t know what that line means. You could try typing from our list of commands:\\n\"","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JamesLiuZX"},"content":"                            +","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JamesLiuZX"},"content":"                    \"[todo, deadline, event, mark, unmark, list, bye, delete, help]\", e.getMessage());","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JamesLiuZX"},"content":"        }","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JamesLiuZX"},"content":"    }","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JamesLiuZX"},"content":"}","lastModifiedDate":"2023-02-02"}],"authorContributionMap":{"JamesLiuZX":36}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JamesLiuZX"},"content":"todo popeyes","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JamesLiuZX"},"content":"todo mcdonald","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JamesLiuZX"},"content":"todo test kfc","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JamesLiuZX"},"content":"deadline popeyes /by yesterday recruit","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JamesLiuZX"},"content":"event lose weight /from tomorrow /to next time","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JamesLiuZX"},"content":"mark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JamesLiuZX"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JamesLiuZX"},"content":"unmark 1","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JamesLiuZX"},"content":"mark 4","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JamesLiuZX"},"content":"mark kfc","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JamesLiuZX"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JamesLiuZX"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JamesLiuZX":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"JamesLiuZX"},"content":"java -classpath ..\\bin duke.functions.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":20,"JamesLiuZX":1}}]
