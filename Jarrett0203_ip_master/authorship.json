[{"path":"src/main/java/duke/Commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"        ui.showBye();","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        return true;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":17}},{"path":"src/main/java/duke/Commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"public interface Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":12}},{"path":"src/main/java/duke/Commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.TaskException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"            int taskNum \u003d Integer.parseInt(fullCommand.substring(7));","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"            if (taskNum \u003e tasks.size() || taskNum \u003c 1)","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"                throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"            tasks.deleteTask(taskNum, storage, ui);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":34}},{"path":"src/main/java/duke/Commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.InvalidInputException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"        throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":19}},{"path":"src/main/java/duke/Commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003d\u003d 0)","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"            ui.printNoTasks();","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        else","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"            ui.printTasks(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":23}},{"path":"src/main/java/duke/Commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.TaskException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    private boolean toMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    public MarkCommand(boolean toMark, String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"            int taskNum \u003d Integer.parseInt(this.fullCommand.substring(toMark ? 5 : 7));","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"            if (taskNum \u003e tasks.size() || taskNum \u003c 1)","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"                throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            tasks.markTask(taskNum, storage, ui, toMark);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":36}},{"path":"src/main/java/duke/Commands/TaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Commands;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.InvalidInputException;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.ListException;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Deadline;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Event;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Todo;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"public class TaskCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    private Character taskType;","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public TaskCommand(Character taskType, String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003e\u003d 100)","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"            throw new ListException(\"List is full!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"                Todo todo \u003d new Todo(this.fullCommand.substring(5));","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"                tasks.addTask(todo, storage, ui);","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"                    String[] deadline \u003d this.fullCommand.substring(9).split(\" /by \");","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"                    if (\"\".equals(deadline[0].trim()))","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"                        throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"                                \"OOPS!!! The deadline must be in the format: deadline \u003ctask\u003e /by \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"                    Deadline newDeadline \u003d new Deadline(deadline[0], storeDateTime(deadline[1]));","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"                    tasks.addTask(newDeadline, storage, ui);","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"                } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"                            \"OOPS!!! The deadline must be in the format: deadline \u003ctask\u003e /by \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"                            \"OOPS!!! Dates must be in the format: dd/mm/yyyy HHmm (e.g. 12/12/2023 1800)\");","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"                try {","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"                    String[] event \u003d this.fullCommand.substring(6).split(\" /from \");","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"                    if (\"\".equals(event[0].trim())) {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"                        throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"                                \"OOPS!!! The event must be in the format: event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"                    String[] eventTime \u003d event[1].split(\" /to \");","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"                    LocalDateTime fromDateTime \u003d storeDateTime(eventTime[0]);","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"                    LocalDateTime toDateTime \u003d storeDateTime(eventTime[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                    if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"                        throw new InvalidInputException(\"OOPS!!! The start date must be before the end date.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"                    Event newEvent \u003d new Event(event[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"                    tasks.addTask(newEvent, storage, ui);","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"                } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"                            \"OOPS!!! The event must be in the format: event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"                } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"                            \"OOPS!!! Dates must be in the format: dd/mm/yyyy HHmm (e.g. 12/12/2023 1800)\");","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"            default:","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"                throw new InvalidInputException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"    private static LocalDateTime storeDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":90}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"import java.io.File;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.Command;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Parser.Parser;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-15"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"            ui.showLoading(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"            ui.showSuccessfulLoad(tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-14"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-14"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-14"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    public void run() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        while (!isExit) {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            try {","lastModifiedDate":"2023-01-15"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"            } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"                ui.showLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-15"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"        ui.closeScanner();","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"        String filePath \u003d String.format(\"data%sduke.txt\", File.separator);","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"        new Duke(filePath).run();","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jarrett0203":50,"-":2}},{"path":"src/main/java/duke/Exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":7}},{"path":"src/main/java/duke/Exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class InvalidInputException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":7}},{"path":"src/main/java/duke/Exceptions/ListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class ListException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"    public ListException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":7}},{"path":"src/main/java/duke/Exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Exceptions;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class TaskException extends DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"    public TaskException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":7}},{"path":"src/main/java/duke/Parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Parser;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.ByeCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.Command;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.DeleteCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.InvalidCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.ListCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.MarkCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import duke.Commands.TaskCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        String lowercaseCommand \u003d fullCommand.toLowerCase();","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        Command command;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"        if (lowercaseCommand.equals(\"bye\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.equals(\"list\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.startsWith(\"todo\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new TaskCommand(\u0027T\u0027, fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.startsWith(\"deadline\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new TaskCommand(\u0027D\u0027, fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.startsWith(\"event\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new TaskCommand(\u0027E\u0027, fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.startsWith(\"delete\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        else if (lowercaseCommand.contains(\"mark\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new MarkCommand(!lowercaseCommand.startsWith(\"unmark\"), fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        else","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        return command;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":35}},{"path":"src/main/java/duke/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Deadline;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Event;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Todo;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"public class Storage {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    private Path filePath;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        File file \u003d this.filePath.toFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"            throw new DukeException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"                String[] args \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"                if (\"T\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"                    Todo newTodo \u003d new Todo(args[2]);","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"                        newTodo.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newTodo);","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"                } else if (\"D\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"                    Deadline newDeadline \u003d new Deadline(args[2], LocalDateTime.parse(args[3], formatter));","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"                        newDeadline.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newDeadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"                } else if (\"E\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"                    Event newEvent \u003d new Event(args[2], LocalDateTime.parse(args[3], formatter),","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"                            LocalDateTime.parse(args[4], formatter));","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\"))","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"                        newEvent.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newEvent);","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"            throw new DukeException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"        return loadedList;","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"        File file \u003d filePath.toFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"                throw new DukeException(String.format(\"File could not be created at %s\", filePath));","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"                int mark \u003d task.getMark().equals(\u0027X\u0027) ? 1 : 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"                String newString \u003d String.format(\"T | %d | %s%n\", mark, task.getDescription());","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"                if (task instanceof Deadline)","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"                    newString \u003d String.format(\"D | %d | %s | %s%n\", mark, task.getDescription(),","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"                            ((Deadline) task).getBy());","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"                else if (task instanceof Event)","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"                    newString \u003d String.format(\"E | %d | %s | %s | %s%n\", mark, task.getDescription(),","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"                            ((Event) task).getFrom(),","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"                            ((Event) task).getTo());","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"                fileWriter.write(newString);","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"            throw new DukeException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":89}},{"path":"src/main/java/duke/Task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"        return by;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    public String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), parseDateTime(this.by));","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":28}},{"path":"src/main/java/duke/Task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        return from;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"        return to;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    public String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), parseDateTime(this.from),","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"                parseDateTime(this.to));","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":35}},{"path":"src/main/java/duke/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"    private String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"    private boolean isMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"        this.isMark \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"        return description;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    public Character getMark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"        return isMark ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    public void toggleMark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        this.isMark \u003d !this.isMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[%c] %s\", getMark(), this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":28}},{"path":"src/main/java/duke/Task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":13}},{"path":"src/main/java/duke/TaskList/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import duke.Exceptions.DukeException;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Storage.Storage;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import duke.Ui.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"public class TaskList {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public void addTask(Task task, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        ui.printTask(task, this.tasks, true);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    public void deleteTask(int taskNum, Storage storage, Ui ui) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        int taskListIndex \u003d taskNum - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        Task taskToRemove \u003d this.tasks.get(taskListIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks.remove(taskListIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"        ui.printTask(taskToRemove, this.tasks, false);","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    public void markTask(int taskNum, Storage storage, Ui ui, boolean toMark) throws DukeException {","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        int taskListIndex \u003d taskNum - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        if (!this.tasks.get(taskListIndex).getMark().equals(toMark ? \u0027X\u0027 : \u0027 \u0027)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            this.tasks.get(taskListIndex).toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"            storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"        ui.printMarkTask(this.tasks.get(taskListIndex), toMark);","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"    public int size() {","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":52}},{"path":"src/main/java/duke/Ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package duke.Ui;","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import duke.Task.Task;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import duke.TaskList.TaskList;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class Ui {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    private Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(\"  ------------------------------------\");","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        showLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(\"  Hello! I\u0027m Duke\\n  What can I do for you?\");","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        showLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    public void showBye() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(\"  Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    public void showLoading(String filePath) {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(String.format(\"%n  Trying to load tasks from %s...\", filePath));","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    public void showSuccessfulLoad(TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003d\u003d 0)","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  Data file was loaded but no tasks could be found.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        else","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  Tasks loaded successfully!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(String.format(\"  %s\", message));","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"                \"\\n  Data file could not be found.\\n  A new data file will be auto generated upon insert of a task.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"    public String readCommand() {","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"        return this.sc.nextLine().trim();","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"        this.sc.close();","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"    public void printTask(Task task, ArrayList\u003cTask\u003e taskList, boolean toAdd) {","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"        if (toAdd)","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"        else","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(String.format(\"  %s\", task.toString()));","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(String.format(\"  Now you have %d %s in the list.\", taskList.size(),","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"    public void printMarkTask(Task task, boolean toMark) {","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"        if (toMark)","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"        else","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(\"  I\u0027ve marked this task as not done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(String.format(\"  %s\", task.toString()));","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"    public void printNoTasks() {","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(\"  No tasks added yet\");","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"    public void printTasks(TaskList tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"        System.out.println(\"  Here are the tasks in your list:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"            System.out.println(String.format(\"  %d.%s\", i + 1, tasks.getTask(i).toString()));","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":84}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"unmark 3","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"Jarrett0203":12}}]
