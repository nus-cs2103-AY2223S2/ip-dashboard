[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"# Fate Eggplant Assistant (FEA)","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"\u003e \"The Archer class really is made up of archers!\" -- Rin Tohsaka ([source](https://www.youtube.com/watch?v\u003d7jUjBzop7lE))","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"FEA lets you focus on defeating lostbelts by having Mash remember things you need to do. It\u0027s,","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"-   text-based","lastModifiedDate":"2023-01-23"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"-   easy to learn","lastModifiedDate":"2023-01-23"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"-   ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2023-01-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"All you need to do is,","lastModifiedDate":"2023-01-23"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"1.  Download it from [here](https://github.com/Jarrett0203/ip/releases).","lastModifiedDate":"2023-01-23"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"2.  Find the latest version and install fea.jar.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"3.  Add your tasks.","lastModifiedDate":"2023-01-23"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"4.  Let Mash manage your tasks for you :wink:","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"And it is **FREE**!","lastModifiedDate":"2023-01-23"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"Features:","lastModifiedDate":"2023-01-23"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"***","lastModifiedDate":"2023-01-23"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"If you are a Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"```java","lastModifiedDate":"2023-01-23"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"public class Duke {","lastModifiedDate":"2023-01-23"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"   public static void main(String[] args) { ","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"      Application.launch(Fea.class, args);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"   }","lastModifiedDate":"2023-01-23"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jarrett0203":30,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.13\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"checkstyle {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"javafx {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    version \u003d \"11\"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    mainClassName \u003d \"fea.Launcher\"","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"    archiveBaseName \u003d \"fea\"","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"run {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"processResources {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"    from \u0027src/main/resources\u0027","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":18,"-":39}},{"path":"src/main/java/fea/Fea.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.parser.Parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":" * Main FEA class that drives the program.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"public class Fea {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    private Storage storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor method to initialise FEA.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     * @param filePath The path to the data file containing the tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public Fea(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"            ui.logLoading(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            tasks \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"            ui.logSuccessfulLoad(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        } catch (FeaException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"            ui.logLoadingError();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"     * Gets the response based on user input command.","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"     * @param inputCommand The user input command.","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The response message.","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"    public String getResponse(Command inputCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            return inputCommand.execute(tasks, ui, storage);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"        } catch (FeaException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"            return e.getMessage();","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"     * Parses the user input to the Command class.","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"     * @param input The user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"     * @return Command The corresponding command according to the user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"    public Command parseInput(String input) {","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"        return Parser.parse(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":58}},{"path":"src/main/java/fea/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":" * Launcher class to launch FEA.","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"public class Launcher {","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":12}},{"path":"src/main/java/fea/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.MainWindow;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":" * A GUI for FEA using FXML.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"public class Main extends Application {","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    private String filePath \u003d String.format(\"data%sfea.txt\", File.separator);","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    private Fea fea \u003d new Fea(filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            stage.setTitle(\"Fate Eggplant Assistant\");","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"            stage.getIcons().add(new Image(Main.class.getResourceAsStream(\"/images/logo.png\")));","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"            stage.sizeToScene();","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setFea(fea);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setStage(stage);","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            stage.show();","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"            stage.setMinWidth(stage.getWidth());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"            stage.setMinHeight(stage.getHeight());","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":40}},{"path":"src/main/java/fea/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.InvalidInputException;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.ListException;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":" * TaskCommand class that implements the Command interface.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"public class AddCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    private static final String INVALID_DEADLINE_FORMAT \u003d \"The deadline must be in the format:\"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        + \" deadline \u003ctask\u003e /by \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    private static final String INVALID_EVENT_FORMAT \u003d \"The event must be in the format:\"","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        + \" event \u003ctask\u003e /from \u003cdate\u003e /to \u003cdate\u003e, \u003ctask\u003e and \u003cdate\u003e cannot be empty.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    private static final String INVALID_DATE_FORMAT \u003d","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            \"Dates must be in the format: dd/mm/yyyy HHmm (e.g. 12/12/2023 1800)\";","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    private static final String END_BEFORE_START \u003d \"The start date must be before the end date.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    private Character taskType;","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor method to initialise AddCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"     * @param taskType The type of task.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"     * @param fullCommand The string of the full command.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"    public AddCommand(Character taskType, String fullCommand) {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"     * Adds a task to the task list depending on what type of task it is.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the task to add.","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception due to invalid input or the task list is full.","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003e\u003d 100) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"            throw new ListException(\"List is full!\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"        switch (taskType) {","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"            Todo todo \u003d new Todo(this.fullCommand.substring(5));","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"            return tasks.addTask(todo, storage, ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                String[] deadline \u003d this.fullCommand.substring(9).split(\" /by \");","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"                if (\"\".equals(deadline[0].trim())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"                Deadline newDeadline \u003d new Deadline(deadline[0], storeDateTime(deadline[1]));","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"                return tasks.addTask(newDeadline, storage, ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"                throw new InvalidInputException(INVALID_DEADLINE_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"                throw new InvalidInputException(INVALID_DATE_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"            try {","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"                String[] event \u003d this.fullCommand.substring(6).split(\" /from \");","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"                if (\"\".equals(event[0].trim())) {","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(INVALID_EVENT_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"                String[] eventTime \u003d event[1].split(\" /to \");","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"                LocalDateTime fromDateTime \u003d storeDateTime(eventTime[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"                LocalDateTime toDateTime \u003d storeDateTime(eventTime[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"                if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"                    throw new InvalidInputException(END_BEFORE_START);","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"                Event newEvent \u003d new Event(event[0], fromDateTime, toDateTime);","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"                return tasks.addTask(newEvent, storage, ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"                throw new InvalidInputException(INVALID_EVENT_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"Jarrett0203"},"content":"                throw new InvalidInputException(INVALID_DATE_FORMAT);","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"Jarrett0203"},"content":"        default:","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"Jarrett0203"},"content":"            throw new InvalidInputException(\"I\u0027m sorry, but I don\u0027t know what that means\");","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":100,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"Jarrett0203"},"content":"    private static LocalDateTime storeDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"Jarrett0203"},"content":"        return LocalDateTime.parse(dateTimeString, formatter);","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":107,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Jarrett0203":107}},{"path":"src/main/java/fea/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" * ByeCommand class that implements the Command interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"     * Prints the bye message.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string that contains the bye message.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException Exception should not be thrown in this function in this class.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        return Ui.BYE;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        return true;","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":30}},{"path":"src/main/java/fea/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":" * Command interface that is implemented by all commands.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"public interface Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"     * Executes the command.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string that contains the output message.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception due to invalid input.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"     * Determines when to break the while loop in Fea.java.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"     * @return true if the command is ByeCommand.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit();","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":27}},{"path":"src/main/java/fea/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.TaskException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" * DeleteCommand class that implements the Command interface.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"public class DeleteCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    private static final String INVALID_TASK_NUMBER \u003d \"Please enter a valid task number!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    public DeleteCommand(String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"     * Deletes a task in the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the deleted task.","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception due to invalid input.","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            int taskNum \u003d Integer.parseInt(fullCommand.substring(7));","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"            if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"                throw new TaskException(INVALID_TASK_NUMBER);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"            return tasks.deleteTask(taskNum, storage, ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            throw new TaskException(INVALID_TASK_NUMBER);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":48}},{"path":"src/main/java/fea/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" * FindCommand class that implements the Command interface.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class FindCommand implements Command {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    public FindCommand(String fullCommand) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * Finds all task in the task list containing the keyword.","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"     * @return String that contains the tasks which contain the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception due to invalid input.","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"            String keyword \u003d fullCommand.substring(5);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"            return tasks.findTask(keyword, ui);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        } catch (StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            throw new FeaException(\"The find command must be in the format: find \u003ckeyword\u003e\");","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Jarrett0203":42}},{"path":"src/main/java/fea/commands/InvalidCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.InvalidInputException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" * InvalidCommand class that implements the Command interface.","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"public class InvalidCommand implements Command {","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     * Throws an exception if the command is invalid.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string should not be returned and exception should be thrown instead.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException Exception is thrown due to Parser class failing to parse user input.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        throw new InvalidInputException(\"I\u0027m sorry, but I don\u0027t know what that means.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":32}},{"path":"src/main/java/fea/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":" * ListCommand class that implements the Command interface.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class ListCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     * Retrieves the current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string that contains the tasks in the list.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException Exception should not be thrown in this function in this class.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"            return Ui.NO_TASKS;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            return ui.printTasks(tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":36}},{"path":"src/main/java/fea/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.commands;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.TaskException;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":" * MarkCommand class that implements the Command interface.","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"public class MarkCommand implements Command {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    private boolean toMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    private String fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor class to initialise MarkCommand.","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     * @param toMark Whether the command is to mark or unmark the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     * @param fullCommand The string of the full command.","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    public MarkCommand(boolean toMark, String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"        this.toMark \u003d toMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        this.fullCommand \u003d fullCommand;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"     * Toggles a task to done or not done.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception saving to the data file or invalid input.","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            int taskNum \u003d Integer.parseInt(this.fullCommand.substring(toMark ? 5 : 7));","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"            if (taskNum \u003e tasks.size() || taskNum \u003c 1) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"                throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            return tasks.markTask(taskNum, storage, ui, toMark);","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"            throw new TaskException(\"Please enter a valid task number!\");","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"        return false;","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":54}},{"path":"src/main/java/fea/exceptions/FeaException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":" * FeaException class for exceptions that are unique to FEA.","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class FeaException extends Exception {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    public FeaException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":10}},{"path":"src/main/java/fea/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" * InvalidInputException class that extends FeaException.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class InvalidInputException extends FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    public InvalidInputException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":10}},{"path":"src/main/java/fea/exceptions/ListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" * ListException class that extends FeaException.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class ListException extends FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    public ListException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":10}},{"path":"src/main/java/fea/exceptions/TaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.exceptions;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" * TaskException class that extends FeaException.","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class TaskException extends FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"    public TaskException(String message) {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"        super(message);","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":10}},{"path":"src/main/java/fea/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.parser;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.AddCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.ByeCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.DeleteCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.FindCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.InvalidCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.ListCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.MarkCommand;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":" * Parser class that parses the user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"public class Parser {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     * Parses the user input and returns the appropriate command to be executed.","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"     * @param fullCommand The user input.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     * @return The appropriate command.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    public static Command parse(String fullCommand) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        String lowercaseCommand \u003d fullCommand.toLowerCase();","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        Command command;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        if (lowercaseCommand.equals(\"bye\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.equals(\"list\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.startsWith(\"todo\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new AddCommand(\u0027T\u0027, fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new AddCommand(\u0027D\u0027, fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.startsWith(\"event\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new AddCommand(\u0027E\u0027, fullCommand);","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.startsWith(\"delete\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new DeleteCommand(fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.contains(\"mark\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new MarkCommand(!lowercaseCommand.startsWith(\"unmark\"), fullCommand);","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"        } else if (lowercaseCommand.startsWith(\"find\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new FindCommand(fullCommand);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"        } else {","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            command \u003d new InvalidCommand();","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"        return command;","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":48}},{"path":"src/main/java/fea/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.io.File;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":" * Storage class that handles the loading and saving of tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"public class Storage {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    private Path filePath;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"        this.filePath \u003d Paths.get(filePath);","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"     * Loads the tasks from the data file into the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"     * @return ArrayList Returns an ArrayList containing the tasks from the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If the data file could not be found.","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"    public ArrayList\u003cTask\u003e loadTasks() throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"        File file \u003d this.filePath.toFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"            throw new FeaException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"        ArrayList\u003cTask\u003e loadedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"        try (Scanner scanner \u003d new Scanner(file)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"                String[] args \u003d scanner.nextLine().split(\" \\\\| \");","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"                if (\"T\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"                    Todo newTodo \u003d new Todo(args[2]);","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"                        newTodo.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newTodo);","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"                } else if (\"D\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"                    Deadline newDeadline \u003d new Deadline(args[2], LocalDateTime.parse(args[3], formatter));","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"                        newDeadline.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newDeadline);","lastModifiedDate":"2023-01-21"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"                } else if (\"E\".equals(args[0])) {","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"                    Event newEvent \u003d new Event(args[2], LocalDateTime.parse(args[3], formatter),","lastModifiedDate":"2023-01-21"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"                            LocalDateTime.parse(args[4], formatter));","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"                    if (args[1].equals(\"1\")) {","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"                        newEvent.toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"                    loadedList.add(newEvent);","lastModifiedDate":"2023-01-21"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"            throw new FeaException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"        return loadedList;","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"     * Saves the tasks in the tasklist into the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The task list converted to an ArrayList to be saved.","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If the data file could not be found or there was an error creating the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"    public void saveTasks(ArrayList\u003cTask\u003e tasks) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"        File file \u003d filePath.toFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"            file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"            try {","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"                file.createNewFile();","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"                throw new FeaException(String.format(\"File could not be created at %s\", filePath));","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"        try (FileWriter fileWriter \u003d new FileWriter(file)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"Jarrett0203"},"content":"                int mark \u003d task.getMark().equals(\u0027X\u0027) ? 1 : 0;","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"Jarrett0203"},"content":"                String newString \u003d String.format(\"T | %d | %s%n\", mark, task.getDescription());","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"Jarrett0203"},"content":"                if (task instanceof Deadline) {","lastModifiedDate":"2023-01-22"},{"lineNumber":93,"author":{"gitId":"Jarrett0203"},"content":"                    newString \u003d String.format(\"D | %d | %s | %s%n\", mark,","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"Jarrett0203"},"content":"                            task.getDescription(), ((Deadline) task).getBy());","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"Jarrett0203"},"content":"                } else if (task instanceof Event) {","lastModifiedDate":"2023-01-22"},{"lineNumber":96,"author":{"gitId":"Jarrett0203"},"content":"                    newString \u003d String.format(\"E | %d | %s | %s | %s%n\", mark,","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"Jarrett0203"},"content":"                            task.getDescription(), ((Event) task).getFrom(), ((Event) task).getTo());","lastModifiedDate":"2023-01-22"},{"lineNumber":98,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"Jarrett0203"},"content":"                fileWriter.write(newString);","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"Jarrett0203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"Jarrett0203"},"content":"            throw new FeaException(\"Data file could not be found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":105}},{"path":"src/main/java/fea/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":" * Deadline class that extends Task class.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor method to initialise Deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     * @param description The description of the deadline.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     * @param by The deadline time.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getBy() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"        return by;","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    private String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), parseDateTime(this.by));","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":36}},{"path":"src/main/java/fea/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":" * Event class that extends Task class.","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor method to initialise Event","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"     * @param from The start time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"     * @param to The end time of the event.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getFrom() {","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        return from;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    public LocalDateTime getTo() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"        return to;","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    private String parseDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy hh:mma\");","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), parseDateTime(this.from),","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"                parseDateTime(this.to));","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":43}},{"path":"src/main/java/fea/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" * Task class that represents a task.","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"    private String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"    private boolean isMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"     * Constructor method to initialise Task.","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"        this.isMark \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        return description;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    public Character getMark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"        return isMark ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"     * Toggles the mark of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    public void toggleMark() {","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"        this.isMark \u003d !this.isMark;","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"     * Returns the details of the task in a string format.","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string representation of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[%c] %s\", getMark(), this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":42}},{"path":"src/main/java/fea/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":" * Todo class that extends Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        return String.format(\"[T]%s\", super.toString());","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":16}},{"path":"src/main/java/fea/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.tasklist;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.exceptions.FeaException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import fea.storage.Storage;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import fea.ui.Ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":" * TaskList class that handles all tasks.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"public class TaskList {","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"     * Adds a task to the task list, saves the new task list to the data file","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"     * and then prints the task that was added.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"     * @param task The task to be added.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the task to add.","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception saving to the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    public String addTask(Task task, Storage storage, Ui ui) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks.add(task);","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"        storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        return ui.printTask(task, this.tasks, true);","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"     * Deletes a task in the task list, saves the new task list to the data file","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"     * and then prints the task that was just removed.","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"     * @param taskNum The task number of the task to be removed in task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the deleted task.","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception saving to the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"    public String deleteTask(int taskNum, Storage storage, Ui ui) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"        int taskListIndex \u003d taskNum - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"        Task taskToRemove \u003d this.tasks.get(taskListIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"        this.tasks.remove(taskListIndex);","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"        storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"        return ui.printTask(taskToRemove, this.tasks, false);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"     * Marks a task in the task list as done or undone, saves the new task list to the data file","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"     * and then prints the task that was just marked or unmarked.","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"     * @param taskNum The task number of the task to be marked or unmarked in task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"     * @param storage The storage object that handles saving to the data file.","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"     * @param ui The ui object that handles printing to the user.","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"     * @param toMark True if the task is to be marked as done, false otherwise.","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the marked or unmarked task.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"     * @throws FeaException If there is an exception saving to the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"    public String markTask(int taskNum, Storage storage, Ui ui, boolean toMark) throws FeaException {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"        int taskListIndex \u003d taskNum - 1;","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"        if (!this.tasks.get(taskListIndex).getMark().equals(toMark ? \u0027X\u0027 : \u0027 \u0027)) {","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"            this.tasks.get(taskListIndex).toggleMark();","lastModifiedDate":"2023-01-21"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"            storage.saveTasks(this.tasks);","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"        return ui.printMarkTask(this.tasks.get(taskListIndex), toMark);","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"     * Gets a task in the task list given the task index.","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"     * @param index The index of the task in the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"     * @return Task The task at the given index.","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"        return this.tasks.get(index);","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"     * Returns the number of tasks in the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"     * @return int The number of tasks in the task list.","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"Jarrett0203"},"content":"    public int size() {","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"Jarrett0203"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":94,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":95,"author":{"gitId":"Jarrett0203"},"content":"     * Returns the tasks which contains the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Jarrett0203"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":97,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of all tasks that contains the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":99,"author":{"gitId":"Jarrett0203"},"content":"    public String findTask(String keyword, Ui ui) {","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Jarrett0203"},"content":"        ArrayList\u003cInteger\u003e matchingTasksIndex \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-22"},{"lineNumber":101,"author":{"gitId":"Jarrett0203"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {","lastModifiedDate":"2023-01-22"},{"lineNumber":102,"author":{"gitId":"Jarrett0203"},"content":"            if (this.tasks.get(i).getDescription().contains(keyword)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":103,"author":{"gitId":"Jarrett0203"},"content":"                matchingTasksIndex.add(i);","lastModifiedDate":"2023-01-22"},{"lineNumber":104,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":105,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":106,"author":{"gitId":"Jarrett0203"},"content":"        return ui.printMatchingTasks(matchingTasksIndex, this.tasks);","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":108,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Jarrett0203":108}},{"path":"src/main/java/fea/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.util.Collections;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.SnapshotParameters;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.effect.DropShadow;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.image.WritableImage;","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.paint.Color;","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":" * This control represents a dialog box consisting of an ImageView to represent","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":" * the speaker\u0027s face and a label","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    private Label dialog;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    private final Circle clip \u003d new Circle(50, 50, 45);","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"        displayPicture.setClip(clip);","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"        // adapted from","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"        // https://stackoverflow.com/questions/20489908/border-radius-and-shadow-on-imageview","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"        SnapshotParameters parameters \u003d new SnapshotParameters();","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"        parameters.setFill(Color.TRANSPARENT);","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"        WritableImage image \u003d displayPicture.snapshot(parameters, null);","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"        displayPicture.setClip(null);","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"        displayPicture.setEffect(new DropShadow(10, Color.WHITE));","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"        displayPicture.setImage(image);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"     * right.","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"    private void flip() {","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"    public static DialogBox getFeaDialog(String text, Image img) {","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"        db.flip();","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"        return db;","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":82}},{"path":"src/main/java/fea/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import fea.Fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import fea.commands.Command;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    private TextField userInput;","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    private Button sendButton;","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    private Fea fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"    private Stage stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/master.jpg\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"    private Image feaImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/mash.jpg\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"    public void initialize() {","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"                DialogBox.getFeaDialog(Ui.WELCOME, feaImage));","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    public void setFea(Fea fea) {","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"        this.fea \u003d fea;","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"     * FEA\u0027s reply and then appends them to","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"    @FXML","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"        Command command \u003d fea.parseInput(input);","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"        String response \u003d fea.getResponse(command);","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                DialogBox.getFeaDialog(response, feaImage));","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"        userInput.clear();","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"        if (command.isExit()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"            // adapted from https://stackoverflow.com/questions/54229373/why-thread-sleep-doesnt-work-accordingly-in-javafx","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"            delay.setOnFinished(event -\u003e {","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"                stage.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"            });","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"            delay.play();","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":73}},{"path":"src/main/java/fea/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.ui;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"import java.util.logging.Level;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Task;","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"import fea.tasklist.TaskList;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"/**","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":" * Ui class that handles all user interactions.","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":" */","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"public class Ui {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    public static final String WELCOME \u003d \"I\u0027m still just an immature Servant, but I\u0027ll do what I can to help you.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"    public static final String BYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"    public static final String NO_TASKS \u003d \"No tasks added yet.\";","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    private Logger logger \u003d Logger.getLogger(Ui.class.getName());","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"     * Takes in a file path and logs an attempt to load message to the user.","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"     * @param filePath The file path of the data file.","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"    public void logLoading(String filePath) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"        logger.log(Level.INFO, \"Trying to load tasks from {0}...\", filePath);","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Jarrett0203"},"content":"     * Logs a successful load message to the user if tasks is not empty.","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Jarrett0203"},"content":"    public void logSuccessfulLoad(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Jarrett0203"},"content":"        if (tasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Jarrett0203"},"content":"            logger.warning(\"Data file was loaded but no tasks could be found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Jarrett0203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Jarrett0203"},"content":"            logger.info(\"Tasks loaded successfully!\");","lastModifiedDate":"2023-01-29"},{"lineNumber":39,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":40,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":41,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":42,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":43,"author":{"gitId":"Jarrett0203"},"content":"     * Logs the loading error message when the data file could not be found.","lastModifiedDate":"2023-01-29"},{"lineNumber":44,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":45,"author":{"gitId":"Jarrett0203"},"content":"    public void logLoadingError() {","lastModifiedDate":"2023-01-29"},{"lineNumber":46,"author":{"gitId":"Jarrett0203"},"content":"        logger.warning(","lastModifiedDate":"2023-01-29"},{"lineNumber":47,"author":{"gitId":"Jarrett0203"},"content":"                \"Data file could not be found.\\nA new data file will be auto generated upon insert of a task.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":48,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":49,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":50,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":51,"author":{"gitId":"Jarrett0203"},"content":"     * Prints task when it is added or removed.","lastModifiedDate":"2023-01-29"},{"lineNumber":52,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":53,"author":{"gitId":"Jarrett0203"},"content":"     * @param task     The task to be printed.","lastModifiedDate":"2023-01-29"},{"lineNumber":54,"author":{"gitId":"Jarrett0203"},"content":"     * @param taskList The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":55,"author":{"gitId":"Jarrett0203"},"content":"     * @param toAdd    True if task is to be added, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":56,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the printed task.","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Jarrett0203"},"content":"    public String printTask(Task task, ArrayList\u003cTask\u003e taskList, boolean toAdd) {","lastModifiedDate":"2023-01-29"},{"lineNumber":59,"author":{"gitId":"Jarrett0203"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":60,"author":{"gitId":"Jarrett0203"},"content":"        message.append(toAdd ? \"Got it. I\u0027ve added this task:\\n\" : \"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Jarrett0203"},"content":"        message.append(String.format(\"%s%n\", task.toString()))","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Jarrett0203"},"content":"                .append(String.format(\"Now you have %d %s in the list.\", taskList.size(),","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Jarrett0203"},"content":"                        taskList.size() \u003d\u003d 1 ? \"task\" : \"tasks\"));","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Jarrett0203"},"content":"        return message.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Jarrett0203"},"content":"     * Prints task when it is marked as done or not done.","lastModifiedDate":"2023-01-29"},{"lineNumber":69,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":70,"author":{"gitId":"Jarrett0203"},"content":"     * @param task   The task to be printed.","lastModifiedDate":"2023-01-29"},{"lineNumber":71,"author":{"gitId":"Jarrett0203"},"content":"     * @param toMark True if task is to be marked as done, false otherwise.","lastModifiedDate":"2023-01-29"},{"lineNumber":72,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the task to be marked.","lastModifiedDate":"2023-01-29"},{"lineNumber":73,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":74,"author":{"gitId":"Jarrett0203"},"content":"    public String printMarkTask(Task task, boolean toMark) {","lastModifiedDate":"2023-01-29"},{"lineNumber":75,"author":{"gitId":"Jarrett0203"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":76,"author":{"gitId":"Jarrett0203"},"content":"        message.append(toMark ? \"Nice! I\u0027ve marked this task as done:\\n\" : \"I\u0027ve marked this task as not done:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":77,"author":{"gitId":"Jarrett0203"},"content":"        message.append(String.format(\"%s\", task.toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":78,"author":{"gitId":"Jarrett0203"},"content":"        return message.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":79,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":82,"author":{"gitId":"Jarrett0203"},"content":"     * Prints the tasks in the task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":83,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the printed tasks.","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Jarrett0203"},"content":"    public String printTasks(TaskList tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Jarrett0203"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Jarrett0203"},"content":"        message.append(\"Here are the tasks in your list:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Jarrett0203"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Jarrett0203"},"content":"            message.append(String.format(\"%d.%s\", i + 1, tasks.getTask(i).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":92,"author":{"gitId":"Jarrett0203"},"content":"            if (i !\u003d tasks.size() - 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":93,"author":{"gitId":"Jarrett0203"},"content":"                message.append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":94,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":95,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":96,"author":{"gitId":"Jarrett0203"},"content":"        return message.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":97,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":98,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":99,"author":{"gitId":"Jarrett0203"},"content":"    /**","lastModifiedDate":"2023-01-29"},{"lineNumber":100,"author":{"gitId":"Jarrett0203"},"content":"     * Prints all tasks that contain the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":101,"author":{"gitId":"Jarrett0203"},"content":"     * ","lastModifiedDate":"2023-01-29"},{"lineNumber":102,"author":{"gitId":"Jarrett0203"},"content":"     * @param matchingTasksIndex An arraylist of the indexes of the tasks that","lastModifiedDate":"2023-01-29"},{"lineNumber":103,"author":{"gitId":"Jarrett0203"},"content":"     *                           contain the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":104,"author":{"gitId":"Jarrett0203"},"content":"     * @param tasks              The current task list.","lastModifiedDate":"2023-01-29"},{"lineNumber":105,"author":{"gitId":"Jarrett0203"},"content":"     * @return String The string of the printed tasks which contains the keyword.","lastModifiedDate":"2023-01-29"},{"lineNumber":106,"author":{"gitId":"Jarrett0203"},"content":"     */","lastModifiedDate":"2023-01-29"},{"lineNumber":107,"author":{"gitId":"Jarrett0203"},"content":"    public String printMatchingTasks(ArrayList\u003cInteger\u003e matchingTasksIndex, ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-29"},{"lineNumber":108,"author":{"gitId":"Jarrett0203"},"content":"        StringBuilder message \u003d new StringBuilder();","lastModifiedDate":"2023-01-29"},{"lineNumber":109,"author":{"gitId":"Jarrett0203"},"content":"        if (matchingTasksIndex.isEmpty()) {","lastModifiedDate":"2023-01-29"},{"lineNumber":110,"author":{"gitId":"Jarrett0203"},"content":"            message.append(\"No matching tasks found.\");","lastModifiedDate":"2023-01-29"},{"lineNumber":111,"author":{"gitId":"Jarrett0203"},"content":"        } else {","lastModifiedDate":"2023-01-29"},{"lineNumber":112,"author":{"gitId":"Jarrett0203"},"content":"            message.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":113,"author":{"gitId":"Jarrett0203"},"content":"            for (int i \u003d 0; i \u003c matchingTasksIndex.size(); i++) {","lastModifiedDate":"2023-01-29"},{"lineNumber":114,"author":{"gitId":"Jarrett0203"},"content":"                int taskIndex \u003d matchingTasksIndex.get(i);","lastModifiedDate":"2023-01-29"},{"lineNumber":115,"author":{"gitId":"Jarrett0203"},"content":"                message.append(String.format(\"%d.%s\", taskIndex + 1, tasks.get(taskIndex).toString()));","lastModifiedDate":"2023-01-29"},{"lineNumber":116,"author":{"gitId":"Jarrett0203"},"content":"                if (i !\u003d matchingTasksIndex.size() - 1) {","lastModifiedDate":"2023-01-29"},{"lineNumber":117,"author":{"gitId":"Jarrett0203"},"content":"                    message.append(\"\\n\");","lastModifiedDate":"2023-01-29"},{"lineNumber":118,"author":{"gitId":"Jarrett0203"},"content":"                }","lastModifiedDate":"2023-01-29"},{"lineNumber":119,"author":{"gitId":"Jarrett0203"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":120,"author":{"gitId":"Jarrett0203"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":121,"author":{"gitId":"Jarrett0203"},"content":"        return message.toString();","lastModifiedDate":"2023-01-29"},{"lineNumber":122,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":123,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":124,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":124}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"  prefWidth\u003d\"400.0\" stylesheets\u003d\"@../styles/DialogBox.css\" type\u003d\"javafx.scene.layout.HBox\"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"  xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"  \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    \u003c/Label\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"100.0\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"      preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"  \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":17}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"720.0\" minWidth\u003d\"1280.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    stylesheets\u003d\"@../styles/MainWindow.css\"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    fx:controller\u003d\"fea.ui.MainWindow\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"            prefWidth\u003d\"505.0\" AnchorPane.bottomAnchor\u003d\"1.0\" AnchorPane.leftAnchor\u003d\"1.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"            AnchorPane.rightAnchor\u003d\"94.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"        \u003cButton fx:id\u003d\"sendButton\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" layoutX\u003d\"506.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"            layoutY\u003d\"558.0\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\"","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"            onAction\u003d\"#handleUserInput\" prefHeight\u003d\"42.0\" prefWidth\u003d\"94.0\" text\u003d\"Send\"","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Jarrett0203"},"content":"            AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Jarrett0203"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\"","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Jarrett0203"},"content":"            prefHeight\u003d\"558.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"41.60000000000002\"","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Jarrett0203"},"content":"            AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Jarrett0203"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Jarrett0203"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" /\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Jarrett0203"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Jarrett0203"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Jarrett0203"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Jarrett0203"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Jarrett0203":29}},{"path":"src/test/java/fea/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Deadline;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"  @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"  public void testToString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"    LocalDateTime by \u003d LocalDateTime.parse(\"2022-01-01T00:00\");","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"    assertEquals(\"[D][ ] test (by: Jan 01 2022 12:00AM)\", new Deadline(\"test\", by).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"  }","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Jarrett0203":17}},{"path":"src/test/java/fea/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Event;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"public class EventTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(\"2022-01-01T00:00\");","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Jarrett0203"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(\"2023-01-01T00:00\");","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Jarrett0203"},"content":"        assertEquals(\"[E][ ] test (from: Jan 01 2022 12:00AM to: Jan 01 2023 12:00AM)\",","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Jarrett0203"},"content":"                new Event(\"test\", from, to).toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Jarrett0203":19}},{"path":"src/test/java/fea/task/TodoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"package fea.task;","lastModifiedDate":"2023-01-29"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"import fea.task.Todo;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"public class TodoTest {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"    @Test","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"    public void testToString() {","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"        assertEquals(\"[T][ ] test\", new Todo(\"test\").toString());","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Jarrett0203"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Jarrett0203"},"content":"}","lastModifiedDate":"2023-01-22"}],"authorContributionMap":{"Jarrett0203":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":2,"author":{"gitId":"Jarrett0203"},"content":"todo borrow book","lastModifiedDate":"2023-01-15"},{"lineNumber":3,"author":{"gitId":"Jarrett0203"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-01-15"},{"lineNumber":4,"author":{"gitId":"Jarrett0203"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-01-15"},{"lineNumber":5,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":6,"author":{"gitId":"Jarrett0203"},"content":"mark 1","lastModifiedDate":"2023-01-15"},{"lineNumber":7,"author":{"gitId":"Jarrett0203"},"content":"mark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":8,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":9,"author":{"gitId":"Jarrett0203"},"content":"unmark 2","lastModifiedDate":"2023-01-15"},{"lineNumber":10,"author":{"gitId":"Jarrett0203"},"content":"unmark 3","lastModifiedDate":"2023-01-15"},{"lineNumber":11,"author":{"gitId":"Jarrett0203"},"content":"list","lastModifiedDate":"2023-01-15"},{"lineNumber":12,"author":{"gitId":"Jarrett0203"},"content":"bye","lastModifiedDate":"2023-01-15"}],"authorContributionMap":{"Jarrett0203":12}}]
