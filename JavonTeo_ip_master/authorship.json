[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"                + super.getDescription() + \"(by: \" + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public static Deadline addDeadline(String details) {","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        String description \u003d details.substring(0, details.indexOf(\"/by\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        String byString \u003d details.substring(details.indexOf(\"/by\") + \"/by\".length() + 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        String[] possibleFormats \u003d {\"yyyy-MM-dd\", \"dd/MM/yyyy HHmm\", \"d/MM/yyyy HHmm\", \"MMM dd yyyy\", \"MMMM dd yyyy\"};","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime by \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        for (int i \u003d 0; i \u003c possibleFormats.length; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"                by \u003d LocalDateTime.parse(byString, DateTimeFormatter.ofPattern(possibleFormats[i]));","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"                break;","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"        Deadline t \u003d new Deadline(description, by);","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        return t;","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":38}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-23"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-23"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import java.io.File;","lastModifiedDate":"2023-01-23"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        boolean DukeContinues \u003d true;","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-01-23"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        while (DukeContinues) {","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"            String s \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"            String command \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"            String restOfString \u003d \"\";","lastModifiedDate":"2023-01-20"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"            boolean taskListChanged \u003d false;","lastModifiedDate":"2023-01-23"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"            if (s.contains(\" \")) {","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"                command \u003d s.substring(0, s.indexOf(\" \"));","lastModifiedDate":"2023-01-20"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"                restOfString \u003d s.substring(s.indexOf(\" \") + 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"            } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"                command \u003d s;","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            try {","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"                switch (command) {","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"                    case \"bye\" -\u003e {","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"                        Duke.bye();","lastModifiedDate":"2023-01-20"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"                        DukeContinues \u003d false;","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-20"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"                    case \"list\" -\u003e Duke.list(taskList);","lastModifiedDate":"2023-01-20"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"                    case \"mark\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"                        Duke.mark(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"                    case \"unmark\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"                        Duke.unmark(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"                    case \"todo\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"                        Duke.addTodo(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"                    case \"deadline\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"                        Duke.addDeadline(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"                    case \"event\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"                        Duke.addEvent(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"                    case \"delete\" -\u003e {","lastModifiedDate":"2023-01-23"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"                        Duke.delete(taskList, restOfString);","lastModifiedDate":"2023-01-23"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"                        taskListChanged \u003d true;","lastModifiedDate":"2023-01-23"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"                    default -\u003e throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"                }","lastModifiedDate":"2023-01-20"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"                if (taskListChanged) {","lastModifiedDate":"2023-01-23"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"                    file.createNewFile();","lastModifiedDate":"2023-01-23"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"                    FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-01-23"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"                    for (Task t : taskList) {","lastModifiedDate":"2023-01-23"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"                        fw.write(t.toString());","lastModifiedDate":"2023-01-23"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"                        fw.write(\"\\n\");","lastModifiedDate":"2023-01-23"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"                    }","lastModifiedDate":"2023-01-23"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"                    fw.close();","lastModifiedDate":"2023-01-23"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"                }","lastModifiedDate":"2023-01-23"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-01-23"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"                System.out.println(e.getMessage());","lastModifiedDate":"2023-01-20"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"    private static void bye() {","lastModifiedDate":"2023-01-20"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Bye. Hope to see you again soon! :^)\");","lastModifiedDate":"2023-01-20"},{"lineNumber":85,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"    private static void list(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-20"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"        int taskCount \u003d taskList.size();","lastModifiedDate":"2023-01-20"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-01-20"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"You don\u0027t have any tasks now!\");","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":92,"author":{"gitId":"JavonTeo"},"content":"        else {","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"JavonTeo"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-01-20"},{"lineNumber":94,"author":{"gitId":"JavonTeo"},"content":"                System.out.println((i + 1) + \". \" + taskList.get(i));","lastModifiedDate":"2023-01-20"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-20"},{"lineNumber":96,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":97,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":99,"author":{"gitId":"JavonTeo"},"content":"    private static void mark(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":100,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"JavonTeo"},"content":"            int i \u003d Integer.parseInt(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":102,"author":{"gitId":"JavonTeo"},"content":"            taskList.get(i - 1).markUnmark(true);","lastModifiedDate":"2023-01-20"},{"lineNumber":103,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! \" + restOfString + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":106,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! There are less than \" + restOfString + \" tasks.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":107,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":110,"author":{"gitId":"JavonTeo"},"content":"    private static void unmark(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":111,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":112,"author":{"gitId":"JavonTeo"},"content":"            int i \u003d Integer.parseInt(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":113,"author":{"gitId":"JavonTeo"},"content":"            taskList.get(i - 1).markUnmark(false);","lastModifiedDate":"2023-01-20"},{"lineNumber":114,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":115,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! \" + restOfString + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":116,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":117,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! There are less than \" + restOfString + \" tasks.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":118,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":119,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":120,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":121,"author":{"gitId":"JavonTeo"},"content":"    private static void addTodo(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":122,"author":{"gitId":"JavonTeo"},"content":"        if (restOfString.isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":123,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":124,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":125,"author":{"gitId":"JavonTeo"},"content":"            ToDo t \u003d ToDo.addToDo(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":126,"author":{"gitId":"JavonTeo"},"content":"            taskList.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":127,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":128,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":129,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":130,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"JavonTeo"},"content":"    private static void addDeadline(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":132,"author":{"gitId":"JavonTeo"},"content":"        if (restOfString.isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":133,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":134,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"JavonTeo"},"content":"            Deadline t \u003d Deadline.addDeadline(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":136,"author":{"gitId":"JavonTeo"},"content":"            taskList.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":137,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":138,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":139,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":140,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"JavonTeo"},"content":"    private static void addEvent(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":142,"author":{"gitId":"JavonTeo"},"content":"        if (restOfString.isBlank()) {","lastModifiedDate":"2023-01-20"},{"lineNumber":143,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":144,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":145,"author":{"gitId":"JavonTeo"},"content":"            Event t \u003d Event.addEvent(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":146,"author":{"gitId":"JavonTeo"},"content":"            taskList.add(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":147,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":148,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":150,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":151,"author":{"gitId":"JavonTeo"},"content":"    private static void delete(ArrayList\u003cTask\u003e taskList, String restOfString) throws DukeException {","lastModifiedDate":"2023-01-20"},{"lineNumber":152,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-01-20"},{"lineNumber":153,"author":{"gitId":"JavonTeo"},"content":"            int i \u003d Integer.parseInt(restOfString);","lastModifiedDate":"2023-01-20"},{"lineNumber":154,"author":{"gitId":"JavonTeo"},"content":"            Task removedTask \u003d taskList.remove(i-1);","lastModifiedDate":"2023-01-20"},{"lineNumber":155,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":156,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(removedTask);","lastModifiedDate":"2023-01-20"},{"lineNumber":157,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":158,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":159,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! \" + restOfString + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":160,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException err) {","lastModifiedDate":"2023-01-20"},{"lineNumber":161,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"☹ OOPS!!! There are less than \" + restOfString + \" tasks.\");","lastModifiedDate":"2023-01-20"},{"lineNumber":162,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-20"},{"lineNumber":163,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":164,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"JavonTeo":154,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"        super(error);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-24"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"                + super.getDescription() + \"(from: \" + this.from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"                + \"to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    public static Event addEvent(String details) {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        String description \u003d details.substring(0, details.indexOf(\"/from\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        String fromAndTo \u003d details.substring(details.indexOf(\"/from\") + \"/from\".length() + 1);","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        String fromString \u003d fromAndTo.substring(0, fromAndTo.indexOf(\"/to\"));","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        String toString \u003d fromAndTo.substring(fromAndTo.indexOf(\"/to\") + \"/to\".length() + 1);","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        String[] possibleFormats \u003d {\"yyyy-mm-dd\", \"dd/MM/yyyy HHmm\", \"d/MM/yyyy HHmm\", \"MMM dd yyyy\", \"MMMM dd yyyy\"};","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime from \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime to \u003d null;","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        for (int i \u003d 0; i \u003c possibleFormats.length; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"                from \u003d LocalDateTime.parse(fromString, DateTimeFormatter.ofPattern(possibleFormats[i]));","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        for (int i \u003d 0; i \u003c possibleFormats.length; i++) {","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"            try {","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"                to \u003d LocalDateTime.parse(toString, DateTimeFormatter.ofPattern(possibleFormats[i]));","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        Event t \u003d new Event(description, from, to);","lastModifiedDate":"2023-01-20"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        return t;","lastModifiedDate":"2023-01-20"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":50}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done task with X","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    public void markUnmark(boolean marked) {","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        this.isDone \u003d marked;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (marked) {","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JavonTeo":27}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + super.getDescription();","lastModifiedDate":"2023-01-20"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    public static ToDo addToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"        ToDo t \u003d new ToDo(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(t);","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        return t;","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"delete 10","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":6}}]
