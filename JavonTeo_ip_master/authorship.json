[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"# duke.Duke project template","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JavonTeo":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"checkstyle {","lastModifiedDate":"2023-02-05"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-05"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"JavonTeo":21,"-":40}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"## Quick start","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"1. Ensure you have Java `11` or above installed on your computer.","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"2. Download the latest `duke.jar` from here.","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"3. Copy the file to the folder you want to use as the _home_ folder for Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"4. Run the application using `java -jar duke.jar`.","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"   Some example commands you can try:","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"   - `list`: Lists all currently stored Tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"   - `todo read book`: adds a Todo `read book` for Duke to store.","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"   - `bye`: Terminates the Duke application.","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"6. Refer to the Features below for details of each command.","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"Note that commands should all be in **lower case**.","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"DateTime should be in the format dd-MM-yyyy HHmm. E.g.: `10-02-2023 1800` to represent Feb 10th 2023, 6pm.","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"### Adding a Todo: `todo`","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"Adds a Todo task to Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"Format: `todo TASK_DESCRIPTION`","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"- `todo read book`","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"### Adding a Deadline: `deadline`","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"Adds a Deadline task to Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"Format: `deadline TASK_DESCRIPTION /by dd-MM-yyyy HHmm`","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"- `deadline finish book /by 10-02-2023 1800`","lastModifiedDate":"2023-02-18"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"### Adding a Event: `event`","lastModifiedDate":"2023-02-18"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"Adds an Event task to Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"Format: `event TASK_DESCRIPTION /from dd-MM-yyyy HHmm /to dd-MM-yyyy HHmm`","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"- `event book review /from 10-02-2023 1800 /to 10-02-2023 2000`","lastModifiedDate":"2023-02-18"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"### Listing all tasks: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"Lists all currently stored tasks.","lastModifiedDate":"2023-02-18"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"### Updates a task\u0027s description: `update`","lastModifiedDate":"2023-02-18"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"Updates the description of a task.","lastModifiedDate":"2023-02-18"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"Format: `update INDEX TASK_DESCRIPTION`","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"- Updates the description of the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"- `update 1 borrow book`","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"### Marking a task as done: `mark`","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"Marks a task as done.","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"Format: `mark INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"- Marks the task at the specified `INDEX` as done. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-18"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"- `mark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"### Marking a task as not done yet: `unmark`","lastModifiedDate":"2023-02-18"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"Marks a task as not done yet.","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"Format: `unmark INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"- Marks the task at the specified `INDEX` as not done yet. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"- `unmark 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"### Finding a task: `find`","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"Finds a task by searching for a keyword in its description.","lastModifiedDate":"2023-02-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"Format: `find KEYWORD`","lastModifiedDate":"2023-02-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"- `find book`","lastModifiedDate":"2023-02-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"### Deleting a task: `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"Deletes a task from Duke.","lastModifiedDate":"2023-02-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"- Deletes the task at the specified `INDEX`. The index refers to the index number shown in the displayed task list. The index must be a positive integer 1, 2, 3, …​","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"- `delete 1`","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":92,"author":{"gitId":"JavonTeo"},"content":"### Terminating Duke: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"JavonTeo"},"content":"Terminates the Duke program.","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"Format: `bye`","lastModifiedDate":"2023-02-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":97,"author":{"gitId":"JavonTeo"},"content":"## Saving the data","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"JavonTeo"},"content":"Duke data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-18"}],"authorContributionMap":{"JavonTeo":83,"-":15}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":" * An example of a custom control using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":" * containing text from the speaker.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"    private void flip() {","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        db.flip();","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"        return db;","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":61}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" * A Personal Assistant Chat Bot named Duke that helps the user keep track of various things.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"public class Duke {","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    private final Ui ui;","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    private boolean isExit;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for class Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    public Duke() {","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        String filePath \u003d \"data/duke.txt\";","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        this.ui \u003d new Ui();","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        this.storage \u003d new Storage(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"        this.isExit \u003d false;","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"     * Runs the text-based UI version of the program.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    public void run() {","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"            try {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"                ui.show(command.execute(tasks, ui, storage));","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"                isExit \u003d command.isExit();","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"            } finally {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"                ui.showLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"     * Returns Duke\u0027s response to the user input.","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"     *","lastModifiedDate":"2023-02-06"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"     * @param input the user input.","lastModifiedDate":"2023-02-06"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-06"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"        if (this.isExit) {","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"            return \"Duke has been turned off. To restart, close and reopen the application again. Goodbye!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"            Command command \u003d Parser.parse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"            assert command !\u003d null : \"There was an error in parsing user input into a command.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"            String dukeResponse \u003d command.execute(tasks, ui, storage);","lastModifiedDate":"2023-02-06"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"            this.isExit \u003d command.isExit();","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"            return dukeResponse;","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"     * Initialise the Duke object.","lastModifiedDate":"2023-02-06"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-01"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"        new Duke().run();","lastModifiedDate":"2023-02-06"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":83}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"public class Launcher {","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":13}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            assert duke !\u003d null : \"Duke cannot be null\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"            stage.setTitle(\"Duke\");","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"            stage.show();","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":33}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"    @FXML","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        assert userInput !\u003d null : \"User input cannot be null\";","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-06"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        );","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-06"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":52}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":" * Command that add Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    private final String taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    private final String details;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for class AddCommand","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"     * @param taskType type of task to be created.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"     * @param details details of the task to be created.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    public AddCommand(String taskType, String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! The description of a new task cannot be empty.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to create the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If user inputs dates and timings in the wrong format when creating a Deadline or Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"            String dukeResponse \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"            switch (taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"                ToDo toDo \u003d ToDo.addToDo(this.details);","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"                tasks.add(toDo);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"                dukeResponse \u003d \"Got it, I\u0027ve added this task:\\n\" + toDo;","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"                Deadline deadline \u003d Deadline.addDeadline(details);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"                dukeResponse \u003d \"Got it, I\u0027ve added this task:\\n\" + deadline;","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"            case \"event\":","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"                Event event \u003d Event.addEvent(details);","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"                tasks.add(event);","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"                dukeResponse \u003d \"Got it, I\u0027ve added this task:\\n\" + event;","lastModifiedDate":"2023-02-06"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"            default:","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"                break;","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"            return dukeResponse;","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"Please key dates in this format: dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"     * @return false as AddCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":80}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" * Command that terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to signify to the user the termination of the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        return \"Bye. Hope to see you again soon! :^)\";","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"     * @return true as ByeCommand terminates the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        return true;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" * Abstract class that encompasses all types of user commands.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"public abstract class Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public abstract String execute(TaskList tasks, Ui ui, Storage storage);","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"     * @return the boolean value on whether to terminate the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":26}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Command that deletes a Task from the current TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    private final String details;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the DeleteCommand class.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @param details contains index of the Task to be deleted.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public DeleteCommand(String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! The description of a new task cannot be empty.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to delete the task.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If the user inputs an invalid reference to any of the Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        String dukeResponse \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            int parseInt \u003d Integer.parseInt(details);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"            Task removedTask \u003d tasks.remove(parseInt - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"            assert removedTask !\u003d null : \"removedTask cannot be null.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            storage.update(tasks);;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"            dukeResponse \u003d \"Noted. I\u0027ve removed this task:\\n\" + removedTask + \"\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"            dukeResponse +\u003d \"Now you have \" + tasks.size() + \" tasks in the list.\";","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"            return dukeResponse;","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! \" + details + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! There are less than \" + details + \" tasks.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"     * @return false as DeleteCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":60}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-04"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-04"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-04"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-04"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-04"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-04"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":" * Command to find a task by searching for a keyword.","lastModifiedDate":"2023-02-04"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-04"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-02-04"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    private final String keyword;","lastModifiedDate":"2023-02-04"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for class FindCommand.","lastModifiedDate":"2023-02-04"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * @param keyword the keyword to find.","lastModifiedDate":"2023-02-04"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    public FindCommand(String keyword) {","lastModifiedDate":"2023-02-04"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        this.keyword \u003d keyword;","lastModifiedDate":"2023-02-04"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to find all matching Tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-04"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-04"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-02-04"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-02-04"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-02-04"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            String taskToString \u003d tasks.get(i).toString();","lastModifiedDate":"2023-02-04"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            if (taskToString.contains(this.keyword)) {","lastModifiedDate":"2023-02-04"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"                matchingTasks.add(task);","lastModifiedDate":"2023-02-04"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        String dukeResponse \u003d \"\";","lastModifiedDate":"2023-02-06"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"        if (matchingTasks.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-04"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            dukeResponse \u003d \"There are no matching tasks!\";","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"            dukeResponse +\u003d \"Here are the matching tasks in your list:\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"            dukeResponse +\u003d new ListCommand().execute(matchingTasks, ui, storage);","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        return dukeResponse;","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-04"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-04"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-04"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"     * @return false as FindCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-04"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-04"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-04"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-04"}],"authorContributionMap":{"JavonTeo":57}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" * Command that lists the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to list the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        StringBuilder dukeResponseSB \u003d new StringBuilder();","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        int taskCount \u003d tasks.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        if (taskCount \u003d\u003d 0) {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            dukeResponseSB \u003d new StringBuilder(\"You don\u0027t have any tasks now!\");","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"            for (int i \u003d 0; i \u003c taskCount; i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"                String newTask \u003d (i + 1) + \". \" + tasks.get(i) + \"\\n\";","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"                dukeResponseSB.append(newTask);","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        return dukeResponseSB.toString();","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"     * @return false as ListCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":42}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Command that marks a Task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    private final String details;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the MarkCommand class.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @param details contains index of the Task to be marked as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public MarkCommand(String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to mark the task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If the user inputs an invalid reference to any of the Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            int parseInt \u003d Integer.parseInt(this.details);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            Task taskToMark \u003d tasks.get(parseInt - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"            taskToMark.markUnmark(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            return \"Nice! I\u0027ve marked this task as done:\\n\" + taskToMark;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! \" + this.details","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"                    + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! There are less than \" + this.details + \" tasks.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"     * @return false as MarkCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":58}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Command that marks a Task as not done yet.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    private final String details;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the UnmarkCommand class.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @param details contains index of the Task to be marked as not done yet.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public UnmarkCommand(String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! The description of a task cannot be empty.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to mark the task as not done yet.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If the user inputs an invalid reference to any of the Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            int parseInt \u003d Integer.parseInt(this.details);","lastModifiedDate":"2023-02-04"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            Task taskToMark \u003d tasks.get(parseInt - 1);","lastModifiedDate":"2023-02-04"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"            taskToMark.markUnmark(false);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            return \"OK, I\u0027ve marked this task as not done yet:\\n\" + taskToMark;","lastModifiedDate":"2023-02-06"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! \" + this.details","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"                    + \" is not a valid integer for indexing the task list.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-04"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! There are less than \" + this.details + \" tasks.\");","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-02"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"     * @return false as UnMark does not terminate the Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":58}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.command;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":" * Command that updates a task\u0027s description.","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"public class UpdateCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    private final String details;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for UpdateDescriptionCommand class.","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @param details contains index and new description of task to update.","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public UpdateCommand(String details) {","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (details.isBlank()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! The description of a new task cannot be empty.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        this.details \u003d details;","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * Executes the command to update a task\u0027s description.","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @param tasks TaskList containing all the currently stored Tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * @param ui Ui that deals with interactions with the user.","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @param storage Storage that loads and saves tasks to the file containing currently stored Tasks.","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * @return the response from Duke.","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    public String execute(TaskList tasks, Ui ui, Storage storage) {","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"            int whiteSpaceIndex \u003d findWhiteSpaceIndex(details);","lastModifiedDate":"2023-02-18"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            int parseInt \u003d Integer.parseInt(details.substring(0, whiteSpaceIndex));","lastModifiedDate":"2023-02-18"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            String newDescription \u003d details.substring(whiteSpaceIndex + 1);","lastModifiedDate":"2023-02-18"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"            Task task \u003d tasks.get(parseInt - 1);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"            task.setDescription(newDescription);","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            storage.update(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"            return \"OK, I\u0027ve updated the task:\\n\" + task;","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! I\u0027m not able to understand your input. \" +","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"                    \"Please input in this format: \u003ctask index\u003e \u003cnew description of task\u003e\");","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! There are less than \" + this.details + \" tasks.\");","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"    private int findWhiteSpaceIndex(String details) throws NumberFormatException {","lastModifiedDate":"2023-02-18"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"        for(int i \u003d 0; i \u003c details.length(); i++) {","lastModifiedDate":"2023-02-18"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"            if (Character.isWhitespace(details.charAt(i))) {","lastModifiedDate":"2023-02-18"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"                return i;","lastModifiedDate":"2023-02-18"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-18"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        throw new NumberFormatException();","lastModifiedDate":"2023-02-18"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-18"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"     * Checks if the Command terminates the Duke Program.","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"     * @return false as SortCommand does not terminate the Duke program.","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"        return false;","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"JavonTeo":68}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.exception;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":" * Exception to handle errors specific to Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"public class DukeException extends IllegalArgumentException {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the DukeException class.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"     * @param error the error message.","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    public DukeException(String error) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"        super(error);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.command.*;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" * Parser that deals with making sense of the user command.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"public class Parser {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"     * Parses the user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * @param fullCommand the user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * @return Command that executes the required action according to the user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException if the user input cannot be parsed.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    public static Command parse(String fullCommand) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"        String commandKeyword;","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        String restOfCommand \u003d \"\";","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        if (fullCommand.contains(\" \")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            commandKeyword \u003d fullCommand.substring(0, fullCommand.indexOf(\" \"));","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"            restOfCommand \u003d fullCommand.substring(fullCommand.indexOf(\" \") + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        } else {","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"            commandKeyword \u003d fullCommand;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        Command command;","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"        switch (commandKeyword) {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        case \"bye\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new ByeCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"        case \"list\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new ListCommand();","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"        case \"mark\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new MarkCommand(restOfCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"        case \"unmark\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new UnmarkCommand(restOfCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        case \"todo\":","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        case \"deadline\":","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        case \"event\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new AddCommand(commandKeyword, restOfCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"        case \"delete\": {","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new DeleteCommand(restOfCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"        case \"find\": {","lastModifiedDate":"2023-02-04"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new FindCommand(restOfCommand);","lastModifiedDate":"2023-02-04"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-04"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-04"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"        case \"update\": {","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"            command \u003d new UpdateCommand(restOfCommand);","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"            break;","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"        default:","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-06"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"        return command;","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":67}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.storage;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"import java.io.File;","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":" * Stores the user tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"public class Storage {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    protected String filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    protected File file;","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\");","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the Storage class.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     * @param filePath the pathname string of the file to keep track of user things.","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If there was an error in finding or creating the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    public Storage(String filePath) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"            this.filePath \u003d filePath;","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"            this.file \u003d new File(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"            this.file.createNewFile();","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(\"Unable to create file \\\"\" + filePath + \"\\\"\");","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"     * Loads the Tasks stored in the file to the TaskList class, to be used for the current Duke program.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"     * @return ArrayList containing the Tasks stored in the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If there was an error when attempting to read the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        ArrayList\u003cTask\u003e tasksArrayList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"            String currentLine \u003d br.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"            while (currentLine !\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"                Task newTask \u003d taskStringParser(currentLine);","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"                if (newTask \u003d\u003d null) {","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"                    throw new DukeException(\"Error in reading duke.txt file\");","lastModifiedDate":"2023-02-01"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"                }","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"                tasksArrayList.add(newTask);","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"                currentLine \u003d br.readLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"            br.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":63,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":64,"author":{"gitId":"JavonTeo"},"content":"        return tasksArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":65,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":66,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":67,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":68,"author":{"gitId":"JavonTeo"},"content":"     * Converts a line of text in the file to a Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":69,"author":{"gitId":"JavonTeo"},"content":"     * @param currentLine the current line of text being parsed.","lastModifiedDate":"2023-02-02"},{"lineNumber":70,"author":{"gitId":"JavonTeo"},"content":"     * @return the converted Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":71,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":72,"author":{"gitId":"JavonTeo"},"content":"    public Task taskStringParser(String currentLine) {","lastModifiedDate":"2023-02-01"},{"lineNumber":73,"author":{"gitId":"JavonTeo"},"content":"        String taskType \u003d currentLine.substring(0, 3);","lastModifiedDate":"2023-02-01"},{"lineNumber":74,"author":{"gitId":"JavonTeo"},"content":"        String marked \u003d currentLine.substring(3, 6);","lastModifiedDate":"2023-02-01"},{"lineNumber":75,"author":{"gitId":"JavonTeo"},"content":"        String details \u003d currentLine.substring(7);","lastModifiedDate":"2023-02-01"},{"lineNumber":76,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":77,"author":{"gitId":"JavonTeo"},"content":"        switch (taskType) {","lastModifiedDate":"2023-02-01"},{"lineNumber":78,"author":{"gitId":"JavonTeo"},"content":"        case \"[T]\":","lastModifiedDate":"2023-02-01"},{"lineNumber":79,"author":{"gitId":"JavonTeo"},"content":"            return toDoParser(marked, details);","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"JavonTeo"},"content":"        case \"[D]\":","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"JavonTeo"},"content":"            return deadlineParser(marked, details);","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"JavonTeo"},"content":"        case \"[E]\":","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"JavonTeo"},"content":"            return eventParser(marked, details);","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"JavonTeo"},"content":"        default:","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"JavonTeo"},"content":"            return null;","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"JavonTeo"},"content":"     * Parses the line of text in the file to a ToDo.","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"JavonTeo"},"content":"     * @param marked the String representation of whether the task has been completed.","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"JavonTeo"},"content":"     * @param details the description and relevant dates (if any) of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"JavonTeo"},"content":"     * @return the created ToDo.","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"JavonTeo"},"content":"    private ToDo toDoParser(String marked, String details) {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"JavonTeo"},"content":"            ToDo toDo \u003d new ToDo(details);","lastModifiedDate":"2023-02-01"},{"lineNumber":97,"author":{"gitId":"JavonTeo"},"content":"            if (marked.equals(\"[X]\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":98,"author":{"gitId":"JavonTeo"},"content":"                toDo.markUnmark(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":99,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":100,"author":{"gitId":"JavonTeo"},"content":"            return toDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":101,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"JavonTeo"},"content":"     * Parses the line of text in the file to a Deadline.","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"JavonTeo"},"content":"     * @param marked the String representation of whether the task has been completed.","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"JavonTeo"},"content":"     * @param details the description and relevant dates (if any) of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"JavonTeo"},"content":"     * @return the created Deadline.","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"JavonTeo"},"content":"    private Deadline deadlineParser(String marked, String details) {","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"JavonTeo"},"content":"        String description \u003d details.substring(0, details.indexOf(\" (by:\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":111,"author":{"gitId":"JavonTeo"},"content":"        String byString \u003d details.substring(details.indexOf(\" (by:\") + \" (by:\".length() + 1,","lastModifiedDate":"2023-02-06"},{"lineNumber":112,"author":{"gitId":"JavonTeo"},"content":"                details.indexOf(\")\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":113,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":114,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(byString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":116,"author":{"gitId":"JavonTeo"},"content":"        Deadline deadline \u003d new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":117,"author":{"gitId":"JavonTeo"},"content":"        if (marked.equals(\"[X]\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":118,"author":{"gitId":"JavonTeo"},"content":"            deadline.markUnmark(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":119,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":120,"author":{"gitId":"JavonTeo"},"content":"        return deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":121,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"JavonTeo"},"content":"     * Parses the line of text in the file to an Event.","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"JavonTeo"},"content":"     * @param marked the String representation of whether the task has been completed.","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"JavonTeo"},"content":"     * @param details the description and relevant dates (if any) of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"JavonTeo"},"content":"     * @return the created Event.","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"JavonTeo"},"content":"    private Event eventParser(String marked, String details) {","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"JavonTeo"},"content":"        String eventDescription \u003d details.substring(0, details.indexOf(\" (from:\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":131,"author":{"gitId":"JavonTeo"},"content":"        String fromString \u003d details.substring(details.indexOf(\" (from:\") + \" (from:\".length() + 1,","lastModifiedDate":"2023-02-06"},{"lineNumber":132,"author":{"gitId":"JavonTeo"},"content":"                details.indexOf(\" to: \"));","lastModifiedDate":"2023-02-06"},{"lineNumber":133,"author":{"gitId":"JavonTeo"},"content":"        String toString \u003d details.substring(details.indexOf(\" to:\") + \" to:\".length() + 1,","lastModifiedDate":"2023-02-06"},{"lineNumber":134,"author":{"gitId":"JavonTeo"},"content":"                details.indexOf(\")\"));","lastModifiedDate":"2023-02-06"},{"lineNumber":135,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":136,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(fromString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(toString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":139,"author":{"gitId":"JavonTeo"},"content":"        Event event \u003d new Event(eventDescription, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":140,"author":{"gitId":"JavonTeo"},"content":"        if (marked.equals(\"[X]\")) {","lastModifiedDate":"2023-02-01"},{"lineNumber":141,"author":{"gitId":"JavonTeo"},"content":"            event.markUnmark(true);","lastModifiedDate":"2023-02-01"},{"lineNumber":142,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":143,"author":{"gitId":"JavonTeo"},"content":"        return event;","lastModifiedDate":"2023-02-01"},{"lineNumber":144,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":145,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":146,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":147,"author":{"gitId":"JavonTeo"},"content":"     * Updates the file whenever there is a change in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":148,"author":{"gitId":"JavonTeo"},"content":"     * @param taskList containing the updated Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":149,"author":{"gitId":"JavonTeo"},"content":"     * @throws DukeException If there is an error when updating the file.","lastModifiedDate":"2023-02-02"},{"lineNumber":150,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":151,"author":{"gitId":"JavonTeo"},"content":"    public void update(TaskList taskList) throws DukeException {","lastModifiedDate":"2023-02-01"},{"lineNumber":152,"author":{"gitId":"JavonTeo"},"content":"        try {","lastModifiedDate":"2023-02-01"},{"lineNumber":153,"author":{"gitId":"JavonTeo"},"content":"            FileWriter fileWriter \u003d new FileWriter(filePath);","lastModifiedDate":"2023-02-01"},{"lineNumber":154,"author":{"gitId":"JavonTeo"},"content":"            for (int i \u003d 0; i \u003c taskList.size(); i++) {","lastModifiedDate":"2023-02-01"},{"lineNumber":155,"author":{"gitId":"JavonTeo"},"content":"                Task t \u003d taskList.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":156,"author":{"gitId":"JavonTeo"},"content":"                fileWriter.write(t.toString());","lastModifiedDate":"2023-02-01"},{"lineNumber":157,"author":{"gitId":"JavonTeo"},"content":"                fileWriter.write(\"\\n\");","lastModifiedDate":"2023-02-01"},{"lineNumber":158,"author":{"gitId":"JavonTeo"},"content":"            }","lastModifiedDate":"2023-02-01"},{"lineNumber":159,"author":{"gitId":"JavonTeo"},"content":"            fileWriter.close();","lastModifiedDate":"2023-02-01"},{"lineNumber":160,"author":{"gitId":"JavonTeo"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":161,"author":{"gitId":"JavonTeo"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-02-01"},{"lineNumber":162,"author":{"gitId":"JavonTeo"},"content":"        }","lastModifiedDate":"2023-02-01"},{"lineNumber":163,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":164,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":164}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" * Deadline class for deadline Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the Deadline class.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * @param description the description of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param by the date and timing at which the Deadline must be completed by.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    public Deadline(String description, LocalDateTime by) {","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"     * Represents the Deadline as a String.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"     * @return String representation of the Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        return \"[D]\" + super.getStatusIcon() + \" \" + super.getDescription() + \" (by: \"","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"                + this.by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     * Adds a Deadline","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"     * @param details user input details for creating the Deadline.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"     * @return the newly constructed Deadline object.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    public static Deadline addDeadline(String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"        String description \u003d details.substring(0, details.indexOf(\" /by\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"        String byString \u003d details.substring(details.indexOf(\" /by\") + \" /by\".length() + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime by \u003d LocalDateTime.parse(byString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        return new Deadline(description, by);","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":45}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" * Event class for events.","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"public class Event extends Task {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    protected LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the Event class.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param description the description of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     * @param from date and timing at which the Event starts.","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * @param to date and timing at which the Event ends.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    public Event(String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"     * Represents the Event as a String.","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * @return String representation of the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        return \"[E]\" + super.getStatusIcon() + \" \"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"                + super.getDescription() + \" (from: \" + this.from.format(","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"                        DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\"))","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"                + \" to: \" + this.to.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"     * Adds a Event","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"     * @param details user input details for creating the Event.","lastModifiedDate":"2023-02-02"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"     * @return the newly constructed Event object.","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    public static Event addEvent(String details) {","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        String description \u003d details.substring(0, details.indexOf(\" /from\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        String fromAndTo \u003d details.substring(details.indexOf(\" /from\") + \" /from\".length() + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"        String fromString \u003d fromAndTo.substring(0, fromAndTo.indexOf(\" /to\"));","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"        String toString \u003d fromAndTo.substring(fromAndTo.indexOf(\" /to\") + \" /to\".length() + 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime from \u003d LocalDateTime.parse(fromString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        LocalDateTime to \u003d LocalDateTime.parse(toString, FORMATTER);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"        return new Event(description, from, to);","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":53}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":" * Task class to record the user task.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"public class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    protected String description;","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-19"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the Task class.","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"     * @param description the description of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"     * Represents whether the Task is done.","lastModifiedDate":"2023-02-02"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"     * @return String representation of whether the Task is done.","lastModifiedDate":"2023-02-02"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-19"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"        return (isDone ? \"[X]\" : \"[ ]\"); // mark done duke.task with X","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"     * Gets the description of Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"     * @return the description of the Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-19"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"        return this.description;","lastModifiedDate":"2023-01-19"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"     * Sets the description of Task.","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"     * @param newDescription the new description of the Task.","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"    public void setDescription(String newDescription) {","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"        this.description \u003d newDescription;","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"     * Marks the Task as either done or not done yet.","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"     * @param marked boolean value on whether to mark the Task as done.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    public void markUnmark(boolean marked) {","lastModifiedDate":"2023-01-19"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"        this.isDone \u003d marked;","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"JavonTeo":53}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":" * List to index and contain Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"public class TaskList {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the TaskList class.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     * @param taskList ArrayList containing Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"     * Another constructor for the TaskList class, if there is no existing Task.","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        this.taskList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * Adds a Task to the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @param t Task to be added.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public void add(Task t) {","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        this.taskList.add(t);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"     * Gets Task from the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"     * @param i index of the Task to get.","lastModifiedDate":"2023-02-02"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"     * @return The Task to get.","lastModifiedDate":"2023-02-02"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"        return this.taskList.get(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"     * Removes Task from the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"     * @param i index of the Task to remove.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"     * @return The Task that got removed.","lastModifiedDate":"2023-02-02"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"    public Task remove(int i) {","lastModifiedDate":"2023-02-01"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"        return this.taskList.remove(i);","lastModifiedDate":"2023-02-01"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"     * Gets number of Tasks in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"     * @return The number of Tasks in the TaskList.","lastModifiedDate":"2023-02-02"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"    public int size() {","lastModifiedDate":"2023-02-01"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-01"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":59}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.task;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":" * ToDo class for ToDo Tasks.","lastModifiedDate":"2023-02-02"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-20"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the ToDo class.","lastModifiedDate":"2023-02-02"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"     * @param description the description of the Task.ToDo","lastModifiedDate":"2023-02-02"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"        super(description);","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"     * Represents the ToDo as a String.","lastModifiedDate":"2023-02-02"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"     * @return String representation of the ToDo.","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    public String toString() {","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        return \"[T]\" + super.getStatusIcon() + \" \" + super.getDescription();","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"     * Adds a ToDo","lastModifiedDate":"2023-02-02"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"     * @param details user input details for creating the ToDo.","lastModifiedDate":"2023-02-02"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"     * @return the newly constructed ToDo object.","lastModifiedDate":"2023-02-02"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    public static ToDo addToDo(String details) {","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"        return new ToDo(details);","lastModifiedDate":"2023-02-06"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":33}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke.ui;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"/**","lastModifiedDate":"2023-02-02"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":" * Ui that deals with interaction with the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":" */","lastModifiedDate":"2023-02-02"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"public class Ui {","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    protected Scanner sc;","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"     * Constructor for the Ui class.","lastModifiedDate":"2023-02-02"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"    public Ui() {","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"     * Displays a welcome message to the user.","lastModifiedDate":"2023-02-02"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"Hello! I\u0027m Duke\");","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"     * Reads command that have been inputted by the User.","lastModifiedDate":"2023-02-02"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"     * @return String of the user input.","lastModifiedDate":"2023-02-02"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-01"},{"lineNumber":37,"author":{"gitId":"JavonTeo"},"content":"        return sc.nextLine();","lastModifiedDate":"2023-02-01"},{"lineNumber":38,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":41,"author":{"gitId":"JavonTeo"},"content":"     * Displays a line to divide the output by Duke.","lastModifiedDate":"2023-02-02"},{"lineNumber":42,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":43,"author":{"gitId":"JavonTeo"},"content":"    public void showLine() {","lastModifiedDate":"2023-02-01"},{"lineNumber":44,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(\"_______________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":45,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":47,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"JavonTeo"},"content":"     * Display error messages.","lastModifiedDate":"2023-02-02"},{"lineNumber":49,"author":{"gitId":"JavonTeo"},"content":"     * @param err the error message to display.","lastModifiedDate":"2023-02-02"},{"lineNumber":50,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":51,"author":{"gitId":"JavonTeo"},"content":"    public void showError(String err) {","lastModifiedDate":"2023-02-01"},{"lineNumber":52,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(err);","lastModifiedDate":"2023-02-01"},{"lineNumber":53,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":54,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":55,"author":{"gitId":"JavonTeo"},"content":"    /**","lastModifiedDate":"2023-02-02"},{"lineNumber":56,"author":{"gitId":"JavonTeo"},"content":"     * Display messages.","lastModifiedDate":"2023-02-02"},{"lineNumber":57,"author":{"gitId":"JavonTeo"},"content":"     * @param msg the message to display.","lastModifiedDate":"2023-02-02"},{"lineNumber":58,"author":{"gitId":"JavonTeo"},"content":"     */","lastModifiedDate":"2023-02-02"},{"lineNumber":59,"author":{"gitId":"JavonTeo"},"content":"    public void show(String msg) {","lastModifiedDate":"2023-02-01"},{"lineNumber":60,"author":{"gitId":"JavonTeo"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-02-01"},{"lineNumber":61,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":62,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":62}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" promptText\u003d\"type something...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"14.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"         \u003c/font\u003e\u003c/TextField\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"         \u003cfont\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"            \u003cFont name\u003d\"Segoe Print\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"         \u003c/font\u003e\u003c/Button\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-06"}],"authorContributionMap":{"JavonTeo":26}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.command.Command;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"public class ParserTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    public void parseTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"        String fullCommand \u003d \"todo play music\";","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"        Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"AddCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"        fullCommand \u003d \"bye\";","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"        command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"ByeCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"        fullCommand \u003d \"delete 1\";","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"DeleteCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        fullCommand \u003d \"list\";","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"ListCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"        fullCommand \u003d \"mark 1\";","lastModifiedDate":"2023-02-01"},{"lineNumber":29,"author":{"gitId":"JavonTeo"},"content":"        command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":30,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"MarkCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"JavonTeo"},"content":"        fullCommand \u003d \"unmark 1\";","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"JavonTeo"},"content":"        command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(command.getClass().getSimpleName(), \"UnmarkCommand\");","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":36,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":36}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"package duke;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"JavonTeo"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"JavonTeo"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":10,"author":{"gitId":"JavonTeo"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"JavonTeo"},"content":"    public void addTaskTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"JavonTeo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"JavonTeo"},"content":"        Task todo \u003d new ToDo(\"play music\");","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"JavonTeo"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(tasks.get(0), todo);","lastModifiedDate":"2023-02-01"},{"lineNumber":17,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"JavonTeo"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"JavonTeo"},"content":"    @Test","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"JavonTeo"},"content":"    public void deleteTaskTest() {","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"JavonTeo"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"JavonTeo"},"content":"        Task todo \u003d new ToDo(\"play music\");","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"JavonTeo"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(tasks.size(), 1);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"JavonTeo"},"content":"        tasks.remove(0);","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"JavonTeo"},"content":"        assertEquals(tasks.size(), 0);","lastModifiedDate":"2023-02-01"},{"lineNumber":27,"author":{"gitId":"JavonTeo"},"content":"    }","lastModifiedDate":"2023-02-01"},{"lineNumber":28,"author":{"gitId":"JavonTeo"},"content":"}","lastModifiedDate":"2023-02-01"}],"authorContributionMap":{"JavonTeo":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"JavonTeo"},"content":"todo read book","lastModifiedDate":"2023-01-20"},{"lineNumber":2,"author":{"gitId":"JavonTeo"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-01-20"},{"lineNumber":3,"author":{"gitId":"JavonTeo"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"JavonTeo"},"content":"delete 10","lastModifiedDate":"2023-01-20"},{"lineNumber":5,"author":{"gitId":"JavonTeo"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":6,"author":{"gitId":"JavonTeo"},"content":"bye","lastModifiedDate":"2023-01-20"}],"authorContributionMap":{"JavonTeo":6}}]
