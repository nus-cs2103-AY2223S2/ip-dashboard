[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayanth-Balasubramanian":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"checkstyle {","lastModifiedDate":"2023-02-10"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-10"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-02-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayanth-Balasubramanian":5,"-":40}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.DukeException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.GlobalExceptionHandler;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.CommandEventListener;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Presenter;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.presenter.TaskPresenter;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The main class containing Duke\u0027s event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private boolean isTerminated;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Duke() {","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.isTerminated \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private void exit() {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.isTerminated \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-23"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        TaskModel taskModel \u003d new TaskModel();","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        TaskView taskView \u003d new TaskView();","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        GlobalExceptionHandler exceptionHandler \u003d new GlobalExceptionHandler(taskView);","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CommandEventListener exitEventListener \u003d command -\u003e {","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (command.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                // cleanup code here","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                duke.exit();","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-23"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        };","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Presenter presenter \u003d new TaskPresenter(taskModel, taskView, exitEventListener);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        while (!duke.isTerminated) {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                presenter.handleInput(taskView.getUserInput());","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                exceptionHandler.handleException(e);","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Jayanth-Balasubramanian":40,"-":3}},{"path":"src/main/java/duke/command/AddDeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.utils.DateTimeStringParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command for adding a deadline to the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AddDeadlineCommand implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String ADDED_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final LocalDateTime deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String addedTaskMessage \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command which creates the deadline on execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model that stores all tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param todoDescription Description of the deadline.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param deadline The deadline, formatted as d/MMM/yyyy HH:mm, time is optional and defaults to 23:59","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws InvalidParameterError if deadline is formatted improperly.","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    AddDeadlineCommand(View taskView, TaskModel taskModel, String todoDescription, String deadline)","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws InvalidParameterError {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        LocalTime defaultDeadlineTime \u003d LocalTime.MAX;","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.deadline \u003d DateTimeStringParser.parseDateTimeString(deadline, defaultDeadlineTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a new deadline, saves it to the model and displays an appropriate message.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d this.taskModel.createTask(todoDescription, deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(ADDED_TASK_MESSAGE + newTask.toString()","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + String.format(\"\\nNow you have %d tasks in the list.\", taskModel.getNumberOfTasks()));","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":51}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.utils.DateTimeStringParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command to create event and add it to the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AddEventCommand implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String ADDED_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that creates the event upon execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model that stores all tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param todoDescription A description of the event.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param startTime Event start time formatted as d/MMM/yyyy HH:mm. Time is optional and defaults to NOON (12:00 PM)","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param endTime Event end time formatted as d/MMM/yyyy HH:mm. Time is optional and defaults to NOON (12:00 PM)","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws InvalidParameterError If startTime or endTime is formatted improperly.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    AddEventCommand(View taskView, TaskModel taskModel, String todoDescription,","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    String startTime, String endTime) throws InvalidParameterError {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        LocalTime defaultEventTime \u003d LocalTime.NOON;","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.startTime \u003d DateTimeStringParser.parseDateTimeString(startTime, defaultEventTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.endTime \u003d DateTimeStringParser.parseDateTimeString(endTime, defaultEventTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a new event, adds it to the task list and displays an appropriate message to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d this.taskModel.createTask(todoDescription, startTime, endTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(ADDED_TASK_MESSAGE + newTask.toString()","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + String.format(\"\\nNow you have %d tasks in the list.\", taskModel.getNumberOfTasks()));","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":53}},{"path":"src/main/java/duke/command/AddToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A command that adds a todo when executed.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class AddToDoCommand implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String ADDED_TASK_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n  \";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that creates a todo when it is executed.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param todoDescription A description of the todo.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    AddToDoCommand(View taskView, TaskModel taskModel, String todoDescription) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.todoDescription \u003d todoDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a todo with the description provided.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d this.taskModel.createTask(todoDescription);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(ADDED_TASK_MESSAGE + newTask.toString()","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + String.format(\"\\nNow you have %d tasks in the list.\", taskModel.getNumberOfTasks()));","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":38}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A command that causes Duke to exit when executed.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ByeCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String EXIT_MESSAGE \u003d \"See you on the other side, human. Don\u0027t forget to bring a spacesuit!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that causes Duke to exit when executed.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ByeCommand(View taskView) {","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Triggers duke to exit upon execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(EXIT_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":28}},{"path":"src/main/java/duke/command/CommandFactory.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A factory to create commands.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class CommandFactory {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public enum CommandType {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        GREET, BYE, LIST, MARK_DONE, MARK_UNDONE, CREATE_TODO,","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CREATE_DEADLINE, CREATE_EVENT, DELETE_TASK, FIND,","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiate a command factory with the provided model and view.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel Model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public CommandFactory(TaskModel taskModel, TaskView taskView) {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates a command of the provided type with the supplied arguments.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param type The type of command to create.","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param args The arguments to the command.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return A new command of the required type instantiated with the supplied arguments.","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws InvalidParameterError If the arguments are improperly formatted.","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Command createCommand(CommandType type, String... args) throws InvalidParameterError {","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        switch (type) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case GREET:","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new GreetingCommand(taskView);","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case BYE:","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new ByeCommand(taskView);","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case LIST:","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (args.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return new ListTasksCommand(taskModel, taskView, args[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return new ListTasksCommand(taskModel, taskView);","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case MARK_DONE:","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                int markIndex \u003d Integer.parseInt(args[0]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return new MarkDoneCommand(taskView, taskModel, markIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new InvalidParameterError(\"Invalid number provided\");","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case MARK_UNDONE:","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                int unmarkIndex \u003d Integer.parseInt(args[0]) - 1; // handle parseInt error","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return new MarkUndoneCommand(taskView, taskModel, unmarkIndex);","lastModifiedDate":"2023-01-24"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new InvalidParameterError(\"Invalid number provided\");","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case CREATE_TODO:","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new AddToDoCommand(taskView, taskModel, args[0]);","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case CREATE_DEADLINE:","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new AddDeadlineCommand(taskView, taskModel, args[0], args[1]);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case CREATE_EVENT:","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new AddEventCommand(taskView, taskModel, args[0], args[1], args[2]);","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case DELETE_TASK:","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            int indexToDelete \u003d Integer.parseInt(args[0]) - 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new DeleteTaskCommand(taskView, taskModel, indexToDelete);","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        case FIND:","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return new FindTaskCommand(taskModel, taskView, args[0]);","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        default:","lastModifiedDate":"2023-01-24"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // in case we add more to CommandType and forget to add here","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return null;","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":81}},{"path":"src/main/java/duke/command/DeleteTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command that deletes tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class DeleteTaskCommand implements Command {","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final int indexToDelete;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    DeleteTaskCommand(TaskView taskView, TaskModel taskModel, int indexToDelete) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.indexToDelete \u003d indexToDelete;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() throws CommandExecutionError {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int numTasks \u003d taskView.getNumDisplayedTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (indexToDelete \u003e\u003d numTasks) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(String.format(\"Only %d tasks displayed\", numTasks));","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else if (indexToDelete \u003c 0) {","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(\"Task index cannot be negative\");","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task taskToDelete \u003d taskView.getDisplayedTask(indexToDelete);","lastModifiedDate":"2023-02-10"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskModel.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(\"Noted, I\u0027ve removed this task:\\n  \" + taskToDelete.toString()","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + String.format(\"\\n Now you have %d tasks in the list.\", taskModel.getNumberOfTasks()));","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":33}},{"path":"src/main/java/duke/command/EchoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A simple command to echo what the user enters.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class EchoCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String echoString;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that echoes the supplied string to the view upon execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param echoString The string to echo.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    EchoCommand(View taskView, String echoString) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.echoString \u003d echoString;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Echoes the provided echoString to the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(\"You said: \" + echoString);","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":30}},{"path":"src/main/java/duke/command/FindTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A command to find all tasks in the task list whose description contains a substring.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class FindTaskCommand implements Command {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String searchStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that displays all tasks containing the search string to the view upon execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model containing the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param searchStr The string to search.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    FindTaskCommand(TaskModel taskModel, TaskView taskView, String searchStr) {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.searchStr \u003d searchStr;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Displays all tasks matching the search description to the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cTask\u003e matchingTasks \u003d taskModel.findTasks(this.searchStr);","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.renderTasks(matchingTasks);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Jayanth-Balasubramanian":39}},{"path":"src/main/java/duke/command/GreetingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A command that greets the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class GreetingCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String GREETING_MESSAGE \u003d \"Greetings, human. I am TARS, the most advanced chatbot\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            + \" you\u0027ll ever have the pleasure of interacting with.\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final View taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that displays a greeting message to the view upon execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    GreetingCommand(View taskView) {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Display greeting message to view.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(GREETING_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":29}},{"path":"src/main/java/duke/command/ListTasksCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.utils.DateTimeStringParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A command that lists all tasks. Optionally, this command can list all tasks due before a time.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ListTasksCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private LocalDateTime offset \u003d null;","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that lists all tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ListTasksCommand(TaskModel taskModel, TaskView taskView) {","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that lists all tasks due on or before the supplied time offset.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel The model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param timeOffset The time offset formatted as d/MMM/yyyy with an optional HH:mm (defaults to 23:59)","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws InvalidParameterError If the time offset is improperly formatted.","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    ListTasksCommand(TaskModel taskModel, TaskView taskView, String timeOffset) throws InvalidParameterError {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        LocalTime defaultTime \u003d LocalTime.MAX;","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.offset \u003d DateTimeStringParser.parseDateTimeString(timeOffset, defaultTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * If time offset was not supplied, displays all tasks on the view. Otherwise, it displays","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * tasks due on or before the time offset supplied to the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() {","lastModifiedDate":"2023-01-24"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (offset !\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            taskView.renderTasks(taskModel.getTasksOn(offset));","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            taskView.renderTasks(taskModel.getTasks());","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Jayanth-Balasubramanian":58}},{"path":"src/main/java/duke/command/MarkDoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-02-10"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command to mark a task done.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class MarkDoneCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String MARKED_DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that marks the task at the specified index of the displayed tasks as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel Model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param index Index of task to mark as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    MarkDoneCommand(TaskView taskView, TaskModel taskModel, int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Mark the task at taskIndex as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws CommandExecutionError if supplied index is negative or greater than the number of displayed tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() throws CommandExecutionError {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int numTasks \u003d taskView.getNumDisplayedTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (taskIndex \u003e\u003d numTasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(String.format(\"Only %d tasks displayed\", numTasks));","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else if (taskIndex \u003c 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(\"index cannot be negative\");","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel.markTaskDone(taskView.getDisplayedTask(taskIndex));","lastModifiedDate":"2023-02-10"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(MARKED_DONE_MESSAGE + taskModel.getTask(taskIndex).toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":45}},{"path":"src/main/java/duke/command/MarkUndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-02-10"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command to mark a task as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class MarkUndoneCommand implements Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String MARKED_UNDONE_MESSAGE \u003d \"OK, I\u0027ve marked this task as not done yet:\\n\";","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskModel taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-02-10"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final int taskIndex;","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiates a command that marks the task at the specified index of the displayed tasks as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel Model that stores the task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param index Index of task to mark as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    MarkUndoneCommand(TaskView taskView, TaskModel taskModel, int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskIndex \u003d index;","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel \u003d taskModel;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Mark the task at taskIndex as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws CommandExecutionError if supplied index is negative or greater than the number of displayed tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void execute() throws CommandExecutionError {","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int numTasks \u003d taskView.getNumDisplayedTasks();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (taskIndex \u003e\u003d numTasks) {","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(String.format(\"Only %d tasks displayed\", numTasks));","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else if (taskIndex \u003c 0) {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new CommandExecutionError(\"index cannot be negative\");","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskModel.markTaskUndone(taskView.getDisplayedTask(taskIndex));","lastModifiedDate":"2023-02-10"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        taskView.showMessage(MARKED_UNDONE_MESSAGE + taskModel.getTask(taskIndex).toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":43}},{"path":"src/main/java/duke/command/exceptions/CommandExecutionError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.CommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Class for error during command execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class CommandExecutionError extends CommandException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Create an instance of CommandExecutionError with a specific error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param errorMessage: the error message to be shown to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public CommandExecutionError(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":16}},{"path":"src/main/java/duke/command/exceptions/InvalidParameterError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.CommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A class for error when invalid parameter(s) are passed to a command.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class InvalidParameterError extends CommandException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiate an InvalidParameterError with a specific error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param errorMessage: the error message to be displayed to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public InvalidParameterError(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":16}},{"path":"src/main/java/duke/command/utils/DateTimeStringParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.command.utils;","lastModifiedDate":"2023-01-31"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A utility to parse datetime strings.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class DateTimeStringParser {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static final DateTimeFormatter DISPLAY_FORMAT \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy HH:mm\");","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Return a LocalDateTime instance with the date and time from the parsed dateTimeString.","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Uses the defaultTime parameter for the instance if no time is supplied.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param dateTimeString The string to parse.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param defaultTime Default time, if string does not contain time.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return A LocalDateTime instance with the parsed date and time.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws InvalidParameterError if the string is not in the expected d/MM/yyyy HHmm or d/MM/yyyy pattern.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public static LocalDateTime parseDateTimeString(String dateTimeString, LocalTime defaultTime)","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws InvalidParameterError {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DateTimeFormatter formatterWithTime \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        DateTimeFormatter formatterWithoutTime \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy\");","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return LocalDateTime.parse(dateTimeString, formatterWithTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                LocalDate date \u003d LocalDate.parse(dateTimeString, formatterWithoutTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return LocalDateTime.of(date, defaultTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (DateTimeParseException ex) {","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new InvalidParameterError(\"Please enter date as d/MM/yyyy or d/MM/yyyy HHmm\");","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"Jayanth-Balasubramanian":39}},{"path":"src/main/java/duke/exceptions/CommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The {@code CommandException} class represents an exception that","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * is thrown when an error occurs in the execution of a command.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class CommandException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiate a command exception with an error message to display to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param errorMessage The error message to display to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public CommandException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Command error: \" + errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":15}},{"path":"src/main/java/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The {@code DukeException} class represents a general exception that","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * is thrown when an error occurs during Duke\u0027s execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/duke/exceptions/GlobalExceptionHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A general exception handler to handle DukeExceptions caught in Duke\u0027s event loop.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class GlobalExceptionHandler {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final TaskView taskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public GlobalExceptionHandler(duke.view.TaskView taskView) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskView \u003d taskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void handleException(DukeException exception) {","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // determine if exception is recoverable or not","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (exception instanceof PresenterException | exception instanceof CommandException) {","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            taskView.showError(exception.getMessage());","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":19}},{"path":"src/main/java/duke/exceptions/ModelException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The {@code ModelException} class represents an exception that is thrown","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * when an error occurs in the task model.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ModelException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ModelException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Model error\" + errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/duke/exceptions/PresenterException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The {@code PresenterException} class represents an exception that is thrown","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * when an error occurs in the presenter.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class PresenterException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public PresenterException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/duke/exceptions/ViewException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The {@code ViewException} class represents an exception that is thrown","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * when an error occurs in the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ViewException extends DukeException {","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ViewException(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"View error\" + errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/duke/interfaces/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.interfaces;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Command is an interface for representing user-issued commands in the task management application.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface Command {","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Executes the command.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws CommandException if the execution of the command fails due to some error","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void execute() throws CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":15}},{"path":"src/main/java/duke/interfaces/CommandEventListener.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.interfaces;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * CommandEventListener is an interface for listening to user-issued commands in the task management application.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface CommandEventListener {","lastModifiedDate":"2023-01-24"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Handle a command","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param command The command input by the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void onCommandEvent(String command);","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":12}},{"path":"src/main/java/duke/interfaces/Model.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.interfaces;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Model is an interface for the data model in the task management application.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It provides access to the user\u0027s task list.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface Model {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Gets the list of tasks stored in the model.","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return the list of tasks","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    List\u003cTask\u003e getTasks();","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":18}},{"path":"src/main/java/duke/interfaces/Presenter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.interfaces;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.CommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.PresenterException;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Presenter is an interface for the presenter component application.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It acts as a mediator between the model and the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface Presenter {","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Handles a user-issued command.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param string the input to handle","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void handleInput(String string) throws PresenterException, CommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":17}},{"path":"src/main/java/duke/interfaces/View.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.interfaces;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * View is an interface for the view component in the task management application.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It displays the tasks data and allows users to interact with the task list stored in the model.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public interface View {","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void showMessage(String string);","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Gets the user\u0027s input.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return the user\u0027s input","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    String getUserInput();","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Shows an error message to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param errorMessage the error message to show","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void showError(String errorMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Displays the list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    void renderTasks(List\u003cTask\u003e tasks);","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":32}},{"path":"src/main/java/duke/model/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.model;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.utils.DateTimeStringParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The Deadline class represents a deadline, a specific date and time that a task must be completed by.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * it extends the Task class and adds the deadline attribute.","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    protected Deadline(String taskDescription, LocalDateTime deadline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(DateTimeStringParser.DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean isDueOn(LocalDateTime time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return deadline.toLocalDate().isEqual(time.toLocalDate())","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \u0026\u0026 deadline.toLocalTime().isBefore(time.toLocalTime());","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":29}},{"path":"src/main/java/duke/model/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.model;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.utils.DateTimeStringParser;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The Event class represents an event, which is a task that occurs at a between two specific dates.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * it extends the Task class and adds the start and end time attributes.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final LocalDateTime startTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final LocalDateTime endTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    protected Event(String taskDescription, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(taskDescription);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                + startTime.format(DateTimeStringParser.DISPLAY_FORMAT) + \" to: \"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                + endTime.format(DateTimeStringParser.DISPLAY_FORMAT) + \")\";","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean isDueOn(LocalDateTime time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return time.isBefore(endTime) \u0026\u0026 time.isAfter(startTime);","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jayanth-Balasubramanian":32}},{"path":"src/main/java/duke/model/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.model;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The `Task` class is a representation of a single task that can be either a `Deadline`, `Event` or `Todo`.","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It includes information such as task description, and whether it is completed or not.","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private boolean isTaskDone;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    protected Task(String taskDescription) {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    protected void markTaskDone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.isTaskDone \u003d true;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    protected void markTaskUndone() {","lastModifiedDate":"2023-01-24"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.isTaskDone \u003d false;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-24"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (this.isTaskDone) {","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return \"[X] \" + this.taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-24"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return \"[ ] \" + this.taskDescription;","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean isDueOn(LocalDateTime time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return false; // general tasks don\u0027t have a specific deadline","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    boolean descriptionContains(String s) {","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this.taskDescription.contains(s);","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":44}},{"path":"src/main/java/duke/model/TaskModel.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.model;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.File;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Model;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The `TaskModel` class is responsible for managing the list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It provides methods for adding, updating and removing tasks from the list.","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * It also persists the list of tasks to a file so that it can be retrieved later.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TaskModel implements Model {","lastModifiedDate":"2023-01-24"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String taskStorePath \u003d \"./data/tasks.ser\";","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final String dataDirPath \u003d \"./data\";","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final File dataDir;","lastModifiedDate":"2023-02-10"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final File tasksFile;","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public TaskModel() {","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.dataDir \u003d new File(dataDirPath);","lastModifiedDate":"2023-02-10"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (!dataDir.exists()) {","lastModifiedDate":"2023-02-10"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-02-10"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                dataDir.mkdir();","lastModifiedDate":"2023-02-10"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (SecurityException e) {","lastModifiedDate":"2023-02-10"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-02-10"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-02-10"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-10"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-10"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tasksFile \u003d new File(taskStorePath);","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tasksFile.exists() \u0026\u0026 tasksFile.length() \u003e 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                ObjectInputStream in \u003d new ObjectInputStream(new FileInputStream(tasksFile));","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                Object obj \u003d in.readObject();","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                this.tasks \u003d (ArrayList\u003cTask\u003e) obj;","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (IOException | ClassNotFoundException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            try {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                tasksFile.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Write the task list to the tasksFile.","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private void writeToFile() {","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            FileOutputStream fileOut \u003d new FileOutputStream(this.tasksFile);","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            ObjectOutputStream out \u003d new ObjectOutputStream(fileOut);","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            out.writeObject(tasks);","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            out.flush();","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Create a todo (a task with only a description).","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Also writes the task list to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return A Task containing the description supplied.","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Task createTask(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d new ToDo(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return newTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Create a deadline (a task with a description and deadline).","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Also writes the task list to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param deadline The deadline for the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return A Task containing the description and deadline supplied.","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Task createTask(String description, LocalDateTime deadline) {","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d new Deadline(description, deadline);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return newTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Create an event (a task with a description, start and end time).","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Also writes the task list to the file.","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param description Description of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param startTime The start time for the event.","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param endTime The end time for the event.","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return A Task containing the description, start and end time supplied.","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Task createTask(String description, LocalDateTime startTime, LocalDateTime endTime) {","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Task newTask \u003d new Event(description, startTime, endTime);","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tasks.add(newTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return newTask;","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":113,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A method to return all the tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return a list of all the tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-01-24"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return new ArrayList\u003c\u003e(this.tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A method to get deadlines and events that contain the given date and time.","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param time The date and time to search for.","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return a list of tasks containing deadlines due on the supplied time and events containing the supplied time.","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public List\u003cTask\u003e getTasksOn(LocalDateTime time) {","lastModifiedDate":"2023-01-31"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // only deadlines and events","lastModifiedDate":"2023-01-31"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Task task : this.tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (task.isDueOn(time)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                res.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":136,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Get the task at the supplied index.","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param index The index of task to be returned.","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return The task at the supplied index.","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Task getTask(int index) {","lastModifiedDate":"2023-01-24"},{"lineNumber":144,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this.tasks.get(index); // out of bounds exception","lastModifiedDate":"2023-01-24"},{"lineNumber":145,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":146,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":147,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":148,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this.tasks.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":150,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":151,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Delete the supplied task object from the list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param task The task to delete.","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void deleteTask(Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":156,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int indexToRemove \u003d tasks.indexOf(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":157,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.tasks.remove(indexToRemove);","lastModifiedDate":"2023-02-10"},{"lineNumber":158,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":159,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Marks the supplied task as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param task the task to mark as done.","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void markTaskDone(Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":166,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int taskIndex \u003d tasks.indexOf(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":167,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        tasks.get(taskIndex).markTaskDone(); // handle out of bounds exception","lastModifiedDate":"2023-01-24"},{"lineNumber":168,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":169,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":170,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":171,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Marks the supplied task as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param task the task to mark as undone.","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void markTaskUndone(Task task) {","lastModifiedDate":"2023-02-10"},{"lineNumber":176,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int taskIndex \u003d tasks.indexOf(task);","lastModifiedDate":"2023-02-10"},{"lineNumber":177,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        tasks.get(taskIndex).markTaskUndone(); // handle out of bounds exception","lastModifiedDate":"2023-01-24"},{"lineNumber":178,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        writeToFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":179,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":180,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":181,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Find tasks containing the supplied substring in their description.","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param subStr The string to search for.","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":185,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public List\u003cTask\u003e findTasks(String subStr) {","lastModifiedDate":"2023-01-31"},{"lineNumber":186,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cTask\u003e res \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":187,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-31"},{"lineNumber":188,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            if (task.descriptionContains(subStr)) {","lastModifiedDate":"2023-01-31"},{"lineNumber":189,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                res.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":190,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":191,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":192,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return res;","lastModifiedDate":"2023-01-31"},{"lineNumber":193,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":194,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":194}},{"path":"src/main/java/duke/model/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.model;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The Todo class represents a todo, a task that does not have a specific date and time associated with it.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-24"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-24"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(description);","lastModifiedDate":"2023-01-24"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":17}},{"path":"src/main/java/duke/presenter/InputParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.presenter;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.CommandFactory;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.CommandFactory.CommandType;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.InvalidParameterError;","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.CommandEventListener;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.presenter.exceptions.InvalidInputError;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.presenter.exceptions.ParserError;","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.presenter.exceptions.UnsupportedCommandError;","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * A class that provides functionality to parse user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class InputParser {","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final CommandEventListener exitEventListener;","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final CommandFactory commandFactory;","lastModifiedDate":"2023-01-24"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    InputParser(CommandEventListener exitEventListener, CommandFactory commandFactory) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.exitEventListener \u003d exitEventListener;","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.commandFactory \u003d commandFactory;","lastModifiedDate":"2023-01-24"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    Command parseInput(String input) throws ParserError {","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (input.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError(\"Oops! Your input was empty\");","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String deadlineRegex \u003d \"^deadline (.*?)(?: /by (.*))$\";","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String eventRegex \u003d \"^event (.*?)(?: /from (.*?) /to (.*))$\";","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Pattern deadlinePattern \u003d Pattern.compile(deadlineRegex);","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Pattern eventPattern \u003d Pattern.compile(eventRegex);","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        String[] tokens \u003d input.split(\" \");","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        try {","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            switch (tokens[0]) {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"bye\":","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleByeCommand();","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"list\":","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleListCommand(tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleTodoCommand(input, tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"find\":","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleFindCommand(input, tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleDeadlineCommand(input, deadlinePattern);","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"event\":","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleEventCommand(input, eventPattern);","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleMarkCommand(tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            // handle improper arguments","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleUnmarkCommand(tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                return handleDeleteCommand(tokens);","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            default:","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                throw new UnsupportedCommandError();","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } catch (InvalidParameterError e) {","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError(e.getMessage());","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleDeleteCommand(String[] tokens) throws InvalidInputError, InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError();","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return commandFactory.createCommand(CommandType.DELETE_TASK, tokens[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleUnmarkCommand(String[] tokens) throws InvalidInputError, InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError();","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return commandFactory.createCommand(CommandType.MARK_UNDONE, tokens[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleMarkCommand(String[] tokens) throws InvalidInputError, InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length !\u003d 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError();","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return commandFactory.createCommand(CommandType.MARK_DONE, tokens[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":87,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleEventCommand(String input, Pattern eventPattern)","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws InvalidParameterError, InvalidInputError {","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Matcher matcher;","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        matcher \u003d eventPattern.matcher(input);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String eventDescription \u003d matcher.group(1);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String startTime \u003d matcher.group(2);","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String endTime \u003d matcher.group(3);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return commandFactory.createCommand(CommandType.CREATE_EVENT,","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    eventDescription, startTime, endTime);","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String invalidEventMessage \u003d \"Oops! Your input did not match the format for an event\";","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError(invalidEventMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":102,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":103,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleDeadlineCommand(String input, Pattern deadlinePattern)","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws InvalidParameterError, InvalidInputError {","lastModifiedDate":"2023-02-12"},{"lineNumber":107,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Matcher matcher;","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        matcher \u003d deadlinePattern.matcher(input);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // handle matcher not matching","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (matcher.matches()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String taskDescription \u003d matcher.group(1);","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String deadline \u003d matcher.group(2);","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return commandFactory.createCommand(CommandType.CREATE_DEADLINE,","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                    taskDescription, deadline);","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            String invalidDeadlineMessage \u003d \"Oops! Your input did not match the format for a deadline\";","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError(invalidDeadlineMessage);","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleFindCommand(String input, String[] tokens) throws InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidParameterError(\"Oops! Search string cannot be empty\");","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return commandFactory.createCommand(CommandType.FIND,","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                input.substring(4).strip());","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleTodoCommand(String input, String[] tokens)","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws InvalidInputError, InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new InvalidInputError(\"Oops! Todo cannot be empty\");","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return commandFactory.createCommand(CommandType.CREATE_TODO,","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                input.substring(4).strip());","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleListCommand(String[] tokens) throws InvalidParameterError, UnsupportedCommandError {","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        if (tokens.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return commandFactory.createCommand(CommandType.LIST);","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else if (tokens.length \u003d\u003d 2) {","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            return commandFactory.createCommand(CommandType.LIST, tokens[1]);","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        } else {","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throw new UnsupportedCommandError();","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private Command handleByeCommand() throws InvalidParameterError {","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        exitEventListener.onCommandEvent(\"bye\");","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return commandFactory.createCommand(CommandType.BYE);","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":152,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":152}},{"path":"src/main/java/duke/presenter/TaskPresenter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.presenter;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.CommandFactory;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.command.exceptions.CommandExecutionError;","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.CommandException;","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Command;","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.CommandEventListener;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.Presenter;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.presenter.exceptions.ParserError;","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * The presenter in Duke\u0027s architecture, mediates between the view and model.","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Handles user input, executes the appropriate command on the model and updates the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * @author jayanth","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TaskPresenter implements Presenter {","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final InputParser parser;","lastModifiedDate":"2023-01-24"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Creates the presenter for the application.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskModel Model that stores the list of tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param taskView The current view.","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param exitEventListener CommandEventListener to listen for the exit command from the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws CommandException If an error occurs while executing the greet command.","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public TaskPresenter(TaskModel taskModel, TaskView taskView, CommandEventListener exitEventListener)","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            throws CommandException {","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        CommandFactory commandFactory \u003d new CommandFactory(taskModel, taskView);","lastModifiedDate":"2023-01-24"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.parser \u003d new InputParser(exitEventListener, commandFactory);","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Command greetCommand \u003d commandFactory.createCommand(CommandFactory.CommandType.GREET);","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        greetCommand.execute();","lastModifiedDate":"2023-01-24"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Handle input from the view.","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param input the input to handle","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws ParserError If there is an error while parsing the user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @throws CommandExecutionError If there is an error while executing the command.","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void handleInput(String input) throws ParserError, CommandExecutionError {","lastModifiedDate":"2023-01-28"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        Command userCommand \u003d parser.parseInput(input);","lastModifiedDate":"2023-01-24"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        userCommand.execute();","lastModifiedDate":"2023-01-24"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":47}},{"path":"src/main/java/duke/presenter/exceptions/InvalidInputError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.presenter.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Exception that occurs when the user enters an invalid input.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class InvalidInputError extends ParserError {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String genericParserError \u003d \"Oops! Invalid input\";","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiate an InvalidInputError exception with a generic error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public InvalidInputError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(genericParserError);","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Instantiate an InvalidInputError exception with the supplied error message.","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param errorMessage the error message to be displayed to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public InvalidInputError(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":23}},{"path":"src/main/java/duke/presenter/exceptions/ParserError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.presenter.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.exceptions.PresenterException;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Exception that occurs when there is an error InputParser.","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class ParserError extends PresenterException {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public ParserError(String errorMessage) {","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(\"Parser error: \" + errorMessage);","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":12}},{"path":"src/main/java/duke/presenter/exceptions/UnsupportedCommandError.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.presenter.exceptions;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Exception generated when command entered by the user is not recognized.","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class UnsupportedCommandError extends ParserError {","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private static final String ERROR_MESSAGE \u003d \"This command has not been implemented yet\";","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public UnsupportedCommandError() {","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        super(ERROR_MESSAGE);","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-28"}],"authorContributionMap":{"Jayanth-Balasubramanian":11}},{"path":"src/main/java/duke/view/TaskView.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke.view;","lastModifiedDate":"2023-01-28"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-01-24"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-24"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.interfaces.View;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" * Class that handles displaying task model information to the user, and receiving user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TaskView implements View {","lastModifiedDate":"2023-01-24"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final Scanner sc;","lastModifiedDate":"2023-01-24"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private List\u003cTask\u003e displayedTaskList;","lastModifiedDate":"2023-02-10"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public TaskView() {","lastModifiedDate":"2023-01-24"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-24"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Get the task at the supplied index from the list of displayed tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param index The index of the task.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return the task at the supplied index from the list of displayed tasks.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public Task getDisplayedTask(int index) {","lastModifiedDate":"2023-02-10"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return displayedTaskList.get(index);","lastModifiedDate":"2023-02-10"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-10"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public int getNumDisplayedTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return displayedTaskList.size();","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Display a message to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param string The message to display.","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void showMessage(String string) {","lastModifiedDate":"2023-01-24"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(string);","lastModifiedDate":"2023-01-24"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Display an error to the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param string the error message to show","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void showError(String string) {","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.err.println(string);","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * Get input from the user.","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @return the next user input.","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-01-24"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        return this.sc.nextLine();","lastModifiedDate":"2023-01-24"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-01-24"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * A method to display the tasks supplied.","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     * @param tasks the list of tasks to display","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Override","lastModifiedDate":"2023-01-24"},{"lineNumber":65,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void renderTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":66,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        this.displayedTaskList \u003d tasks;","lastModifiedDate":"2023-02-10"},{"lineNumber":67,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":68,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-01-24"},{"lineNumber":70,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Task task: tasks) {","lastModifiedDate":"2023-01-24"},{"lineNumber":71,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            System.out.println(index++ + \". \" + task.toString());","lastModifiedDate":"2023-01-24"},{"lineNumber":72,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-01-24"},{"lineNumber":73,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-01-24"},{"lineNumber":74,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-01-24"},{"lineNumber":75,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-01-24"}],"authorContributionMap":{"Jayanth-Balasubramanian":75}},{"path":"src/test/java/duke/TaskModelTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.TaskModel;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TaskModelTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    TaskModel model;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model \u003d new TaskModel();","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        // delete any previously existing tasks","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cTask\u003e currentTaskList \u003d model.getTasks();","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Task task: currentTaskList) {","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            model.deleteTask(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.createTask(\"task 1\");","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.createTask(\"task 2\");","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        model.createTask(\"task 3\");","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        for (Task task: model.getTasks()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"            System.out.println(task);","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(3, model.getTasks().size());","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(model.getTask(0).toString().contains(\"task 1\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(model.getTask(1).toString().contains(\"task 2\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertTrue(model.getTask(2).toString().contains(\"task 3\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Jayanth-Balasubramanian":31}},{"path":"src/test/java/duke/TaskViewTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"package duke;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.Task;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.model.ToDo;","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import duke.view.TaskView;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import java.util.List;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"public class TaskViewTest {","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    private final PrintStream originalErr \u003d System.err;","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @BeforeEach","lastModifiedDate":"2023-02-12"},{"lineNumber":23,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void setUpStreams() {","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.setErr(new PrintStream(errContent));","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @AfterEach","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void restoreStreams() {","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.setOut(originalOut);","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        System.setErr(originalErr);","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void testShowMessage() {","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        TaskView view \u003d new TaskView();","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        view.showMessage(\"Hello World!\");","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"Hello World!\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"____________________________________________________________\\n\", outContent.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void testShowError() {","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        TaskView view \u003d new TaskView();","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        view.showError(\"An error has occurred\");","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(\"An error has occurred\\n\", errContent.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    @Test","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    public void testRenderTasks() {","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        TaskView view \u003d new TaskView();","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        List\u003cTask\u003e tasks \u003d Arrays.asList(new ToDo(\"Task 1\"), new ToDo(\"Task 2\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        view.renderTasks(tasks);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"        assertEquals(\"____________________________________________________________\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"Here are the tasks in your list:\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"1. [T][ ] Task 1\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"2. [T][ ] Task 2\\n\" +","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"                \"____________________________________________________________\\n\", outContent.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Jayanth-Balasubramanian":61}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jayanth-Balasubramanian"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jayanth-Balasubramanian":1,"-":20}}]
