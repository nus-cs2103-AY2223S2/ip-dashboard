[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2023-02-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"\u003e \"Your mind is for having ideas, not holding them.\" - David Allen [(source)](https://dansilvestre.com/productivity-quotes/)","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"Duke frees your mind of having to remember things you need to do. It\u0027s ","lastModifiedDate":"2023-02-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"- text-based","lastModifiedDate":"2023-02-07"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"- easy to learn","lastModifiedDate":"2023-02-07"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"- ~~FAST~~ *SUPER* FAST to use","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"All you need to do is, ","lastModifiedDate":"2023-02-07"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"1. download it from [here](https://nus-cs2103-ay2223s2.github.io/website/schedule/week4/project.html)","lastModifiedDate":"2023-02-07"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"2. double-click it.","lastModifiedDate":"2023-02-07"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"3. add your tasks.","lastModifiedDate":"2023-02-07"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"4. let it manage your tasks for you üëç","lastModifiedDate":"2023-02-07"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"And it is **FREE**!","lastModifiedDate":"2023-02-07"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-07"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"Features:","lastModifiedDate":"2023-02-07"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"- [x] Managing tasks","lastModifiedDate":"2023-02-07"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"- [X] Managing deadlines","lastModifiedDate":"2023-02-07"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-07"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"---","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the main method:","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"```java","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"public class Main {","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"```","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Johnchiahk":27,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"    mainClassName \u003d \"duke.Duke\"","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Johnchiahk":20,"-":40}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"[D][ ] return book (by: Jun 15 2019)","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"[E][ ] project meeting (from: Jun 15 2019 to: Jun 19 2019)","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] join sports club","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] read book","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Johnchiahk":5}},{"path":"src/main/java/duke/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    private Label text;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    public DialogBox(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"        text \u003d l;","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        displayPicture \u003d iv;","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        text.setWrapText(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        displayPicture.setFitWidth(100.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        displayPicture.setFitHeight(100.0);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        this.setAlignment(Pos.TOP_RIGHT);","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        this.getChildren().addAll(text, displayPicture);","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    private void flip() {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"    public static DialogBox getUserDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        return new DialogBox(l, iv);","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    public static DialogBox getDukeDialog(Label l, ImageView iv) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        var db \u003d new DialogBox(l, iv);","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"        db.flip();","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"        return db;","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":88}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":" * The class Duke encapsulates a Duke object, a chatbot which takes note","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":" * of the various details of the tasks of the user.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    private TaskManagement taskManager; // to manage saved data","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Duke object with the default filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"     * The file which stores all the tasks of a user will be stored in that filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"    public Duke() {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        taskManager \u003d new TaskManagement();","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        taskStorage \u003d new TaskStorage();","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Duke object with the given filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"     * The file which stores all the tasks of a user will be stored in that filepath.","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"     * @param filepath The given filepath.","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"            taskStorage \u003d new TaskStorage();","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"            taskManager \u003d new TaskManagement(filepath);","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"            taskManager \u003d new TaskManagement();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    String getResponse(String inp) {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder response \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        response.append(Ui.showLine());","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        response.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"        Parser parser \u003d new Parser(this.taskStorage);","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        response.append(parser.execute(inp));","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        response.append(\"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        taskManager.save(parser.getTaskStorage());","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        response.append(Ui.showLine());","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        response.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        return response.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"     * Runs the Duke object. Various changes will be made in the Duke object.","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"     * @throws IOException When there is invalid input.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"        PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"        String line \u003d \"-------------------------------\";","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"        String inp;","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"        while (!isExit) {","lastModifiedDate":"2023-02-05"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"            inp \u003d ui.readCommand();","lastModifiedDate":"2023-02-05"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"            Parser parser \u003d new Parser(this.taskStorage);","lastModifiedDate":"2023-02-05"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"            isExit \u003d parser.isTerminate(inp);","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"            String response \u003d parser.execute(inp);","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(response);","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"            taskManager.save(parser.getTaskStorage());","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"     * The main method of the program.","lastModifiedDate":"2023-02-06"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"     * @param args Not used.","lastModifiedDate":"2023-02-06"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"     * @throws IOException Not used.","lastModifiedDate":"2023-02-06"},{"lineNumber":104,"author":{"gitId":"Johnchiahk"},"content":"     * @throws DukeException Not used.","lastModifiedDate":"2023-02-06"},{"lineNumber":105,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":106,"author":{"gitId":"Johnchiahk"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":107,"author":{"gitId":"Johnchiahk"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":108,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Johnchiahk":106,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":" * Class to represent exceptions specific to Duke.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a DukeException object with the default message.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a DukeException object with the given message.","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * @param message The given message.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":23}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" * duke.task.A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"public class Launcher {","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":14}},{"path":"src/main/java/duke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":" * duke.task.A GUI for Duke using FXML.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    private Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"            stage.show();","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":31}},{"path":"src/main/java/duke/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.DialogBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import javafx.application.Platform;","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"    private static final int exitDelayTimeInSeconds \u003d 5;","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    private Stage stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    public void setStage(Stage stage) {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        this.stage \u003d stage;","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"    @FXML private javafx.scene.control.Button closeButton;","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    private void closeButtonAction(){","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"        // get a handle to the stage","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"        Stage stage \u003d (Stage) closeButton.getScene().getWindow();","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        // do what you have to do","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        stage.close();","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        String greeting \u003d Ui.showWelcome();","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"                DialogBox.getDukeDialog(greeting, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        duke \u003d d;","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"    @FXML","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"        String input \u003d userInput.getText();","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d duke.getResponse(input);","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"                DialogBox.getUserDialog(input, userImage),","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"                DialogBox.getDukeDialog(response, dukeImage)","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"        );","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"            Parser p \u003d new Parser(new TaskStorage());","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"            if (p.isTerminate(input)) {","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"                userInput.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"                sendButton.setDisable(true);","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"                Thread.sleep(1000);","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"                Platform.exit();","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"        } catch (InterruptedException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":103}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-02-05"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" * Makes sense of the user command.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"public class Parser {","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Parser object with the given taskStorage.","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"     * @param taskStorage The given taskStorage.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    public Parser(TaskStorage taskStorage) {","lastModifiedDate":"2023-02-05"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        this.taskStorage \u003d taskStorage;","lastModifiedDate":"2023-02-05"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the taskStorage of the Parser object.","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"     * @return The taskStorage of the Parser object.","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    public TaskStorage getTaskStorage() {","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        return this.taskStorage;","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"    public boolean isTerminate(String inp) {","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        String[] input \u003d inp.split(\" \");","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        switch(input[0]) {","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        case \"bye\":","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"            break;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"        return isExit;","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the goodbye message.","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"     * @return The goodbye message.","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    public String bye() {","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        String byeString \u003d \"Byeee! Hope to see you again! Signing off, duke.\";","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        return byeString;","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"     * Returns a string to let the user know the task numbered at that list","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"     * is marked done.","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"     * Marks that task as done with a cross.","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"     * @param input The task number on the taskStorage object.","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"     * @return The string to let the user know the task numbered at that list","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"     * is marked done.","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"    public String mark(String[] input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        int taskNo \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"            //int taskNo \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"            if (taskNo \u003e taskStorage.noTasks() || taskNo \u003c\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"Give a vaild number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.getTask(taskNo - 1).markAsDone();","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d  \"Number should be typed in\";","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-02-05"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"     * Returns a string to let the user know the task numbered at that list","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"     * is marked undone.","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"     * Marks that task as undone without a cross.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"     * @param input The task number on the taskStorage object.","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"     * @return The string to let the user know the task numbered at that list","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"     * is marked undone.","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"    public String unMark(String[] input) {","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"        int taskNoUnMark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"            if (taskNoUnMark \u003e taskStorage.noTasks() || taskNoUnMark \u003c\u003d 0) {","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"Give a valid number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.getTask(taskNoUnMark - 1).markAsUnDone();","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d  \"Number should be typed in\";","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":104,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":106,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":109,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":110,"author":{"gitId":"Johnchiahk"},"content":"    public String todo(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":113,"author":{"gitId":"Johnchiahk"},"content":"            String[] inpTodo \u003d inp.split(\" \");","lastModifiedDate":"2023-02-05"},{"lineNumber":114,"author":{"gitId":"Johnchiahk"},"content":"            if (inpTodo.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-05"},{"lineNumber":115,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":116,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":117,"author":{"gitId":"Johnchiahk"},"content":"            String todoTask \u003d inp.substring(5);","lastModifiedDate":"2023-02-05"},{"lineNumber":118,"author":{"gitId":"Johnchiahk"},"content":"            Task todo \u003d new Todo(todoTask);","lastModifiedDate":"2023-02-05"},{"lineNumber":119,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.addTask(todo);","lastModifiedDate":"2023-02-08"},{"lineNumber":120,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":121,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":122,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":123,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":126,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":127,"author":{"gitId":"Johnchiahk"},"content":"    public String deadline(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":130,"author":{"gitId":"Johnchiahk"},"content":"            if (inp.length() \u003d\u003d 8) {","lastModifiedDate":"2023-02-05"},{"lineNumber":131,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! The description of a deadline must have a date.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":132,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":133,"author":{"gitId":"Johnchiahk"},"content":"            String deadlineStr \u003d inp.substring(9);","lastModifiedDate":"2023-02-05"},{"lineNumber":134,"author":{"gitId":"Johnchiahk"},"content":"            String[] inputDeadline \u003d deadlineStr.split(\"/\");","lastModifiedDate":"2023-02-05"},{"lineNumber":135,"author":{"gitId":"Johnchiahk"},"content":"            if (inputDeadline.length !\u003d 2) {","lastModifiedDate":"2023-02-05"},{"lineNumber":136,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! The description of a deadline must have a date.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":137,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":138,"author":{"gitId":"Johnchiahk"},"content":"            String deadLineTaskStr \u003d inputDeadline[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":139,"author":{"gitId":"Johnchiahk"},"content":"            assert(inputDeadline[1].contains(\"by\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"Johnchiahk"},"content":"            String end \u003d inputDeadline[1].substring(3);","lastModifiedDate":"2023-02-05"},{"lineNumber":141,"author":{"gitId":"Johnchiahk"},"content":"            Task deadLineTask \u003d new Deadline(deadLineTaskStr, end);","lastModifiedDate":"2023-02-05"},{"lineNumber":142,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.addTask(deadLineTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":143,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":144,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":145,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":146,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":149,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":150,"author":{"gitId":"Johnchiahk"},"content":"    public String event(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":154,"author":{"gitId":"Johnchiahk"},"content":"            if (inp.length() \u003d\u003d 6) {","lastModifiedDate":"2023-02-05"},{"lineNumber":155,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! The description of an event must have a start and end time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":156,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":157,"author":{"gitId":"Johnchiahk"},"content":"            String eventStr \u003d inp.substring(6);","lastModifiedDate":"2023-02-05"},{"lineNumber":158,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":159,"author":{"gitId":"Johnchiahk"},"content":"            String[] eventStrsplit \u003d eventStr.split(\"/\");","lastModifiedDate":"2023-02-05"},{"lineNumber":160,"author":{"gitId":"Johnchiahk"},"content":"            if (eventStrsplit.length !\u003d 3) {","lastModifiedDate":"2023-02-05"},{"lineNumber":161,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! The description of an event must have a start and end time.\");","lastModifiedDate":"2023-02-05"},{"lineNumber":162,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":163,"author":{"gitId":"Johnchiahk"},"content":"            String eventTaskStr \u003d eventStrsplit[0];","lastModifiedDate":"2023-02-05"},{"lineNumber":164,"author":{"gitId":"Johnchiahk"},"content":"            assert(eventStrsplit[1].contains(\"from\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"Johnchiahk"},"content":"            String eventBegin \u003d eventStrsplit[1].substring(5);","lastModifiedDate":"2023-02-05"},{"lineNumber":166,"author":{"gitId":"Johnchiahk"},"content":"            eventBegin \u003d eventBegin.substring(0, eventBegin.length() - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":167,"author":{"gitId":"Johnchiahk"},"content":"            assert(eventStrsplit[2].contains(\"to\"));","lastModifiedDate":"2023-02-12"},{"lineNumber":168,"author":{"gitId":"Johnchiahk"},"content":"            String eventEnd \u003d eventStrsplit[2].substring(3);","lastModifiedDate":"2023-02-05"},{"lineNumber":169,"author":{"gitId":"Johnchiahk"},"content":"            Task eventTask \u003d new Event(eventTaskStr, eventBegin, eventEnd);","lastModifiedDate":"2023-02-05"},{"lineNumber":170,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.addTask(eventTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":171,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":172,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":173,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":174,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":177,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":178,"author":{"gitId":"Johnchiahk"},"content":"    public String delete(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":180,"author":{"gitId":"Johnchiahk"},"content":"        String[] input \u003d inp.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":181,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":182,"author":{"gitId":"Johnchiahk"},"content":"            int taskNo \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-02-05"},{"lineNumber":183,"author":{"gitId":"Johnchiahk"},"content":"            if (taskNo \u003e taskStorage.noTasks() || taskNo \u003c\u003d 0) {","lastModifiedDate":"2023-02-05"},{"lineNumber":184,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"Give a vaild number\");","lastModifiedDate":"2023-02-05"},{"lineNumber":185,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":186,"author":{"gitId":"Johnchiahk"},"content":"            Task eventTask \u003d taskStorage.getTask(taskNo - 1);","lastModifiedDate":"2023-02-05"},{"lineNumber":187,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d taskStorage.deleteTask(eventTask);","lastModifiedDate":"2023-02-08"},{"lineNumber":188,"author":{"gitId":"Johnchiahk"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-02-05"},{"lineNumber":189,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d \"Number should be typed in\";","lastModifiedDate":"2023-02-08"},{"lineNumber":190,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e){","lastModifiedDate":"2023-02-05"},{"lineNumber":191,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":192,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":193,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":195,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":196,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":197,"author":{"gitId":"Johnchiahk"},"content":"    public String find(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-05"},{"lineNumber":200,"author":{"gitId":"Johnchiahk"},"content":"            StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":201,"author":{"gitId":"Johnchiahk"},"content":"            chunkOfText.append(\"Here are the matching tasks in your list:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":202,"author":{"gitId":"Johnchiahk"},"content":"            if (inp.length() \u003d\u003d 5) {","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"Johnchiahk"},"content":"                throw new DukeException(\"‚òπ OOPS!!! There\u0027s nothing to find in empty input!\");","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-11"},{"lineNumber":205,"author":{"gitId":"Johnchiahk"},"content":"            String findString \u003d inp.substring(5);","lastModifiedDate":"2023-02-05"},{"lineNumber":206,"author":{"gitId":"Johnchiahk"},"content":"            TaskStorage findStorage \u003d new TaskStorage();","lastModifiedDate":"2023-02-05"},{"lineNumber":207,"author":{"gitId":"Johnchiahk"},"content":"            for (int i \u003d 0; i \u003c taskStorage.noTasks(); i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":208,"author":{"gitId":"Johnchiahk"},"content":"                Task t \u003d taskStorage.getTask(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":209,"author":{"gitId":"Johnchiahk"},"content":"                if (t.isInDescription(findString)) {","lastModifiedDate":"2023-02-05"},{"lineNumber":210,"author":{"gitId":"Johnchiahk"},"content":"                    findStorage.addTaskWithoutPrinting(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":211,"author":{"gitId":"Johnchiahk"},"content":"                }","lastModifiedDate":"2023-02-05"},{"lineNumber":212,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-02-05"},{"lineNumber":213,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d findStorage.listTask();","lastModifiedDate":"2023-02-08"},{"lineNumber":214,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"Johnchiahk"},"content":"            response \u003d e.getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"Johnchiahk"},"content":"        } finally {","lastModifiedDate":"2023-02-05"},{"lineNumber":217,"author":{"gitId":"Johnchiahk"},"content":"            return response;","lastModifiedDate":"2023-02-11"},{"lineNumber":218,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":219,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":220,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":221,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"Johnchiahk"},"content":"     * Sort the tasks in the taskStorage list by deadlines, events, and todos.","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"Johnchiahk"},"content":"     * Within each category, the tasks are sorted by alphabetical order.","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"Johnchiahk"},"content":"     * @return A string to indicate the tasks in the taskStorage list has been sorted.","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"Johnchiahk"},"content":"    public String sort() {","lastModifiedDate":"2023-02-12"},{"lineNumber":229,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"Johnchiahk"},"content":"        response \u003d this.taskStorage.sortTask();","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"Johnchiahk"},"content":"        return response;","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":234,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":235,"author":{"gitId":"Johnchiahk"},"content":"     * The main logic of the program.","lastModifiedDate":"2023-02-11"},{"lineNumber":236,"author":{"gitId":"Johnchiahk"},"content":"     * Execute a command based on the string input given.","lastModifiedDate":"2023-02-11"},{"lineNumber":237,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":238,"author":{"gitId":"Johnchiahk"},"content":"     * @param inp The string input given.","lastModifiedDate":"2023-02-11"},{"lineNumber":239,"author":{"gitId":"Johnchiahk"},"content":"     * @return False if the input contains \"Bye\", otherwise return True.","lastModifiedDate":"2023-02-11"},{"lineNumber":240,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":241,"author":{"gitId":"Johnchiahk"},"content":"    public String execute(String inp) {","lastModifiedDate":"2023-02-11"},{"lineNumber":242,"author":{"gitId":"Johnchiahk"},"content":"        String[] input \u003d inp.split(\" \");","lastModifiedDate":"2023-02-11"},{"lineNumber":243,"author":{"gitId":"Johnchiahk"},"content":"        String response \u003d \"\";","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"Johnchiahk"},"content":"        switch(input[0]) {","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"Johnchiahk"},"content":"            case \"list\":","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d taskStorage.listTask();","lastModifiedDate":"2023-02-11"},{"lineNumber":247,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"Johnchiahk"},"content":"            case \"bye\":","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.bye();","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"Johnchiahk"},"content":"            case \"mark\":","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.mark(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":255,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"Johnchiahk"},"content":"            case \"unmark\":","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.unMark(input);","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":260,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"Johnchiahk"},"content":"            case \"todo\":","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.todo(inp);","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":265,"author":{"gitId":"Johnchiahk"},"content":"            case \"deadline\":","lastModifiedDate":"2023-02-11"},{"lineNumber":266,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.deadline(inp);","lastModifiedDate":"2023-02-11"},{"lineNumber":267,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":268,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":269,"author":{"gitId":"Johnchiahk"},"content":"            case \"event\":","lastModifiedDate":"2023-02-11"},{"lineNumber":270,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.event(inp);","lastModifiedDate":"2023-02-11"},{"lineNumber":271,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":272,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":273,"author":{"gitId":"Johnchiahk"},"content":"            case \"delete\":","lastModifiedDate":"2023-02-11"},{"lineNumber":274,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.delete(inp);","lastModifiedDate":"2023-02-11"},{"lineNumber":275,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-11"},{"lineNumber":276,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":277,"author":{"gitId":"Johnchiahk"},"content":"            case \"find\":","lastModifiedDate":"2023-02-11"},{"lineNumber":278,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.find(inp);","lastModifiedDate":"2023-02-11"},{"lineNumber":279,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":280,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":281,"author":{"gitId":"Johnchiahk"},"content":"            case \"sort\":","lastModifiedDate":"2023-02-12"},{"lineNumber":282,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d this.sort();","lastModifiedDate":"2023-02-12"},{"lineNumber":283,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-02-12"},{"lineNumber":284,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":285,"author":{"gitId":"Johnchiahk"},"content":"            default:","lastModifiedDate":"2023-02-05"},{"lineNumber":286,"author":{"gitId":"Johnchiahk"},"content":"                response \u003d new DukeException().getMessage();","lastModifiedDate":"2023-02-11"},{"lineNumber":287,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":288,"author":{"gitId":"Johnchiahk"},"content":"        return response;","lastModifiedDate":"2023-02-08"},{"lineNumber":289,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":290,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-05"}],"authorContributionMap":{"Johnchiahk":290}},{"path":"src/main/java/duke/TaskManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" * Analogous to Storage suggested by the module coordinators.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" * Stores all the tasks of a Duke Object.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"public class TaskManagement {","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    private File filedirectory;","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    private String path;","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    private String directory;","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a TaskManagement object. By default, the file which contains","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     * the tasks of the TaskManagement object will be placed in ./data/tasks.txt.","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    public TaskManagement() {","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"        this.directory \u003d \"./data/\";","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"        this.path \u003d this.directory + \"tasks.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"        this.file \u003d new File(this.path);","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        this.filedirectory \u003d new File(this.directory);","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.filedirectory.exists()) { //handle case where folder does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"                filedirectory.mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.file.exists()) { //handle case where file does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a TaskManagement object.","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"     * The file which contains the tasks of the TaskManagement object","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"     * will be placed in the filepath given.","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"     * @param filepath The filepath given.","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"     * @throws DukeException If invalid filepath input is given.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    public TaskManagement(String filepath) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        if (!filepath.substring(0, 2).equals(\"./\") || filepath.length() \u003c\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"        String rem \u003d filepath.substring(2);","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        String[] inp \u003d rem.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"        if (inp.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        this.directory \u003d \"./\" + inp[0] + \"/\";","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"        this.path \u003d filepath;","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        this.file \u003d new File(this.path);","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"        this.filedirectory \u003d new File(this.directory);","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.filedirectory.exists()) { //handle case where folder does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"                filedirectory.mkdirs();","lastModifiedDate":"2023-01-30"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.file.exists()) { //handle case where file does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"     * Saves the tasks of the TaskStorage object into the TaskManagement object.","lastModifiedDate":"2023-02-06"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"     * The file will be updated.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"     * @param taskStorage The TaskStorage object given.","lastModifiedDate":"2023-02-06"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"    public void save(TaskStorage taskStorage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"            FileWriter fw \u003d new FileWriter(this.path);","lastModifiedDate":"2023-01-29"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"            for (int i \u003d 0; i \u003c taskStorage.noTasks(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"                fw.write(taskStorage.getTask(i).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"            fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Johnchiahk":91}},{"path":"src/main/java/duke/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.SortTaskByName;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":" * Analogous to the TaskList class suggested by the 2103T module coordinators.","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":" * Which is encapsulates a List which stores Task objects.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"public class TaskStorage {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    private List\u003cTask\u003e taskStorage;","lastModifiedDate":"2023-02-05"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    // Tasks are indexed from 0 in taskstorage.","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    private int ind \u003d 0; //Number of Current Tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs an empty TaskStorage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    public TaskStorage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"        taskStorage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-02-05"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"     * Adds a task to the TaskStorage object with printing effects.","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"     * @param t The task.","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    public String addTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Got it. I\u0027ve added this task:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\" \" + t);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        this.taskStorage.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        this.ind++;","lastModifiedDate":"2023-02-05"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Now you have \" + this.ind + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     * Adds a task to the TaskStorage object without printing effects.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"     * @param t The task.","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    public void addTaskWithoutPrinting(Task t) {","lastModifiedDate":"2023-02-05"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        this.taskStorage.add(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"        this.ind++;","lastModifiedDate":"2023-02-05"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"     * Return the number of tasks in the taskStorage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"     * @return The number of tasks in the taskStorage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"    public int noTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"        return ind;","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the task based on the given index in the taskStorage object.","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"     * @param i The given index.","lastModifiedDate":"2023-02-06"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"     * @return The task at the given index.","lastModifiedDate":"2023-02-06"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"        return this.taskStorage.get(i);","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"     * Deletes the given task in the taskStorage object.","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"     * @param t The given task.","lastModifiedDate":"2023-02-06"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"    public String deleteTask(Task t) {","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Noted. I\u0027ve removed this task:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"  \" + t + \"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"        this.taskStorage.remove(t);","lastModifiedDate":"2023-02-05"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"        ind--;","lastModifiedDate":"2023-01-30"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Now you have \" + ind + \" task(s) in the list.\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"     * Prints out the list of tasks in the taskStorage object.","lastModifiedDate":"2023-02-06"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"    public String listTask() {","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Tasks:\");","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"        for (int i \u003d 0; i \u003c this.noTasks(); i++) {","lastModifiedDate":"2023-02-05"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"            chunkOfText.append((i + 1) + \".\");","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"            chunkOfText.append(this.getTask(i).toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"            chunkOfText.append(\"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-05"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"    public String sortTask() {","lastModifiedDate":"2023-02-12"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"        Collections.sort(this.taskStorage, new SortTaskByName());","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"        return \"Sorted!\";","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":105}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-02-05"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-02-05"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-02-05"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-02-05"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import java.io.OutputStreamWriter;","lastModifiedDate":"2023-02-05"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-05"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":" * The user interface of the program.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"     * Displays the welcome sign.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    public static String showWelcome() {","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(showLine());","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Hiii Im\\n\" + logo);","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"What can I do for you hmm?\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(showLine());","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"     * Displays a long line for visual effects.","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"    public static String showLine() {","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        String line \u003d \"-------------------------------\";","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        return line;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"     * Lets the user know when the input they made is invalid.","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"OHOH the input cannot make it!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the input the user typed in.","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"     * @return The input the user typed in.","lastModifiedDate":"2023-02-06"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"     * @throws IOException When the user type in invalid input.","lastModifiedDate":"2023-02-06"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    public String readCommand() {","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"            BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-02-05"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"            PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-02-05"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"            StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-05"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"            String inp;","lastModifiedDate":"2023-02-05"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"            inp \u003d br.readLine();","lastModifiedDate":"2023-02-05"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"            return inp;","lastModifiedDate":"2023-02-05"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"            return e.getMessage();","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":69}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":" * Deadline is a type of Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" * All objects of class Deadline have a \u0027by\u0027 field to indicate the period the task","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" * must be completed by.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    protected String by;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Deadline task with the given name, and the \u0027by\u0027 field.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     * @param description The description of the Deadline Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"     * @param by The deadline to finish said task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the string representation of the Deadline object.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"     * @return The name of this task and the details of the timing.","lastModifiedDate":"2023-02-06"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        String finDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + finDate + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":39}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":" * Event is a type of Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" * All objects of class Event have a \u0027start\u0027 and \u0027end\u0027 field","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" * to indicate when does the event start and end.","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    protected String start;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    protected String end;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs an Event task with the given name, start date, and end date.","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     * @param description The description of the Event Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"     * @param start The start date of the Event Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"     * @param end The end date of the Event Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"        this.startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        this.endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the string representation of the Deadline object.","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"     * @return The name of this task and the details of the timing.","lastModifiedDate":"2023-02-06"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        String startDateString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"        String endDateString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"                \"(from: \" + startDateString + \" to: \" + endDateString + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":45}},{"path":"src/main/java/duke/task/SortTaskByName.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-12"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":" * Sorts task in alphabetical order.","lastModifiedDate":"2023-02-12"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-12"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"public class SortTaskByName implements Comparator\u003cTask\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public int compare(Task a, Task b)","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        return a.toString().compareTo(b.toString());","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Johnchiahk":16}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":" * The class Task encapsulates a task.","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":" * All objects of class Task have a description on what the task is about.","lastModifiedDate":"2023-02-06"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":" * Each task will also be indicated as not done without a \u0027X\u0027, or done with a \u0027X\u0027.","lastModifiedDate":"2023-02-06"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Task object with the given description.","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-02-06"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"     * Checks if the task is done or not done.","lastModifiedDate":"2023-02-06"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"     * @return duke.task.A \u0027X\u0027 if the task is done, \" \" if the task is not done.","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"     * Changes the status of the task to done.","lastModifiedDate":"2023-02-06"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"    public String markAsDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Nice! I\u0027ve marked this task as done:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(this.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"     * Checks if the string given is in the task description.","lastModifiedDate":"2023-02-06"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"     * @param string The string given.","lastModifiedDate":"2023-02-06"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"     * @return True if the string given is in the task description, and false otherwise.","lastModifiedDate":"2023-02-06"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"    public boolean isInDescription(String string) {","lastModifiedDate":"2023-02-05"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        return this.description.contains(string);","lastModifiedDate":"2023-02-05"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"     * Changes the status of the task to undone.","lastModifiedDate":"2023-02-06"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"    public String markAsUnDone() {","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder chunkOfText \u003d new StringBuilder();","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\"Ok, I\u0027ve marked this task as not done yet:\\n\");","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(this.toString());","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        chunkOfText.append(\u0027\\n\u0027);","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"        return chunkOfText.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-06"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the string representation of the Task object.","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"     * @return The name of this task and if the task is done or not.","lastModifiedDate":"2023-02-06"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":76}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-02-06"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":" * Todo is a type of Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":" * All objects of class Todo have a \u0027description\u0027 field.","lastModifiedDate":"2023-02-06"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-02-06"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"     * Constructs a Todo Task with the given description.","lastModifiedDate":"2023-02-06"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"     * @param description The given description.","lastModifiedDate":"2023-02-06"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    /**","lastModifiedDate":"2023-02-06"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"     * Returns the string representation of the Todo object.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"     *","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"     * @return The name of the Todo Task.","lastModifiedDate":"2023-02-06"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"     */","lastModifiedDate":"2023-02-06"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":27}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"            \u003ccontent\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"            \u003c/content\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    \u003c/children\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Johnchiahk":21}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    private TaskManagement taskManager; // to manage saved data","lastModifiedDate":"2023-02-05"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2023-02-05"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    private Ui ui;","lastModifiedDate":"2023-02-05"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-02-05"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    public void dukeTest() {","lastModifiedDate":"2023-02-05"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-02-05"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-02-05"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":30}},{"path":"src/test/java/duke/TaskManagementTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"public class TaskManagementTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    TaskManagement t \u003d new TaskManagement();","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"//    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"//    public void save","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":22}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Deadline(\"return book \", \"2019-06-15\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[D][ ] return book (by: Jun 15 2019)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest2() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Deadline(\"return book \", \"2020-12-20\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 20 2020)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":22}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Event(\"project meeting \", \"2019-06-15\", \"2019-06-19\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[E][ ] project meeting (from: Jun 15 2019 to: Jun 19 2019)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest2() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Event(\"return book \", \"2020-12-20\", \"2021-10-19\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[E][ ] return book (from: Dec 20 2020 to: Oct 19 2021)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":21}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"[D][X] return book (by: Jun 15 2019)","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"[T][X] join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"todo read book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"deadline return book /by 2019-06-15","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"event project meeting /from 2019-06-15 /to 2019-06-19","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"todo join sports club","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"unmark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"mark 4","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"delete 3","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":2,"-":19}},{"path":"text-ui-test/runtest.bat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"@ECHO OFF","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"REM delete output from previous run","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-02-05"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    exit /b 1","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":")","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"REM compare the output to the expected output","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":1,"-":37}}]
