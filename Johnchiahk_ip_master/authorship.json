[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"# duke.Duke project template","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"3. After that, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    implementation \u0027org.testng:testng:7.1.0\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    implementation \u0027org.junit.jupiter:junit-jupiter:5.8.1\u0027","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":2,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"[D][X] return book (by: Jun 15 2019)","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"[T][X] join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":4}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Event;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"import java.io.*;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    private TaskManagement taskManager; // to manage saved data","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    private TaskStorage taskStorage;","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    private Ui ui;","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    public Duke(String filepath) {","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        taskStorage \u003d new TaskStorage();","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"            taskManager \u003d new TaskManagement(filepath);","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"            taskManager \u003d new TaskManagement();","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    public void run() throws IOException {","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"        BufferedReader br \u003d new BufferedReader(new InputStreamReader(System.in));","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"        PrintWriter pw \u003d new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out)));","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"//        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"//                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"//                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"//                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"//                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"        String line \u003d \"-------------------------------\";","lastModifiedDate":"2023-01-21"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"//        System.out.println(line);","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"//        System.out.println(\"Hiii Im\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"//        System.out.println(\"What can I do for you hmm?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"//        System.out.println(line);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        String inp;","lastModifiedDate":"2023-01-21"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"        /**","lastModifiedDate":"2023-01-21"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"         * Simply echoes commands entered by the user,","lastModifiedDate":"2023-01-21"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"         * and exits when the user types \"bye\".","lastModifiedDate":"2023-01-21"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"         */","lastModifiedDate":"2023-01-21"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"        while (true) {","lastModifiedDate":"2023-01-21"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"            inp \u003d br.readLine();","lastModifiedDate":"2023-01-21"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"            String[] input \u003d inp.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"            switch(input[0]) {","lastModifiedDate":"2023-01-21"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"                case \"list\":","lastModifiedDate":"2023-01-21"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"                    System.out.println(\"Tasks:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"                    //System.out.println(taskstorage);","lastModifiedDate":"2023-01-21"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"                    for (int i \u003d 0; i \u003c taskStorage.noTasks(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.print(i + 1 + \".\");","lastModifiedDate":"2023-01-21"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(taskStorage.getTask(i));","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"                case \"bye\":","lastModifiedDate":"2023-01-21"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"                    System.out.println(\"Byeee! Hope to see you again! Signing off, duke.Duke.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"                    break;","lastModifiedDate":"2023-01-21"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"                case \"mark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"                    //System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":69,"author":{"gitId":"Johnchiahk"},"content":"                        int taskNo \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":70,"author":{"gitId":"Johnchiahk"},"content":"                        if (taskNo \u003e taskStorage.noTasks() || taskNo \u003c\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":71,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"Give a vaild number\");","lastModifiedDate":"2023-01-21"},{"lineNumber":72,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":73,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.getTask(taskNo - 1).markAsDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":74,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":75,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(\"Number should be typed in\");","lastModifiedDate":"2023-01-21"},{"lineNumber":76,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e){","lastModifiedDate":"2023-01-21"},{"lineNumber":77,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":78,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":79,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":80,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":81,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":82,"author":{"gitId":"Johnchiahk"},"content":"                case \"unmark\":","lastModifiedDate":"2023-01-21"},{"lineNumber":83,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":84,"author":{"gitId":"Johnchiahk"},"content":"                        int taskNoUnmark \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":85,"author":{"gitId":"Johnchiahk"},"content":"                        if (taskNoUnmark \u003e taskStorage.noTasks() || taskNoUnmark \u003c\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":86,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"Give a valid number\");","lastModifiedDate":"2023-01-21"},{"lineNumber":87,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":88,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.getTask(taskNoUnmark - 1).markAsUnDone();","lastModifiedDate":"2023-01-30"},{"lineNumber":89,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":90,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(\"Number should be typed in\");","lastModifiedDate":"2023-01-21"},{"lineNumber":91,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":92,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":93,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":94,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":95,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":96,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":97,"author":{"gitId":"Johnchiahk"},"content":"                case \"todo\":","lastModifiedDate":"2023-01-21"},{"lineNumber":98,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":99,"author":{"gitId":"Johnchiahk"},"content":"                        String[] inpTodo \u003d inp.split(\" \");","lastModifiedDate":"2023-01-21"},{"lineNumber":100,"author":{"gitId":"Johnchiahk"},"content":"                        if (inpTodo.length \u003d\u003d 1) {","lastModifiedDate":"2023-01-21"},{"lineNumber":101,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":102,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":103,"author":{"gitId":"Johnchiahk"},"content":"                        String todoTask \u003d inp.substring(5);","lastModifiedDate":"2023-01-21"},{"lineNumber":104,"author":{"gitId":"Johnchiahk"},"content":"                        Task todo \u003d new Todo(todoTask);","lastModifiedDate":"2023-01-21"},{"lineNumber":105,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.addTask(todo);","lastModifiedDate":"2023-01-30"},{"lineNumber":106,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":107,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":108,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":109,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":110,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":111,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":112,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":113,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":114,"author":{"gitId":"Johnchiahk"},"content":"                case \"deadline\":","lastModifiedDate":"2023-01-21"},{"lineNumber":115,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":116,"author":{"gitId":"Johnchiahk"},"content":"                        if (inp.length() \u003d\u003d 8) {","lastModifiedDate":"2023-01-21"},{"lineNumber":117,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a deadline must have a date.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":118,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":119,"author":{"gitId":"Johnchiahk"},"content":"                        String deadlineStr \u003d inp.substring(9);","lastModifiedDate":"2023-01-21"},{"lineNumber":120,"author":{"gitId":"Johnchiahk"},"content":"                        String[] inputDeadline \u003d deadlineStr.split(\"/\");","lastModifiedDate":"2023-01-21"},{"lineNumber":121,"author":{"gitId":"Johnchiahk"},"content":"                        if (inputDeadline.length !\u003d 2) {","lastModifiedDate":"2023-01-21"},{"lineNumber":122,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of a deadline must have a date.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":123,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":124,"author":{"gitId":"Johnchiahk"},"content":"                        String deadLineTaskStr \u003d inputDeadline[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":125,"author":{"gitId":"Johnchiahk"},"content":"                        String end \u003d inputDeadline[1].substring(3);","lastModifiedDate":"2023-01-21"},{"lineNumber":126,"author":{"gitId":"Johnchiahk"},"content":"                        Task deadLineTask \u003d new Deadline(deadLineTaskStr, end);","lastModifiedDate":"2023-01-21"},{"lineNumber":127,"author":{"gitId":"Johnchiahk"},"content":"                        //System.out.println(end);","lastModifiedDate":"2023-01-30"},{"lineNumber":128,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.addTask(deadLineTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":129,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":130,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":131,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":132,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":133,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":134,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":135,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":136,"author":{"gitId":"Johnchiahk"},"content":"                case \"event\":","lastModifiedDate":"2023-01-21"},{"lineNumber":137,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":138,"author":{"gitId":"Johnchiahk"},"content":"                        if (inp.length() \u003d\u003d 6) {","lastModifiedDate":"2023-01-21"},{"lineNumber":139,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of an event must have a start and end time.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":140,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":141,"author":{"gitId":"Johnchiahk"},"content":"                        String eventStr \u003d inp.substring(6);","lastModifiedDate":"2023-01-21"},{"lineNumber":142,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":143,"author":{"gitId":"Johnchiahk"},"content":"                        String[] eventStrsplit \u003d eventStr.split(\"/\");","lastModifiedDate":"2023-01-21"},{"lineNumber":144,"author":{"gitId":"Johnchiahk"},"content":"                        if (eventStrsplit.length !\u003d 3) {","lastModifiedDate":"2023-01-21"},{"lineNumber":145,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"☹ OOPS!!! The description of an event must have a start and end time.\");","lastModifiedDate":"2023-01-21"},{"lineNumber":146,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":147,"author":{"gitId":"Johnchiahk"},"content":"                        String eventTaskStr \u003d eventStrsplit[0];","lastModifiedDate":"2023-01-21"},{"lineNumber":148,"author":{"gitId":"Johnchiahk"},"content":"                        String eventBegin \u003d eventStrsplit[1].substring(5);","lastModifiedDate":"2023-01-21"},{"lineNumber":149,"author":{"gitId":"Johnchiahk"},"content":"                        eventBegin \u003d eventBegin.substring(0, eventBegin.length() - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":150,"author":{"gitId":"Johnchiahk"},"content":"                        String eventEnd \u003d eventStrsplit[2].substring(3);","lastModifiedDate":"2023-01-21"},{"lineNumber":151,"author":{"gitId":"Johnchiahk"},"content":"                        Task eventTask \u003d new Event(eventTaskStr, eventBegin, eventEnd);","lastModifiedDate":"2023-01-21"},{"lineNumber":152,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.addTask(eventTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":153,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":154,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":155,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":156,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":157,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":158,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":159,"author":{"gitId":"Johnchiahk"},"content":"                case \"delete\":","lastModifiedDate":"2023-01-21"},{"lineNumber":160,"author":{"gitId":"Johnchiahk"},"content":"                    try {","lastModifiedDate":"2023-01-21"},{"lineNumber":161,"author":{"gitId":"Johnchiahk"},"content":"                        int taskNo \u003d Integer.parseInt(input[1]);","lastModifiedDate":"2023-01-21"},{"lineNumber":162,"author":{"gitId":"Johnchiahk"},"content":"                        if (taskNo \u003e taskStorage.noTasks() || taskNo \u003c\u003d 0) {","lastModifiedDate":"2023-01-30"},{"lineNumber":163,"author":{"gitId":"Johnchiahk"},"content":"                            throw new DukeException(\"Give a vaild number\");","lastModifiedDate":"2023-01-21"},{"lineNumber":164,"author":{"gitId":"Johnchiahk"},"content":"                        }","lastModifiedDate":"2023-01-21"},{"lineNumber":165,"author":{"gitId":"Johnchiahk"},"content":"                        Task eventTask \u003d taskStorage.getTask(taskNo - 1);","lastModifiedDate":"2023-01-30"},{"lineNumber":166,"author":{"gitId":"Johnchiahk"},"content":"                        taskStorage.deleteTask(eventTask);","lastModifiedDate":"2023-01-30"},{"lineNumber":167,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-21"},{"lineNumber":168,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(\"Number should be typed in\");","lastModifiedDate":"2023-01-21"},{"lineNumber":169,"author":{"gitId":"Johnchiahk"},"content":"                    } catch (DukeException e){","lastModifiedDate":"2023-01-21"},{"lineNumber":170,"author":{"gitId":"Johnchiahk"},"content":"                        System.out.println(e.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":171,"author":{"gitId":"Johnchiahk"},"content":"                    } finally {","lastModifiedDate":"2023-01-21"},{"lineNumber":172,"author":{"gitId":"Johnchiahk"},"content":"                        break;","lastModifiedDate":"2023-01-21"},{"lineNumber":173,"author":{"gitId":"Johnchiahk"},"content":"                    }","lastModifiedDate":"2023-01-21"},{"lineNumber":174,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":175,"author":{"gitId":"Johnchiahk"},"content":"                default:","lastModifiedDate":"2023-01-21"},{"lineNumber":176,"author":{"gitId":"Johnchiahk"},"content":"                    DukeException dukeException \u003d new DukeException();","lastModifiedDate":"2023-01-21"},{"lineNumber":177,"author":{"gitId":"Johnchiahk"},"content":"                    System.out.println(dukeException.getMessage());","lastModifiedDate":"2023-01-21"},{"lineNumber":178,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":179,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":180,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":181,"author":{"gitId":"Johnchiahk"},"content":"            taskManager.save(taskStorage);","lastModifiedDate":"2023-01-30"},{"lineNumber":182,"author":{"gitId":"Johnchiahk"},"content":"            ui.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":183,"author":{"gitId":"Johnchiahk"},"content":"            if (inp.equals(\"bye\")) {","lastModifiedDate":"2023-01-21"},{"lineNumber":184,"author":{"gitId":"Johnchiahk"},"content":"                break;","lastModifiedDate":"2023-01-21"},{"lineNumber":185,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-21"},{"lineNumber":186,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":187,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-21"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":189,"author":{"gitId":"Johnchiahk"},"content":"    public static void main(String[] args) throws IOException, DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":190,"author":{"gitId":"Johnchiahk"},"content":"        new Duke(\"./data/tasks.txt\").run();","lastModifiedDate":"2023-01-30"},{"lineNumber":191,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Johnchiahk":189,"-":3}},{"path":"src/main/java/duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"/**","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":" * Class to represent exceptions specific to duke.Duke.","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":" */","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    public DukeException() {","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        super(message);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":14}},{"path":"src/main/java/duke/TaskManagement.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.io.File;","lastModifiedDate":"2023-01-29"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-29"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-29"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"public class TaskManagement {","lastModifiedDate":"2023-01-29"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    private File file;","lastModifiedDate":"2023-01-29"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    private File filedirectory;","lastModifiedDate":"2023-01-29"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    private String path;","lastModifiedDate":"2023-01-29"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    private String directory;","lastModifiedDate":"2023-01-29"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    public TaskManagement() {","lastModifiedDate":"2023-01-29"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        this.directory \u003d \"./data/\";","lastModifiedDate":"2023-01-29"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"        this.path \u003d this.directory + \"tasks.txt\";","lastModifiedDate":"2023-01-29"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"        this.file \u003d new File(this.path);","lastModifiedDate":"2023-01-29"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        this.filedirectory \u003d new File(this.directory);","lastModifiedDate":"2023-01-29"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.filedirectory.exists()) { //handle case where folder does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"                filedirectory.mkdirs();","lastModifiedDate":"2023-01-29"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.file.exists()) { //handle case where file does not exist","lastModifiedDate":"2023-01-29"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-29"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    public TaskManagement(String filepath) throws DukeException {","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"        if (!filepath.substring(0, 2).equals(\"./\") || filepath.length() \u003c\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        String rem \u003d filepath.substring(2);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        String[] inp \u003d rem.split(\"/\");","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        if (inp.length !\u003d 2) {","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"            throw new DukeException();","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":39,"author":{"gitId":"Johnchiahk"},"content":"        this.directory \u003d \"./\" + inp[0] + \"/\";","lastModifiedDate":"2023-01-30"},{"lineNumber":40,"author":{"gitId":"Johnchiahk"},"content":"        this.path \u003d filepath;","lastModifiedDate":"2023-01-30"},{"lineNumber":41,"author":{"gitId":"Johnchiahk"},"content":"        this.file \u003d new File(this.path);","lastModifiedDate":"2023-01-30"},{"lineNumber":42,"author":{"gitId":"Johnchiahk"},"content":"        this.filedirectory \u003d new File(this.directory);","lastModifiedDate":"2023-01-30"},{"lineNumber":43,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-30"},{"lineNumber":44,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.filedirectory.exists()) { //handle case where folder does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":45,"author":{"gitId":"Johnchiahk"},"content":"                filedirectory.mkdirs();","lastModifiedDate":"2023-01-30"},{"lineNumber":46,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":47,"author":{"gitId":"Johnchiahk"},"content":"            if (!this.file.exists()) { //handle case where file does not exist","lastModifiedDate":"2023-01-30"},{"lineNumber":48,"author":{"gitId":"Johnchiahk"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-30"},{"lineNumber":49,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-30"},{"lineNumber":50,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-30"},{"lineNumber":51,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-30"},{"lineNumber":52,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-30"},{"lineNumber":53,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":54,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":55,"author":{"gitId":"Johnchiahk"},"content":"    public void save(TaskStorage taskStorage) {","lastModifiedDate":"2023-01-30"},{"lineNumber":56,"author":{"gitId":"Johnchiahk"},"content":"        try {","lastModifiedDate":"2023-01-29"},{"lineNumber":57,"author":{"gitId":"Johnchiahk"},"content":"            FileWriter fw \u003d new FileWriter(this.path);","lastModifiedDate":"2023-01-29"},{"lineNumber":58,"author":{"gitId":"Johnchiahk"},"content":"            for (int i \u003d 0; i \u003c taskStorage.noTasks(); i++) {","lastModifiedDate":"2023-01-30"},{"lineNumber":59,"author":{"gitId":"Johnchiahk"},"content":"                fw.write(taskStorage.getTask(i).toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":60,"author":{"gitId":"Johnchiahk"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-29"},{"lineNumber":61,"author":{"gitId":"Johnchiahk"},"content":"            }","lastModifiedDate":"2023-01-29"},{"lineNumber":62,"author":{"gitId":"Johnchiahk"},"content":"            fw.close();","lastModifiedDate":"2023-01-29"},{"lineNumber":63,"author":{"gitId":"Johnchiahk"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-29"},{"lineNumber":64,"author":{"gitId":"Johnchiahk"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-01-29"},{"lineNumber":65,"author":{"gitId":"Johnchiahk"},"content":"        }","lastModifiedDate":"2023-01-29"},{"lineNumber":66,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-29"},{"lineNumber":67,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-29"},{"lineNumber":68,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-29"}],"authorContributionMap":{"Johnchiahk":68}},{"path":"src/main/java/duke/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import java.util.List;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"public class TaskStorage {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    private List\u003cTask\u003e taskstorage;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    // Tasks are indexed from 0 in taskstorage.","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    private int ind \u003d 0; //Number of Current Tasks","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    public TaskStorage() {","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        taskstorage \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        this.taskstorage.add(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        ind++;","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Now you have \" + ind + \" task(s) in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"    public int noTasks() {","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        return ind;","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    public Task getTask(int i) {","lastModifiedDate":"2023-01-30"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"        return this.taskstorage.get(i);","lastModifiedDate":"2023-01-30"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    public void deleteTask(Task t) {","lastModifiedDate":"2023-01-30"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-01-30"},{"lineNumber":33,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"  \" + t);","lastModifiedDate":"2023-01-30"},{"lineNumber":34,"author":{"gitId":"Johnchiahk"},"content":"        this.taskstorage.remove(t);","lastModifiedDate":"2023-01-30"},{"lineNumber":35,"author":{"gitId":"Johnchiahk"},"content":"        ind--;","lastModifiedDate":"2023-01-30"},{"lineNumber":36,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Now you have \" + ind + \" task(s) in the list.\");","lastModifiedDate":"2023-01-30"},{"lineNumber":37,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":38,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":38}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"public class Ui {","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"        this.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Hiii Im\\n\" + logo);","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"What can I do for you hmm?\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        this.showLine();","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void showLine() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        String line \u003d \"-------------------------------\";","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(line);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"OHOH the input cannot make it!\");","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":25}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    protected String by;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        this.date \u003d LocalDate.parse(by);","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        String finDate \u003d date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"        return \"[D]\" + super.toString() + \"(by: \" + finDate + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":22}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"    protected String start;","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    protected String end;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate startDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    protected LocalDate endDate;","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public Event(String description, String start, String end) {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"        //System.out.println(start);","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"        //System.out.println(end);","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        this.startDate \u003d LocalDate.parse(start);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        this.endDate \u003d LocalDate.parse(end);","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"        String startDateString \u003d startDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        String endDateString \u003d endDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-01-30"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"        return \"[E]\" + super.toString() +","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"                \"(from: \" + startDateString + \" to: \" + endDateString + \")\";","lastModifiedDate":"2023-01-30"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":29}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"public class Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"    protected String description;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"    public void markAsUnDone() {","lastModifiedDate":"2023-01-30"},{"lineNumber":23,"author":{"gitId":"Johnchiahk"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-21"},{"lineNumber":24,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(\"Ok, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-01-21"},{"lineNumber":25,"author":{"gitId":"Johnchiahk"},"content":"        System.out.println(this);","lastModifiedDate":"2023-01-21"},{"lineNumber":26,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":27,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":28,"author":{"gitId":"Johnchiahk"},"content":"        return (\"[\" + this.getStatusIcon() + \"] \" + this.description);","lastModifiedDate":"2023-01-21"},{"lineNumber":29,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":30,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":31,"author":{"gitId":"Johnchiahk"},"content":"    //...","lastModifiedDate":"2023-01-21"},{"lineNumber":32,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":32}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"    protected String by;","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"        super(description);","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Override","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public String toString() {","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":14}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"public class DukeTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":20}},{"path":"src/test/java/duke/TaskManagementTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"public class TaskManagementTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    TaskManagement t \u003d new TaskManagement();","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void anotherDummyTest(){","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"//    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"//    public void save","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":22}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.DukeException;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Deadline(\"return book \", \"2019-06-15\");","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[D][ ] return book (by: Jun 15 2019)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest2() {","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Deadline(\"return book \", \"2020-12-20\");","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[D][ ] return book (by: Dec 20 2020)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":22,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":22}},{"path":"src/test/java/duke/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"package duke.task;","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"import duke.task.Task;","lastModifiedDate":"2023-01-30"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-30"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-30"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"public class EventTest {","lastModifiedDate":"2023-01-30"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-01-30"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Event(\"project meeting \", \"2019-06-15\", \"2019-06-19\");","lastModifiedDate":"2023-01-30"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[E][ ] project meeting (from: Jun 15 2019 to: Jun 19 2019)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-30"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"    @Test","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"    public void toStringTest2() {","lastModifiedDate":"2023-01-30"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"        Task t \u003d new Event(\"return book \", \"2020-12-20\", \"2021-10-19\");","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"        assertEquals(\"[E][ ] return book (from: Dec 20 2020 to: Oct 19 2021)\", t.toString());","lastModifiedDate":"2023-01-30"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"    }","lastModifiedDate":"2023-01-30"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"}","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":21}},{"path":"text-ui-test/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] read book","lastModifiedDate":"2023-01-30"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"[D][X] return book (by: Jun 15 2019)","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"[T][X] join sports club","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"[T][ ] borrow book","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":4}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"todo read book","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"deadline return book /by 2019-06-15","lastModifiedDate":"2023-01-30"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"event project meeting /from 2019-06-15 /to 2019-06-19","lastModifiedDate":"2023-01-30"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"todo join sports club","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"todo borrow book","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"mark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"unmark 1","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"mark 2","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"mark 4","lastModifiedDate":"2023-01-21"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"delete 3","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"list","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":"bye","lastModifiedDate":"2023-01-30"}],"authorContributionMap":{"Johnchiahk":14}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":2,"-":19}},{"path":"text-ui-test/runtest.bat.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Johnchiahk"},"content":"@ECHO OFF","lastModifiedDate":"2023-01-21"},{"lineNumber":2,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":3,"author":{"gitId":"Johnchiahk"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2023-01-21"},{"lineNumber":4,"author":{"gitId":"Johnchiahk"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2023-01-21"},{"lineNumber":5,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":6,"author":{"gitId":"Johnchiahk"},"content":"REM delete output from previous run","lastModifiedDate":"2023-01-21"},{"lineNumber":7,"author":{"gitId":"Johnchiahk"},"content":"del ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":8,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":9,"author":{"gitId":"Johnchiahk"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2023-01-21"},{"lineNumber":10,"author":{"gitId":"Johnchiahk"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":11,"author":{"gitId":"Johnchiahk"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2023-01-21"},{"lineNumber":12,"author":{"gitId":"Johnchiahk"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2023-01-21"},{"lineNumber":13,"author":{"gitId":"Johnchiahk"},"content":"    exit /b 1","lastModifiedDate":"2023-01-21"},{"lineNumber":14,"author":{"gitId":"Johnchiahk"},"content":")","lastModifiedDate":"2023-01-21"},{"lineNumber":15,"author":{"gitId":"Johnchiahk"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2023-01-21"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":17,"author":{"gitId":"Johnchiahk"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-01-21"},{"lineNumber":18,"author":{"gitId":"Johnchiahk"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-30"},{"lineNumber":19,"author":{"gitId":"Johnchiahk"},"content":"","lastModifiedDate":"2023-01-21"},{"lineNumber":20,"author":{"gitId":"Johnchiahk"},"content":"REM compare the output to the expected output","lastModifiedDate":"2023-01-21"},{"lineNumber":21,"author":{"gitId":"Johnchiahk"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2023-01-21"}],"authorContributionMap":{"Johnchiahk":21}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"Johnchiahk"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/*.java","lastModifiedDate":"2023-01-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Johnchiahk":1,"-":37}}]
