[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"plugins {","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"    id \u0027java\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"    id \u0027application\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"test {","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    testLogging {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"        showExceptions true","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"        showCauses true","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        showStackTraces true","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"checkstyle {","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-02-01"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"    mainClassName \u003d \"jeo.JeoBot\"","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"    archiveBaseName \u003d \"jeo\"","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jun-How":26,"-":20}},{"path":"src/main/java/JeoBot.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-02-01"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-01"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"import jeo.database.Storage;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"import jeo.database.TaskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"import jeo.exception.JeoException;","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"import jeo.parser.Parser;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"import jeo.task.ToDo;","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"import jeo.ui.Ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":" * Represents the bot which the user may run.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"public class JeoBot {","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_PARSE \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-02-01"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"    protected Ui ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"    protected Storage store;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"    protected TaskList taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"     * Represents the list of commands recognised by the bot.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"    public enum Command {","lastModifiedDate":"2023-01-20"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"        BYE, LIST, MARK, UNMARK, DELETE, TODO, DEADLINE, EVENT, DUE, FIND","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"     * Creates the bot with the specified path to load tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"     * @param path String representing the file path.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"    public JeoBot(String path) {","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"        store \u003d new Storage(path);","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"            taskList \u003d new TaskList(store.load());","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"        } catch (FileNotFoundException | IllegalStateException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"     * Executes commands which the user inputs and prints output message accordingly.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"    public void run() {","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"        ui.showGreetingMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"        boolean hasInput \u003d true;","lastModifiedDate":"2023-01-17"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"        Scanner sc \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-19"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"        while (hasInput) {","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"            String s \u003d sc.nextLine();","lastModifiedDate":"2023-01-19"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"            try {","lastModifiedDate":"2023-01-19"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"                ui.showBodyDivider();","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"                HashMap\u003cString, String\u003e hm \u003d Parser.parseString(s);","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"                Command command \u003d Command.valueOf(hm.get(\"command\").toUpperCase());","lastModifiedDate":"2023-01-20"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"                switch (command) {","lastModifiedDate":"2023-01-18"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"                case BYE:","lastModifiedDate":"2023-01-20"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"                    hasInput \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"                    ui.showExitMessage();","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"                case LIST:","lastModifiedDate":"2023-01-20"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"                    ui.showAllTasks(taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"                case MARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"                    int index \u003d Integer.parseInt(hm.get(\"index\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"                    Task task \u003d taskList.getTaskAtIndex(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"                    taskList.markTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskMarked(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":79,"author":{"gitId":"Jun-How"},"content":"                case UNMARK:","lastModifiedDate":"2023-01-20"},{"lineNumber":80,"author":{"gitId":"Jun-How"},"content":"                    index \u003d Integer.parseInt(hm.get(\"index\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":81,"author":{"gitId":"Jun-How"},"content":"                    task \u003d taskList.getTaskAtIndex(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Jun-How"},"content":"                    taskList.unmarkTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskUnmarked(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-18"},{"lineNumber":85,"author":{"gitId":"Jun-How"},"content":"                case DELETE:","lastModifiedDate":"2023-01-20"},{"lineNumber":86,"author":{"gitId":"Jun-How"},"content":"                    index \u003d Integer.parseInt(hm.get(\"index\"));","lastModifiedDate":"2023-01-20"},{"lineNumber":87,"author":{"gitId":"Jun-How"},"content":"                    task \u003d taskList.getTaskAtIndex(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Jun-How"},"content":"                    taskList.deleteTask(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskDeleted(task, taskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-20"},{"lineNumber":91,"author":{"gitId":"Jun-How"},"content":"                case TODO:","lastModifiedDate":"2023-01-20"},{"lineNumber":92,"author":{"gitId":"Jun-How"},"content":"                    String desc \u003d hm.get(\"description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":93,"author":{"gitId":"Jun-How"},"content":"                    task \u003d new ToDo(desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Jun-How"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskAdded(task, taskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":97,"author":{"gitId":"Jun-How"},"content":"                case DEADLINE:","lastModifiedDate":"2023-01-20"},{"lineNumber":98,"author":{"gitId":"Jun-How"},"content":"                    desc \u003d hm.get(\"description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":99,"author":{"gitId":"Jun-How"},"content":"                    String by \u003d hm.get(\"by\");","lastModifiedDate":"2023-01-19"},{"lineNumber":100,"author":{"gitId":"Jun-How"},"content":"                    task \u003d new Deadline(desc, by);","lastModifiedDate":"2023-01-19"},{"lineNumber":101,"author":{"gitId":"Jun-How"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskAdded(task, taskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":104,"author":{"gitId":"Jun-How"},"content":"                case EVENT:","lastModifiedDate":"2023-01-20"},{"lineNumber":105,"author":{"gitId":"Jun-How"},"content":"                    desc \u003d hm.get(\"description\");","lastModifiedDate":"2023-01-19"},{"lineNumber":106,"author":{"gitId":"Jun-How"},"content":"                    String from \u003d hm.get(\"from\");","lastModifiedDate":"2023-01-19"},{"lineNumber":107,"author":{"gitId":"Jun-How"},"content":"                    String to \u003d hm.get(\"to\");","lastModifiedDate":"2023-01-19"},{"lineNumber":108,"author":{"gitId":"Jun-How"},"content":"                    task \u003d new Event(desc, from, to);","lastModifiedDate":"2023-01-19"},{"lineNumber":109,"author":{"gitId":"Jun-How"},"content":"                    taskList.addTask(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":110,"author":{"gitId":"Jun-How"},"content":"                    ui.showTaskAdded(task, taskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":111,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-19"},{"lineNumber":112,"author":{"gitId":"Jun-How"},"content":"                case DUE:","lastModifiedDate":"2023-01-26"},{"lineNumber":113,"author":{"gitId":"Jun-How"},"content":"                    by \u003d hm.get(\"by\");","lastModifiedDate":"2023-01-26"},{"lineNumber":114,"author":{"gitId":"Jun-How"},"content":"                    DateTimeFormatter formatterParse \u003d DateTimeFormatter.ofPattern(DATE_PARSE);","lastModifiedDate":"2023-01-26"},{"lineNumber":115,"author":{"gitId":"Jun-How"},"content":"                    LocalDate byDate \u003d LocalDate.parse(by, formatterParse);","lastModifiedDate":"2023-01-26"},{"lineNumber":116,"author":{"gitId":"Jun-How"},"content":"                    ui.showTasksDue(byDate, taskList);","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-01-26"},{"lineNumber":118,"author":{"gitId":"Jun-How"},"content":"                case FIND:","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Jun-How"},"content":"                    String keyword \u003d hm.get(\"key\");","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"Jun-How"},"content":"                    ui.showTasksWithKeyword(keyword, taskList);","lastModifiedDate":"2023-01-28"},{"lineNumber":121,"author":{"gitId":"Jun-How"},"content":"                    break;","lastModifiedDate":"2023-02-01"},{"lineNumber":122,"author":{"gitId":"Jun-How"},"content":"                default:","lastModifiedDate":"2023-02-01"},{"lineNumber":123,"author":{"gitId":"Jun-How"},"content":"                    throw new IllegalStateException();","lastModifiedDate":"2023-02-01"},{"lineNumber":124,"author":{"gitId":"Jun-How"},"content":"                }","lastModifiedDate":"2023-01-19"},{"lineNumber":125,"author":{"gitId":"Jun-How"},"content":"                store.save(taskList.getTaskList());","lastModifiedDate":"2023-01-27"},{"lineNumber":126,"author":{"gitId":"Jun-How"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":127,"author":{"gitId":"Jun-How"},"content":"                ui.showSavingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":128,"author":{"gitId":"Jun-How"},"content":"            } catch (IllegalArgumentException | IllegalStateException e) {","lastModifiedDate":"2023-02-01"},{"lineNumber":129,"author":{"gitId":"Jun-How"},"content":"                ui.showInvalidCommand();","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Jun-How"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":131,"author":{"gitId":"Jun-How"},"content":"                ui.showIndexingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Jun-How"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-26"},{"lineNumber":133,"author":{"gitId":"Jun-How"},"content":"                ui.showDateTimeParsingError();","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"Jun-How"},"content":"            } catch (JeoException e) {","lastModifiedDate":"2023-01-20"},{"lineNumber":135,"author":{"gitId":"Jun-How"},"content":"                ui.showJeoErrorMessage(e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Jun-How"},"content":"            } finally {","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Jun-How"},"content":"                ui.showBodyDivider();","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-19"},{"lineNumber":139,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"Jun-How"},"content":"        sc.close();","lastModifiedDate":"2023-01-19"},{"lineNumber":141,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":142,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":143,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":144,"author":{"gitId":"Jun-How"},"content":"     * Starts the bot running.","lastModifiedDate":"2023-01-28"},{"lineNumber":145,"author":{"gitId":"Jun-How"},"content":"     * @param args String representing the command line arguments.","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Jun-How"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-01-17"},{"lineNumber":148,"author":{"gitId":"Jun-How"},"content":"        new JeoBot(\"./data.txt\").run();","lastModifiedDate":"2023-01-27"},{"lineNumber":149,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Jun-How":150}},{"path":"src/main/java/jeo/database/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.database;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.io.File;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-26"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Deadline;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Event;","lastModifiedDate":"2023-02-01"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"import jeo.task.ToDo;","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":" * Represents the storage for loading and saving tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"public class Storage {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TIME_TO_PARSE \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"    protected String path;","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"     * Creates the storage object with the specified path to load tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"     * @param path String representing the file path.","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"    public Storage(String path) {","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"     * Loads tasks that have been saved previously.","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"     * @return TaskList containing saved tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"     * @throws FileNotFoundException if file does not exist.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"    public ArrayList\u003cTask\u003e load() throws FileNotFoundException {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"        ArrayList\u003cTask\u003e arr \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"        File f \u003d new File(path);","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"        Scanner sc \u003d new Scanner(f);","lastModifiedDate":"2023-01-26"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"        while (sc.hasNextLine()) {","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"            String taskString \u003d sc.nextLine();","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"            Task currTask \u003d parse(taskString);","lastModifiedDate":"2023-01-26"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"            arr.add(currTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"        sc.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"        return arr;","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"     * Saves tasks to data file.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"     * @param taskList TaskList containing tasks to be saved.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"     * @throws IOException if data cannot be written to the text file.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"    public void save(ArrayList\u003cTask\u003e taskList) throws IOException {","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"        FileWriter fw \u003d new FileWriter(path);","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"        for (Task task: taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"            DateTimeFormatter formatterParse \u003d DateTimeFormatter.ofPattern(DATE_TIME_TO_PARSE);","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"            StringBuilder sb \u003d new StringBuilder(task.getStatusIcon())","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"                    .append(\"\\\\\")","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"                    .append(task.getDescription())","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"                    .append(\"\\\\\");","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"            if (task instanceof ToDo) {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"                sb.append(\"T\");","lastModifiedDate":"2023-01-26"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"                fw.write(sb + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"            } else if (task instanceof Deadline) {","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"                sb.append(\"D\")","lastModifiedDate":"2023-01-28"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"                        .append(\"\\\\\")","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"                                .append(((Deadline) task).getDateTimeBy().format(formatterParse));","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"                fw.write(sb + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"            } else {","lastModifiedDate":"2023-01-26"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"                sb.append(\"E\")","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"                        .append(\"\\\\\")","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"                                .append(((Event) task).getDateTimeFrom().format(formatterParse))","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"                                        .append(\"\\\\\")","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Jun-How"},"content":"                                                .append(((Event) task).getDateTimeTo().format(formatterParse));","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Jun-How"},"content":"                fw.write(sb + System.lineSeparator());","lastModifiedDate":"2023-01-26"},{"lineNumber":79,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-26"},{"lineNumber":80,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":81,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":82,"author":{"gitId":"Jun-How"},"content":"        fw.close();","lastModifiedDate":"2023-01-26"},{"lineNumber":83,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":84,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":85,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Jun-How"},"content":"     * Returns task corresponding to the accepted string.","lastModifiedDate":"2023-01-28"},{"lineNumber":87,"author":{"gitId":"Jun-How"},"content":"     * @param str String representing formatted text to be parsed.","lastModifiedDate":"2023-01-28"},{"lineNumber":88,"author":{"gitId":"Jun-How"},"content":"     * @return Task corresponding to the accepted string.","lastModifiedDate":"2023-01-28"},{"lineNumber":89,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Jun-How"},"content":"    public Task parse(String str) {","lastModifiedDate":"2023-01-26"},{"lineNumber":91,"author":{"gitId":"Jun-How"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Jun-How"},"content":"        String[] arr \u003d str.split(\"\\\\\\\\\");","lastModifiedDate":"2023-01-26"},{"lineNumber":93,"author":{"gitId":"Jun-How"},"content":"        switch (arr[2]) {","lastModifiedDate":"2023-01-26"},{"lineNumber":94,"author":{"gitId":"Jun-How"},"content":"        case \"T\":","lastModifiedDate":"2023-01-26"},{"lineNumber":95,"author":{"gitId":"Jun-How"},"content":"            task \u003d new ToDo(arr[1]);","lastModifiedDate":"2023-01-26"},{"lineNumber":96,"author":{"gitId":"Jun-How"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":97,"author":{"gitId":"Jun-How"},"content":"        case \"D\":","lastModifiedDate":"2023-01-26"},{"lineNumber":98,"author":{"gitId":"Jun-How"},"content":"            task \u003d new Deadline(arr[1], arr[3]);","lastModifiedDate":"2023-01-26"},{"lineNumber":99,"author":{"gitId":"Jun-How"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":100,"author":{"gitId":"Jun-How"},"content":"        case \"E\":","lastModifiedDate":"2023-01-26"},{"lineNumber":101,"author":{"gitId":"Jun-How"},"content":"            task \u003d new Event(arr[1], arr[3], arr[4]);","lastModifiedDate":"2023-01-26"},{"lineNumber":102,"author":{"gitId":"Jun-How"},"content":"            break;","lastModifiedDate":"2023-01-26"},{"lineNumber":103,"author":{"gitId":"Jun-How"},"content":"        default:","lastModifiedDate":"2023-01-26"},{"lineNumber":104,"author":{"gitId":"Jun-How"},"content":"            throw new IllegalStateException();","lastModifiedDate":"2023-01-26"},{"lineNumber":105,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":106,"author":{"gitId":"Jun-How"},"content":"        if (arr[0].equals(\"X\")) {","lastModifiedDate":"2023-01-26"},{"lineNumber":107,"author":{"gitId":"Jun-How"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-26"},{"lineNumber":108,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-26"},{"lineNumber":109,"author":{"gitId":"Jun-How"},"content":"        return task;","lastModifiedDate":"2023-01-26"},{"lineNumber":110,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":111,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Jun-How":111}},{"path":"src/main/java/jeo/database/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.database;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Task;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":" * Represents the tasks stored as a list.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"public class TaskList {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"    protected ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"     * Creates an empty database for tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    public TaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"     * Creates a database for tasks with the specified task list representing loaded tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"     * @param taskList ArrayList representing loaded tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"     * @return ArrayList representing the list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"        return taskList;","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"     * Gets the task at the specified index.","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"     * @param index An integer representing the position in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"     * @return Task at the specified index.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"    public Task getTaskAtIndex(int index) {","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"     * Gets the current total number of tasks in the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"     * @return An integer representing the current total number of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"    public int getNumberOfTasks() {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"        return taskList.size();","lastModifiedDate":"2023-01-27"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"     * Adds the specified task to the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"     * @param task Task to be added.","lastModifiedDate":"2023-01-28"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"        taskList.add(task);","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"     * Deletes the specified task from the list.","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"     * @param i An integer representing the index at which the task is to be deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"    public void deleteTask(int i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"        taskList.remove(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"     * Marks the task at the specified index position as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"     * @param i An integer representing the index at which the task is to be marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"    public void markTask(int i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"        Task task \u003d getTaskAtIndex(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":77,"author":{"gitId":"Jun-How"},"content":"        if (task.getStatusIcon().equals(\" \")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Jun-How"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":82,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Jun-How"},"content":"     * Marks the task at the specified index position as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Jun-How"},"content":"     * @param i An integer representing the index at which the task is to be unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Jun-How"},"content":"    public void unmarkTask(int i) {","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Jun-How"},"content":"        Task task \u003d getTaskAtIndex(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Jun-How"},"content":"        if (task.getStatusIcon().equals(\"X\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Jun-How"},"content":"            task.unmarkFromDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":92}},{"path":"src/main/java/jeo/exception/JeoException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.exception;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":" * Represents the custom exception that is thrown when an error is encountered while parsing user input.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"public class JeoException extends Exception {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"     * Creates a new custom exception with the specified error description.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"     * @param e String describing the error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"    public JeoException(String e) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"        super(e);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"     * Gets the error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"     * @return String representing the error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"    public String getMessage() {","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        return \"[Error] \" + super.getMessage();","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Jun-How":26}},{"path":"src/main/java/jeo/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-01-28"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import jeo.exception.JeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":" * Represents the parser which parses user input as a string.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"public class Parser {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"     * Accepts a string that represents the trimmed raw string input to be parsed as command and action.","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"     * @param s String representing the trimmed raw string input of current line.","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"     * @return HashMap linking each essential aspect of the input to its corresponding substring.","lastModifiedDate":"2023-01-28"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"     * @throws JeoException for custom errors.","lastModifiedDate":"2023-01-28"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    public static HashMap\u003cString, String\u003e parseString(String s) throws JeoException {","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"        HashMap\u003cString, String\u003e hm \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"        String str \u003d s.trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"        if (str.contains(\"\\\\\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"            throw new JeoException(\"Backslash character \\\"\\\\\\\" not allowed\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        if (str.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"bye\");","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"        } else if (str.equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"list\");","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"todo\");","lastModifiedDate":"2023-01-27"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"            str \u003d str.substring(4).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"description\", str);","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"            if (str.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a task description.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"deadline\");","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"            str \u003d str.substring(8).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"            if (!str.toLowerCase().contains(\"/by\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(str.isEmpty()","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"                        ? \"Please enter a task description.\"","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"                        : \"Please follow the format: deadline \u003cdescription\u003e /by \u003cyyyy-MM-dd HH:mm\u003e\");","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"            String[] arr \u003d parseSubstringTasks(str, \"deadline\");","lastModifiedDate":"2023-01-27"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"            String desc \u003d arr[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"            String by \u003d arr[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"            if (desc.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a task description.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a date-time in the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"                        + \"\\\"yyyy-MM-dd HH:mm\\\" after \\\"/by\\\".\");","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"description\", desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"by\", by);","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"event\");","lastModifiedDate":"2023-01-27"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"            str \u003d str.substring(5).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"            if (!str.toLowerCase().contains(\"/from\") || !str.toLowerCase().contains(\"/to\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(str.isEmpty()","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"                        ? \"Please enter a task description.\"","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"                        : \"Please follow the format: event \u003cdescription\u003e \"","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"                        + \"/from \u003cyyyy-MM-dd HH:mm\u003e /to \u003cyyyy-MM-dd HH:mm\u003e\");","lastModifiedDate":"2023-01-28"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"            String[] arr \u003d parseSubstringTasks(str, \"event1\");","lastModifiedDate":"2023-01-27"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"            String desc \u003d arr[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"            str \u003d arr[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"            arr \u003d parseSubstringTasks(str, \"event2\");","lastModifiedDate":"2023-01-27"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"            String from \u003d arr[0];","lastModifiedDate":"2023-01-27"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"            String to \u003d arr[1];","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"            if (desc.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a task description.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"            if (from.isEmpty() \u0026\u0026 to.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a date-time in the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Jun-How"},"content":"                        + \"\\\"yyyy-MM-dd HH:mm\\\" after \\\"/from\\\" and \\\"/to\\\".\");","lastModifiedDate":"2023-01-28"},{"lineNumber":78,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Jun-How"},"content":"            if (from.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a date-time in the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":81,"author":{"gitId":"Jun-How"},"content":"                        + \"\\\"yyyy-MM-dd HH:mm\\\" after \\\"/from\\\".\");","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":83,"author":{"gitId":"Jun-How"},"content":"            if (to.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":84,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a date-time in the format \"","lastModifiedDate":"2023-01-28"},{"lineNumber":85,"author":{"gitId":"Jun-How"},"content":"                        + \"\\\"yyyy-MM-dd HH:mm\\\" after \\\"/to\\\".\");","lastModifiedDate":"2023-01-28"},{"lineNumber":86,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"description\", desc);","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"from\", from);","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"to\", to);","lastModifiedDate":"2023-01-27"},{"lineNumber":90,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":91,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"mark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":92,"author":{"gitId":"Jun-How"},"content":"            int i \u003d parseSubStringActions(str, 4);","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"index\", Integer.toString(i - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"unmark\");","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Jun-How"},"content":"            int i \u003d parseSubStringActions(str, 6);","lastModifiedDate":"2023-01-27"},{"lineNumber":97,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"index\", Integer.toString(i - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":98,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":99,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"delete\");","lastModifiedDate":"2023-01-27"},{"lineNumber":100,"author":{"gitId":"Jun-How"},"content":"            int i \u003d parseSubStringActions(str, 6);","lastModifiedDate":"2023-01-27"},{"lineNumber":101,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"index\", Integer.toString(i - 1));","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"due\")) {","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"due\");","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Jun-How"},"content":"            String by \u003d str.substring(3).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Jun-How"},"content":"            if (by.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a date in the format: \\\"yyyy-MM-dd\\\".\");","lastModifiedDate":"2023-01-27"},{"lineNumber":107,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":108,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"by\", by);","lastModifiedDate":"2023-01-27"},{"lineNumber":109,"author":{"gitId":"Jun-How"},"content":"        } else if (str.toLowerCase().startsWith(\"find\")) {","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"find\");","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Jun-How"},"content":"            String key \u003d str.substring(4).trim();","lastModifiedDate":"2023-01-28"},{"lineNumber":112,"author":{"gitId":"Jun-How"},"content":"            if (key.isEmpty()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":113,"author":{"gitId":"Jun-How"},"content":"                throw new JeoException(\"Please enter a keyword.\");","lastModifiedDate":"2023-01-28"},{"lineNumber":114,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":115,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"key\", key);","lastModifiedDate":"2023-01-28"},{"lineNumber":116,"author":{"gitId":"Jun-How"},"content":"        } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":117,"author":{"gitId":"Jun-How"},"content":"            hm.put(\"command\", \"\");","lastModifiedDate":"2023-01-27"},{"lineNumber":118,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":119,"author":{"gitId":"Jun-How"},"content":"        return hm;","lastModifiedDate":"2023-01-27"},{"lineNumber":120,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Jun-How"},"content":"     * Accepts a string that represents the trimmed raw string input, an integer that represents","lastModifiedDate":"2023-01-28"},{"lineNumber":124,"author":{"gitId":"Jun-How"},"content":"     * the first index after the command, and returns the task number that follows.","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"Jun-How"},"content":"     * @param s String representing the trimmed raw string input.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"Jun-How"},"content":"     * @param j An integer representing the first index after the command substring.","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"Jun-How"},"content":"     * @return An integer representing the task number.","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"Jun-How"},"content":"     * @throws JeoException for custom errors.","lastModifiedDate":"2023-01-28"},{"lineNumber":129,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Jun-How"},"content":"    public static int parseSubStringActions(String s, int j) throws JeoException {","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Jun-How"},"content":"        s \u003d s.substring(j).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Jun-How"},"content":"        if (s.isEmpty()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"Jun-How"},"content":"            throw new JeoException(\"Please enter a task number.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":134,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":135,"author":{"gitId":"Jun-How"},"content":"        int i;","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Jun-How"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Jun-How"},"content":"            i \u003d Integer.parseInt(s);","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Jun-How"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"Jun-How"},"content":"            throw new JeoException(\"Task number needs to be an integer value.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Jun-How"},"content":"        return i;","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Jun-How"},"content":"     * Accepts two strings, one representing a substring after the command and the other","lastModifiedDate":"2023-01-28"},{"lineNumber":146,"author":{"gitId":"Jun-How"},"content":"     * representing one of three cases to be parsed, for deadline and event, and returns","lastModifiedDate":"2023-01-28"},{"lineNumber":147,"author":{"gitId":"Jun-How"},"content":"     * a list of two parsed substring values.","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Jun-How"},"content":"     * @param s String representing the substring after the command.","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"Jun-How"},"content":"     * @param c String representing either \"deadline\", \"event1\", or \"event2\", which parses","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"Jun-How"},"content":"     *          different segments of deadline and event.","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Jun-How"},"content":"     * @return String[] representing a list of 2 strings which have been parsed.","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"Jun-How"},"content":"    public static String[] parseSubstringTasks(String s, String c) {","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"Jun-How"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"Jun-How"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"Jun-How"},"content":"        String first \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"Jun-How"},"content":"        String second \u003d \"\";","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"Jun-How"},"content":"        while (i \u003c s.length()) {","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"Jun-How"},"content":"            if (s.charAt(i) !\u003d \u0027/\u0027) {","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"Jun-How"},"content":"                sb.append(s.charAt(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"Jun-How"},"content":"            } else {","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"Jun-How"},"content":"                String temp1 \u003d s.substring(i + 3).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"Jun-How"},"content":"                if (c.equals(\"deadline\") \u0026\u0026 s.startsWith(\"/by\", i)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"Jun-How"},"content":"                    first \u003d sb.toString().trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"Jun-How"},"content":"                    second \u003d temp1;","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"Jun-How"},"content":"                } else if (c.equals(\"event1\") \u0026\u0026 s.startsWith(\"/from\", i)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Jun-How"},"content":"                    first \u003d sb.toString().trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"Jun-How"},"content":"                    second \u003d s.substring(i + 5).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"Jun-How"},"content":"                } else if ((c.equals(\"event1\") || c.equals(\"event2\")) \u0026\u0026 s.startsWith(\"/to\", i)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"Jun-How"},"content":"                    first \u003d sb.toString().trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"Jun-How"},"content":"                    second \u003d temp1;","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"Jun-How"},"content":"                } else if (c.equals(\"event2\") \u0026\u0026 s.startsWith(\"/from\", i)) {","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"Jun-How"},"content":"                    first \u003d s.substring(i + 5).trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"Jun-How"},"content":"                    second \u003d sb.toString().trim();","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"Jun-How"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"Jun-How"},"content":"                break;","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":178,"author":{"gitId":"Jun-How"},"content":"            i++;","lastModifiedDate":"2023-01-27"},{"lineNumber":179,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":180,"author":{"gitId":"Jun-How"},"content":"        return new String[]{first, second};","lastModifiedDate":"2023-01-27"},{"lineNumber":181,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":182,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":182}},{"path":"src/main/java/jeo/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":" * Represents a task that has a deadline.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TIME_TO_PARSE \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TIME_TO_PRINT \u003d \"d MMM yyyy HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"    protected String dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"     * Creates a Deadline task object with the specified description and due date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"     * @param description String describing the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     * @param by String representing the date-time when the task is due.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"    public Deadline(String description, String by) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"        DateTimeFormatter formatterParse \u003d DateTimeFormatter.ofPattern(DATE_TIME_TO_PARSE);","lastModifiedDate":"2023-01-26"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        DateTimeFormatter formatterPrint \u003d DateTimeFormatter.ofPattern(DATE_TIME_TO_PRINT);","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"        this.byDateTime \u003d LocalDateTime.parse(by, formatterParse);","lastModifiedDate":"2023-01-26"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"        this.dueDate \u003d byDateTime.format(formatterPrint);","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"     * Gets the parsed due date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"     * @return the parsed due date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"    public LocalDateTime getDateTimeBy() {","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"        return byDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"     * Gets the formatted due date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"     * @return the formatted due date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"    public String getFormattedBy() {","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"        return dueDate;","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"     * Gets the string representation of the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"     * @return String representing the deadline task.","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + getFormattedBy() + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Jun-How":55}},{"path":"src/main/java/jeo/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-26"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-26"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":" * Represents a task that lasts for a period of time.","lastModifiedDate":"2023-01-28"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TIME_PARSED \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TIME_TO_PRINT \u003d \"d MMM yyyy HH:mm\";","lastModifiedDate":"2023-02-01"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"    protected String fromDateString;","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    protected String toDateString;","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     * Creates an Event task object with the specified description, start, and end date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"     * @param description String describing the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"     * @param from String representing the start date-time of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"     * @param to String representing the end date-time of the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"    public Event(String description, String from, String to) throws DateTimeParseException {","lastModifiedDate":"2023-01-26"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"        DateTimeFormatter formatterParse \u003d DateTimeFormatter.ofPattern(DATE_TIME_PARSED);","lastModifiedDate":"2023-01-26"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"        DateTimeFormatter formatterPrint \u003d DateTimeFormatter.ofPattern(DATE_TIME_TO_PRINT);","lastModifiedDate":"2023-01-26"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"        this.fromDateTime \u003d LocalDateTime.parse(from, formatterParse);","lastModifiedDate":"2023-01-26"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"        this.fromDateString \u003d this.fromDateTime.format(formatterPrint);","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"        this.toDateTime \u003d LocalDateTime.parse(to, formatterParse);","lastModifiedDate":"2023-01-26"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"        this.toDateString \u003d this.toDateTime.format(formatterPrint);","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"     * Gets the parsed start date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"     * @return the parsed start date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"    public LocalDateTime getDateTimeFrom() {","lastModifiedDate":"2023-01-26"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"        return fromDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"     * Gets the parsed end date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"     * @return the parsed end date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"    public LocalDateTime getDateTimeTo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"        return toDateTime;","lastModifiedDate":"2023-01-28"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"     * Gets the formatted start date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"     * @return the formatted start date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"    public String getFormattedFrom() {","lastModifiedDate":"2023-01-26"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"        return fromDateString;","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-26"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-26"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"     * Gets the formatted end date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"     * @return the formatted end date-time.","lastModifiedDate":"2023-01-28"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"    public String getFormattedTo() {","lastModifiedDate":"2023-01-26"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"        return toDateString;","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"     * Gets the string representation of the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"     * @return String representing the event task.","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + getFormattedFrom() + \" to: \" + getFormattedTo() + \")\";","lastModifiedDate":"2023-01-26"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Jun-How":76}},{"path":"src/main/java/jeo/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":" * Represents a generic task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"     * Acts as the constructor taking in the task description, to be inherited.","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"     * @param description String describing the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"     * Gets the task description.","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"     * @return String representing the task description.","lastModifiedDate":"2023-01-28"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    public String getDescription() {","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        return description;","lastModifiedDate":"2023-01-28"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"     * Gets the status icon.","lastModifiedDate":"2023-01-28"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"     * @return String representing either \"X\" or \" \".","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"        return (isDone ? \"X\" : \" \"); // mark done jeo.task with X","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-28"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-01-28"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"    public void unmarkFromDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-01-28"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"     * Gets the string representation of a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"     * @return String representing a task.","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();","lastModifiedDate":"2023-01-18"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Jun-How":59}},{"path":"src/main/java/jeo/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-20"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-20"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-19"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"     * Creates a ToDo task object with the specified description.","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"     * @param description String describing the task.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-19"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"        super(description);","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-19"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-20"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"     * Gets the string representation of the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"     * @return String representing the todo task.","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-20"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-19"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"    public String toString() {","lastModifiedDate":"2023-01-19"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-19"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-19"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Jun-How":26}},{"path":"src/main/java/jeo/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.ui;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"import jeo.database.TaskList;","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Deadline;","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Event;","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"import jeo.task.Task;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":" * Represents the Ui for dealing with user interactions.","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-01-28"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-01-28"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-01-28"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"public class Ui {","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"    protected static final String BOT_NAME \u003d \"JeoBot\";","lastModifiedDate":"2023-02-01"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    protected static final String DATE_TO_PRINT \u003d \"d MMM yyyy\";","lastModifiedDate":"2023-02-01"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     * Prints a divider for the greeting message.","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"    public void showStartingDivider() {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"-----------------------\");","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"     * Prints a divider for command response messages.","lastModifiedDate":"2023-01-28"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"    public void showBodyDivider() {","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"________________________________________________________________\"","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"                + \"_________________________\");","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"     * Prints the greeting message.","lastModifiedDate":"2023-01-28"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"    public void showGreetingMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"        showStartingDivider();","lastModifiedDate":"2023-01-27"},{"lineNumber":40,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Greetings from \" + BOT_NAME + \"!\\n\" + \"How may I help you?\");","lastModifiedDate":"2023-01-27"},{"lineNumber":41,"author":{"gitId":"Jun-How"},"content":"        showStartingDivider();","lastModifiedDate":"2023-01-27"},{"lineNumber":42,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":43,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":44,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":45,"author":{"gitId":"Jun-How"},"content":"     * Prints the exit message.","lastModifiedDate":"2023-01-28"},{"lineNumber":46,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":47,"author":{"gitId":"Jun-How"},"content":"    public void showExitMessage() {","lastModifiedDate":"2023-01-27"},{"lineNumber":48,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Thank you for using \" + BOT_NAME + \". Hope to see you again soon!\");","lastModifiedDate":"2023-01-27"},{"lineNumber":49,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":50,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":51,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":52,"author":{"gitId":"Jun-How"},"content":"     * Prints the error message for an invalid command.","lastModifiedDate":"2023-01-28"},{"lineNumber":53,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":54,"author":{"gitId":"Jun-How"},"content":"    public void showInvalidCommand() {","lastModifiedDate":"2023-01-27"},{"lineNumber":55,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"[Error] Sorry, I don\u0027t understand what you\u0027re saying :(\");","lastModifiedDate":"2023-01-27"},{"lineNumber":56,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":57,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":58,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":59,"author":{"gitId":"Jun-How"},"content":"     * Prints the error message for an invalid task number.","lastModifiedDate":"2023-01-28"},{"lineNumber":60,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":61,"author":{"gitId":"Jun-How"},"content":"    public void showIndexingError() {","lastModifiedDate":"2023-01-27"},{"lineNumber":62,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"[Error] Task number cannot be negative, zero, or exceed the total number of tasks.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":63,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":64,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":65,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":66,"author":{"gitId":"Jun-How"},"content":"     * Prints the error message when unable to convert a string to a date-time object.","lastModifiedDate":"2023-01-28"},{"lineNumber":67,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":68,"author":{"gitId":"Jun-How"},"content":"    public void showDateTimeParsingError() {","lastModifiedDate":"2023-01-27"},{"lineNumber":69,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"[Error] Unable to parse date-time. \"","lastModifiedDate":"2023-01-28"},{"lineNumber":70,"author":{"gitId":"Jun-How"},"content":"                + \"Please input date in the format: \\\"yyyy-MM-dd HH:mm\\\".\");","lastModifiedDate":"2023-01-28"},{"lineNumber":71,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":72,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":73,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":74,"author":{"gitId":"Jun-How"},"content":"     * Prints the custom error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":75,"author":{"gitId":"Jun-How"},"content":"     * @param msg String representing the custom error message.","lastModifiedDate":"2023-01-28"},{"lineNumber":76,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":77,"author":{"gitId":"Jun-How"},"content":"    public void showJeoErrorMessage(String msg) {","lastModifiedDate":"2023-01-27"},{"lineNumber":78,"author":{"gitId":"Jun-How"},"content":"        System.out.println(msg);","lastModifiedDate":"2023-01-27"},{"lineNumber":79,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":80,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":81,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":82,"author":{"gitId":"Jun-How"},"content":"     * Prints the error message when unable to load tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":83,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":84,"author":{"gitId":"Jun-How"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-01-27"},{"lineNumber":85,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Error encountered when loading tasks :(\\n\");","lastModifiedDate":"2023-01-27"},{"lineNumber":86,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Ignore this message if it is your first time using my service :\u003e\");","lastModifiedDate":"2023-01-27"},{"lineNumber":87,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":88,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":89,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":90,"author":{"gitId":"Jun-How"},"content":"     * Prints the error message when unable to save tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":91,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":92,"author":{"gitId":"Jun-How"},"content":"    public void showSavingError() {","lastModifiedDate":"2023-01-27"},{"lineNumber":93,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Error encountered when saving tasks :(\");","lastModifiedDate":"2023-01-27"},{"lineNumber":94,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":95,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":96,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":97,"author":{"gitId":"Jun-How"},"content":"     * Prints the message when a task is added.","lastModifiedDate":"2023-01-28"},{"lineNumber":98,"author":{"gitId":"Jun-How"},"content":"     * @param task Task which is just added.","lastModifiedDate":"2023-01-28"},{"lineNumber":99,"author":{"gitId":"Jun-How"},"content":"     * @param taskListSize An integer representing the current number of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":100,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":101,"author":{"gitId":"Jun-How"},"content":"    public void showTaskAdded(Task task, int taskListSize) {","lastModifiedDate":"2023-01-27"},{"lineNumber":102,"author":{"gitId":"Jun-How"},"content":"        String statement \u003d \"Got it! I\u0027ve added this task:\\n\" + task + \"\\nNow you have \";","lastModifiedDate":"2023-01-27"},{"lineNumber":103,"author":{"gitId":"Jun-How"},"content":"        System.out.println(statement + taskListSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":104,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":105,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":106,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":107,"author":{"gitId":"Jun-How"},"content":"     * Prints the message when a task is deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":108,"author":{"gitId":"Jun-How"},"content":"     * @param task Task which is just deleted.","lastModifiedDate":"2023-01-28"},{"lineNumber":109,"author":{"gitId":"Jun-How"},"content":"     * @param taskListSize An integer representing the remaining number of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":110,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":111,"author":{"gitId":"Jun-How"},"content":"    public void showTaskDeleted(Task task, int taskListSize) {","lastModifiedDate":"2023-01-27"},{"lineNumber":112,"author":{"gitId":"Jun-How"},"content":"        String statement \u003d \"Got it! I\u0027ve removed this task:\\n\" + task + \"\\nNow you have \";","lastModifiedDate":"2023-01-27"},{"lineNumber":113,"author":{"gitId":"Jun-How"},"content":"        System.out.println(statement + taskListSize + \" task(s) in the list.\");","lastModifiedDate":"2023-01-27"},{"lineNumber":114,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":115,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":116,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":117,"author":{"gitId":"Jun-How"},"content":"     * Prints the message when a task is marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":118,"author":{"gitId":"Jun-How"},"content":"     * @param task Task which is just marked.","lastModifiedDate":"2023-01-28"},{"lineNumber":119,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":120,"author":{"gitId":"Jun-How"},"content":"    public void showTaskMarked(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":121,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Good job! I\u0027ve marked this task as done:\\n\" + task);","lastModifiedDate":"2023-01-27"},{"lineNumber":122,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":123,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":124,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":125,"author":{"gitId":"Jun-How"},"content":"     * Prints the message when a task is unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":126,"author":{"gitId":"Jun-How"},"content":"     * @param task Task which is just unmarked.","lastModifiedDate":"2023-01-28"},{"lineNumber":127,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":128,"author":{"gitId":"Jun-How"},"content":"    public void showTaskUnmarked(Task task) {","lastModifiedDate":"2023-01-27"},{"lineNumber":129,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Okay, I\u0027ve marked this task as not done yet:\\n\" + task);","lastModifiedDate":"2023-01-27"},{"lineNumber":130,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":131,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":132,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":133,"author":{"gitId":"Jun-How"},"content":"     * Prints the current list of tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":134,"author":{"gitId":"Jun-How"},"content":"     * @param list TaskList representing the list of all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":135,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":136,"author":{"gitId":"Jun-How"},"content":"    public void showAllTasks(TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":137,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Here are all the tasks in your list:\");","lastModifiedDate":"2023-01-27"},{"lineNumber":138,"author":{"gitId":"Jun-How"},"content":"        for (int i \u003d 0; i \u003c list.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":139,"author":{"gitId":"Jun-How"},"content":"            StringBuilder sb \u003d new StringBuilder()","lastModifiedDate":"2023-01-27"},{"lineNumber":140,"author":{"gitId":"Jun-How"},"content":"                    .append(i + 1)","lastModifiedDate":"2023-01-27"},{"lineNumber":141,"author":{"gitId":"Jun-How"},"content":"                    .append(\".\")","lastModifiedDate":"2023-01-27"},{"lineNumber":142,"author":{"gitId":"Jun-How"},"content":"                    .append(list.getTaskAtIndex(i));","lastModifiedDate":"2023-01-27"},{"lineNumber":143,"author":{"gitId":"Jun-How"},"content":"            System.out.println(sb);","lastModifiedDate":"2023-01-27"},{"lineNumber":144,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":145,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":146,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":147,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":148,"author":{"gitId":"Jun-How"},"content":"     * Prints the tasks that are due on the specified date.","lastModifiedDate":"2023-01-28"},{"lineNumber":149,"author":{"gitId":"Jun-How"},"content":"     * @param byDate LocalDate representing the due date.","lastModifiedDate":"2023-01-28"},{"lineNumber":150,"author":{"gitId":"Jun-How"},"content":"     * @param list TaskList representing the list of all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":151,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":152,"author":{"gitId":"Jun-How"},"content":"    public void showTasksDue(LocalDate byDate, TaskList list) {","lastModifiedDate":"2023-01-27"},{"lineNumber":153,"author":{"gitId":"Jun-How"},"content":"        DateTimeFormatter formatterPrint \u003d DateTimeFormatter.ofPattern(DATE_TO_PRINT);","lastModifiedDate":"2023-01-27"},{"lineNumber":154,"author":{"gitId":"Jun-How"},"content":"        String formattedDueDate \u003d byDate.format(formatterPrint);","lastModifiedDate":"2023-01-27"},{"lineNumber":155,"author":{"gitId":"Jun-How"},"content":"        int j \u003d 1;","lastModifiedDate":"2023-01-27"},{"lineNumber":156,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Here are the task(s) due on \" + formattedDueDate + \" :\");","lastModifiedDate":"2023-01-27"},{"lineNumber":157,"author":{"gitId":"Jun-How"},"content":"        for (int i \u003d 0; i \u003c list.getNumberOfTasks(); i++) {","lastModifiedDate":"2023-01-27"},{"lineNumber":158,"author":{"gitId":"Jun-How"},"content":"            Task currTask \u003d list.getTaskAtIndex(i);","lastModifiedDate":"2023-01-27"},{"lineNumber":159,"author":{"gitId":"Jun-How"},"content":"            StringBuilder sb \u003d new StringBuilder()","lastModifiedDate":"2023-01-27"},{"lineNumber":160,"author":{"gitId":"Jun-How"},"content":"                    .append(j)","lastModifiedDate":"2023-01-27"},{"lineNumber":161,"author":{"gitId":"Jun-How"},"content":"                    .append(\".\");","lastModifiedDate":"2023-01-27"},{"lineNumber":162,"author":{"gitId":"Jun-How"},"content":"            if (currTask instanceof Deadline) {","lastModifiedDate":"2023-01-27"},{"lineNumber":163,"author":{"gitId":"Jun-How"},"content":"                if (((Deadline) currTask).getDateTimeBy().toLocalDate().compareTo(byDate) \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":164,"author":{"gitId":"Jun-How"},"content":"                    sb.append(currTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":165,"author":{"gitId":"Jun-How"},"content":"                    System.out.println(sb);","lastModifiedDate":"2023-01-27"},{"lineNumber":166,"author":{"gitId":"Jun-How"},"content":"                    j++;","lastModifiedDate":"2023-01-27"},{"lineNumber":167,"author":{"gitId":"Jun-How"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":168,"author":{"gitId":"Jun-How"},"content":"            } else if (currTask instanceof Event) {","lastModifiedDate":"2023-01-27"},{"lineNumber":169,"author":{"gitId":"Jun-How"},"content":"                if (((Event) currTask).getDateTimeTo().toLocalDate().compareTo(byDate) \u003d\u003d 0) {","lastModifiedDate":"2023-01-27"},{"lineNumber":170,"author":{"gitId":"Jun-How"},"content":"                    sb.append(currTask);","lastModifiedDate":"2023-01-27"},{"lineNumber":171,"author":{"gitId":"Jun-How"},"content":"                    System.out.println(sb);","lastModifiedDate":"2023-01-27"},{"lineNumber":172,"author":{"gitId":"Jun-How"},"content":"                    j++;","lastModifiedDate":"2023-01-27"},{"lineNumber":173,"author":{"gitId":"Jun-How"},"content":"                }","lastModifiedDate":"2023-01-27"},{"lineNumber":174,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-27"},{"lineNumber":175,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":176,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":177,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-28"},{"lineNumber":178,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-28"},{"lineNumber":179,"author":{"gitId":"Jun-How"},"content":"     * Prints the tasks that match the specified keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":180,"author":{"gitId":"Jun-How"},"content":"     * @param keyword String representing the keyword.","lastModifiedDate":"2023-01-28"},{"lineNumber":181,"author":{"gitId":"Jun-How"},"content":"     * @param list TaskList representing the list of all tasks.","lastModifiedDate":"2023-01-28"},{"lineNumber":182,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-28"},{"lineNumber":183,"author":{"gitId":"Jun-How"},"content":"    public void showTasksWithKeyword(String keyword, TaskList list) {","lastModifiedDate":"2023-01-28"},{"lineNumber":184,"author":{"gitId":"Jun-How"},"content":"        System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-01-28"},{"lineNumber":185,"author":{"gitId":"Jun-How"},"content":"        int j \u003d 1;","lastModifiedDate":"2023-01-28"},{"lineNumber":186,"author":{"gitId":"Jun-How"},"content":"        for (Task task: list.getTaskList()) {","lastModifiedDate":"2023-01-28"},{"lineNumber":187,"author":{"gitId":"Jun-How"},"content":"            if (task.toString().contains(keyword)) {","lastModifiedDate":"2023-01-28"},{"lineNumber":188,"author":{"gitId":"Jun-How"},"content":"                StringBuilder sb \u003d new StringBuilder()","lastModifiedDate":"2023-01-28"},{"lineNumber":189,"author":{"gitId":"Jun-How"},"content":"                        .append(j)","lastModifiedDate":"2023-01-28"},{"lineNumber":190,"author":{"gitId":"Jun-How"},"content":"                        .append(\".\")","lastModifiedDate":"2023-01-28"},{"lineNumber":191,"author":{"gitId":"Jun-How"},"content":"                        .append(task);","lastModifiedDate":"2023-01-28"},{"lineNumber":192,"author":{"gitId":"Jun-How"},"content":"                System.out.println(sb);","lastModifiedDate":"2023-01-28"},{"lineNumber":193,"author":{"gitId":"Jun-How"},"content":"                j++;","lastModifiedDate":"2023-01-28"},{"lineNumber":194,"author":{"gitId":"Jun-How"},"content":"            }","lastModifiedDate":"2023-01-28"},{"lineNumber":195,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-28"},{"lineNumber":196,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-28"},{"lineNumber":197,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":197}},{"path":"src/test/java/jeo/database/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.database;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"import jeo.task.StubTask;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"public class TaskListTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"    public void testNumberOfTasks_afterAdding() {","lastModifiedDate":"2023-01-28"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"run\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"bathe\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"sleep\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"        assertEquals(3, testTaskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"    public void testNumberOfTasks_afterDeleting() {","lastModifiedDate":"2023-01-28"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"run\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"bathe\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"sleep\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        testTaskList.deleteTask(2);","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"        assertEquals(2, testTaskList.getNumberOfTasks());","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":30,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":31,"author":{"gitId":"Jun-How"},"content":"    public void testTask_atIndex() {","lastModifiedDate":"2023-01-28"},{"lineNumber":32,"author":{"gitId":"Jun-How"},"content":"        TaskList testTaskList \u003d new TaskList();","lastModifiedDate":"2023-01-27"},{"lineNumber":33,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"run\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":34,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"bathe\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":35,"author":{"gitId":"Jun-How"},"content":"        testTaskList.addTask(new StubTask(\"sleep\"));","lastModifiedDate":"2023-01-27"},{"lineNumber":36,"author":{"gitId":"Jun-How"},"content":"        assertEquals(\"sleep\", testTaskList.getTaskAtIndex(2).toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":37,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":38,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":39,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":39}},{"path":"src/test/java/jeo/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.parser;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-01-27"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"import jeo.exception.JeoException;","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"public class ParserTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"    public void testToDo_withoutTaskDescription_exceptionThrown() {","lastModifiedDate":"2023-01-28"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"            Parser.parseString(\"todo\");","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"        } catch (JeoException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"            assertEquals(\"[Error] Please enter a task description.\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    public void testMarkTask_usingStringAndNotInteger_exceptionThrown() {","lastModifiedDate":"2023-01-28"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"        try {","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"            Parser.parseString(\"mark two\");","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"        } catch (JeoException e) {","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"            assertEquals(\"[Error] Task number needs to be an integer value.\", e.getMessage());","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"        }","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":27}},{"path":"src/test/java/jeo/task/StubTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"/**","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":" * Represents a stub task for testing.","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":" * @author Goh Jun How","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":" * @version 0.1","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":" */","lastModifiedDate":"2023-02-01"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"public class StubTask extends Task {","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"    protected String stubDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"     * StubTask constructor to be inherited","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"     * @param description Describes the task","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"    public StubTask(String description) {","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"        super(description);","lastModifiedDate":"2023-01-27"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"        stubDescription \u003d description;","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    /**","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"     * String representation of stub task","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"     * @return String representation of stub task","lastModifiedDate":"2023-01-27"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"     */","lastModifiedDate":"2023-01-27"},{"lineNumber":24,"author":{"gitId":"Jun-How"},"content":"    @Override","lastModifiedDate":"2023-01-27"},{"lineNumber":25,"author":{"gitId":"Jun-How"},"content":"    public String toString() {","lastModifiedDate":"2023-01-27"},{"lineNumber":26,"author":{"gitId":"Jun-How"},"content":"        return stubDescription;","lastModifiedDate":"2023-01-27"},{"lineNumber":27,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":28,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":29,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":29}},{"path":"src/test/java/jeo/task/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"package jeo.task;","lastModifiedDate":"2023-01-27"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-01-27"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"public class ToDoTest {","lastModifiedDate":"2023-01-27"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"    public void testToDo_addedString() {","lastModifiedDate":"2023-01-28"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"        ToDo testTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"        assertEquals(\"[T][ ] read book\", testTask.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"    @Test","lastModifiedDate":"2023-01-27"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"    public void testToDo_marked() {","lastModifiedDate":"2023-01-28"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"        ToDo testTask \u003d new ToDo(\"read book\");","lastModifiedDate":"2023-01-27"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"        testTask.markAsDone();","lastModifiedDate":"2023-01-27"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"        assertEquals(\"[T][X] read book\", testTask.toString());","lastModifiedDate":"2023-01-27"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"    }","lastModifiedDate":"2023-01-27"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"","lastModifiedDate":"2023-01-27"},{"lineNumber":22,"author":{"gitId":"Jun-How"},"content":"}","lastModifiedDate":"2023-01-27"}],"authorContributionMap":{"Jun-How":22}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jun-How"},"content":"todo read book","lastModifiedDate":"2023-01-19"},{"lineNumber":2,"author":{"gitId":"Jun-How"},"content":"deadline assignment /by 2023-01-27 14:00","lastModifiedDate":"2023-01-26"},{"lineNumber":3,"author":{"gitId":"Jun-How"},"content":"event attend interview /from 2023-01-25 00:30 /to 2023-01-27 12:00","lastModifiedDate":"2023-01-26"},{"lineNumber":4,"author":{"gitId":"Jun-How"},"content":"todo apply for internships","lastModifiedDate":"2023-01-19"},{"lineNumber":5,"author":{"gitId":"Jun-How"},"content":"deadline submit project /by 2023-01-29 12:00","lastModifiedDate":"2023-01-28"},{"lineNumber":6,"author":{"gitId":"Jun-How"},"content":"todo","lastModifiedDate":"2023-01-19"},{"lineNumber":7,"author":{"gitId":"Jun-How"},"content":"todo exercise","lastModifiedDate":"2023-01-19"},{"lineNumber":8,"author":{"gitId":"Jun-How"},"content":"deadline submit proposal /by 2023-01-27 12:00","lastModifiedDate":"2023-01-26"},{"lineNumber":9,"author":{"gitId":"Jun-How"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":10,"author":{"gitId":"Jun-How"},"content":"due 2023-01-27","lastModifiedDate":"2023-01-26"},{"lineNumber":11,"author":{"gitId":"Jun-How"},"content":"mark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":12,"author":{"gitId":"Jun-How"},"content":"unmark 2","lastModifiedDate":"2023-01-19"},{"lineNumber":13,"author":{"gitId":"Jun-How"},"content":"mark 5","lastModifiedDate":"2023-01-19"},{"lineNumber":14,"author":{"gitId":"Jun-How"},"content":"mark 8","lastModifiedDate":"2023-01-26"},{"lineNumber":15,"author":{"gitId":"Jun-How"},"content":"list","lastModifiedDate":"2023-01-19"},{"lineNumber":16,"author":{"gitId":"Jun-How"},"content":"delete 3","lastModifiedDate":"2023-01-20"},{"lineNumber":17,"author":{"gitId":"Jun-How"},"content":"delete 5","lastModifiedDate":"2023-01-20"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"list","lastModifiedDate":"2023-01-26"},{"lineNumber":19,"author":{"gitId":"Jun-How"},"content":"find submit","lastModifiedDate":"2023-01-28"},{"lineNumber":20,"author":{"gitId":"Jun-How"},"content":"hello","lastModifiedDate":"2023-01-19"},{"lineNumber":21,"author":{"gitId":"Jun-How"},"content":"bye","lastModifiedDate":"2023-01-19"}],"authorContributionMap":{"Jun-How":21}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Jun-How"},"content":"java -classpath ..\\bin JeoBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jun-How":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"Jun-How"},"content":"java -classpath ../bin JeoBot \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-01-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jun-How":1,"-":37}}]
