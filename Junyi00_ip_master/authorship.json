[{"path":"src/main/java/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"    protected LocalDate by;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"     * @param isDone True if task is completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"     * @param by Deadline of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    private DeadlineTask(String description, boolean isDone, LocalDate by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"     * Tasks created are by default not completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * @param by Deadline of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"    public DeadlineTask(String description, LocalDate by) {","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"        this(description, false, by);","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"     * Serialise task to be saved in local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"     * @return Serialised string of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"        String serialisedString \u003d super.serialise();","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(serialisedString);","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"        stringBuilder.insert(0, \"D\");","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"        stringBuilder.append(String.format(\",%s\", by));","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"     * Returns an instance of the task represented by the given data.","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"     * @param data The serialised string of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of DeadlineTask.","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    public static Task deserialise(String data) {","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"        String[] args \u003d data.split(\",\");","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        boolean taskDone \u003d args[1].equals(\"Y\");","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"        String taskDesc \u003d args[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        LocalDate taskBy \u003d LocalDate.parse(args[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        return new DeadlineTask(taskDesc, taskDone, taskBy);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        String byString \u003d by.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + byString + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Junyi00":64}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"import com.sun.jdi.connect.IllegalConnectorArgumentsException;","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"import java.io.File;","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-22"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"    public static String LOGO \u003d \"______     ______     __     __    \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"            \"/\\\\  __ \\\\   /\\\\  \u003d\u003d \\\\   /\\\\ \\\\   /\\\\ \\\\   \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"            \"\\\\ \\\\  __ \\\\  \\\\ \\\\  __\u003c   \\\\ \\\\ \\\\  \\\\ \\\\ \\\\  \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"            \" \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\\\_\\\\  \\\\ \\\\_\\\\  \\\\ \\\\_\\\\ \\n\" +","lastModifiedDate":"2023-01-17"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"            \"  \\\\/_/\\\\/_/   \\\\/_/ /_/   \\\\/_/   \\\\/_/ \\n\";","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    private final String SAVE_FILE_PATH \u003d \"./data/data.txt\";","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    private final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-17"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * Saves the task data on to local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * @throws DukeException thrown if files/directories failed to create.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     * @throws IOException thrown if file access error.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"    private void saveData() throws DukeException, IOException {","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        File saveFile \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        if (!saveFile.getParentFile().exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"            if (!saveFile.getParentFile().mkdirs()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"                throw new DukeException(\"Arii can\u0027t create the directories. Is your system faulty?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"            if (!saveFile.createNewFile()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"                throw new DukeException(\"Arii can\u0027t create the data file. Is your system faulty?\");","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        FileWriter fw \u003d new FileWriter(saveFile);","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"            fw.write(task.serialise());","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"            fw.write(System.lineSeparator());","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"        fw.close();","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"     * Loads the task data from local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"     * @return True if successfully loads data, or no data to load.","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"    private boolean loadData() {","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        File saveFile \u003d new File(SAVE_FILE_PATH);","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        if (!saveFile.exists()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"            return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"            Scanner s \u003d new Scanner(saveFile);","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"                String data \u003d s.next();","lastModifiedDate":"2023-01-22"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"                String identifier \u003d data.split(\",\")[0];","lastModifiedDate":"2023-01-22"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"                Task task;","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"                switch (identifier) {","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"                case \"TT\":","lastModifiedDate":"2023-01-22"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"                    task \u003d TodoTask.deserialise(data);","lastModifiedDate":"2023-01-22"},{"lineNumber":71,"author":{"gitId":"Junyi00"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":72,"author":{"gitId":"Junyi00"},"content":"                case \"ET\":","lastModifiedDate":"2023-01-22"},{"lineNumber":73,"author":{"gitId":"Junyi00"},"content":"                    task \u003d EventTask.deserialise(data);","lastModifiedDate":"2023-01-22"},{"lineNumber":74,"author":{"gitId":"Junyi00"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":75,"author":{"gitId":"Junyi00"},"content":"                case \"DT\":","lastModifiedDate":"2023-01-22"},{"lineNumber":76,"author":{"gitId":"Junyi00"},"content":"                    task \u003d DeadlineTask.deserialise(data);","lastModifiedDate":"2023-01-22"},{"lineNumber":77,"author":{"gitId":"Junyi00"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":78,"author":{"gitId":"Junyi00"},"content":"                case \"T\":","lastModifiedDate":"2023-01-22"},{"lineNumber":79,"author":{"gitId":"Junyi00"},"content":"                default:","lastModifiedDate":"2023-01-22"},{"lineNumber":80,"author":{"gitId":"Junyi00"},"content":"                    task \u003d Task.deserialise(data);","lastModifiedDate":"2023-01-22"},{"lineNumber":81,"author":{"gitId":"Junyi00"},"content":"                    break;","lastModifiedDate":"2023-01-22"},{"lineNumber":82,"author":{"gitId":"Junyi00"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":83,"author":{"gitId":"Junyi00"},"content":"                tasks.add(task);","lastModifiedDate":"2023-01-22"},{"lineNumber":84,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-01-22"},{"lineNumber":85,"author":{"gitId":"Junyi00"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":86,"author":{"gitId":"Junyi00"},"content":"            return false;","lastModifiedDate":"2023-01-22"},{"lineNumber":87,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-22"},{"lineNumber":88,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":89,"author":{"gitId":"Junyi00"},"content":"        return true;","lastModifiedDate":"2023-01-22"},{"lineNumber":90,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":91,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":92,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":93,"author":{"gitId":"Junyi00"},"content":"     * Adds task to the current task list.","lastModifiedDate":"2023-01-18"},{"lineNumber":94,"author":{"gitId":"Junyi00"},"content":"     * @param task Task to be created.","lastModifiedDate":"2023-01-18"},{"lineNumber":95,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":96,"author":{"gitId":"Junyi00"},"content":"    private void createTask(Task task) {","lastModifiedDate":"2023-01-17"},{"lineNumber":97,"author":{"gitId":"Junyi00"},"content":"        tasks.add(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":98,"author":{"gitId":"Junyi00"},"content":"        System.out.println(\"Hey new task added!\");","lastModifiedDate":"2023-01-17"},{"lineNumber":99,"author":{"gitId":"Junyi00"},"content":"        System.out.println(task);","lastModifiedDate":"2023-01-17"},{"lineNumber":100,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":101,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":102,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":103,"author":{"gitId":"Junyi00"},"content":"     * Validate the presence of args after a command.","lastModifiedDate":"2023-01-18"},{"lineNumber":104,"author":{"gitId":"Junyi00"},"content":"     * Does not precisely check validity of args for the command.","lastModifiedDate":"2023-01-18"},{"lineNumber":105,"author":{"gitId":"Junyi00"},"content":"     * @param cmd User command.","lastModifiedDate":"2023-01-18"},{"lineNumber":106,"author":{"gitId":"Junyi00"},"content":"     * @throws DukeException Exception thrown if no args were given.","lastModifiedDate":"2023-01-18"},{"lineNumber":107,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":108,"author":{"gitId":"Junyi00"},"content":"    private void validateNotEmptyArgs(String cmd) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":109,"author":{"gitId":"Junyi00"},"content":"        if (cmd.split(\" \").length \u003c\u003d 1) {","lastModifiedDate":"2023-01-18"},{"lineNumber":110,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"You did not specify any details...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":111,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":112,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":113,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":114,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":115,"author":{"gitId":"Junyi00"},"content":"     * Validate that index is within current set of tasks.","lastModifiedDate":"2023-01-18"},{"lineNumber":116,"author":{"gitId":"Junyi00"},"content":"     * @param index Index of the task, 0-indexed.","lastModifiedDate":"2023-01-18"},{"lineNumber":117,"author":{"gitId":"Junyi00"},"content":"     * @throws DukeException Exception thrown if index is invalid.","lastModifiedDate":"2023-01-18"},{"lineNumber":118,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":119,"author":{"gitId":"Junyi00"},"content":"    private void validateTaskIndex(Integer index) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":120,"author":{"gitId":"Junyi00"},"content":"        if (index \u003c 0 || index \u003e\u003d tasks.size()) {","lastModifiedDate":"2023-01-18"},{"lineNumber":121,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"No such task!\");","lastModifiedDate":"2023-01-18"},{"lineNumber":122,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":123,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":124,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":125,"author":{"gitId":"Junyi00"},"content":"     * Accepts a string that represents the user command, returns a boolean to","lastModifiedDate":"2023-01-17"},{"lineNumber":126,"author":{"gitId":"Junyi00"},"content":"     * determine if the program should terminate immediately","lastModifiedDate":"2023-01-17"},{"lineNumber":127,"author":{"gitId":"Junyi00"},"content":"     * @param cmd User command.","lastModifiedDate":"2023-01-18"},{"lineNumber":128,"author":{"gitId":"Junyi00"},"content":"     * @return True if program should exit.","lastModifiedDate":"2023-01-18"},{"lineNumber":129,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":130,"author":{"gitId":"Junyi00"},"content":"    public boolean handleCommand(String cmd) throws DukeException {","lastModifiedDate":"2023-01-18"},{"lineNumber":131,"author":{"gitId":"Junyi00"},"content":"        String firstCmd \u003d cmd.split(\" \")[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":132,"author":{"gitId":"Junyi00"},"content":"        int taskIndex;","lastModifiedDate":"2023-01-18"},{"lineNumber":133,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":134,"author":{"gitId":"Junyi00"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":135,"author":{"gitId":"Junyi00"},"content":"            switch(DukeCommand.valueOf(firstCmd)) {","lastModifiedDate":"2023-01-18"},{"lineNumber":136,"author":{"gitId":"Junyi00"},"content":"            case bye:","lastModifiedDate":"2023-01-18"},{"lineNumber":137,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"Till next time...\");","lastModifiedDate":"2023-01-17"},{"lineNumber":138,"author":{"gitId":"Junyi00"},"content":"                return true;","lastModifiedDate":"2023-01-17"},{"lineNumber":139,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":140,"author":{"gitId":"Junyi00"},"content":"            case todo:","lastModifiedDate":"2023-01-18"},{"lineNumber":141,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":142,"author":{"gitId":"Junyi00"},"content":"                String description \u003d cmd.substring(5);","lastModifiedDate":"2023-01-17"},{"lineNumber":143,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":144,"author":{"gitId":"Junyi00"},"content":"                createTask(new TodoTask(description));","lastModifiedDate":"2023-01-17"},{"lineNumber":145,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":146,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":147,"author":{"gitId":"Junyi00"},"content":"            case deadline:","lastModifiedDate":"2023-01-18"},{"lineNumber":148,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":149,"author":{"gitId":"Junyi00"},"content":"                String deadlineArgs \u003d cmd.substring(9);","lastModifiedDate":"2023-01-17"},{"lineNumber":150,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":151,"author":{"gitId":"Junyi00"},"content":"                // Validation of input","lastModifiedDate":"2023-01-18"},{"lineNumber":152,"author":{"gitId":"Junyi00"},"content":"                if (deadlineArgs.split(\" /by \").length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":153,"author":{"gitId":"Junyi00"},"content":"                    throw new DukeException(\"Insufficient details given...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":154,"author":{"gitId":"Junyi00"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":155,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":156,"author":{"gitId":"Junyi00"},"content":"                String deadlineDesc \u003d deadlineArgs.split(\" /by \")[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":157,"author":{"gitId":"Junyi00"},"content":"                LocalDate deadlineBy \u003d LocalDate.parse(deadlineArgs.split(\" /by \")[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":158,"author":{"gitId":"Junyi00"},"content":"                createTask(new DeadlineTask(deadlineDesc, deadlineBy));","lastModifiedDate":"2023-01-17"},{"lineNumber":159,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":160,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":161,"author":{"gitId":"Junyi00"},"content":"            case event:","lastModifiedDate":"2023-01-18"},{"lineNumber":162,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":163,"author":{"gitId":"Junyi00"},"content":"                String eventArgs \u003d cmd.substring(6);","lastModifiedDate":"2023-01-17"},{"lineNumber":164,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":165,"author":{"gitId":"Junyi00"},"content":"                // Validation of input","lastModifiedDate":"2023-01-18"},{"lineNumber":166,"author":{"gitId":"Junyi00"},"content":"                if (eventArgs.split(\" /from \").length \u003c 2 || eventArgs.split(\" /to \").length \u003c 2) {","lastModifiedDate":"2023-01-18"},{"lineNumber":167,"author":{"gitId":"Junyi00"},"content":"                    throw new DukeException(\"Insufficient details given...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":168,"author":{"gitId":"Junyi00"},"content":"                }","lastModifiedDate":"2023-01-18"},{"lineNumber":169,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":170,"author":{"gitId":"Junyi00"},"content":"                String eventDesc \u003d eventArgs.split(\" /from \")[0];","lastModifiedDate":"2023-01-17"},{"lineNumber":171,"author":{"gitId":"Junyi00"},"content":"                LocalDate eventFrom \u003d LocalDate.parse(eventArgs.split(\" /from \")[1].split(\" /to \")[0]);","lastModifiedDate":"2023-01-22"},{"lineNumber":172,"author":{"gitId":"Junyi00"},"content":"                LocalDate eventBy \u003d LocalDate.parse(eventArgs.split(\" /from \")[1].split(\" /to \")[1]);","lastModifiedDate":"2023-01-22"},{"lineNumber":173,"author":{"gitId":"Junyi00"},"content":"                createTask(new EventTask(eventDesc, eventFrom, eventBy));","lastModifiedDate":"2023-01-17"},{"lineNumber":174,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":175,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":176,"author":{"gitId":"Junyi00"},"content":"            case check:","lastModifiedDate":"2023-01-22"},{"lineNumber":177,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-22"},{"lineNumber":178,"author":{"gitId":"Junyi00"},"content":"                String dueArgs \u003d cmd.substring(6);","lastModifiedDate":"2023-01-22"},{"lineNumber":179,"author":{"gitId":"Junyi00"},"content":"                LocalDate targetDate \u003d LocalDate.parse(dueArgs);","lastModifiedDate":"2023-01-22"},{"lineNumber":180,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":181,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"Relevant tasks on specified date:  \");","lastModifiedDate":"2023-01-22"},{"lineNumber":182,"author":{"gitId":"Junyi00"},"content":"                for (Task task : tasks) {","lastModifiedDate":"2023-01-22"},{"lineNumber":183,"author":{"gitId":"Junyi00"},"content":"                    if (task instanceof EventTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":184,"author":{"gitId":"Junyi00"},"content":"                        EventTask eventTask \u003d (EventTask) task;","lastModifiedDate":"2023-01-22"},{"lineNumber":185,"author":{"gitId":"Junyi00"},"content":"                        if (eventTask.from.isEqual(targetDate) || eventTask.from.isBefore(targetDate) ||","lastModifiedDate":"2023-01-22"},{"lineNumber":186,"author":{"gitId":"Junyi00"},"content":"                                eventTask.to.isEqual(targetDate) || eventTask.to.isAfter(targetDate)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":187,"author":{"gitId":"Junyi00"},"content":"                            System.out.println(eventTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":188,"author":{"gitId":"Junyi00"},"content":"                        }","lastModifiedDate":"2023-01-22"},{"lineNumber":189,"author":{"gitId":"Junyi00"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":190,"author":{"gitId":"Junyi00"},"content":"                    else if (task instanceof DeadlineTask) {","lastModifiedDate":"2023-01-22"},{"lineNumber":191,"author":{"gitId":"Junyi00"},"content":"                        DeadlineTask deadlineTask \u003d (DeadlineTask) task;","lastModifiedDate":"2023-01-22"},{"lineNumber":192,"author":{"gitId":"Junyi00"},"content":"                        if (deadlineTask.by.isEqual(targetDate) || deadlineTask.by.isAfter(targetDate)) {","lastModifiedDate":"2023-01-22"},{"lineNumber":193,"author":{"gitId":"Junyi00"},"content":"                            System.out.println(deadlineTask);","lastModifiedDate":"2023-01-22"},{"lineNumber":194,"author":{"gitId":"Junyi00"},"content":"                        }","lastModifiedDate":"2023-01-22"},{"lineNumber":195,"author":{"gitId":"Junyi00"},"content":"                    }","lastModifiedDate":"2023-01-22"},{"lineNumber":196,"author":{"gitId":"Junyi00"},"content":"                }","lastModifiedDate":"2023-01-22"},{"lineNumber":197,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":198,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":199,"author":{"gitId":"Junyi00"},"content":"            case list:","lastModifiedDate":"2023-01-18"},{"lineNumber":200,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"Arii has retrieved your current tasks...\");","lastModifiedDate":"2023-01-17"},{"lineNumber":201,"author":{"gitId":"Junyi00"},"content":"                for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-01-17"},{"lineNumber":202,"author":{"gitId":"Junyi00"},"content":"                    System.out.printf(\"%d. %s\\n\", i + 1, tasks.get(i));","lastModifiedDate":"2023-01-17"},{"lineNumber":203,"author":{"gitId":"Junyi00"},"content":"                }","lastModifiedDate":"2023-01-17"},{"lineNumber":204,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":205,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":206,"author":{"gitId":"Junyi00"},"content":"            case mark:","lastModifiedDate":"2023-01-18"},{"lineNumber":207,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":208,"author":{"gitId":"Junyi00"},"content":"                taskIndex \u003d Integer.parseInt(cmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":209,"author":{"gitId":"Junyi00"},"content":"                validateTaskIndex(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":210,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":211,"author":{"gitId":"Junyi00"},"content":"                tasks.get(taskIndex).setIsDone(true);","lastModifiedDate":"2023-01-18"},{"lineNumber":212,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":213,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"This task is now done, what\u0027s next?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":214,"author":{"gitId":"Junyi00"},"content":"                System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2023-01-18"},{"lineNumber":215,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":216,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":217,"author":{"gitId":"Junyi00"},"content":"            case unmark:","lastModifiedDate":"2023-01-18"},{"lineNumber":218,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":219,"author":{"gitId":"Junyi00"},"content":"                taskIndex \u003d Integer.parseInt(cmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":220,"author":{"gitId":"Junyi00"},"content":"                validateTaskIndex(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":221,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":222,"author":{"gitId":"Junyi00"},"content":"                tasks.get(taskIndex).setIsDone(false);","lastModifiedDate":"2023-01-18"},{"lineNumber":223,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":224,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"This task is now not done, how disappointing...\");","lastModifiedDate":"2023-01-17"},{"lineNumber":225,"author":{"gitId":"Junyi00"},"content":"                System.out.println(tasks.get(taskIndex));","lastModifiedDate":"2023-01-18"},{"lineNumber":226,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-17"},{"lineNumber":227,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":228,"author":{"gitId":"Junyi00"},"content":"            case delete:","lastModifiedDate":"2023-01-18"},{"lineNumber":229,"author":{"gitId":"Junyi00"},"content":"                validateNotEmptyArgs(cmd);","lastModifiedDate":"2023-01-18"},{"lineNumber":230,"author":{"gitId":"Junyi00"},"content":"                taskIndex \u003d Integer.parseInt(cmd.split(\" \")[1]) - 1;","lastModifiedDate":"2023-01-18"},{"lineNumber":231,"author":{"gitId":"Junyi00"},"content":"                validateTaskIndex(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":232,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":233,"author":{"gitId":"Junyi00"},"content":"                tasks.remove(taskIndex);","lastModifiedDate":"2023-01-18"},{"lineNumber":234,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":235,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"Task deleted. Are you skipping on work again?\");","lastModifiedDate":"2023-01-18"},{"lineNumber":236,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-18"},{"lineNumber":237,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":238,"author":{"gitId":"Junyi00"},"content":"            case save:","lastModifiedDate":"2023-01-22"},{"lineNumber":239,"author":{"gitId":"Junyi00"},"content":"                saveData();","lastModifiedDate":"2023-01-22"},{"lineNumber":240,"author":{"gitId":"Junyi00"},"content":"                System.out.println(\"Your tasks is now safely stored.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":241,"author":{"gitId":"Junyi00"},"content":"                break;","lastModifiedDate":"2023-01-22"},{"lineNumber":242,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":243,"author":{"gitId":"Junyi00"},"content":"            default:","lastModifiedDate":"2023-01-17"},{"lineNumber":244,"author":{"gitId":"Junyi00"},"content":"                throw new DukeException(\"Arii does not recognise this command...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":245,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-01-17"},{"lineNumber":246,"author":{"gitId":"Junyi00"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":247,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"Arii can\u0027t access your files... Fix your system first.\");","lastModifiedDate":"2023-01-22"},{"lineNumber":248,"author":{"gitId":"Junyi00"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-01-22"},{"lineNumber":249,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"That\u0027s not a date! Use the format: yyyy-mm-dd\");","lastModifiedDate":"2023-01-22"},{"lineNumber":250,"author":{"gitId":"Junyi00"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":251,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"That\u0027s not a number! Go count your numbers before trying again.\");","lastModifiedDate":"2023-01-18"},{"lineNumber":252,"author":{"gitId":"Junyi00"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":253,"author":{"gitId":"Junyi00"},"content":"            throw new DukeException(\"Arii does not recognise this command...\");","lastModifiedDate":"2023-01-18"},{"lineNumber":254,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":255,"author":{"gitId":"Junyi00"},"content":"        return false;","lastModifiedDate":"2023-01-17"},{"lineNumber":256,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":257,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":259,"author":{"gitId":"Junyi00"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-01-17"},{"lineNumber":260,"author":{"gitId":"Junyi00"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-01-17"},{"lineNumber":261,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":262,"author":{"gitId":"Junyi00"},"content":"        duke.loadData();","lastModifiedDate":"2023-01-22"},{"lineNumber":263,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":264,"author":{"gitId":"Junyi00"},"content":"        System.out.println(\"Hello, I am \\n\" + Duke.LOGO);","lastModifiedDate":"2023-01-17"},{"lineNumber":265,"author":{"gitId":"Junyi00"},"content":"        System.out.println(\"How shall I assist you today?\");","lastModifiedDate":"2023-01-17"},{"lineNumber":266,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":267,"author":{"gitId":"Junyi00"},"content":"        boolean toExit \u003d false;","lastModifiedDate":"2023-01-17"},{"lineNumber":268,"author":{"gitId":"Junyi00"},"content":"        while (!toExit) {","lastModifiedDate":"2023-01-17"},{"lineNumber":269,"author":{"gitId":"Junyi00"},"content":"            System.out.print(\"\\n:\u003e \");","lastModifiedDate":"2023-01-17"},{"lineNumber":270,"author":{"gitId":"Junyi00"},"content":"            String cmd \u003d scanner.nextLine();","lastModifiedDate":"2023-01-17"},{"lineNumber":271,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":272,"author":{"gitId":"Junyi00"},"content":"            try {","lastModifiedDate":"2023-01-18"},{"lineNumber":273,"author":{"gitId":"Junyi00"},"content":"                toExit \u003d duke.handleCommand(cmd);","lastModifiedDate":"2023-01-17"},{"lineNumber":274,"author":{"gitId":"Junyi00"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-01-18"},{"lineNumber":275,"author":{"gitId":"Junyi00"},"content":"                System.out.println(e);","lastModifiedDate":"2023-01-18"},{"lineNumber":276,"author":{"gitId":"Junyi00"},"content":"            }","lastModifiedDate":"2023-01-18"},{"lineNumber":277,"author":{"gitId":"Junyi00"},"content":"        }","lastModifiedDate":"2023-01-17"},{"lineNumber":278,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":279,"author":{"gitId":"Junyi00"},"content":"        scanner.close();","lastModifiedDate":"2023-01-18"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"Junyi00":277,"-":4}},{"path":"src/main/java/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"public enum DukeCommand {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    bye,","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    todo,","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    deadline,","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"    event,","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    list,","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"    mark,","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    unmark,","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    delete,","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    save,","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    check,","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Junyi00":12}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    private final String message;","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"     * Constructor for DukeException.","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"     * @param message A string that describes the error.","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"        return String.format(\"[Error Encountered] %s\", message);","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Junyi00":16}},{"path":"src/main/java/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-01-22"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-01-22"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"public class EventTask extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"    protected LocalDate from;","lastModifiedDate":"2023-01-22"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"    protected LocalDate to;","lastModifiedDate":"2023-01-22"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"     * @param isDone True if task is completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"     * @param from Start date of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"     * @param to End date of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"    private EventTask(String description, boolean isDone, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-01-17"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * Tasks created are by default not completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     * @param from Start date of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"     * @param to End date of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    public EventTask(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        this(description, false, from, to);","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"     * Serialise task to be saved in local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"     * @return Serialised string of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"        String serialisedString \u003d super.serialise();","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(serialisedString);","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        stringBuilder.insert(0, \"E\");","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"        stringBuilder.append(String.format(\",%s,%s\", from, to));","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"     * Returns an instance of the task represented by the given data.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * @param data The serialised string of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of EventTask.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    public static Task deserialise(String data) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        String[] args \u003d data.split(\",\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        boolean taskDone \u003d args[1].equals(\"Y\");","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        String taskDesc \u003d args[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"        LocalDate taskFrom \u003d LocalDate.parse(args[3]);","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        LocalDate taskTo \u003d LocalDate.parse(args[4]);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"        return new EventTask(taskDesc, taskDone, taskFrom, taskTo);","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"        String fromString \u003d from.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"        String toString \u003d to.format(DateTimeFormatter.ofPattern(\"yyyy/MM/dd\"));","lastModifiedDate":"2023-01-22"},{"lineNumber":68,"author":{"gitId":"Junyi00"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromString + \" to: \" + toString + \")\";","lastModifiedDate":"2023-01-22"},{"lineNumber":69,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":70,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Junyi00":70}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"public class Task {","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    protected String description;","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"     * @param isDone True if task is completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"    protected Task(String description, boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-17"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * Tasks created are by default not completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"        this(description, false);","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * Returns a string that indicates if the task is done or not.","lastModifiedDate":"2023-01-17"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     * @return A string representation of status of this task","lastModifiedDate":"2023-01-17"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-17"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-17"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"     * Setter method to indicate if the task has been completed.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"     * @param isDone Boolean to that indicates if the task has been completed.","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-01-17"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-01-17"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"     * Serialise task to be saved in local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"     * @return Serialised string of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        return String.format(\"T,%s,%s\", isDone ? \"Y\" : \"N\", description);","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"     * Returns an instance of the task represented by the given data.","lastModifiedDate":"2023-01-22"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"     * @param data The serialised string of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    public static Task deserialise(String data) {","lastModifiedDate":"2023-01-22"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"        String[] args \u003d data.split(\",\");","lastModifiedDate":"2023-01-22"},{"lineNumber":55,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":56,"author":{"gitId":"Junyi00"},"content":"        boolean taskDone \u003d args[1].equals(\"Y\");","lastModifiedDate":"2023-01-22"},{"lineNumber":57,"author":{"gitId":"Junyi00"},"content":"        String taskDesc \u003d args[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":58,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":59,"author":{"gitId":"Junyi00"},"content":"        return new Task(taskDesc, taskDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":60,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":61,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":62,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":63,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":64,"author":{"gitId":"Junyi00"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), description);","lastModifiedDate":"2023-01-17"},{"lineNumber":65,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":66,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":67,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Junyi00":67}},{"path":"src/main/java/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"public class TodoTask extends Task{","lastModifiedDate":"2023-01-17"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-17"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-17"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-17"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-17"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"     * @param isDone True if task is completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-17"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"    private TodoTask(String description, boolean isDone) {","lastModifiedDate":"2023-01-22"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"        super(description, isDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"     * Constructor to create a new instance of Task.","lastModifiedDate":"2023-01-22"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"     * Tasks created are by default not completed.","lastModifiedDate":"2023-01-22"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"     *","lastModifiedDate":"2023-01-22"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"     * @param description Title of the task","lastModifiedDate":"2023-01-22"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":19,"author":{"gitId":"Junyi00"},"content":"    public TodoTask(String description) {","lastModifiedDate":"2023-01-17"},{"lineNumber":20,"author":{"gitId":"Junyi00"},"content":"        this(description, false);","lastModifiedDate":"2023-01-22"},{"lineNumber":21,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":22,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":23,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":24,"author":{"gitId":"Junyi00"},"content":"     * Serialise task to be saved in local storage.","lastModifiedDate":"2023-01-22"},{"lineNumber":25,"author":{"gitId":"Junyi00"},"content":"     * @return Serialised string of this task.","lastModifiedDate":"2023-01-22"},{"lineNumber":26,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":27,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-22"},{"lineNumber":28,"author":{"gitId":"Junyi00"},"content":"    public String serialise() {","lastModifiedDate":"2023-01-22"},{"lineNumber":29,"author":{"gitId":"Junyi00"},"content":"        String serialisedString \u003d super.serialise();","lastModifiedDate":"2023-01-22"},{"lineNumber":30,"author":{"gitId":"Junyi00"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder(serialisedString);","lastModifiedDate":"2023-01-22"},{"lineNumber":31,"author":{"gitId":"Junyi00"},"content":"        stringBuilder.insert(0, \"T\");","lastModifiedDate":"2023-01-22"},{"lineNumber":32,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":33,"author":{"gitId":"Junyi00"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-01-22"},{"lineNumber":34,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-22"},{"lineNumber":35,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":36,"author":{"gitId":"Junyi00"},"content":"    /**","lastModifiedDate":"2023-01-22"},{"lineNumber":37,"author":{"gitId":"Junyi00"},"content":"     * Returns an instance of the task represented by the given data.","lastModifiedDate":"2023-01-22"},{"lineNumber":38,"author":{"gitId":"Junyi00"},"content":"     * @param data The serialised string of the task.","lastModifiedDate":"2023-01-22"},{"lineNumber":39,"author":{"gitId":"Junyi00"},"content":"     * @return An instance of TodoTask.","lastModifiedDate":"2023-01-22"},{"lineNumber":40,"author":{"gitId":"Junyi00"},"content":"     */","lastModifiedDate":"2023-01-22"},{"lineNumber":41,"author":{"gitId":"Junyi00"},"content":"    public static Task deserialise(String data) {","lastModifiedDate":"2023-01-22"},{"lineNumber":42,"author":{"gitId":"Junyi00"},"content":"        String[] args \u003d data.split(\",\");","lastModifiedDate":"2023-01-22"},{"lineNumber":43,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":44,"author":{"gitId":"Junyi00"},"content":"        boolean taskDone \u003d args[1].equals(\"Y\");","lastModifiedDate":"2023-01-22"},{"lineNumber":45,"author":{"gitId":"Junyi00"},"content":"        String taskDesc \u003d args[2];","lastModifiedDate":"2023-01-22"},{"lineNumber":46,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-22"},{"lineNumber":47,"author":{"gitId":"Junyi00"},"content":"        return new TodoTask(taskDesc, taskDone);","lastModifiedDate":"2023-01-22"},{"lineNumber":48,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":49,"author":{"gitId":"Junyi00"},"content":"","lastModifiedDate":"2023-01-17"},{"lineNumber":50,"author":{"gitId":"Junyi00"},"content":"    @Override","lastModifiedDate":"2023-01-17"},{"lineNumber":51,"author":{"gitId":"Junyi00"},"content":"    public String toString() {","lastModifiedDate":"2023-01-17"},{"lineNumber":52,"author":{"gitId":"Junyi00"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-17"},{"lineNumber":53,"author":{"gitId":"Junyi00"},"content":"    }","lastModifiedDate":"2023-01-17"},{"lineNumber":54,"author":{"gitId":"Junyi00"},"content":"}","lastModifiedDate":"2023-01-17"}],"authorContributionMap":{"Junyi00":54}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Junyi00"},"content":"sleep","lastModifiedDate":"2023-01-18"},{"lineNumber":2,"author":{"gitId":"Junyi00"},"content":"todo","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"Junyi00"},"content":"todo eat chocolate","lastModifiedDate":"2023-01-18"},{"lineNumber":4,"author":{"gitId":"Junyi00"},"content":"deadline do homework","lastModifiedDate":"2023-01-18"},{"lineNumber":5,"author":{"gitId":"Junyi00"},"content":"deadline do homework /by tmr","lastModifiedDate":"2023-01-18"},{"lineNumber":6,"author":{"gitId":"Junyi00"},"content":"event wedding /from now /to next year","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"Junyi00"},"content":"event conference /from banana /to","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"Junyi00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"Junyi00"},"content":"mark 0","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"Junyi00"},"content":"mark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"Junyi00"},"content":"mark 1","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"Junyi00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"Junyi00"},"content":"unmark 2","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"Junyi00"},"content":"unmark -1","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"Junyi00"},"content":"list","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"Junyi00"},"content":"delete 0","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"Junyi00"},"content":"delete 1","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"Junyi00"},"content":"bye","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"Junyi00":18}}]
