{"authorDailyContributionsMap":{"Jxleejiaxin":[{"date":"2023-01-17","commitResults":[{"hash":"d93347bd2cca963b114b7b283d33cf3458d81ba1","messageTitle":"Implemented Level 1: Greet,Echo,Exit","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":6}}},{"hash":"907b11e745da209d16c752a6e8c1eba7454a51d9","messageTitle":"Fixed error where inputs with space are echoed incorrectly","messageBody":"","tags":["Level-1"],"fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}}]},{"date":"2023-01-18","commitResults":[{"hash":"38645305df3b625ec4eebac7772c2173acef9daf","messageTitle":"Implement Add, List: ability to store text entered by user and display them when requested","messageBody":"","tags":["Level-2"],"fileTypesAndContributionMap":{"java":{"insertions":43,"deletions":5}}},{"hash":"874e2f30eb55686721dc0f8727b5b5bcee745633","messageTitle":"Add ability to mark task as done/undone","messageBody":"","tags":["Level-3"],"fileTypesAndContributionMap":{"java":{"insertions":51,"deletions":11}}},{"hash":"6cfe6f3551e346de60c6d2019ca8d3669cd69fd4","messageTitle":"Level-4: Add tasks types ToDos,Events,Deadlines","messageBody":"","tags":["Level-4"],"fileTypesAndContributionMap":{"java":{"insertions":106,"deletions":8}}},{"hash":"3b12fdb6a0c4a65cee1d131f4050f0cf4471a7e9","messageTitle":"Add horizontal lines in responses from Duke, EXPECTED.TXT and input.txt for automated text UI testing","messageBody":"","tags":["A-TextUiTesting"],"fileTypesAndContributionMap":{"txt":{"insertions":8,"deletions":0},"java":{"insertions":10,"deletions":4}}},{"hash":"5280498a45a30ac4885e4e8eb215c1831ed6e6f2","messageTitle":"Add minimal for Level 5 due to lack of time. Will improve upon in the error handling in the future.","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":89,"deletions":43}}}]},{"date":"2023-01-19","commitResults":[{"hash":"280d3d291336b90179f5392ba4a895ed49b58d47","messageTitle":"Fixed bugs introduced by error handling due to copy pasting error handling of ToDo tasks to Deadline tasks.","messageBody":"","tags":["Level-5"],"fileTypesAndContributionMap":{"java":{"insertions":46,"deletions":43}}},{"hash":"f8254b488f041008e929e95cbb678ebf2f832324","messageTitle":"Level-6: Add support for deleting tasks from the list with elementary error handling","messageBody":"","tags":["Level-6"],"fileTypesAndContributionMap":{"java":{"insertions":14,"deletions":1}}}]},{"date":"2023-01-27","commitResults":[{"hash":"b6ba9899aa3245653efac192b03ae6c6bd6b7c42","messageTitle":"Add Level-7: Save tasks to hard disk.","messageBody":"","tags":["Level-7"],"fileTypesAndContributionMap":{"java":{"insertions":94,"deletions":2}}},{"hash":"da225c50a5ba2961f31668dbf73ab61d89ec6afa","messageTitle":"Add Level-8: DateTime","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":8,"deletions":4}}}]},{"date":"2023-01-30","commitResults":[{"hash":"4d861db8a6b6648393c847e2fb84c2cfbb215536","messageTitle":"Extract Ui, Storage, Parser, TaskList and various Command classes","messageBody":"","tags":["A-MoreOOP"],"fileTypesAndContributionMap":{"java":{"insertions":520,"deletions":251}}}]},{"date":"2023-01-31","commitResults":[{"hash":"49cea5a0ef8ff2de0b9a54f7012e385de1cd579d","messageTitle":"Divide and organize classes into packages","messageBody":"","tags":["A-Packages"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1},"java":{"insertions":123,"deletions":22},"bat":{"insertions":1,"deletions":1},"sh":{"insertions":1,"deletions":1}}},{"hash":"291348c1e67381dbb975efe84d77a5a4f8083f05","messageTitle":"Add two basic JUnit tests for DeleteCommand and AddDeadlineCommand","messageBody":"","tags":["A-JUnit"],"fileTypesAndContributionMap":{"txt":{"insertions":3,"deletions":0},"java":{"insertions":155,"deletions":38},"bat":{"insertions":1,"deletions":1},"md":{"insertions":2,"deletions":2}}},{"hash":"40a11833c218de5d1bb72699eab4b9bd085cd1bc","messageTitle":"Change build.gradle to reflect change in Duke package","messageBody":"","tags":["A-Jar"],"fileTypesAndContributionMap":{"gradle":{"insertions":1,"deletions":1}}},{"hash":"3781f56a09319af92ac0bf8c06a4a54eca2afa23","messageTitle":"Minor changes in field access","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":14}}},{"hash":"08e713e8612d7a317e1b90cc4ff30589f6f108d5","messageTitle":"Add JavaDocs for classes and methods","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":169,"deletions":33}}},{"hash":"e4919497e3913ea4ed0ea18d704611f7425dc65b","messageTitle":"Commit minor changes to code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":7,"deletions":8}}},{"hash":"b2a22d3b921e0b02b70515a7c52ca66487081eec","messageTitle":"Fix minor error in Parser class when refactoring code","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"14149f55837c2c8fdceda1afd55c7e2887d3f25b","messageTitle":"Add Level 9 Find Command, abstracted showIndexedList method to Ui as well","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":93,"deletions":11}}},{"hash":"d90faa2c51e295949750c377659cb2da11bfcdd3","messageTitle":"Fix minor bug where mark command only accepted 1","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":2,"deletions":2}}},{"hash":"0e5e7f34df3906af7de911d6737a5d7de1221346","messageTitle":"Update README and edit some syntax for readability","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":13,"deletions":6},"md":{"insertions":21,"deletions":20}}}]},{"date":"2023-02-06","commitResults":[{"hash":"5d87fcf6a4e566382c99a00946534005eef013c0","messageTitle":"Add CheckStyle to detect coding style violations","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":5,"deletions":0},"java":{"insertions":138,"deletions":52}}}]},{"date":"2023-02-07","commitResults":[{"hash":"5d76f49d5954688ebbb4a07f3a3137d0d5364881","messageTitle":"Add javaFx part 2","messageBody":"","fileTypesAndContributionMap":{"gradle":{"insertions":15,"deletions":0},"java":{"insertions":86,"deletions":6}}},{"hash":"fcb94da8ff16528ba6d3e641b649bea771740145","messageTitle":"Add basics of GUI","messageBody":"","tags":["Level-10"],"fileTypesAndContributionMap":{"fxml":{"insertions":35,"deletions":0},"java":{"insertions":205,"deletions":140}}},{"hash":"79a41f3e7122836aff84d1f4cd386a987532e21c","messageTitle":"Add assertions","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":9,"deletions":0}}},{"hash":"a52081e3781781d1e569b534f1675e32a5b65b7b","messageTitle":"Refactor Ui class to Formatter class","messageBody":"Ui class is not required when GUI is handled through JavaFx.\nFormatting is still required to get the desired output.\n\nThe formatting of strings is encapsulated in a more suitable class.\nDesired output can be achieved by editing Formatter class.\n","tags":["A-FullCommitMessage"],"fileTypesAndContributionMap":{"java":{"insertions":128,"deletions":170}}}]},{"date":"2023-02-08","commitResults":[{"hash":"631c2e994cb308721b9a01fac1bffbbe4ec4ebcc","messageTitle":"Extract markIfDone function in Parser for code quality","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":24,"deletions":18}}},{"hash":"b7d5e78aa77081d426aeb80b5b8fce5fe24f498d","messageTitle":"Fix checkstyle errors","messageBody":"","fileTypesAndContributionMap":{"java":{"insertions":6,"deletions":14}}}]},{"date":"2023-02-09","commitResults":[{"hash":"b6038e670b1f1cf81add100b5b18d5c19aa50f09","messageTitle":"Add SetSourceCommand to change data source of Duke","messageBody":"SetSourceCommand is created in Duke by inputting \"source [path to\nfile]\". Users can switch between data sources and Duke will\nautomatically load the existing tasks in the data sources.\n","fileTypesAndContributionMap":{"java":{"insertions":111,"deletions":52}}},{"hash":"4372d644d82f92d36aed839fc829a7c3ad4ff814","messageTitle":"Fix checkstyle errors","messageBody":"","tags":["BCD-Extension"],"fileTypesAndContributionMap":{"java":{"insertions":26,"deletions":32}}}]},{"date":"2023-02-13","commitResults":[{"hash":"de9607311a9405173ae2f6d1781eae2058980098","messageTitle":"Add isValidAddEventCommand method in Parser class","messageBody":"Removes an extra try-catch statement in the long parseFromUser method.\nAvoids arrowhead style code.\n","fileTypesAndContributionMap":{"txt":{"insertions":1,"deletions":0},"java":{"insertions":17,"deletions":9}}},{"hash":"d05cd3ed64589599a2783e2ca0d99d06e157e6de","messageTitle":"Improve GUI of Duke","messageBody":"Add different profile picture for Duke and User. Add borders to\ntext field. Add \"command: \" prefix to each user input to match the\nassymetrical nature of the conversation by a little.\n","tags":["A-BetterGui"],"fileTypesAndContributionMap":{"fxml":{"insertions":3,"deletions":3},"java":{"insertions":1,"deletions":1}}},{"hash":"8290ee48f7d2263d56218179cfc8d640e3b26bea","messageTitle":"Add personality of a chat(BOT)","messageBody":"","tags":["A-Personality"],"fileTypesAndContributionMap":{"java":{"insertions":22,"deletions":25}}}]}]},"authorFileTypeContributionMap":{"Jxleejiaxin":{"java":1320,"md":21,"fxml":35,"sh":1,"bat":2,"gradle":21,"txt":12}},"authorContributionVariance":{"Jxleejiaxin":52893.32},"authorDisplayNameMap":{"Jxleejiaxin":"CS2103T-W14-4 LEE .. XIN"}}
