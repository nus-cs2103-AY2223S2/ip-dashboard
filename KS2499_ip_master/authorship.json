[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"# DukePro","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"\u003e \"Your mind is for having ideas, not holding them.‚Äù ‚Äì David Allen ([source](https://dansilvestre.com/productivity-quotes))","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"### DukePro frees your mind of having to remember things you need to do. It\u0027s,","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"- text-based","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"- easy to learn","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"- ~~FAST~~ SUPER FAST to use","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"### All you need to do is,","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"1. download it from [here](https://github.com/KS2499/ip/releases).","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"2. double-click it.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"3. add your tasks.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"4. let it manage your tasks for you üòâ","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"### And it is **FREE**!","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"### Features:","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"- [x] Managing Tasks","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"- [ ] Managing deadlines (coming soon)","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"- [ ] Reminders (coming soon)","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"If you Java programmer, you can use it to practice Java too. Here\u0027s the `main` method:","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"```java","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"public class Main {","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KS2499":29,"-":5}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    mainClassName \u003d \"seedu.duke.Duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"checkstyle {","lastModifiedDate":"2023-02-14"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-02-14"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-14"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"KS2499":20,"-":41}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":" * A launcher class to workaround classpath issues.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"public class Launcher {","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"        Application.launch(Main.class, args);","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":10}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import duke.ui.MainWindow;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import javafx.application.Application;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import javafx.scene.Scene;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" * A GUI for Duke using FXML.","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"public class Main extends Application {","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    private final Duke duke \u003d new Duke();","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    public void start(Stage stage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"            AnchorPane ap \u003d fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"            Scene scene \u003d new Scene(ap);","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"            stage.setScene(scene);","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greetUser();","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"            stage.show();","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":32}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.backend.DukeCommand;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import duke.backend.Parser;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import duke.backend.Storage;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import duke.backend.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" * The main class of the Duke program.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    private final Storage storage;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     * The constructor of the Duke class.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    public Duke() {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        storage \u003d new Storage(\"data/duke.txt\");","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"            tasks \u003d storage.load();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"     * You should have your own function to generate a response to user input.","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     * Replace this stub with your completed method.","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    public String getResponse(String input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        DukeCommand command \u003d Parser.parseInput(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        return command.execute(tasks, storage);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"KS2499":36,"-":2}},{"path":"src/main/java/duke/backend/DukeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.backend;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static com.sun.javafx.application.PlatformImpl.exit;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" * Represents a duke.backend.DukeCommand object that represents a command.","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"public enum DukeCommand {","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    INVALID(\"invalid\");","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"     * the command.  For example, the command of the command \"to-do read book\" is \"to-do\".","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    private final String command;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     * the description of the command.  For example, the description of the command \"to-do read book\" is \"read book\".","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    private String description;","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    DukeCommand(String command) {","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        this.description \u003d \"\";","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the command.","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    private void setDescription(String description) {","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"     * @return the command.","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    public String getCommand() {","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        return command;","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"     * @param input the user input.","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"     * @return a DukeCommand object. If the command is invalid, returns DukeCommand.INVALID.","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"    public static DukeCommand getCommand(String input) {","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        for (DukeCommand c : DukeCommand.values()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"            if (c.getCommand().equals(input.split(\" \")[0])) {","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"                if (c !\u003d LIST \u0026\u0026 c !\u003d BYE) {","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"                    c.setDescription(input.split(\" \", 2)[1].trim());","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"                }","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"                return c;","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        return INVALID;","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"     * Executes the command and returns the message to display to user.","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     * @param taskList the task list.","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * @param storage the storage.","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     * @return the output message.","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"    public String execute(TaskList taskList, Storage storage) {","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        switch (this) {","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        case BYE:","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"            exit();","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"            return ResponseGenerator.goodbyeMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"        case LIST:","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"            return ResponseGenerator.taskListToMessage(taskList);","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"        case DELETE:","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"            int taskToDelete \u003d Integer.parseInt(this.description) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"                Task deletedTask \u003d taskList.deleteTask(taskToDelete);","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskDeleted(deletedTask, taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"        case TODO:","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"                ToDo todo \u003d Parser.parseTodo(this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"                taskList.addTask(todo);","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskAdded(todo, taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        case DEADLINE:","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"                Deadline deadline \u003d Parser.parseDeadline(this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"                taskList.addTask(deadline);","lastModifiedDate":"2023-02-03"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskAdded(deadline, taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        case EVENT:","lastModifiedDate":"2023-02-03"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"                Event event \u003d Parser.parseEvent(this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"                taskList.addTask(event);","lastModifiedDate":"2023-02-03"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskAdded(event, taskList.getSize());","lastModifiedDate":"2023-02-15"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":123,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":124,"author":{"gitId":"KS2499"},"content":"        case MARK:","lastModifiedDate":"2023-02-03"},{"lineNumber":125,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":126,"author":{"gitId":"KS2499"},"content":"                int taskToMark \u003d Integer.parseInt(this.description) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":127,"author":{"gitId":"KS2499"},"content":"                Task markedTask \u003d taskList.markTaskDone(taskToMark);","lastModifiedDate":"2023-02-03"},{"lineNumber":128,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskMarked(markedTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":129,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":130,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":131,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":132,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":133,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":134,"author":{"gitId":"KS2499"},"content":"        case FIND:","lastModifiedDate":"2023-02-03"},{"lineNumber":135,"author":{"gitId":"KS2499"},"content":"            TaskList foundTasks \u003d taskList.findTasks(this.description);","lastModifiedDate":"2023-02-03"},{"lineNumber":136,"author":{"gitId":"KS2499"},"content":"            return ResponseGenerator.tasksFoundToMessage(foundTasks);","lastModifiedDate":"2023-02-15"},{"lineNumber":137,"author":{"gitId":"KS2499"},"content":"        case UNMARK:","lastModifiedDate":"2023-02-03"},{"lineNumber":138,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-02-03"},{"lineNumber":139,"author":{"gitId":"KS2499"},"content":"                int taskToUnmark \u003d Integer.parseInt(this.description) - 1;","lastModifiedDate":"2023-02-03"},{"lineNumber":140,"author":{"gitId":"KS2499"},"content":"                Task unmarkedTask \u003d taskList.markTaskUndone(taskToUnmark);","lastModifiedDate":"2023-02-03"},{"lineNumber":141,"author":{"gitId":"KS2499"},"content":"                String out \u003d ResponseGenerator.printTaskUnmarked(unmarkedTask);","lastModifiedDate":"2023-02-15"},{"lineNumber":142,"author":{"gitId":"KS2499"},"content":"                storage.save(taskList);","lastModifiedDate":"2023-02-03"},{"lineNumber":143,"author":{"gitId":"KS2499"},"content":"                return out;","lastModifiedDate":"2023-02-15"},{"lineNumber":144,"author":{"gitId":"KS2499"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":145,"author":{"gitId":"KS2499"},"content":"                return ResponseGenerator.printDukeException(e);","lastModifiedDate":"2023-02-15"},{"lineNumber":146,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":147,"author":{"gitId":"KS2499"},"content":"        default:","lastModifiedDate":"2023-02-15"},{"lineNumber":148,"author":{"gitId":"KS2499"},"content":"            return \"Invalid command!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":149,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":150,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":151,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":151}},{"path":"src/main/java/duke/backend/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.backend;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":" * Represents a duke.backend.Parser object that parses the input string from the user.","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"public class Parser {","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    public Parser() {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"     * Parses the input string from the user representing a todo task.","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"     * @param input the input string from the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     * @return the duke.task.ToDo object created from the input string.","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    public static ToDo parseTodo(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        return new ToDo(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"     * Parses the input string from the user representing a deadline task.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"     * @param input the input string from the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"     * @return the duke.task.Deadline object created from the input string.","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the input string is invalid.","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    public static Deadline parseDeadline(String input) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        String[] splitDescriptionAndBy \u003d input.split(\" /by \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        if (splitDescriptionAndBy.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"The deadline of a deadline task cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        return new Deadline(splitDescriptionAndBy[0], splitDescriptionAndBy[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"     * Parses the input string from the user representing an event task.","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"     * @param input the input string from the user.","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"     * @return the duke.task.Event object created from the input string.","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the input string is invalid.","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"    public static Event parseEvent(String input) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        String[] splitDescriptionAndDuration \u003d input.split(\" /from \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        if (splitDescriptionAndDuration.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"The start time of an event cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        String[] splitFromAndTo \u003d splitDescriptionAndDuration[1].split(\" /to \", 2);","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        if (splitFromAndTo.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"The end time of an event cannot be empty.\");","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        return new Event(splitDescriptionAndDuration[0], splitFromAndTo[0], splitFromAndTo[1]);","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    public static DukeCommand parseInput(String input) {","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"        return DukeCommand.getCommand(input);","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":61}},{"path":"src/main/java/duke/backend/ResponseGenerator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.backend;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":" * Represents a duke.Ui object that handles the user interface.","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"public class ResponseGenerator {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"    public ResponseGenerator() {}","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"     * @return the greeting message.","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public static String greetingMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        return \"Hello! I\u0027m Duke!\\nWhat can I do for you?\";","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"     * @return the goodbye message.","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    public static String goodbyeMessage() {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        return \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    public static String taskListToMessage(TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"            return \"You have no tasks in your list.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"            return \"Here are the tasks in your list:\\n\" + taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"     * @param taskList The task list to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    public static String tasksFoundToMessage(TaskList taskList) {","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        if (taskList.isEmpty()) {","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"            return \"No tasks in list matching the keyword.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        } else {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"            return \"Here are the matching tasks in your list:\\n\" + taskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"     * @param e The duke.exception.DukeException to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"    public static String printDukeException(DukeException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        return e.getMessage();","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @param task The task that was added.","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     * @param size The size of the task list after addition.","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"    public static String printTaskAdded(Task task, int size) {","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        return \"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"     * @param task The task that was marked.","lastModifiedDate":"2023-02-15"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"    public static String printTaskMarked(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"        return \"Nice! I\u0027ve marked this task as done:\\n  \" + task;","lastModifiedDate":"2023-02-15"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"     * @param task The task that was unmarked.","lastModifiedDate":"2023-02-15"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"    public static String printTaskUnmarked(Task task) {","lastModifiedDate":"2023-02-15"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        return \"OK, I\u0027ve marked this task as not done yet:\\n\" + task;","lastModifiedDate":"2023-02-15"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"     * @param task The task that was deleted.","lastModifiedDate":"2023-02-15"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"     * @param size The size of the task list after deletion.","lastModifiedDate":"2023-02-15"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"     * @return the message to be printed.","lastModifiedDate":"2023-02-15"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"    public static String printTaskDeleted(Task task, int size) {","lastModifiedDate":"2023-02-15"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        return \"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \" + size + \" tasks in the list.\";","lastModifiedDate":"2023-02-15"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":94}},{"path":"src/main/java/duke/backend/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.backend;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.io.File;","lastModifiedDate":"2023-01-31"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-01-31"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-01-31"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import java.io.IOException;","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-01-31"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-01-31"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":" * Represents a duke.backend.Storage object that stores the tasks in the hard disk.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"public class Storage {","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    private final File file;","lastModifiedDate":"2023-01-31"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    private final ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-01-31"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"     * Creates a duke.backend.Storage object.","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"     * @param filePath the path of the file to be stored.","lastModifiedDate":"2023-01-31"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        if (filePath \u003d\u003d null) {","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"            throw new IllegalArgumentException(\"File path cannot be null\");","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        if (filePath.isBlank()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"            throw new IllegalArgumentException(\"File path cannot be blank\");","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        if (!this.file.exists()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"            try {","lastModifiedDate":"2023-01-31"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"                this.file.getParentFile().mkdirs();","lastModifiedDate":"2023-01-31"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"                this.file.createNewFile();","lastModifiedDate":"2023-01-31"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-01-31"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"     * Loads the tasks from the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the file is not found.","lastModifiedDate":"2023-01-31"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"    public TaskList load() throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"            Scanner sc \u003d new Scanner(this.file);","lastModifiedDate":"2023-01-31"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"            while (sc.hasNext()) {","lastModifiedDate":"2023-01-31"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"                String storageString \u003d sc.nextLine();","lastModifiedDate":"2023-01-31"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"                Task task \u003d parseStorageString(storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"                this.tasks.add(task);","lastModifiedDate":"2023-01-31"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2023-01-31"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        return new TaskList(this.tasks);","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"     * Parses the storage string and returns the duke.task.Task object.","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"     * @param storageString the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     * @return the duke.task.Task object.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the storage string is invalid.","lastModifiedDate":"2023-01-31"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"    private Task parseStorageString(String storageString) throws DukeException {","lastModifiedDate":"2023-01-31"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"        String[] split \u003d storageString.split(\" \\\\| \");","lastModifiedDate":"2023-01-31"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"        if (split.length \u003c 3) {","lastModifiedDate":"2023-01-31"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"        Task task;","lastModifiedDate":"2023-01-31"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"        switch (split[0]) {","lastModifiedDate":"2023-01-31"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"        case \"T\":","lastModifiedDate":"2023-01-31"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"            task \u003d new ToDo(split[2]);","lastModifiedDate":"2023-01-31"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"        case \"D\":","lastModifiedDate":"2023-01-31"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"            if (split.length \u003c 4) {","lastModifiedDate":"2023-01-31"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"                throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"            task \u003d new Deadline(split[2], split[3]);","lastModifiedDate":"2023-01-31"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"        case \"E\":","lastModifiedDate":"2023-01-31"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"            if (split.length \u003c 5) {","lastModifiedDate":"2023-01-31"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"                throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-01-31"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"            task \u003d new Event(split[2], split[3], split[4]);","lastModifiedDate":"2023-01-31"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"            break;","lastModifiedDate":"2023-01-31"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"        default:","lastModifiedDate":"2023-01-31"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"Invalid storage string: \" + storageString);","lastModifiedDate":"2023-01-31"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"        if (split[1].equals(\"1\")) {","lastModifiedDate":"2023-01-31"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"            task.markAsDone();","lastModifiedDate":"2023-01-31"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        return task;","lastModifiedDate":"2023-01-31"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":107,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":108,"author":{"gitId":"KS2499"},"content":"     * Saves the tasks to the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":109,"author":{"gitId":"KS2499"},"content":"     *","lastModifiedDate":"2023-01-31"},{"lineNumber":110,"author":{"gitId":"KS2499"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-01-31"},{"lineNumber":111,"author":{"gitId":"KS2499"},"content":"     * @throws DukeException if the file is not found.","lastModifiedDate":"2023-01-31"},{"lineNumber":112,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":113,"author":{"gitId":"KS2499"},"content":"    public void save(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":114,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-01-31"},{"lineNumber":115,"author":{"gitId":"KS2499"},"content":"            FileWriter fw \u003d new FileWriter(file);","lastModifiedDate":"2023-01-31"},{"lineNumber":116,"author":{"gitId":"KS2499"},"content":"            fw.write(tasks.toStorageString());","lastModifiedDate":"2023-02-03"},{"lineNumber":117,"author":{"gitId":"KS2499"},"content":"            fw.close();","lastModifiedDate":"2023-01-31"},{"lineNumber":118,"author":{"gitId":"KS2499"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-01-31"},{"lineNumber":119,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"File not found\");","lastModifiedDate":"2023-01-31"},{"lineNumber":120,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-01-31"},{"lineNumber":121,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":122,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-31"}],"authorContributionMap":{"KS2499":122}},{"path":"src/main/java/duke/backend/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.backend;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import duke.task.Task;","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":" * Represents a duke.backend.TaskList object that represents a list of tasks.","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"public class TaskList {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    private final ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public TaskList() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        this.taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"     * @param task the task to be added.","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        this.taskList.add(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"     * @param index the index of the task to be marked as done.","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    public Task markTaskDone(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        this.taskList.get(index).markAsDone();","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"     * @param index the index of the task to be marked as undone.","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"    public Task markTaskUndone(int index) {","lastModifiedDate":"2023-02-03"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"        this.taskList.get(index).markAsUndone();","lastModifiedDate":"2023-02-03"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        return this.taskList.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"     * @param keyword the keyword to be searched for.","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"     * @return a task list containing all tasks that contain the keyword.","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"    public TaskList findTasks(String keyword) {","lastModifiedDate":"2023-02-03"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        TaskList matchingTasks \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"            if (task.getDescription().contains(keyword)) {","lastModifiedDate":"2023-02-03"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"                matchingTasks.addTask(task);","lastModifiedDate":"2023-02-03"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"            }","lastModifiedDate":"2023-02-03"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        return matchingTasks;","lastModifiedDate":"2023-02-03"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"     * @param index the index of the task to be deleted.","lastModifiedDate":"2023-02-03"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"    public Task deleteTask(int index) throws DukeException {","lastModifiedDate":"2023-02-03"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"        if (index \u003e\u003d this.taskList.size()) {","lastModifiedDate":"2023-02-03"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"            throw new DukeException(\"Task does not exist!\");","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"        Task deletedTask \u003d this.taskList.get(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"        this.taskList.remove(index);","lastModifiedDate":"2023-02-03"},{"lineNumber":69,"author":{"gitId":"KS2499"},"content":"        return deletedTask;","lastModifiedDate":"2023-02-03"},{"lineNumber":70,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":71,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":72,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":73,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task list in the format to be stored in the hard disk.","lastModifiedDate":"2023-02-03"},{"lineNumber":74,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":75,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":76,"author":{"gitId":"KS2499"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":77,"author":{"gitId":"KS2499"},"content":"        for (Task task : this.taskList) {","lastModifiedDate":"2023-02-03"},{"lineNumber":78,"author":{"gitId":"KS2499"},"content":"            sb.append(task.toStorageString()).append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":79,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":80,"author":{"gitId":"KS2499"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":81,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":82,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":83,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":84,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":85,"author":{"gitId":"KS2499"},"content":"     * @return the size of the task list.","lastModifiedDate":"2023-02-03"},{"lineNumber":86,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":87,"author":{"gitId":"KS2499"},"content":"    public int getSize() {","lastModifiedDate":"2023-02-03"},{"lineNumber":88,"author":{"gitId":"KS2499"},"content":"        return this.taskList.size();","lastModifiedDate":"2023-02-03"},{"lineNumber":89,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":90,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":91,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":92,"author":{"gitId":"KS2499"},"content":"     * @return True if the task list is empty.","lastModifiedDate":"2023-02-03"},{"lineNumber":93,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":94,"author":{"gitId":"KS2499"},"content":"    public boolean isEmpty() {","lastModifiedDate":"2023-02-03"},{"lineNumber":95,"author":{"gitId":"KS2499"},"content":"        return this.taskList.isEmpty();","lastModifiedDate":"2023-02-03"},{"lineNumber":96,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":97,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":98,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-02-03"},{"lineNumber":99,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":100,"author":{"gitId":"KS2499"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-02-03"},{"lineNumber":101,"author":{"gitId":"KS2499"},"content":"        for (int i \u003d 0; i \u003c this.taskList.size(); i++) {","lastModifiedDate":"2023-02-03"},{"lineNumber":102,"author":{"gitId":"KS2499"},"content":"            sb.append(i + 1).append(\". \").append(this.taskList.get(i)).append(\"\\n\");","lastModifiedDate":"2023-02-03"},{"lineNumber":103,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":104,"author":{"gitId":"KS2499"},"content":"        return sb.toString();","lastModifiedDate":"2023-02-03"},{"lineNumber":105,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":106,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":106}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.exception;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":" * Represents a duke.exception.DukeException object that represents an exception.","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"        super(message);","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":10}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":" * Represents a deadline task.","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime by;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"     * @param by the deadline of the task.","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public Deadline(String description, String by) {","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        String[] dateAndTime \u003d by.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        if (dateAndTime.length \u003d\u003d 1) {","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"            by +\u003d \" 2359\";","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        this.by \u003d LocalDateTime.parse(by, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"        return \"D | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + formatter.format(this.by);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + formatter.format(this.by) + \")\";","lastModifiedDate":"2023-02-01"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":41}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-02-01"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-02-01"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":" * Represents an event task.","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"public class Event extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime from;","lastModifiedDate":"2023-02-01"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"    private final LocalDateTime to;","lastModifiedDate":"2023-02-01"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"     * @param from the start time of the event.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"     * @param to the end time of the event.","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    public Event(String description, String from, String to) {","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"        String[] fromDateTime \u003d from.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"        String[] toDateTime \u003d to.split(\" \");","lastModifiedDate":"2023-02-01"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        if (fromDateTime.length !\u003d 2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"            from +\u003d \" 0000\"; // default to 00:00","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        if (toDateTime.length !\u003d 2) {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"            to +\u003d \" 2359\"; // default to 23:59","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-01"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        this.from \u003d LocalDateTime.parse(from, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        this.to \u003d LocalDateTime.parse(to, formatter);","lastModifiedDate":"2023-02-01"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-02-03"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"        return \"E | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + formatter.format(this.from)","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"                + \" | \" + formatter.format(this.to);","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");","lastModifiedDate":"2023-02-01"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + formatter.format(this.from) + \" to: \"","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"                + formatter.format(this.to) + \")\";","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":49}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":" * Represents a task.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"public abstract class Task {","lastModifiedDate":"2023-01-31"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    protected String description;","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    public Task(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-01-18"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"     * @return the status icon.","lastModifiedDate":"2023-01-18"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"     * @return the description of the task.","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    public String getDescription() {","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"        return this.description;","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-01-18"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-01-18"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"     * Marks the task as undone.","lastModifiedDate":"2023-01-18"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    public void markAsUndone() {","lastModifiedDate":"2023-01-18"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-01-18"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"    public abstract String toStorageString();","lastModifiedDate":"2023-01-31"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-01-18"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    //...","lastModifiedDate":"2023-01-18"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":53}},{"path":"src/main/java/duke/task/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.task;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":" * Represents a to-do task.","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-01-18"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-18"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-01-18"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-18"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-01-18"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        super(description);","lastModifiedDate":"2023-01-18"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-18"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-01-31"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"     * @return the string representation of the task to be stored in the hard disk.","lastModifiedDate":"2023-01-31"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-01-31"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-01-31"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"        return \"T | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-01-31"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-31"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-01-31"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    @Override","lastModifiedDate":"2023-01-18"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    public String toString() {","lastModifiedDate":"2023-01-18"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-01-18"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-01-18"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    //...","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-01-18"}],"authorContributionMap":{"KS2499":26}},{"path":"src/main/java/duke/ui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import javafx.geometry.Pos;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":" * A class that represents a dialog box.","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"public class DialogBox extends HBox {","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    private Label dialog;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    private ImageView displayPicture;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    private DialogBox(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"            fxmlLoader.setController(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"            fxmlLoader.setRoot(this);","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"            fxmlLoader.load();","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        dialog.setText(text);","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        displayPicture.setImage(img);","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right.","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"    private void flip() {","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"        Collections.reverse(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"        getChildren().setAll(tmp);","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"        setAlignment(Pos.TOP_LEFT);","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"    public static DialogBox getUserDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"        return new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"        var db \u003d new DialogBox(text, img);","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"        db.flip();","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"        return db;","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":59}},{"path":"src/main/java/duke/ui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.ui;","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import duke.Duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"import duke.backend.ResponseGenerator;","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"import javafx.scene.layout.AnchorPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":" * Controller for MainWindow. Provides the layout for the other controls.","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"public class MainWindow extends AnchorPane {","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"    private ScrollPane scrollPane;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    private VBox dialogContainer;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"    private TextField userInput;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    private Button sendButton;","lastModifiedDate":"2023-02-15"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    private Duke duke;","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"    private final Image userImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"            \"/images/DaUser.png\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"    private final Image dukeImage \u003d new Image(Objects.requireNonNull(this.getClass().getResourceAsStream(","lastModifiedDate":"2023-02-15"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"            \"/images/DaDuke.png\")));","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"    public void initialize() {","lastModifiedDate":"2023-02-15"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());","lastModifiedDate":"2023-02-15"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":40,"author":{"gitId":"KS2499"},"content":"    public void setDuke(Duke d) {","lastModifiedDate":"2023-02-15"},{"lineNumber":41,"author":{"gitId":"KS2499"},"content":"        this.duke \u003d d;","lastModifiedDate":"2023-02-15"},{"lineNumber":42,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":43,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":44,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":45,"author":{"gitId":"KS2499"},"content":"     * Greets the user when the application is launched.","lastModifiedDate":"2023-02-15"},{"lineNumber":46,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":47,"author":{"gitId":"KS2499"},"content":"    public void greetUser() {","lastModifiedDate":"2023-02-15"},{"lineNumber":48,"author":{"gitId":"KS2499"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":49,"author":{"gitId":"KS2499"},"content":"                DialogBox.getDukeDialog(ResponseGenerator.greetingMessage(), this.dukeImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":50,"author":{"gitId":"KS2499"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":51,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":52,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":53,"author":{"gitId":"KS2499"},"content":"    /**","lastModifiedDate":"2023-02-15"},{"lineNumber":54,"author":{"gitId":"KS2499"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to","lastModifiedDate":"2023-02-15"},{"lineNumber":55,"author":{"gitId":"KS2499"},"content":"     * the dialog container. Clears the user input after processing.","lastModifiedDate":"2023-02-15"},{"lineNumber":56,"author":{"gitId":"KS2499"},"content":"     */","lastModifiedDate":"2023-02-15"},{"lineNumber":57,"author":{"gitId":"KS2499"},"content":"    @FXML","lastModifiedDate":"2023-02-15"},{"lineNumber":58,"author":{"gitId":"KS2499"},"content":"    private void handleUserInput() {","lastModifiedDate":"2023-02-15"},{"lineNumber":59,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":60,"author":{"gitId":"KS2499"},"content":"        String input \u003d this.userInput.getText();","lastModifiedDate":"2023-02-15"},{"lineNumber":61,"author":{"gitId":"KS2499"},"content":"        String response \u003d this.duke.getResponse(input);","lastModifiedDate":"2023-02-15"},{"lineNumber":62,"author":{"gitId":"KS2499"},"content":"        dialogContainer.getChildren().addAll(","lastModifiedDate":"2023-02-15"},{"lineNumber":63,"author":{"gitId":"KS2499"},"content":"                DialogBox.getUserDialog(input, this.userImage),","lastModifiedDate":"2023-02-15"},{"lineNumber":64,"author":{"gitId":"KS2499"},"content":"                DialogBox.getDukeDialog(response, this.dukeImage)","lastModifiedDate":"2023-02-15"},{"lineNumber":65,"author":{"gitId":"KS2499"},"content":"        );","lastModifiedDate":"2023-02-15"},{"lineNumber":66,"author":{"gitId":"KS2499"},"content":"        userInput.clear();","lastModifiedDate":"2023-02-15"},{"lineNumber":67,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-15"},{"lineNumber":68,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":68}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\"","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":15}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"573.0\" prefWidth\u003d\"405.0\" /\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"\u003c/AnchorPane\u003e","lastModifiedDate":"2023-02-15"}],"authorContributionMap":{"KS2499":12}},{"path":"src/test/java/duke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"import duke.backend.TaskList;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"public class TaskListTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public void testTaskList() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":20,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":21,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":22,"author":{"gitId":"KS2499"},"content":"    public void testAddTask() {","lastModifiedDate":"2023-02-03"},{"lineNumber":23,"author":{"gitId":"KS2499"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":24,"author":{"gitId":"KS2499"},"content":"        taskList.addTask(new ToDo(\"test\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":25,"author":{"gitId":"KS2499"},"content":"        assertEquals(1, taskList.getSize());","lastModifiedDate":"2023-02-03"},{"lineNumber":26,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":27,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":28,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":29,"author":{"gitId":"KS2499"},"content":"    public void testDeleteTask() {","lastModifiedDate":"2023-02-03"},{"lineNumber":30,"author":{"gitId":"KS2499"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-02-03"},{"lineNumber":31,"author":{"gitId":"KS2499"},"content":"        taskList.addTask(new ToDo(\"test\"));","lastModifiedDate":"2023-02-03"},{"lineNumber":32,"author":{"gitId":"KS2499"},"content":"        try {","lastModifiedDate":"2023-02-03"},{"lineNumber":33,"author":{"gitId":"KS2499"},"content":"            taskList.deleteTask(0);","lastModifiedDate":"2023-02-03"},{"lineNumber":34,"author":{"gitId":"KS2499"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-02-03"},{"lineNumber":35,"author":{"gitId":"KS2499"},"content":"            System.out.println(e.getMessage());","lastModifiedDate":"2023-02-03"},{"lineNumber":36,"author":{"gitId":"KS2499"},"content":"        }","lastModifiedDate":"2023-02-03"},{"lineNumber":37,"author":{"gitId":"KS2499"},"content":"        assertEquals(0, taskList.getSize());","lastModifiedDate":"2023-02-03"},{"lineNumber":38,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":39,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":39}},{"path":"src/test/java/duke/test/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.test;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    public void testDeadlineString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2023-01-01\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"[D][ ] test (by: Jan 01 2023 23:59)\", deadline.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public void testDeadlineStorageString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2023-01-01\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"D | 0 | test | 2023-01-01 2359\", deadline.toStorageString());","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":19}},{"path":"src/test/java/duke/test/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.test;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.task.Event;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"public class EventTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    public void testEventString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        Event event \u003d new Event(\"test\", \"2023-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"[E][ ] test (from: Jan 01 2023 00:00 to: Dec 12 2023 23:59)\", event.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public void testEventStorageString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        Event event \u003d new Event(\"test\", \"2023-01-01\", \"2023-12-12\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"E | 0 | test | 2023-01-01 0000 | 2023-12-12 2359\", event.toStorageString());","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":19}},{"path":"src/test/java/duke/test/ToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"KS2499"},"content":"package duke.test;","lastModifiedDate":"2023-02-03"},{"lineNumber":2,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":3,"author":{"gitId":"KS2499"},"content":"import duke.task.ToDo;","lastModifiedDate":"2023-02-03"},{"lineNumber":4,"author":{"gitId":"KS2499"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-03"},{"lineNumber":5,"author":{"gitId":"KS2499"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-03"},{"lineNumber":6,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":7,"author":{"gitId":"KS2499"},"content":"public class ToDoTest {","lastModifiedDate":"2023-02-03"},{"lineNumber":8,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":9,"author":{"gitId":"KS2499"},"content":"    public void testToDoString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":10,"author":{"gitId":"KS2499"},"content":"        ToDo todo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-02-03"},{"lineNumber":11,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"[T][ ] test\", todo.toString());","lastModifiedDate":"2023-02-03"},{"lineNumber":12,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":13,"author":{"gitId":"KS2499"},"content":"","lastModifiedDate":"2023-02-03"},{"lineNumber":14,"author":{"gitId":"KS2499"},"content":"    @Test","lastModifiedDate":"2023-02-03"},{"lineNumber":15,"author":{"gitId":"KS2499"},"content":"    public void testToDoStorageString() {","lastModifiedDate":"2023-02-03"},{"lineNumber":16,"author":{"gitId":"KS2499"},"content":"        ToDo todo \u003d new ToDo(\"test\");","lastModifiedDate":"2023-02-03"},{"lineNumber":17,"author":{"gitId":"KS2499"},"content":"        assertEquals(\"T | 0 | test\", todo.toStorageString());","lastModifiedDate":"2023-02-03"},{"lineNumber":18,"author":{"gitId":"KS2499"},"content":"    }","lastModifiedDate":"2023-02-03"},{"lineNumber":19,"author":{"gitId":"KS2499"},"content":"}","lastModifiedDate":"2023-02-03"}],"authorContributionMap":{"KS2499":19}}]
